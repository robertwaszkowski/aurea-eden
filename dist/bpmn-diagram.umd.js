!function(q,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t((q="undefined"!=typeof globalThis?globalThis:q||self).AureaEDEN={},q.THREE)}(this,(function(q,t){"use strict";function l(q){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(q)for(const l in q)if("default"!==l){const e=Object.getOwnPropertyDescriptor(q,l);Object.defineProperty(t,l,e.get?e:{enumerable:!0,get:()=>q[l]})}return t.default=q,Object.freeze(t)}const e=l(t);var n=Object.freeze({Linear:Object.freeze({None:function(q){return q},In:function(q){return q},Out:function(q){return q},InOut:function(q){return q}}),Quadratic:Object.freeze({In:function(q){return q*q},Out:function(q){return q*(2-q)},InOut:function(q){return(q*=2)<1?.5*q*q:-.5*(--q*(q-2)-1)}}),Cubic:Object.freeze({In:function(q){return q*q*q},Out:function(q){return--q*q*q+1},InOut:function(q){return(q*=2)<1?.5*q*q*q:.5*((q-=2)*q*q+2)}}),Quartic:Object.freeze({In:function(q){return q*q*q*q},Out:function(q){return 1- --q*q*q*q},InOut:function(q){return(q*=2)<1?.5*q*q*q*q:-.5*((q-=2)*q*q*q-2)}}),Quintic:Object.freeze({In:function(q){return q*q*q*q*q},Out:function(q){return--q*q*q*q*q+1},InOut:function(q){return(q*=2)<1?.5*q*q*q*q*q:.5*((q-=2)*q*q*q*q+2)}}),Sinusoidal:Object.freeze({In:function(q){return 1-Math.sin((1-q)*Math.PI/2)},Out:function(q){return Math.sin(q*Math.PI/2)},InOut:function(q){return.5*(1-Math.sin(Math.PI*(.5-q)))}}),Exponential:Object.freeze({In:function(q){return 0===q?0:Math.pow(1024,q-1)},Out:function(q){return 1===q?1:1-Math.pow(2,-10*q)},InOut:function(q){return 0===q?0:1===q?1:(q*=2)<1?.5*Math.pow(1024,q-1):.5*(2-Math.pow(2,-10*(q-1)))}}),Circular:Object.freeze({In:function(q){return 1-Math.sqrt(1-q*q)},Out:function(q){return Math.sqrt(1- --q*q)},InOut:function(q){return(q*=2)<1?-.5*(Math.sqrt(1-q*q)-1):.5*(Math.sqrt(1-(q-=2)*q)+1)}}),Elastic:Object.freeze({In:function(q){return 0===q?0:1===q?1:-Math.pow(2,10*(q-1))*Math.sin(5*(q-1.1)*Math.PI)},Out:function(q){return 0===q?0:1===q?1:Math.pow(2,-10*q)*Math.sin(5*(q-.1)*Math.PI)+1},InOut:function(q){return 0===q?0:1===q?1:(q*=2)<1?-.5*Math.pow(2,10*(q-1))*Math.sin(5*(q-1.1)*Math.PI):.5*Math.pow(2,-10*(q-1))*Math.sin(5*(q-1.1)*Math.PI)+1}}),Back:Object.freeze({In:function(q){var t=1.70158;return 1===q?1:q*q*((t+1)*q-t)},Out:function(q){var t=1.70158;return 0===q?0:--q*q*((t+1)*q+t)+1},InOut:function(q){var t=2.5949095;return(q*=2)<1?q*q*((t+1)*q-t)*.5:.5*((q-=2)*q*((t+1)*q+t)+2)}}),Bounce:Object.freeze({In:function(q){return 1-n.Bounce.Out(1-q)},Out:function(q){return q<1/2.75?7.5625*q*q:q<2/2.75?7.5625*(q-=1.5/2.75)*q+.75:q<2.5/2.75?7.5625*(q-=2.25/2.75)*q+.9375:7.5625*(q-=2.625/2.75)*q+.984375},InOut:function(q){return q<.5?.5*n.Bounce.In(2*q):.5*n.Bounce.Out(2*q-1)+.5}}),generatePow:function(q){return void 0===q&&(q=4),q=(q=q<Number.EPSILON?Number.EPSILON:q)>1e4?1e4:q,{In:function(t){return Math.pow(t,q)},Out:function(t){return 1-Math.pow(1-t,q)},InOut:function(t){return t<.5?Math.pow(2*t,q)/2:(1-Math.pow(2-2*t,q))/2+.5}}}}),i=function(){return performance.now()},o=function(){function q(){for(var q=[],t=0;t<arguments.length;t++)q[t]=arguments[t];this._tweens={},this._tweensAddedDuringUpdate={},this.add.apply(this,q)}return q.prototype.getAll=function(){var q=this;return Object.keys(this._tweens).map((function(t){return q._tweens[t]}))},q.prototype.removeAll=function(){this._tweens={}},q.prototype.add=function(){for(var q,t=[],l=0;l<arguments.length;l++)t[l]=arguments[l];for(var e=0,n=t;e<n.length;e++){var i=n[e];null===(q=i._group)||void 0===q||q.remove(i),i._group=this,this._tweens[i.getId()]=i,this._tweensAddedDuringUpdate[i.getId()]=i}},q.prototype.remove=function(){for(var q=[],t=0;t<arguments.length;t++)q[t]=arguments[t];for(var l=0,e=q;l<e.length;l++){var n=e[l];n._group=void 0,delete this._tweens[n.getId()],delete this._tweensAddedDuringUpdate[n.getId()]}},q.prototype.allStopped=function(){return this.getAll().every((function(q){return!q.isPlaying()}))},q.prototype.update=function(q,t){void 0===q&&(q=i()),void 0===t&&(t=!0);var l=Object.keys(this._tweens);if(0!==l.length)for(;l.length>0;){this._tweensAddedDuringUpdate={};for(var e=0;e<l.length;e++){var n=this._tweens[l[e]],o=!t;n&&!1===n.update(q,o)&&!t&&this.remove(n)}l=Object.keys(this._tweensAddedDuringUpdate)}},q}(),s={Linear:function(q,t){var l=q.length-1,e=l*t,n=Math.floor(e),i=s.Utils.Linear;return t<0?i(q[0],q[1],e):t>1?i(q[l],q[l-1],l-e):i(q[n],q[n+1>l?l:n+1],e-n)},Utils:{Linear:function(q,t,l){return(t-q)*l+q}}},a=function(){function q(){}return q.nextId=function(){return q._nextId++},q._nextId=0,q}(),r=new o,m=function(){function q(q,t){this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=n.Linear.None,this._interpolationFunction=s.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=a.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1,this._object=q,"object"==typeof t?(this._group=t,t.add(this)):!0===t&&(this._group=r,r.add(this))}return q.prototype.getId=function(){return this._id},q.prototype.isPlaying=function(){return this._isPlaying},q.prototype.isPaused=function(){return this._isPaused},q.prototype.getDuration=function(){return this._duration},q.prototype.to=function(q,t){if(void 0===t&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=q,this._propertiesAreSetUp=!1,this._duration=t<0?0:t,this},q.prototype.duration=function(q){return void 0===q&&(q=1e3),this._duration=q<0?0:q,this},q.prototype.dynamic=function(q){return void 0===q&&(q=!1),this._isDynamic=q,this},q.prototype.start=function(q,t){if(void 0===q&&(q=i()),void 0===t&&(t=!1),this._isPlaying)return this;if(this._repeat=this._initialRepeat,this._reversed)for(var l in this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(l),this._valuesStart[l]=this._valuesStartRepeat[l];if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=q,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var e={};for(var n in this._valuesEnd)e[n]=this._valuesEnd[n];this._valuesEnd=e}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},q.prototype.startFromCurrentValues=function(q){return this.start(q,!0)},q.prototype._setupProperties=function(q,t,l,e,n){for(var i in l){var o=q[i],s=Array.isArray(o),a=s?"array":typeof o,r=!s&&Array.isArray(l[i]);if("undefined"!==a&&"function"!==a){if(r){if(0===(p=l[i]).length)continue;for(var m=[o],h=0,c=p.length;h<c;h+=1){var d=this._handleRelativeValue(o,p[h]);if(isNaN(d)){r=!1,console.warn("Found invalid interpolation list. Skipping.");break}m.push(d)}r&&(l[i]=m)}if("object"!==a&&!s||!o||r)(void 0===t[i]||n)&&(t[i]=o),s||(t[i]*=1),e[i]=r?l[i].slice().reverse():t[i]||0;else{t[i]=s?[]:{};var x=o;for(var u in x)t[i][u]=x[u];e[i]=s?[]:{};var p=l[i];if(!this._isDynamic){var g={};for(var u in p)g[u]=p[u];l[i]=p=g}this._setupProperties(x,t[i],p,e[i],n)}}}},q.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},q.prototype.end=function(){return this._goToEnd=!0,this.update(this._startTime+this._duration),this},q.prototype.pause=function(q){return void 0===q&&(q=i()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=q),this},q.prototype.resume=function(q){return void 0===q&&(q=i()),this._isPaused&&this._isPlaying?(this._isPaused=!1,this._startTime+=q-this._pauseStart,this._pauseStart=0,this):this},q.prototype.stopChainedTweens=function(){for(var q=0,t=this._chainedTweens.length;q<t;q++)this._chainedTweens[q].stop();return this},q.prototype.group=function(q){return q?(q.add(this),this):(console.warn("tween.group() without args has been removed, use group.add(tween) instead."),this)},q.prototype.remove=function(){var q;return null===(q=this._group)||void 0===q||q.remove(this),this},q.prototype.delay=function(q){return void 0===q&&(q=0),this._delayTime=q,this},q.prototype.repeat=function(q){return void 0===q&&(q=0),this._initialRepeat=q,this._repeat=q,this},q.prototype.repeatDelay=function(q){return this._repeatDelayTime=q,this},q.prototype.yoyo=function(q){return void 0===q&&(q=!1),this._yoyo=q,this},q.prototype.easing=function(q){return void 0===q&&(q=n.Linear.None),this._easingFunction=q,this},q.prototype.interpolation=function(q){return void 0===q&&(q=s.Linear),this._interpolationFunction=q,this},q.prototype.chain=function(){for(var q=[],t=0;t<arguments.length;t++)q[t]=arguments[t];return this._chainedTweens=q,this},q.prototype.onStart=function(q){return this._onStartCallback=q,this},q.prototype.onEveryStart=function(q){return this._onEveryStartCallback=q,this},q.prototype.onUpdate=function(q){return this._onUpdateCallback=q,this},q.prototype.onRepeat=function(q){return this._onRepeatCallback=q,this},q.prototype.onComplete=function(q){return this._onCompleteCallback=q,this},q.prototype.onStop=function(q){return this._onStopCallback=q,this},q.prototype.update=function(t,l){var e,n,o=this;if(void 0===t&&(t=i()),void 0===l&&(l=q.autoStartOnUpdate),this._isPaused)return!0;if(!this._goToEnd&&!this._isPlaying){if(!l)return!1;this.start(t,!0)}if(this._goToEnd=!1,t<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),!1===this._onEveryStartCallbackFired&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0);var s=t-this._startTime,a=this._duration+(null!==(e=this._repeatDelayTime)&&void 0!==e?e:this._delayTime),r=this._duration+this._repeat*a,m=function(){if(0===o._duration)return 1;if(s>r)return 1;var q=Math.trunc(s/a),t=s-q*a,l=Math.min(t/o._duration,1);return 0===l&&s===o._duration?1:l}(),h=this._easingFunction(m);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,h),this._onUpdateCallback&&this._onUpdateCallback(this._object,m),0===this._duration||s>=this._duration){if(this._repeat>0){var c=Math.min(Math.trunc((s-this._duration)/a)+1,this._repeat);for(n in isFinite(this._repeat)&&(this._repeat-=c),this._valuesStartRepeat)this._yoyo||"string"!=typeof this._valuesEnd[n]||(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._startTime+=a*c,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var d=0,x=this._chainedTweens.length;d<x;d++)this._chainedTweens[d].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},q.prototype._updateProperties=function(q,t,l,e){for(var n in l)if(void 0!==t[n]){var i=t[n]||0,o=l[n],s=Array.isArray(q[n]),a=Array.isArray(o);!s&&a?q[n]=this._interpolationFunction(o,e):"object"==typeof o&&o?this._updateProperties(q[n],i,o,e):"number"==typeof(o=this._handleRelativeValue(i,o))&&(q[n]=i+(o-i)*e)}},q.prototype._handleRelativeValue=function(q,t){return"string"!=typeof t?t:"+"===t.charAt(0)||"-"===t.charAt(0)?q+parseFloat(t):parseFloat(t)},q.prototype._swapEndStartRepeatValues=function(q){var t=this._valuesStartRepeat[q],l=this._valuesEnd[q];this._valuesStartRepeat[q]="string"==typeof l?this._valuesStartRepeat[q]+parseFloat(l):this._valuesEnd[q],this._valuesEnd[q]=t},q.autoStartOnUpdate=!1,q}();a.nextId;var h=r;h.getAll.bind(h),h.removeAll.bind(h),h.add.bind(h),h.remove.bind(h),h.update.bind(h);const c={type:"change"},d={type:"start"},x={type:"end"},u=new t.Ray,p=new t.Plane,g=Math.cos(70*t.MathUtils.DEG2RAD),_=new t.Vector3,y=2*Math.PI,f=-1,w=0,z=1,k=2,b=3,v=4,T=5,S=6,E=1e-6;class N extends t.Controls{constructor(q,l=null){super(q,l),this.state=f,this.enabled=!0,this.target=new t.Vector3,this.cursor=new t.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:t.MOUSE.ROTATE,MIDDLE:t.MOUSE.DOLLY,RIGHT:t.MOUSE.PAN},this.touches={ONE:t.TOUCH.ROTATE,TWO:t.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new t.Vector3,this._lastQuaternion=new t.Quaternion,this._lastTargetPosition=new t.Vector3,this._quat=(new t.Quaternion).setFromUnitVectors(q.up,new t.Vector3(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new t.Spherical,this._sphericalDelta=new t.Spherical,this._scale=1,this._panOffset=new t.Vector3,this._rotateStart=new t.Vector2,this._rotateEnd=new t.Vector2,this._rotateDelta=new t.Vector2,this._panStart=new t.Vector2,this._panEnd=new t.Vector2,this._panDelta=new t.Vector2,this._dollyStart=new t.Vector2,this._dollyEnd=new t.Vector2,this._dollyDelta=new t.Vector2,this._dollyDirection=new t.Vector3,this._mouse=new t.Vector2,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=M.bind(this),this._onPointerDown=C.bind(this),this._onPointerUp=I.bind(this),this._onContextMenu=O.bind(this),this._onMouseWheel=P.bind(this),this._onKeyDown=D.bind(this),this._onTouchStart=B.bind(this),this._onTouchMove=R.bind(this),this._onMouseDown=L.bind(this),this._onMouseMove=A.bind(this),this._interceptControlDown=F.bind(this),this._interceptControlUp=j.bind(this),null!==this.domElement&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1});this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents();this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(q){q.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=q}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(c),this.update(),this.state=f}update(q=null){const l=this.object.position;_.copy(l).sub(this.target),_.applyQuaternion(this._quat),this._spherical.setFromVector3(_),this.autoRotate&&this.state===f&&this._rotateLeft(this._getAutoRotationAngle(q)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let e=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(e)&&isFinite(n)&&(e<-Math.PI?e+=y:e>Math.PI&&(e-=y),n<-Math.PI?n+=y:n>Math.PI&&(n-=y),this._spherical.theta=e<=n?Math.max(e,Math.min(n,this._spherical.theta)):this._spherical.theta>(e+n)/2?Math.max(e,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let i=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const q=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),i=q!=this._spherical.radius}if(_.setFromSpherical(this._spherical),_.applyQuaternion(this._quatInverse),l.copy(this.target).add(_),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let q=null;if(this.object.isPerspectiveCamera){const t=_.length();q=this._clampDistance(t*this._scale);const l=t-q;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),i=!!l}else if(this.object.isOrthographicCamera){const l=new t.Vector3(this._mouse.x,this._mouse.y,0);l.unproject(this.object);const e=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),i=e!==this.object.zoom;const n=new t.Vector3(this._mouse.x,this._mouse.y,0);n.unproject(this.object),this.object.position.sub(n).add(l),this.object.updateMatrixWorld(),q=_.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==q&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(q).add(this.object.position):(u.origin.copy(this.object.position),u.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(u.direction))<g?this.object.lookAt(this.target):(p.setFromNormalAndCoplanarPoint(this.object.up,this.target),u.intersectPlane(p,this.target))))}else if(this.object.isOrthographicCamera){const q=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),q!==this.object.zoom&&(this.object.updateProjectionMatrix(),i=!0)}return this._scale=1,this._performCursorZoom=!1,!!(i||this._lastPosition.distanceToSquared(this.object.position)>E||8*(1-this._lastQuaternion.dot(this.object.quaternion))>E||this._lastTargetPosition.distanceToSquared(this.target)>E)&&(this.dispatchEvent(c),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(q){return null!==q?y/60*this.autoRotateSpeed*q:y/60/60*this.autoRotateSpeed}_getZoomScale(q){const t=Math.abs(.01*q);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(q){this._sphericalDelta.theta-=q}_rotateUp(q){this._sphericalDelta.phi-=q}_panLeft(q,t){_.setFromMatrixColumn(t,0),_.multiplyScalar(-q),this._panOffset.add(_)}_panUp(q,t){!0===this.screenSpacePanning?_.setFromMatrixColumn(t,1):(_.setFromMatrixColumn(t,0),_.crossVectors(this.object.up,_)),_.multiplyScalar(q),this._panOffset.add(_)}_pan(q,t){const l=this.domElement;if(this.object.isPerspectiveCamera){const e=this.object.position;_.copy(e).sub(this.target);let n=_.length();n*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*q*n/l.clientHeight,this.object.matrix),this._panUp(2*t*n/l.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(q*(this.object.right-this.object.left)/this.object.zoom/l.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/l.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(q){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=q:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(q){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=q:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(q,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const l=this.domElement.getBoundingClientRect(),e=q-l.left,n=t-l.top,i=l.width,o=l.height;this._mouse.x=e/i*2-1,this._mouse.y=-n/o*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(q){return Math.max(this.minDistance,Math.min(this.maxDistance,q))}_handleMouseDownRotate(q){this._rotateStart.set(q.clientX,q.clientY)}_handleMouseDownDolly(q){this._updateZoomParameters(q.clientX,q.clientX),this._dollyStart.set(q.clientX,q.clientY)}_handleMouseDownPan(q){this._panStart.set(q.clientX,q.clientY)}_handleMouseMoveRotate(q){this._rotateEnd.set(q.clientX,q.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(y*this._rotateDelta.x/t.clientHeight),this._rotateUp(y*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(q){this._dollyEnd.set(q.clientX,q.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(q){this._panEnd.set(q.clientX,q.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(q){this._updateZoomParameters(q.clientX,q.clientY),q.deltaY<0?this._dollyIn(this._getZoomScale(q.deltaY)):q.deltaY>0&&this._dollyOut(this._getZoomScale(q.deltaY)),this.update()}_handleKeyDown(q){let t=!1;switch(q.code){case this.keys.UP:q.ctrlKey||q.metaKey||q.shiftKey?this.enableRotate&&this._rotateUp(y*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:q.ctrlKey||q.metaKey||q.shiftKey?this.enableRotate&&this._rotateUp(-y*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:q.ctrlKey||q.metaKey||q.shiftKey?this.enableRotate&&this._rotateLeft(y*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:q.ctrlKey||q.metaKey||q.shiftKey?this.enableRotate&&this._rotateLeft(-y*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0}t&&(q.preventDefault(),this.update())}_handleTouchStartRotate(q){if(1===this._pointers.length)this._rotateStart.set(q.pageX,q.pageY);else{const t=this._getSecondPointerPosition(q),l=.5*(q.pageX+t.x),e=.5*(q.pageY+t.y);this._rotateStart.set(l,e)}}_handleTouchStartPan(q){if(1===this._pointers.length)this._panStart.set(q.pageX,q.pageY);else{const t=this._getSecondPointerPosition(q),l=.5*(q.pageX+t.x),e=.5*(q.pageY+t.y);this._panStart.set(l,e)}}_handleTouchStartDolly(q){const t=this._getSecondPointerPosition(q),l=q.pageX-t.x,e=q.pageY-t.y,n=Math.sqrt(l*l+e*e);this._dollyStart.set(0,n)}_handleTouchStartDollyPan(q){this.enableZoom&&this._handleTouchStartDolly(q),this.enablePan&&this._handleTouchStartPan(q)}_handleTouchStartDollyRotate(q){this.enableZoom&&this._handleTouchStartDolly(q),this.enableRotate&&this._handleTouchStartRotate(q)}_handleTouchMoveRotate(q){if(1==this._pointers.length)this._rotateEnd.set(q.pageX,q.pageY);else{const t=this._getSecondPointerPosition(q),l=.5*(q.pageX+t.x),e=.5*(q.pageY+t.y);this._rotateEnd.set(l,e)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(y*this._rotateDelta.x/t.clientHeight),this._rotateUp(y*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(q){if(1===this._pointers.length)this._panEnd.set(q.pageX,q.pageY);else{const t=this._getSecondPointerPosition(q),l=.5*(q.pageX+t.x),e=.5*(q.pageY+t.y);this._panEnd.set(l,e)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(q){const t=this._getSecondPointerPosition(q),l=q.pageX-t.x,e=q.pageY-t.y,n=Math.sqrt(l*l+e*e);this._dollyEnd.set(0,n),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const i=.5*(q.pageX+t.x),o=.5*(q.pageY+t.y);this._updateZoomParameters(i,o)}_handleTouchMoveDollyPan(q){this.enableZoom&&this._handleTouchMoveDolly(q),this.enablePan&&this._handleTouchMovePan(q)}_handleTouchMoveDollyRotate(q){this.enableZoom&&this._handleTouchMoveDolly(q),this.enableRotate&&this._handleTouchMoveRotate(q)}_addPointer(q){this._pointers.push(q.pointerId)}_removePointer(q){delete this._pointerPositions[q.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==q.pointerId)return void this._pointers.splice(t,1)}_isTrackingPointer(q){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==q.pointerId)return!0;return!1}_trackPointer(q){let l=this._pointerPositions[q.pointerId];void 0===l&&(l=new t.Vector2,this._pointerPositions[q.pointerId]=l),l.set(q.pageX,q.pageY)}_getSecondPointerPosition(q){const t=q.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(q){const t=q.deltaMode,l={clientX:q.clientX,clientY:q.clientY,deltaY:q.deltaY};switch(t){case 1:l.deltaY*=16;break;case 2:l.deltaY*=100}return q.ctrlKey&&!this._controlActive&&(l.deltaY*=10),l}}function C(q){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(q.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(q)||(this._addPointer(q),"touch"===q.pointerType?this._onTouchStart(q):this._onMouseDown(q)))}function M(q){!1!==this.enabled&&("touch"===q.pointerType?this._onTouchMove(q):this._onMouseMove(q))}function I(q){switch(this._removePointer(q),this._pointers.length){case 0:this.domElement.releasePointerCapture(q.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(x),this.state=f;break;case 1:const t=this._pointers[0],l=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:l.x,pageY:l.y})}}function L(q){let l;switch(q.button){case 0:l=this.mouseButtons.LEFT;break;case 1:l=this.mouseButtons.MIDDLE;break;case 2:l=this.mouseButtons.RIGHT;break;default:l=-1}switch(l){case t.MOUSE.DOLLY:if(!1===this.enableZoom)return;this._handleMouseDownDolly(q),this.state=z;break;case t.MOUSE.ROTATE:if(q.ctrlKey||q.metaKey||q.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(q),this.state=k}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(q),this.state=w}break;case t.MOUSE.PAN:if(q.ctrlKey||q.metaKey||q.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(q),this.state=w}else{if(!1===this.enablePan)return;this._handleMouseDownPan(q),this.state=k}break;default:this.state=f}this.state!==f&&this.dispatchEvent(d)}function A(q){switch(this.state){case w:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(q);break;case z:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(q);break;case k:if(!1===this.enablePan)return;this._handleMouseMovePan(q)}}function P(q){!1!==this.enabled&&!1!==this.enableZoom&&this.state===f&&(q.preventDefault(),this.dispatchEvent(d),this._handleMouseWheel(this._customWheelEvent(q)),this.dispatchEvent(x))}function D(q){!1!==this.enabled&&this._handleKeyDown(q)}function B(q){switch(this._trackPointer(q),this._pointers.length){case 1:switch(this.touches.ONE){case t.TOUCH.ROTATE:if(!1===this.enableRotate)return;this._handleTouchStartRotate(q),this.state=b;break;case t.TOUCH.PAN:if(!1===this.enablePan)return;this._handleTouchStartPan(q),this.state=v;break;default:this.state=f}break;case 2:switch(this.touches.TWO){case t.TOUCH.DOLLY_PAN:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(q),this.state=T;break;case t.TOUCH.DOLLY_ROTATE:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(q),this.state=S;break;default:this.state=f}break;default:this.state=f}this.state!==f&&this.dispatchEvent(d)}function R(q){switch(this._trackPointer(q),this.state){case b:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(q),this.update();break;case v:if(!1===this.enablePan)return;this._handleTouchMovePan(q),this.update();break;case T:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(q),this.update();break;case S:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(q),this.update();break;default:this.state=f}}function O(q){!1!==this.enabled&&q.preventDefault()}function F(q){if("Control"===q.key){this._controlActive=!0;this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}function j(q){if("Control"===q.key){this._controlActive=!1;this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0})}}class V extends N{constructor(q,l){super(q,l),this.screenSpacePanning=!1,this.mouseButtons={LEFT:t.MOUSE.PAN,MIDDLE:t.MOUSE.DOLLY,RIGHT:t.MOUSE.ROTATE},this.touches={ONE:t.TOUCH.PAN,TWO:t.TOUCH.DOLLY_ROTATE}}}const U="vertex",G="none",W="frame",Z="render",H="object",X=["x","y","z","w"],Y=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let $=1234567;const K=Math.PI/180,Q=180/Math.PI;function J(){const q=4294967295*Math.random()|0,t=4294967295*Math.random()|0,l=4294967295*Math.random()|0,e=4294967295*Math.random()|0;return(Y[255&q]+Y[q>>8&255]+Y[q>>16&255]+Y[q>>24&255]+"-"+Y[255&t]+Y[t>>8&255]+"-"+Y[t>>16&15|64]+Y[t>>24&255]+"-"+Y[63&l|128]+Y[l>>8&255]+"-"+Y[l>>16&255]+Y[l>>24&255]+Y[255&e]+Y[e>>8&255]+Y[e>>16&255]+Y[e>>24&255]).toLowerCase()}function qq(q,t,l){return Math.max(t,Math.min(l,q))}function tq(q,t){return(q%t+t)%t}function lq(q,t,l){return(1-l)*q+l*t}function eq(q,t){switch(t.constructor){case Float32Array:return q;case Uint32Array:return q/4294967295;case Uint16Array:return q/65535;case Uint8Array:return q/255;case Int32Array:return Math.max(q/2147483647,-1);case Int16Array:return Math.max(q/32767,-1);case Int8Array:return Math.max(q/127,-1);default:throw new Error("Invalid component type.")}}function nq(q,t){switch(t.constructor){case Float32Array:return q;case Uint32Array:return Math.round(4294967295*q);case Uint16Array:return Math.round(65535*q);case Uint8Array:return Math.round(255*q);case Int32Array:return Math.round(2147483647*q);case Int16Array:return Math.round(32767*q);case Int8Array:return Math.round(127*q);default:throw new Error("Invalid component type.")}}const iq={DEG2RAD:K,RAD2DEG:Q,generateUUID:J,clamp:qq,euclideanModulo:tq,mapLinear:function(q,t,l,e,n){return e+(q-t)*(n-e)/(l-t)},inverseLerp:function(q,t,l){return q!==t?(l-q)/(t-q):0},lerp:lq,damp:function(q,t,l,e){return lq(q,t,1-Math.exp(-l*e))},pingpong:function(q,t=1){return t-Math.abs(tq(q,2*t)-t)},smoothstep:function(q,t,l){return q<=t?0:q>=l?1:(q=(q-t)/(l-t))*q*(3-2*q)},smootherstep:function(q,t,l){return q<=t?0:q>=l?1:(q=(q-t)/(l-t))*q*q*(q*(6*q-15)+10)},randInt:function(q,t){return q+Math.floor(Math.random()*(t-q+1))},randFloat:function(q,t){return q+Math.random()*(t-q)},randFloatSpread:function(q){return q*(.5-Math.random())},seededRandom:function(q){void 0!==q&&($=q);let t=$+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(q){return q*K},radToDeg:function(q){return q*Q},isPowerOfTwo:function(q){return!(q&q-1)&&0!==q},ceilPowerOfTwo:function(q){return Math.pow(2,Math.ceil(Math.log(q)/Math.LN2))},floorPowerOfTwo:function(q){return Math.pow(2,Math.floor(Math.log(q)/Math.LN2))},setQuaternionFromProperEuler:function(q,t,l,e,n){const i=Math.cos,o=Math.sin,s=i(l/2),a=o(l/2),r=i((t+e)/2),m=o((t+e)/2),h=i((t-e)/2),c=o((t-e)/2),d=i((e-t)/2),x=o((e-t)/2);switch(n){case"XYX":q.set(s*m,a*h,a*c,s*r);break;case"YZY":q.set(a*c,s*m,a*h,s*r);break;case"ZXZ":q.set(a*h,a*c,s*m,s*r);break;case"XZX":q.set(s*m,a*x,a*d,s*r);break;case"YXY":q.set(a*d,s*m,a*x,s*r);break;case"ZYZ":q.set(a*x,a*d,s*m,s*r);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}},normalize:nq,denormalize:eq},oq="srgb",sq="srgb-linear",aq="linear",rq="srgb",mq=35044,hq=2e3,cq=2001;class dq{constructor(q,t,l,e,n,i,o,s,a){dq.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==q&&this.set(q,t,l,e,n,i,o,s,a)}set(q,t,l,e,n,i,o,s,a){const r=this.elements;return r[0]=q,r[1]=e,r[2]=o,r[3]=t,r[4]=n,r[5]=s,r[6]=l,r[7]=i,r[8]=a,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(q){const t=this.elements,l=q.elements;return t[0]=l[0],t[1]=l[1],t[2]=l[2],t[3]=l[3],t[4]=l[4],t[5]=l[5],t[6]=l[6],t[7]=l[7],t[8]=l[8],this}extractBasis(q,t,l){return q.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),l.setFromMatrix3Column(this,2),this}setFromMatrix4(q){const t=q.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(q){return this.multiplyMatrices(this,q)}premultiply(q){return this.multiplyMatrices(q,this)}multiplyMatrices(q,t){const l=q.elements,e=t.elements,n=this.elements,i=l[0],o=l[3],s=l[6],a=l[1],r=l[4],m=l[7],h=l[2],c=l[5],d=l[8],x=e[0],u=e[3],p=e[6],g=e[1],_=e[4],y=e[7],f=e[2],w=e[5],z=e[8];return n[0]=i*x+o*g+s*f,n[3]=i*u+o*_+s*w,n[6]=i*p+o*y+s*z,n[1]=a*x+r*g+m*f,n[4]=a*u+r*_+m*w,n[7]=a*p+r*y+m*z,n[2]=h*x+c*g+d*f,n[5]=h*u+c*_+d*w,n[8]=h*p+c*y+d*z,this}multiplyScalar(q){const t=this.elements;return t[0]*=q,t[3]*=q,t[6]*=q,t[1]*=q,t[4]*=q,t[7]*=q,t[2]*=q,t[5]*=q,t[8]*=q,this}determinant(){const q=this.elements,t=q[0],l=q[1],e=q[2],n=q[3],i=q[4],o=q[5],s=q[6],a=q[7],r=q[8];return t*i*r-t*o*a-l*n*r+l*o*s+e*n*a-e*i*s}invert(){const q=this.elements,t=q[0],l=q[1],e=q[2],n=q[3],i=q[4],o=q[5],s=q[6],a=q[7],r=q[8],m=r*i-o*a,h=o*s-r*n,c=a*n-i*s,d=t*m+l*h+e*c;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const x=1/d;return q[0]=m*x,q[1]=(e*a-r*l)*x,q[2]=(o*l-e*i)*x,q[3]=h*x,q[4]=(r*t-e*s)*x,q[5]=(e*n-o*t)*x,q[6]=c*x,q[7]=(l*s-a*t)*x,q[8]=(i*t-l*n)*x,this}transpose(){let q;const t=this.elements;return q=t[1],t[1]=t[3],t[3]=q,q=t[2],t[2]=t[6],t[6]=q,q=t[5],t[5]=t[7],t[7]=q,this}getNormalMatrix(q){return this.setFromMatrix4(q).invert().transpose()}transposeIntoArray(q){const t=this.elements;return q[0]=t[0],q[1]=t[3],q[2]=t[6],q[3]=t[1],q[4]=t[4],q[5]=t[7],q[6]=t[2],q[7]=t[5],q[8]=t[8],this}setUvTransform(q,t,l,e,n,i,o){const s=Math.cos(n),a=Math.sin(n);return this.set(l*s,l*a,-l*(s*i+a*o)+i+q,-e*a,e*s,-e*(-a*i+s*o)+o+t,0,0,1),this}scale(q,t){return this.premultiply(xq.makeScale(q,t)),this}rotate(q){return this.premultiply(xq.makeRotation(-q)),this}translate(q,t){return this.premultiply(xq.makeTranslation(q,t)),this}makeTranslation(q,t){return q.isVector2?this.set(1,0,q.x,0,1,q.y,0,0,1):this.set(1,0,q,0,1,t,0,0,1),this}makeRotation(q){const t=Math.cos(q),l=Math.sin(q);return this.set(t,-l,0,l,t,0,0,0,1),this}makeScale(q,t){return this.set(q,0,0,0,t,0,0,0,1),this}equals(q){const t=this.elements,l=q.elements;for(let e=0;e<9;e++)if(t[e]!==l[e])return!1;return!0}fromArray(q,t=0){for(let l=0;l<9;l++)this.elements[l]=q[l+t];return this}toArray(q=[],t=0){const l=this.elements;return q[t]=l[0],q[t+1]=l[1],q[t+2]=l[2],q[t+3]=l[3],q[t+4]=l[4],q[t+5]=l[5],q[t+6]=l[6],q[t+7]=l[7],q[t+8]=l[8],q}clone(){return(new this.constructor).fromArray(this.elements)}}const xq=new dq,uq=(new dq).set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),pq=(new dq).set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function gq(){const q={enabled:!0,workingColorSpace:sq,spaces:{},convert:function(q,t,l){return!1!==this.enabled&&t!==l&&t&&l?(this.spaces[t].transfer===rq&&(q.r=yq(q.r),q.g=yq(q.g),q.b=yq(q.b)),this.spaces[t].primaries!==this.spaces[l].primaries&&(q.applyMatrix3(this.spaces[t].toXYZ),q.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===rq&&(q.r=fq(q.r),q.g=fq(q.g),q.b=fq(q.b)),q):q},fromWorkingColorSpace:function(q,t){return this.convert(q,this.workingColorSpace,t)},toWorkingColorSpace:function(q,t){return this.convert(q,t,this.workingColorSpace)},getPrimaries:function(q){return this.spaces[q].primaries},getTransfer:function(q){return""===q?aq:this.spaces[q].transfer},getLuminanceCoefficients:function(q,t=this.workingColorSpace){return q.fromArray(this.spaces[t].luminanceCoefficients)},define:function(q){Object.assign(this.spaces,q)},_getMatrix:function(q,t,l){return q.copy(this.spaces[t].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(q){return this.spaces[q].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(q=this.workingColorSpace){return this.spaces[q].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],l=[.2126,.7152,.0722],e=[.3127,.329];return q.define({[sq]:{primaries:t,whitePoint:e,transfer:aq,toXYZ:uq,fromXYZ:pq,luminanceCoefficients:l,workingColorSpaceConfig:{unpackColorSpace:oq},outputColorSpaceConfig:{drawingBufferColorSpace:oq}},[oq]:{primaries:t,whitePoint:e,transfer:rq,toXYZ:uq,fromXYZ:pq,luminanceCoefficients:l,outputColorSpaceConfig:{drawingBufferColorSpace:oq}}}),q}const _q=gq();function yq(q){return q<.04045?.0773993808*q:Math.pow(.9478672986*q+.0521327014,2.4)}function fq(q){return q<.0031308?12.92*q:1.055*Math.pow(q,.41666)-.055}const wq={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},zq={h:0,s:0,l:0},kq={h:0,s:0,l:0};function bq(q,t,l){return l<0&&(l+=1),l>1&&(l-=1),l<1/6?q+6*(t-q)*l:l<.5?t:l<2/3?q+6*(t-q)*(2/3-l):q}class vq{constructor(q,t,l){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(q,t,l)}set(q,t,l){if(void 0===t&&void 0===l){const t=q;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(q,t,l);return this}setScalar(q){return this.r=q,this.g=q,this.b=q,this}setHex(q,t=oq){return q=Math.floor(q),this.r=(q>>16&255)/255,this.g=(q>>8&255)/255,this.b=(255&q)/255,_q.toWorkingColorSpace(this,t),this}setRGB(q,t,l,e=_q.workingColorSpace){return this.r=q,this.g=t,this.b=l,_q.toWorkingColorSpace(this,e),this}setHSL(q,t,l,e=_q.workingColorSpace){if(q=tq(q,1),t=qq(t,0,1),l=qq(l,0,1),0===t)this.r=this.g=this.b=l;else{const e=l<=.5?l*(1+t):l+t-l*t,n=2*l-e;this.r=bq(n,e,q+1/3),this.g=bq(n,e,q),this.b=bq(n,e,q-1/3)}return _q.toWorkingColorSpace(this,e),this}setStyle(q,t=oq){function l(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+q+" will be ignored.")}let e;if(e=/^(\w+)\(([^\)]*)\)/.exec(q)){let n;const i=e[1],o=e[2];switch(i){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return l(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,t);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return l(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,t);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return l(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+q)}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(q)){const l=e[1],n=l.length;if(3===n)return this.setRGB(parseInt(l.charAt(0),16)/15,parseInt(l.charAt(1),16)/15,parseInt(l.charAt(2),16)/15,t);if(6===n)return this.setHex(parseInt(l,16),t);console.warn("THREE.Color: Invalid hex color "+q)}else if(q&&q.length>0)return this.setColorName(q,t);return this}setColorName(q,t=oq){const l=wq[q.toLowerCase()];return void 0!==l?this.setHex(l,t):console.warn("THREE.Color: Unknown color "+q),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(q){return this.r=q.r,this.g=q.g,this.b=q.b,this}copySRGBToLinear(q){return this.r=yq(q.r),this.g=yq(q.g),this.b=yq(q.b),this}copyLinearToSRGB(q){return this.r=fq(q.r),this.g=fq(q.g),this.b=fq(q.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(q=oq){return _q.fromWorkingColorSpace(Tq.copy(this),q),65536*Math.round(qq(255*Tq.r,0,255))+256*Math.round(qq(255*Tq.g,0,255))+Math.round(qq(255*Tq.b,0,255))}getHexString(q=oq){return("000000"+this.getHex(q).toString(16)).slice(-6)}getHSL(q,t=_q.workingColorSpace){_q.fromWorkingColorSpace(Tq.copy(this),t);const l=Tq.r,e=Tq.g,n=Tq.b,i=Math.max(l,e,n),o=Math.min(l,e,n);let s,a;const r=(o+i)/2;if(o===i)s=0,a=0;else{const q=i-o;switch(a=r<=.5?q/(i+o):q/(2-i-o),i){case l:s=(e-n)/q+(e<n?6:0);break;case e:s=(n-l)/q+2;break;case n:s=(l-e)/q+4}s/=6}return q.h=s,q.s=a,q.l=r,q}getRGB(q,t=_q.workingColorSpace){return _q.fromWorkingColorSpace(Tq.copy(this),t),q.r=Tq.r,q.g=Tq.g,q.b=Tq.b,q}getStyle(q=oq){_q.fromWorkingColorSpace(Tq.copy(this),q);const t=Tq.r,l=Tq.g,e=Tq.b;return q!==oq?`color(${q} ${t.toFixed(3)} ${l.toFixed(3)} ${e.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*l)},${Math.round(255*e)})`}offsetHSL(q,t,l){return this.getHSL(zq),this.setHSL(zq.h+q,zq.s+t,zq.l+l)}add(q){return this.r+=q.r,this.g+=q.g,this.b+=q.b,this}addColors(q,t){return this.r=q.r+t.r,this.g=q.g+t.g,this.b=q.b+t.b,this}addScalar(q){return this.r+=q,this.g+=q,this.b+=q,this}sub(q){return this.r=Math.max(0,this.r-q.r),this.g=Math.max(0,this.g-q.g),this.b=Math.max(0,this.b-q.b),this}multiply(q){return this.r*=q.r,this.g*=q.g,this.b*=q.b,this}multiplyScalar(q){return this.r*=q,this.g*=q,this.b*=q,this}lerp(q,t){return this.r+=(q.r-this.r)*t,this.g+=(q.g-this.g)*t,this.b+=(q.b-this.b)*t,this}lerpColors(q,t,l){return this.r=q.r+(t.r-q.r)*l,this.g=q.g+(t.g-q.g)*l,this.b=q.b+(t.b-q.b)*l,this}lerpHSL(q,t){this.getHSL(zq),q.getHSL(kq);const l=lq(zq.h,kq.h,t),e=lq(zq.s,kq.s,t),n=lq(zq.l,kq.l,t);return this.setHSL(l,e,n),this}setFromVector3(q){return this.r=q.x,this.g=q.y,this.b=q.z,this}applyMatrix3(q){const t=this.r,l=this.g,e=this.b,n=q.elements;return this.r=n[0]*t+n[3]*l+n[6]*e,this.g=n[1]*t+n[4]*l+n[7]*e,this.b=n[2]*t+n[5]*l+n[8]*e,this}equals(q){return q.r===this.r&&q.g===this.g&&q.b===this.b}fromArray(q,t=0){return this.r=q[t],this.g=q[t+1],this.b=q[t+2],this}toArray(q=[],t=0){return q[t]=this.r,q[t+1]=this.g,q[t+2]=this.b,q}fromBufferAttribute(q,t){return this.r=q.getX(t),this.g=q.getY(t),this.b=q.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Tq=new vq;vq.NAMES=wq;class Sq{constructor(q=0,t=0,l=0,e=1){this.isQuaternion=!0,this._x=q,this._y=t,this._z=l,this._w=e}static slerpFlat(q,t,l,e,n,i,o){let s=l[e+0],a=l[e+1],r=l[e+2],m=l[e+3];const h=n[i+0],c=n[i+1],d=n[i+2],x=n[i+3];if(0===o)return q[t+0]=s,q[t+1]=a,q[t+2]=r,void(q[t+3]=m);if(1===o)return q[t+0]=h,q[t+1]=c,q[t+2]=d,void(q[t+3]=x);if(m!==x||s!==h||a!==c||r!==d){let q=1-o;const t=s*h+a*c+r*d+m*x,l=t>=0?1:-1,e=1-t*t;if(e>Number.EPSILON){const n=Math.sqrt(e),i=Math.atan2(n,t*l);q=Math.sin(q*i)/n,o=Math.sin(o*i)/n}const n=o*l;if(s=s*q+h*n,a=a*q+c*n,r=r*q+d*n,m=m*q+x*n,q===1-o){const q=1/Math.sqrt(s*s+a*a+r*r+m*m);s*=q,a*=q,r*=q,m*=q}}q[t]=s,q[t+1]=a,q[t+2]=r,q[t+3]=m}static multiplyQuaternionsFlat(q,t,l,e,n,i){const o=l[e],s=l[e+1],a=l[e+2],r=l[e+3],m=n[i],h=n[i+1],c=n[i+2],d=n[i+3];return q[t]=o*d+r*m+s*c-a*h,q[t+1]=s*d+r*h+a*m-o*c,q[t+2]=a*d+r*c+o*h-s*m,q[t+3]=r*d-o*m-s*h-a*c,q}get x(){return this._x}set x(q){this._x=q,this._onChangeCallback()}get y(){return this._y}set y(q){this._y=q,this._onChangeCallback()}get z(){return this._z}set z(q){this._z=q,this._onChangeCallback()}get w(){return this._w}set w(q){this._w=q,this._onChangeCallback()}set(q,t,l,e){return this._x=q,this._y=t,this._z=l,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(q){return this._x=q.x,this._y=q.y,this._z=q.z,this._w=q.w,this._onChangeCallback(),this}setFromEuler(q,t=!0){const l=q._x,e=q._y,n=q._z,i=q._order,o=Math.cos,s=Math.sin,a=o(l/2),r=o(e/2),m=o(n/2),h=s(l/2),c=s(e/2),d=s(n/2);switch(i){case"XYZ":this._x=h*r*m+a*c*d,this._y=a*c*m-h*r*d,this._z=a*r*d+h*c*m,this._w=a*r*m-h*c*d;break;case"YXZ":this._x=h*r*m+a*c*d,this._y=a*c*m-h*r*d,this._z=a*r*d-h*c*m,this._w=a*r*m+h*c*d;break;case"ZXY":this._x=h*r*m-a*c*d,this._y=a*c*m+h*r*d,this._z=a*r*d+h*c*m,this._w=a*r*m-h*c*d;break;case"ZYX":this._x=h*r*m-a*c*d,this._y=a*c*m+h*r*d,this._z=a*r*d-h*c*m,this._w=a*r*m+h*c*d;break;case"YZX":this._x=h*r*m+a*c*d,this._y=a*c*m+h*r*d,this._z=a*r*d-h*c*m,this._w=a*r*m-h*c*d;break;case"XZY":this._x=h*r*m-a*c*d,this._y=a*c*m-h*r*d,this._z=a*r*d+h*c*m,this._w=a*r*m+h*c*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+i)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(q,t){const l=t/2,e=Math.sin(l);return this._x=q.x*e,this._y=q.y*e,this._z=q.z*e,this._w=Math.cos(l),this._onChangeCallback(),this}setFromRotationMatrix(q){const t=q.elements,l=t[0],e=t[4],n=t[8],i=t[1],o=t[5],s=t[9],a=t[2],r=t[6],m=t[10],h=l+o+m;if(h>0){const q=.5/Math.sqrt(h+1);this._w=.25/q,this._x=(r-s)*q,this._y=(n-a)*q,this._z=(i-e)*q}else if(l>o&&l>m){const q=2*Math.sqrt(1+l-o-m);this._w=(r-s)/q,this._x=.25*q,this._y=(e+i)/q,this._z=(n+a)/q}else if(o>m){const q=2*Math.sqrt(1+o-l-m);this._w=(n-a)/q,this._x=(e+i)/q,this._y=.25*q,this._z=(s+r)/q}else{const q=2*Math.sqrt(1+m-l-o);this._w=(i-e)/q,this._x=(n+a)/q,this._y=(s+r)/q,this._z=.25*q}return this._onChangeCallback(),this}setFromUnitVectors(q,t){let l=q.dot(t)+1;return l<Number.EPSILON?(l=0,Math.abs(q.x)>Math.abs(q.z)?(this._x=-q.y,this._y=q.x,this._z=0,this._w=l):(this._x=0,this._y=-q.z,this._z=q.y,this._w=l)):(this._x=q.y*t.z-q.z*t.y,this._y=q.z*t.x-q.x*t.z,this._z=q.x*t.y-q.y*t.x,this._w=l),this.normalize()}angleTo(q){return 2*Math.acos(Math.abs(qq(this.dot(q),-1,1)))}rotateTowards(q,t){const l=this.angleTo(q);if(0===l)return this;const e=Math.min(1,t/l);return this.slerp(q,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(q){return this._x*q._x+this._y*q._y+this._z*q._z+this._w*q._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let q=this.length();return 0===q?(this._x=0,this._y=0,this._z=0,this._w=1):(q=1/q,this._x=this._x*q,this._y=this._y*q,this._z=this._z*q,this._w=this._w*q),this._onChangeCallback(),this}multiply(q){return this.multiplyQuaternions(this,q)}premultiply(q){return this.multiplyQuaternions(q,this)}multiplyQuaternions(q,t){const l=q._x,e=q._y,n=q._z,i=q._w,o=t._x,s=t._y,a=t._z,r=t._w;return this._x=l*r+i*o+e*a-n*s,this._y=e*r+i*s+n*o-l*a,this._z=n*r+i*a+l*s-e*o,this._w=i*r-l*o-e*s-n*a,this._onChangeCallback(),this}slerp(q,t){if(0===t)return this;if(1===t)return this.copy(q);const l=this._x,e=this._y,n=this._z,i=this._w;let o=i*q._w+l*q._x+e*q._y+n*q._z;if(o<0?(this._w=-q._w,this._x=-q._x,this._y=-q._y,this._z=-q._z,o=-o):this.copy(q),o>=1)return this._w=i,this._x=l,this._y=e,this._z=n,this;const s=1-o*o;if(s<=Number.EPSILON){const q=1-t;return this._w=q*i+t*this._w,this._x=q*l+t*this._x,this._y=q*e+t*this._y,this._z=q*n+t*this._z,this.normalize(),this}const a=Math.sqrt(s),r=Math.atan2(a,o),m=Math.sin((1-t)*r)/a,h=Math.sin(t*r)/a;return this._w=i*m+this._w*h,this._x=l*m+this._x*h,this._y=e*m+this._y*h,this._z=n*m+this._z*h,this._onChangeCallback(),this}slerpQuaternions(q,t,l){return this.copy(q).slerp(t,l)}random(){const q=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),l=Math.random(),e=Math.sqrt(1-l),n=Math.sqrt(l);return this.set(e*Math.sin(q),e*Math.cos(q),n*Math.sin(t),n*Math.cos(t))}equals(q){return q._x===this._x&&q._y===this._y&&q._z===this._z&&q._w===this._w}fromArray(q,t=0){return this._x=q[t],this._y=q[t+1],this._z=q[t+2],this._w=q[t+3],this._onChangeCallback(),this}toArray(q=[],t=0){return q[t]=this._x,q[t+1]=this._y,q[t+2]=this._z,q[t+3]=this._w,q}fromBufferAttribute(q,t){return this._x=q.getX(t),this._y=q.getY(t),this._z=q.getZ(t),this._w=q.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(q){return this._onChangeCallback=q,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Eq{constructor(q=0,t=0,l=0){Eq.prototype.isVector3=!0,this.x=q,this.y=t,this.z=l}set(q,t,l){return void 0===l&&(l=this.z),this.x=q,this.y=t,this.z=l,this}setScalar(q){return this.x=q,this.y=q,this.z=q,this}setX(q){return this.x=q,this}setY(q){return this.y=q,this}setZ(q){return this.z=q,this}setComponent(q,t){switch(q){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+q)}return this}getComponent(q){switch(q){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+q)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(q){return this.x=q.x,this.y=q.y,this.z=q.z,this}add(q){return this.x+=q.x,this.y+=q.y,this.z+=q.z,this}addScalar(q){return this.x+=q,this.y+=q,this.z+=q,this}addVectors(q,t){return this.x=q.x+t.x,this.y=q.y+t.y,this.z=q.z+t.z,this}addScaledVector(q,t){return this.x+=q.x*t,this.y+=q.y*t,this.z+=q.z*t,this}sub(q){return this.x-=q.x,this.y-=q.y,this.z-=q.z,this}subScalar(q){return this.x-=q,this.y-=q,this.z-=q,this}subVectors(q,t){return this.x=q.x-t.x,this.y=q.y-t.y,this.z=q.z-t.z,this}multiply(q){return this.x*=q.x,this.y*=q.y,this.z*=q.z,this}multiplyScalar(q){return this.x*=q,this.y*=q,this.z*=q,this}multiplyVectors(q,t){return this.x=q.x*t.x,this.y=q.y*t.y,this.z=q.z*t.z,this}applyEuler(q){return this.applyQuaternion(Cq.setFromEuler(q))}applyAxisAngle(q,t){return this.applyQuaternion(Cq.setFromAxisAngle(q,t))}applyMatrix3(q){const t=this.x,l=this.y,e=this.z,n=q.elements;return this.x=n[0]*t+n[3]*l+n[6]*e,this.y=n[1]*t+n[4]*l+n[7]*e,this.z=n[2]*t+n[5]*l+n[8]*e,this}applyNormalMatrix(q){return this.applyMatrix3(q).normalize()}applyMatrix4(q){const t=this.x,l=this.y,e=this.z,n=q.elements,i=1/(n[3]*t+n[7]*l+n[11]*e+n[15]);return this.x=(n[0]*t+n[4]*l+n[8]*e+n[12])*i,this.y=(n[1]*t+n[5]*l+n[9]*e+n[13])*i,this.z=(n[2]*t+n[6]*l+n[10]*e+n[14])*i,this}applyQuaternion(q){const t=this.x,l=this.y,e=this.z,n=q.x,i=q.y,o=q.z,s=q.w,a=2*(i*e-o*l),r=2*(o*t-n*e),m=2*(n*l-i*t);return this.x=t+s*a+i*m-o*r,this.y=l+s*r+o*a-n*m,this.z=e+s*m+n*r-i*a,this}project(q){return this.applyMatrix4(q.matrixWorldInverse).applyMatrix4(q.projectionMatrix)}unproject(q){return this.applyMatrix4(q.projectionMatrixInverse).applyMatrix4(q.matrixWorld)}transformDirection(q){const t=this.x,l=this.y,e=this.z,n=q.elements;return this.x=n[0]*t+n[4]*l+n[8]*e,this.y=n[1]*t+n[5]*l+n[9]*e,this.z=n[2]*t+n[6]*l+n[10]*e,this.normalize()}divide(q){return this.x/=q.x,this.y/=q.y,this.z/=q.z,this}divideScalar(q){return this.multiplyScalar(1/q)}min(q){return this.x=Math.min(this.x,q.x),this.y=Math.min(this.y,q.y),this.z=Math.min(this.z,q.z),this}max(q){return this.x=Math.max(this.x,q.x),this.y=Math.max(this.y,q.y),this.z=Math.max(this.z,q.z),this}clamp(q,t){return this.x=qq(this.x,q.x,t.x),this.y=qq(this.y,q.y,t.y),this.z=qq(this.z,q.z,t.z),this}clampScalar(q,t){return this.x=qq(this.x,q,t),this.y=qq(this.y,q,t),this.z=qq(this.z,q,t),this}clampLength(q,t){const l=this.length();return this.divideScalar(l||1).multiplyScalar(qq(l,q,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(q){return this.x*q.x+this.y*q.y+this.z*q.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(q){return this.normalize().multiplyScalar(q)}lerp(q,t){return this.x+=(q.x-this.x)*t,this.y+=(q.y-this.y)*t,this.z+=(q.z-this.z)*t,this}lerpVectors(q,t,l){return this.x=q.x+(t.x-q.x)*l,this.y=q.y+(t.y-q.y)*l,this.z=q.z+(t.z-q.z)*l,this}cross(q){return this.crossVectors(this,q)}crossVectors(q,t){const l=q.x,e=q.y,n=q.z,i=t.x,o=t.y,s=t.z;return this.x=e*s-n*o,this.y=n*i-l*s,this.z=l*o-e*i,this}projectOnVector(q){const t=q.lengthSq();if(0===t)return this.set(0,0,0);const l=q.dot(this)/t;return this.copy(q).multiplyScalar(l)}projectOnPlane(q){return Nq.copy(this).projectOnVector(q),this.sub(Nq)}reflect(q){return this.sub(Nq.copy(q).multiplyScalar(2*this.dot(q)))}angleTo(q){const t=Math.sqrt(this.lengthSq()*q.lengthSq());if(0===t)return Math.PI/2;const l=this.dot(q)/t;return Math.acos(qq(l,-1,1))}distanceTo(q){return Math.sqrt(this.distanceToSquared(q))}distanceToSquared(q){const t=this.x-q.x,l=this.y-q.y,e=this.z-q.z;return t*t+l*l+e*e}manhattanDistanceTo(q){return Math.abs(this.x-q.x)+Math.abs(this.y-q.y)+Math.abs(this.z-q.z)}setFromSpherical(q){return this.setFromSphericalCoords(q.radius,q.phi,q.theta)}setFromSphericalCoords(q,t,l){const e=Math.sin(t)*q;return this.x=e*Math.sin(l),this.y=Math.cos(t)*q,this.z=e*Math.cos(l),this}setFromCylindrical(q){return this.setFromCylindricalCoords(q.radius,q.theta,q.y)}setFromCylindricalCoords(q,t,l){return this.x=q*Math.sin(t),this.y=l,this.z=q*Math.cos(t),this}setFromMatrixPosition(q){const t=q.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(q){const t=this.setFromMatrixColumn(q,0).length(),l=this.setFromMatrixColumn(q,1).length(),e=this.setFromMatrixColumn(q,2).length();return this.x=t,this.y=l,this.z=e,this}setFromMatrixColumn(q,t){return this.fromArray(q.elements,4*t)}setFromMatrix3Column(q,t){return this.fromArray(q.elements,3*t)}setFromEuler(q){return this.x=q._x,this.y=q._y,this.z=q._z,this}setFromColor(q){return this.x=q.r,this.y=q.g,this.z=q.b,this}equals(q){return q.x===this.x&&q.y===this.y&&q.z===this.z}fromArray(q,t=0){return this.x=q[t],this.y=q[t+1],this.z=q[t+2],this}toArray(q=[],t=0){return q[t]=this.x,q[t+1]=this.y,q[t+2]=this.z,q}fromBufferAttribute(q,t){return this.x=q.getX(t),this.y=q.getY(t),this.z=q.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const q=Math.random()*Math.PI*2,t=2*Math.random()-1,l=Math.sqrt(1-t*t);return this.x=l*Math.cos(q),this.y=t,this.z=l*Math.sin(q),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Nq=new Eq,Cq=new Sq;class Mq{constructor(q,t,l,e,n,i,o,s,a,r,m,h,c,d,x,u){Mq.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==q&&this.set(q,t,l,e,n,i,o,s,a,r,m,h,c,d,x,u)}set(q,t,l,e,n,i,o,s,a,r,m,h,c,d,x,u){const p=this.elements;return p[0]=q,p[4]=t,p[8]=l,p[12]=e,p[1]=n,p[5]=i,p[9]=o,p[13]=s,p[2]=a,p[6]=r,p[10]=m,p[14]=h,p[3]=c,p[7]=d,p[11]=x,p[15]=u,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Mq).fromArray(this.elements)}copy(q){const t=this.elements,l=q.elements;return t[0]=l[0],t[1]=l[1],t[2]=l[2],t[3]=l[3],t[4]=l[4],t[5]=l[5],t[6]=l[6],t[7]=l[7],t[8]=l[8],t[9]=l[9],t[10]=l[10],t[11]=l[11],t[12]=l[12],t[13]=l[13],t[14]=l[14],t[15]=l[15],this}copyPosition(q){const t=this.elements,l=q.elements;return t[12]=l[12],t[13]=l[13],t[14]=l[14],this}setFromMatrix3(q){const t=q.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(q,t,l){return q.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),l.setFromMatrixColumn(this,2),this}makeBasis(q,t,l){return this.set(q.x,t.x,l.x,0,q.y,t.y,l.y,0,q.z,t.z,l.z,0,0,0,0,1),this}extractRotation(q){const t=this.elements,l=q.elements,e=1/Iq.setFromMatrixColumn(q,0).length(),n=1/Iq.setFromMatrixColumn(q,1).length(),i=1/Iq.setFromMatrixColumn(q,2).length();return t[0]=l[0]*e,t[1]=l[1]*e,t[2]=l[2]*e,t[3]=0,t[4]=l[4]*n,t[5]=l[5]*n,t[6]=l[6]*n,t[7]=0,t[8]=l[8]*i,t[9]=l[9]*i,t[10]=l[10]*i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(q){const t=this.elements,l=q.x,e=q.y,n=q.z,i=Math.cos(l),o=Math.sin(l),s=Math.cos(e),a=Math.sin(e),r=Math.cos(n),m=Math.sin(n);if("XYZ"===q.order){const q=i*r,l=i*m,e=o*r,n=o*m;t[0]=s*r,t[4]=-s*m,t[8]=a,t[1]=l+e*a,t[5]=q-n*a,t[9]=-o*s,t[2]=n-q*a,t[6]=e+l*a,t[10]=i*s}else if("YXZ"===q.order){const q=s*r,l=s*m,e=a*r,n=a*m;t[0]=q+n*o,t[4]=e*o-l,t[8]=i*a,t[1]=i*m,t[5]=i*r,t[9]=-o,t[2]=l*o-e,t[6]=n+q*o,t[10]=i*s}else if("ZXY"===q.order){const q=s*r,l=s*m,e=a*r,n=a*m;t[0]=q-n*o,t[4]=-i*m,t[8]=e+l*o,t[1]=l+e*o,t[5]=i*r,t[9]=n-q*o,t[2]=-i*a,t[6]=o,t[10]=i*s}else if("ZYX"===q.order){const q=i*r,l=i*m,e=o*r,n=o*m;t[0]=s*r,t[4]=e*a-l,t[8]=q*a+n,t[1]=s*m,t[5]=n*a+q,t[9]=l*a-e,t[2]=-a,t[6]=o*s,t[10]=i*s}else if("YZX"===q.order){const q=i*s,l=i*a,e=o*s,n=o*a;t[0]=s*r,t[4]=n-q*m,t[8]=e*m+l,t[1]=m,t[5]=i*r,t[9]=-o*r,t[2]=-a*r,t[6]=l*m+e,t[10]=q-n*m}else if("XZY"===q.order){const q=i*s,l=i*a,e=o*s,n=o*a;t[0]=s*r,t[4]=-m,t[8]=a*r,t[1]=q*m+n,t[5]=i*r,t[9]=l*m-e,t[2]=e*m-l,t[6]=o*r,t[10]=n*m+q}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(q){return this.compose(Aq,q,Pq)}lookAt(q,t,l){const e=this.elements;return Rq.subVectors(q,t),0===Rq.lengthSq()&&(Rq.z=1),Rq.normalize(),Dq.crossVectors(l,Rq),0===Dq.lengthSq()&&(1===Math.abs(l.z)?Rq.x+=1e-4:Rq.z+=1e-4,Rq.normalize(),Dq.crossVectors(l,Rq)),Dq.normalize(),Bq.crossVectors(Rq,Dq),e[0]=Dq.x,e[4]=Bq.x,e[8]=Rq.x,e[1]=Dq.y,e[5]=Bq.y,e[9]=Rq.y,e[2]=Dq.z,e[6]=Bq.z,e[10]=Rq.z,this}multiply(q){return this.multiplyMatrices(this,q)}premultiply(q){return this.multiplyMatrices(q,this)}multiplyMatrices(q,t){const l=q.elements,e=t.elements,n=this.elements,i=l[0],o=l[4],s=l[8],a=l[12],r=l[1],m=l[5],h=l[9],c=l[13],d=l[2],x=l[6],u=l[10],p=l[14],g=l[3],_=l[7],y=l[11],f=l[15],w=e[0],z=e[4],k=e[8],b=e[12],v=e[1],T=e[5],S=e[9],E=e[13],N=e[2],C=e[6],M=e[10],I=e[14],L=e[3],A=e[7],P=e[11],D=e[15];return n[0]=i*w+o*v+s*N+a*L,n[4]=i*z+o*T+s*C+a*A,n[8]=i*k+o*S+s*M+a*P,n[12]=i*b+o*E+s*I+a*D,n[1]=r*w+m*v+h*N+c*L,n[5]=r*z+m*T+h*C+c*A,n[9]=r*k+m*S+h*M+c*P,n[13]=r*b+m*E+h*I+c*D,n[2]=d*w+x*v+u*N+p*L,n[6]=d*z+x*T+u*C+p*A,n[10]=d*k+x*S+u*M+p*P,n[14]=d*b+x*E+u*I+p*D,n[3]=g*w+_*v+y*N+f*L,n[7]=g*z+_*T+y*C+f*A,n[11]=g*k+_*S+y*M+f*P,n[15]=g*b+_*E+y*I+f*D,this}multiplyScalar(q){const t=this.elements;return t[0]*=q,t[4]*=q,t[8]*=q,t[12]*=q,t[1]*=q,t[5]*=q,t[9]*=q,t[13]*=q,t[2]*=q,t[6]*=q,t[10]*=q,t[14]*=q,t[3]*=q,t[7]*=q,t[11]*=q,t[15]*=q,this}determinant(){const q=this.elements,t=q[0],l=q[4],e=q[8],n=q[12],i=q[1],o=q[5],s=q[9],a=q[13],r=q[2],m=q[6],h=q[10],c=q[14];return q[3]*(+n*s*m-e*a*m-n*o*h+l*a*h+e*o*c-l*s*c)+q[7]*(+t*s*c-t*a*h+n*i*h-e*i*c+e*a*r-n*s*r)+q[11]*(+t*a*m-t*o*c-n*i*m+l*i*c+n*o*r-l*a*r)+q[15]*(-e*o*r-t*s*m+t*o*h+e*i*m-l*i*h+l*s*r)}transpose(){const q=this.elements;let t;return t=q[1],q[1]=q[4],q[4]=t,t=q[2],q[2]=q[8],q[8]=t,t=q[6],q[6]=q[9],q[9]=t,t=q[3],q[3]=q[12],q[12]=t,t=q[7],q[7]=q[13],q[13]=t,t=q[11],q[11]=q[14],q[14]=t,this}setPosition(q,t,l){const e=this.elements;return q.isVector3?(e[12]=q.x,e[13]=q.y,e[14]=q.z):(e[12]=q,e[13]=t,e[14]=l),this}invert(){const q=this.elements,t=q[0],l=q[1],e=q[2],n=q[3],i=q[4],o=q[5],s=q[6],a=q[7],r=q[8],m=q[9],h=q[10],c=q[11],d=q[12],x=q[13],u=q[14],p=q[15],g=m*u*a-x*h*a+x*s*c-o*u*c-m*s*p+o*h*p,_=d*h*a-r*u*a-d*s*c+i*u*c+r*s*p-i*h*p,y=r*x*a-d*m*a+d*o*c-i*x*c-r*o*p+i*m*p,f=d*m*s-r*x*s-d*o*h+i*x*h+r*o*u-i*m*u,w=t*g+l*_+e*y+n*f;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/w;return q[0]=g*z,q[1]=(x*h*n-m*u*n-x*e*c+l*u*c+m*e*p-l*h*p)*z,q[2]=(o*u*n-x*s*n+x*e*a-l*u*a-o*e*p+l*s*p)*z,q[3]=(m*s*n-o*h*n-m*e*a+l*h*a+o*e*c-l*s*c)*z,q[4]=_*z,q[5]=(r*u*n-d*h*n+d*e*c-t*u*c-r*e*p+t*h*p)*z,q[6]=(d*s*n-i*u*n-d*e*a+t*u*a+i*e*p-t*s*p)*z,q[7]=(i*h*n-r*s*n+r*e*a-t*h*a-i*e*c+t*s*c)*z,q[8]=y*z,q[9]=(d*m*n-r*x*n-d*l*c+t*x*c+r*l*p-t*m*p)*z,q[10]=(i*x*n-d*o*n+d*l*a-t*x*a-i*l*p+t*o*p)*z,q[11]=(r*o*n-i*m*n-r*l*a+t*m*a+i*l*c-t*o*c)*z,q[12]=f*z,q[13]=(r*x*e-d*m*e+d*l*h-t*x*h-r*l*u+t*m*u)*z,q[14]=(d*o*e-i*x*e-d*l*s+t*x*s+i*l*u-t*o*u)*z,q[15]=(i*m*e-r*o*e+r*l*s-t*m*s-i*l*h+t*o*h)*z,this}scale(q){const t=this.elements,l=q.x,e=q.y,n=q.z;return t[0]*=l,t[4]*=e,t[8]*=n,t[1]*=l,t[5]*=e,t[9]*=n,t[2]*=l,t[6]*=e,t[10]*=n,t[3]*=l,t[7]*=e,t[11]*=n,this}getMaxScaleOnAxis(){const q=this.elements,t=q[0]*q[0]+q[1]*q[1]+q[2]*q[2],l=q[4]*q[4]+q[5]*q[5]+q[6]*q[6],e=q[8]*q[8]+q[9]*q[9]+q[10]*q[10];return Math.sqrt(Math.max(t,l,e))}makeTranslation(q,t,l){return q.isVector3?this.set(1,0,0,q.x,0,1,0,q.y,0,0,1,q.z,0,0,0,1):this.set(1,0,0,q,0,1,0,t,0,0,1,l,0,0,0,1),this}makeRotationX(q){const t=Math.cos(q),l=Math.sin(q);return this.set(1,0,0,0,0,t,-l,0,0,l,t,0,0,0,0,1),this}makeRotationY(q){const t=Math.cos(q),l=Math.sin(q);return this.set(t,0,l,0,0,1,0,0,-l,0,t,0,0,0,0,1),this}makeRotationZ(q){const t=Math.cos(q),l=Math.sin(q);return this.set(t,-l,0,0,l,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(q,t){const l=Math.cos(t),e=Math.sin(t),n=1-l,i=q.x,o=q.y,s=q.z,a=n*i,r=n*o;return this.set(a*i+l,a*o-e*s,a*s+e*o,0,a*o+e*s,r*o+l,r*s-e*i,0,a*s-e*o,r*s+e*i,n*s*s+l,0,0,0,0,1),this}makeScale(q,t,l){return this.set(q,0,0,0,0,t,0,0,0,0,l,0,0,0,0,1),this}makeShear(q,t,l,e,n,i){return this.set(1,l,n,0,q,1,i,0,t,e,1,0,0,0,0,1),this}compose(q,t,l){const e=this.elements,n=t._x,i=t._y,o=t._z,s=t._w,a=n+n,r=i+i,m=o+o,h=n*a,c=n*r,d=n*m,x=i*r,u=i*m,p=o*m,g=s*a,_=s*r,y=s*m,f=l.x,w=l.y,z=l.z;return e[0]=(1-(x+p))*f,e[1]=(c+y)*f,e[2]=(d-_)*f,e[3]=0,e[4]=(c-y)*w,e[5]=(1-(h+p))*w,e[6]=(u+g)*w,e[7]=0,e[8]=(d+_)*z,e[9]=(u-g)*z,e[10]=(1-(h+x))*z,e[11]=0,e[12]=q.x,e[13]=q.y,e[14]=q.z,e[15]=1,this}decompose(q,t,l){const e=this.elements;let n=Iq.set(e[0],e[1],e[2]).length();const i=Iq.set(e[4],e[5],e[6]).length(),o=Iq.set(e[8],e[9],e[10]).length();this.determinant()<0&&(n=-n),q.x=e[12],q.y=e[13],q.z=e[14],Lq.copy(this);const s=1/n,a=1/i,r=1/o;return Lq.elements[0]*=s,Lq.elements[1]*=s,Lq.elements[2]*=s,Lq.elements[4]*=a,Lq.elements[5]*=a,Lq.elements[6]*=a,Lq.elements[8]*=r,Lq.elements[9]*=r,Lq.elements[10]*=r,t.setFromRotationMatrix(Lq),l.x=n,l.y=i,l.z=o,this}makePerspective(q,t,l,e,n,i,o=2e3){const s=this.elements,a=2*n/(t-q),r=2*n/(l-e),m=(t+q)/(t-q),h=(l+e)/(l-e);let c,d;if(o===hq)c=-(i+n)/(i-n),d=-2*i*n/(i-n);else{if(o!==cq)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);c=-i/(i-n),d=-i*n/(i-n)}return s[0]=a,s[4]=0,s[8]=m,s[12]=0,s[1]=0,s[5]=r,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=c,s[14]=d,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(q,t,l,e,n,i,o=2e3){const s=this.elements,a=1/(t-q),r=1/(l-e),m=1/(i-n),h=(t+q)*a,c=(l+e)*r;let d,x;if(o===hq)d=(i+n)*m,x=-2*m;else{if(o!==cq)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);d=n*m,x=-1*m}return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*r,s[9]=0,s[13]=-c,s[2]=0,s[6]=0,s[10]=x,s[14]=-d,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(q){const t=this.elements,l=q.elements;for(let e=0;e<16;e++)if(t[e]!==l[e])return!1;return!0}fromArray(q,t=0){for(let l=0;l<16;l++)this.elements[l]=q[l+t];return this}toArray(q=[],t=0){const l=this.elements;return q[t]=l[0],q[t+1]=l[1],q[t+2]=l[2],q[t+3]=l[3],q[t+4]=l[4],q[t+5]=l[5],q[t+6]=l[6],q[t+7]=l[7],q[t+8]=l[8],q[t+9]=l[9],q[t+10]=l[10],q[t+11]=l[11],q[t+12]=l[12],q[t+13]=l[13],q[t+14]=l[14],q[t+15]=l[15],q}}const Iq=new Eq,Lq=new Mq,Aq=new Eq(0,0,0),Pq=new Eq(1,1,1),Dq=new Eq,Bq=new Eq,Rq=new Eq;class Oq{constructor(q=0,t=0){Oq.prototype.isVector2=!0,this.x=q,this.y=t}get width(){return this.x}set width(q){this.x=q}get height(){return this.y}set height(q){this.y=q}set(q,t){return this.x=q,this.y=t,this}setScalar(q){return this.x=q,this.y=q,this}setX(q){return this.x=q,this}setY(q){return this.y=q,this}setComponent(q,t){switch(q){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+q)}return this}getComponent(q){switch(q){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+q)}}clone(){return new this.constructor(this.x,this.y)}copy(q){return this.x=q.x,this.y=q.y,this}add(q){return this.x+=q.x,this.y+=q.y,this}addScalar(q){return this.x+=q,this.y+=q,this}addVectors(q,t){return this.x=q.x+t.x,this.y=q.y+t.y,this}addScaledVector(q,t){return this.x+=q.x*t,this.y+=q.y*t,this}sub(q){return this.x-=q.x,this.y-=q.y,this}subScalar(q){return this.x-=q,this.y-=q,this}subVectors(q,t){return this.x=q.x-t.x,this.y=q.y-t.y,this}multiply(q){return this.x*=q.x,this.y*=q.y,this}multiplyScalar(q){return this.x*=q,this.y*=q,this}divide(q){return this.x/=q.x,this.y/=q.y,this}divideScalar(q){return this.multiplyScalar(1/q)}applyMatrix3(q){const t=this.x,l=this.y,e=q.elements;return this.x=e[0]*t+e[3]*l+e[6],this.y=e[1]*t+e[4]*l+e[7],this}min(q){return this.x=Math.min(this.x,q.x),this.y=Math.min(this.y,q.y),this}max(q){return this.x=Math.max(this.x,q.x),this.y=Math.max(this.y,q.y),this}clamp(q,t){return this.x=qq(this.x,q.x,t.x),this.y=qq(this.y,q.y,t.y),this}clampScalar(q,t){return this.x=qq(this.x,q,t),this.y=qq(this.y,q,t),this}clampLength(q,t){const l=this.length();return this.divideScalar(l||1).multiplyScalar(qq(l,q,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(q){return this.x*q.x+this.y*q.y}cross(q){return this.x*q.y-this.y*q.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(q){const t=Math.sqrt(this.lengthSq()*q.lengthSq());if(0===t)return Math.PI/2;const l=this.dot(q)/t;return Math.acos(qq(l,-1,1))}distanceTo(q){return Math.sqrt(this.distanceToSquared(q))}distanceToSquared(q){const t=this.x-q.x,l=this.y-q.y;return t*t+l*l}manhattanDistanceTo(q){return Math.abs(this.x-q.x)+Math.abs(this.y-q.y)}setLength(q){return this.normalize().multiplyScalar(q)}lerp(q,t){return this.x+=(q.x-this.x)*t,this.y+=(q.y-this.y)*t,this}lerpVectors(q,t,l){return this.x=q.x+(t.x-q.x)*l,this.y=q.y+(t.y-q.y)*l,this}equals(q){return q.x===this.x&&q.y===this.y}fromArray(q,t=0){return this.x=q[t],this.y=q[t+1],this}toArray(q=[],t=0){return q[t]=this.x,q[t+1]=this.y,q}fromBufferAttribute(q,t){return this.x=q.getX(t),this.y=q.getY(t),this}rotateAround(q,t){const l=Math.cos(t),e=Math.sin(t),n=this.x-q.x,i=this.y-q.y;return this.x=n*l-i*e+q.x,this.y=n*e+i*l+q.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Fq{constructor(q=0,t=0,l=0,e=1){Fq.prototype.isVector4=!0,this.x=q,this.y=t,this.z=l,this.w=e}get width(){return this.z}set width(q){this.z=q}get height(){return this.w}set height(q){this.w=q}set(q,t,l,e){return this.x=q,this.y=t,this.z=l,this.w=e,this}setScalar(q){return this.x=q,this.y=q,this.z=q,this.w=q,this}setX(q){return this.x=q,this}setY(q){return this.y=q,this}setZ(q){return this.z=q,this}setW(q){return this.w=q,this}setComponent(q,t){switch(q){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+q)}return this}getComponent(q){switch(q){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+q)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(q){return this.x=q.x,this.y=q.y,this.z=q.z,this.w=void 0!==q.w?q.w:1,this}add(q){return this.x+=q.x,this.y+=q.y,this.z+=q.z,this.w+=q.w,this}addScalar(q){return this.x+=q,this.y+=q,this.z+=q,this.w+=q,this}addVectors(q,t){return this.x=q.x+t.x,this.y=q.y+t.y,this.z=q.z+t.z,this.w=q.w+t.w,this}addScaledVector(q,t){return this.x+=q.x*t,this.y+=q.y*t,this.z+=q.z*t,this.w+=q.w*t,this}sub(q){return this.x-=q.x,this.y-=q.y,this.z-=q.z,this.w-=q.w,this}subScalar(q){return this.x-=q,this.y-=q,this.z-=q,this.w-=q,this}subVectors(q,t){return this.x=q.x-t.x,this.y=q.y-t.y,this.z=q.z-t.z,this.w=q.w-t.w,this}multiply(q){return this.x*=q.x,this.y*=q.y,this.z*=q.z,this.w*=q.w,this}multiplyScalar(q){return this.x*=q,this.y*=q,this.z*=q,this.w*=q,this}applyMatrix4(q){const t=this.x,l=this.y,e=this.z,n=this.w,i=q.elements;return this.x=i[0]*t+i[4]*l+i[8]*e+i[12]*n,this.y=i[1]*t+i[5]*l+i[9]*e+i[13]*n,this.z=i[2]*t+i[6]*l+i[10]*e+i[14]*n,this.w=i[3]*t+i[7]*l+i[11]*e+i[15]*n,this}divide(q){return this.x/=q.x,this.y/=q.y,this.z/=q.z,this.w/=q.w,this}divideScalar(q){return this.multiplyScalar(1/q)}setAxisAngleFromQuaternion(q){this.w=2*Math.acos(q.w);const t=Math.sqrt(1-q.w*q.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=q.x/t,this.y=q.y/t,this.z=q.z/t),this}setAxisAngleFromRotationMatrix(q){let t,l,e,n;const i=.01,o=.1,s=q.elements,a=s[0],r=s[4],m=s[8],h=s[1],c=s[5],d=s[9],x=s[2],u=s[6],p=s[10];if(Math.abs(r-h)<i&&Math.abs(m-x)<i&&Math.abs(d-u)<i){if(Math.abs(r+h)<o&&Math.abs(m+x)<o&&Math.abs(d+u)<o&&Math.abs(a+c+p-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const q=(a+1)/2,s=(c+1)/2,g=(p+1)/2,_=(r+h)/4,y=(m+x)/4,f=(d+u)/4;return q>s&&q>g?q<i?(l=0,e=.707106781,n=.707106781):(l=Math.sqrt(q),e=_/l,n=y/l):s>g?s<i?(l=.707106781,e=0,n=.707106781):(e=Math.sqrt(s),l=_/e,n=f/e):g<i?(l=.707106781,e=.707106781,n=0):(n=Math.sqrt(g),l=y/n,e=f/n),this.set(l,e,n,t),this}let g=Math.sqrt((u-d)*(u-d)+(m-x)*(m-x)+(h-r)*(h-r));return Math.abs(g)<.001&&(g=1),this.x=(u-d)/g,this.y=(m-x)/g,this.z=(h-r)/g,this.w=Math.acos((a+c+p-1)/2),this}setFromMatrixPosition(q){const t=q.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(q){return this.x=Math.min(this.x,q.x),this.y=Math.min(this.y,q.y),this.z=Math.min(this.z,q.z),this.w=Math.min(this.w,q.w),this}max(q){return this.x=Math.max(this.x,q.x),this.y=Math.max(this.y,q.y),this.z=Math.max(this.z,q.z),this.w=Math.max(this.w,q.w),this}clamp(q,t){return this.x=qq(this.x,q.x,t.x),this.y=qq(this.y,q.y,t.y),this.z=qq(this.z,q.z,t.z),this.w=qq(this.w,q.w,t.w),this}clampScalar(q,t){return this.x=qq(this.x,q,t),this.y=qq(this.y,q,t),this.z=qq(this.z,q,t),this.w=qq(this.w,q,t),this}clampLength(q,t){const l=this.length();return this.divideScalar(l||1).multiplyScalar(qq(l,q,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(q){return this.x*q.x+this.y*q.y+this.z*q.z+this.w*q.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(q){return this.normalize().multiplyScalar(q)}lerp(q,t){return this.x+=(q.x-this.x)*t,this.y+=(q.y-this.y)*t,this.z+=(q.z-this.z)*t,this.w+=(q.w-this.w)*t,this}lerpVectors(q,t,l){return this.x=q.x+(t.x-q.x)*l,this.y=q.y+(t.y-q.y)*l,this.z=q.z+(t.z-q.z)*l,this.w=q.w+(t.w-q.w)*l,this}equals(q){return q.x===this.x&&q.y===this.y&&q.z===this.z&&q.w===this.w}fromArray(q,t=0){return this.x=q[t],this.y=q[t+1],this.z=q[t+2],this.w=q[t+3],this}toArray(q=[],t=0){return q[t]=this.x,q[t+1]=this.y,q[t+2]=this.z,q[t+3]=this.w,q}fromBufferAttribute(q,t){return this.x=q.getX(t),this.y=q.getY(t),this.z=q.getZ(t),this.w=q.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}function jq(q,t=0){let l=3735928559^t,e=1103547991^t;if(q instanceof Array)for(let n,i=0;i<q.length;i++)n=q[i],l=Math.imul(l^n,2654435761),e=Math.imul(e^n,1597334677);else for(let n,i=0;i<q.length;i++)n=q.charCodeAt(i),l=Math.imul(l^n,2654435761),e=Math.imul(e^n,1597334677);return l=Math.imul(l^l>>>16,2246822507),l^=Math.imul(e^e>>>13,3266489909),e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(l^l>>>13,3266489909),4294967296*(2097151&e)+(l>>>0)}const Vq=(...q)=>jq(q);function*Uq(q,t=!1){for(const l in q){if(!0===l.startsWith("_"))continue;const e=q[l];if(!0===Array.isArray(e))for(let q=0;q<e.length;q++){const n=e[q];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:l,index:q,childNode:n})}else if(e&&!0===e.isNode)yield{property:l,childNode:e};else if("object"==typeof e)for(const q in e){const n=e[q];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:l,index:q,childNode:n})}}}function Gq(q){if(null==q)return null;const t=typeof q;return!0===q.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===q.isVector2?"vec2":!0===q.isVector3?"vec3":!0===q.isVector4?"vec4":!0===q.isMatrix3?"mat3":!0===q.isMatrix4?"mat4":!0===q.isColor?"color":q instanceof ArrayBuffer?"ArrayBuffer":null}function Wq(q,...t){const l=q?q.slice(-4):void 0;return 1===t.length&&("vec2"===l?t=[t[0],t[0]]:"vec3"===l?t=[t[0],t[0],t[0]]:"vec4"===l&&(t=[t[0],t[0],t[0],t[0]])),"color"===q?new vq(...t):"vec2"===l?new Oq(...t):"vec3"===l?new Eq(...t):"vec4"===l?new Fq(...t):"mat3"===l?new dq(...t):"mat4"===l?new Mq(...t):"bool"===q?t[0]||!1:"float"===q||"int"===q||"uint"===q?t[0]||0:"string"===q?t[0]||"":"ArrayBuffer"===q?(e=t[0],Uint8Array.from(atob(e),(q=>q.charCodeAt(0))).buffer):null;var e}class Zq{addEventListener(q,t){void 0===this._listeners&&(this._listeners={});const l=this._listeners;void 0===l[q]&&(l[q]=[]),-1===l[q].indexOf(t)&&l[q].push(t)}hasEventListener(q,t){if(void 0===this._listeners)return!1;const l=this._listeners;return void 0!==l[q]&&-1!==l[q].indexOf(t)}removeEventListener(q,t){if(void 0===this._listeners)return;const l=this._listeners[q];if(void 0!==l){const q=l.indexOf(t);-1!==q&&l.splice(q,1)}}dispatchEvent(q){if(void 0===this._listeners)return;const t=this._listeners[q.type];if(void 0!==t){q.target=this;const l=t.slice(0);for(let t=0,e=l.length;t<e;t++)l[t].call(this,q);q.target=null}}}let Hq=0;class Xq extends Zq{static get type(){return"Node"}constructor(q=null){super(),this.nodeType=q,this.updateType=G,this.updateBeforeType=G,this.updateAfterType=G,this.uuid=iq.generateUUID(),this.version=0,this.global=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:Hq++})}set needsUpdate(q){!0===q&&this.version++}get type(){return this.constructor.type}onUpdate(q,t){return this.updateType=t,this.update=q.bind(this.getSelf()),this}onFrameUpdate(q){return this.onUpdate(q,W)}onRenderUpdate(q){return this.onUpdate(q,Z)}onObjectUpdate(q){return this.onUpdate(q,H)}onReference(q){return this.updateReference=q.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:q}of Uq(this))yield q}dispose(){this.dispatchEvent({type:"dispose"})}traverse(q){q(this);for(const t of this.getChildren())t.traverse(q)}getCacheKey(q=!1){return!0!==(q=q||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=Vq(function(q,t=!1){const l=[];!0===q.isNode&&(l.push(q.id),q=q.getSelf());for(const{property:e,childNode:n}of Uq(q))l.push(l,jq(e.slice(0,-4)),n.getCacheKey(t));return jq(l)}(this,q),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(q){const t=this.getNodeType(q);return q.getElementType(t)}getNodeType(q){const t=q.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(q):this.nodeType}getShared(q){const t=this.getHash(q);return q.getNodeFromHash(t)||this}setup(q){const t=q.getNodeProperties(this);let l=0;for(const e of this.getChildren())t["node"+l++]=e;return t.outputNode||null}analyze(q){if(1===q.increaseUsage(this)){const t=q.getNodeProperties(this);for(const l of Object.values(t))l&&!0===l.isNode&&l.build(q)}}generate(q,t){const{outputNode:l}=q.getNodeProperties(this);if(l&&!0===l.isNode)return l.build(q,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(q,t=null){const l=this.getShared(q);if(this!==l)return l.build(q,t);q.addNode(this),q.addChain(this);let e=null;const n=q.getBuildStage();if("setup"===n){this.updateReference(q);const t=q.getNodeProperties(this);if(!0!==t.initialized){t.initialized=!0;const l=this.setup(q),e=l&&!0===l.isNode;for(const n of Object.values(t))n&&!0===n.isNode&&n.build(q);e&&l.build(q),t.outputNode=l}}else if("analyze"===n)this.analyze(q);else if("generate"===n){if(1===this.generate.length){const l=this.getNodeType(q),n=q.getDataFromNode(this);e=n.snippet,void 0===e?(e=this.generate(q)||"",n.snippet=e):void 0!==n.flowCodes&&void 0!==q.context.nodeBlock&&q.addFlowCodeHierarchy(this,q.context.nodeBlock),e=q.format(e,l,t)}else e=this.generate(q,t)||""}return q.removeChain(this),q.addSequentialNode(this),e}getSerializeChildren(){return Uq(this)}serialize(q){const t=this.getSerializeChildren(),l={};for(const{property:e,index:n,childNode:i}of t)void 0!==n?(void 0===l[e]&&(l[e]=Number.isInteger(n)?[]:{}),l[e][n]=i.toJSON(q.meta).uuid):l[e]=i.toJSON(q.meta).uuid;Object.keys(l).length>0&&(q.inputNodes=l)}deserialize(q){if(void 0!==q.inputNodes){const t=q.meta.nodes;for(const l in q.inputNodes)if(Array.isArray(q.inputNodes[l])){const e=[];for(const n of q.inputNodes[l])e.push(t[n]);this[l]=e}else if("object"==typeof q.inputNodes[l]){const e={};for(const n in q.inputNodes[l]){const i=q.inputNodes[l][n];e[n]=t[i]}this[l]=e}else{const e=q.inputNodes[l];this[l]=t[e]}}}toJSON(q){const{uuid:t,type:l}=this,e=void 0===q||"string"==typeof q;e&&(q={textures:{},images:{},nodes:{}});let n=q.nodes[t];function i(q){const t=[];for(const l in q){const e=q[l];delete e.metadata,t.push(e)}return t}if(void 0===n&&(n={uuid:t,type:l,meta:q,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==e&&(q.nodes[n.uuid]=n),this.serialize(n),delete n.meta),e){const t=i(q.textures),l=i(q.images),e=i(q.nodes);t.length>0&&(n.textures=t),l.length>0&&(n.images=l),e.length>0&&(n.nodes=e)}return n}}class Yq extends Xq{static get type(){return"ArrayElementNode"}constructor(q,t){super(),this.node=q,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(q){return this.node.getElementType(q)}generate(q){return`${this.node.build(q)}[ ${this.indexNode.build(q,"uint")} ]`}}class $q extends Xq{static get type(){return"ConvertNode"}constructor(q,t){super(),this.node=q,this.convertTo=t}getNodeType(q){const t=this.node.getNodeType(q);let l=null;for(const e of this.convertTo.split("|"))null!==l&&q.getTypeLength(t)!==q.getTypeLength(e)||(l=e);return l}serialize(q){super.serialize(q),q.convertTo=this.convertTo}deserialize(q){super.deserialize(q),this.convertTo=q.convertTo}generate(q,t){const l=this.node,e=this.getNodeType(q),n=l.build(q,e);return q.format(n,e,t)}}class Kq extends Xq{static get type(){return"TempNode"}constructor(q=null){super(q),this.isTempNode=!0}hasDependencies(q){return q.getDataFromNode(this).usageCount>1}build(q,t){if("generate"===q.getBuildStage()){const l=q.getVectorType(this.getNodeType(q,t)),e=q.getDataFromNode(this);if(void 0!==e.propertyName)return q.format(e.propertyName,l,t);if("void"!==l&&"void"!==t&&this.hasDependencies(q)){const n=super.build(q,l),i=q.getVarFromNode(this,null,l),o=q.getPropertyName(i);return q.addLineFlowCode(`${o} = ${n}`,this),e.snippet=n,e.propertyName=o,q.format(e.propertyName,l,t)}}return super.build(q,t)}}class Qq extends Kq{static get type(){return"JoinNode"}constructor(q=[],t=null){super(t),this.nodes=q}getNodeType(q){return null!==this.nodeType?q.getVectorType(this.nodeType):q.getTypeFromLength(this.nodes.reduce(((t,l)=>t+q.getTypeLength(l.getNodeType(q))),0))}generate(q,t){const l=this.getNodeType(q),e=this.nodes,n=q.getComponentType(l),i=[];for(const s of e){let t=s.build(q);const l=q.getComponentType(s.getNodeType(q));l!==n&&(t=q.format(t,l,n)),i.push(t)}const o=`${q.getType(l)}( ${i.join(", ")} )`;return q.format(o,l,t)}}const Jq=X.join("");class qt extends Xq{static get type(){return"SplitNode"}constructor(q,t="x"){super(),this.node=q,this.components=t,this.isSplitNode=!0}getVectorLength(){let q=this.components.length;for(const t of this.components)q=Math.max(X.indexOf(t)+1,q);return q}getComponentType(q){return q.getComponentType(this.node.getNodeType(q))}getNodeType(q){return q.getTypeFromLength(this.components.length,this.getComponentType(q))}generate(q,t){const l=this.node,e=q.getTypeLength(l.getNodeType(q));let n=null;if(e>1){let i=null;this.getVectorLength()>=e&&(i=q.getTypeFromLength(this.getVectorLength(),this.getComponentType(q)));const o=l.build(q,i);n=this.components.length===e&&this.components===Jq.slice(0,this.components.length)?q.format(o,i,t):q.format(`${o}.${this.components}`,this.getNodeType(q),t)}else n=l.build(q,t);return n}serialize(q){super.serialize(q),q.components=this.components}deserialize(q){super.deserialize(q),this.components=q.components}}class tt extends Kq{static get type(){return"SetNode"}constructor(q,t,l){super(),this.sourceNode=q,this.components=t,this.targetNode=l}getNodeType(q){return this.sourceNode.getNodeType(q)}generate(q){const{sourceNode:t,components:l,targetNode:e}=this,n=this.getNodeType(q),i=q.getComponentType(e.getNodeType(q)),o=q.getTypeFromLength(l.length,i),s=e.build(q,o),a=t.build(q,n),r=q.getTypeLength(n),m=[];for(let h=0;h<r;h++){const q=X[h];q===l[0]?(m.push(s),h+=l.length-1):m.push(a+"."+q)}return`${q.getType(n)}( ${m.join(", ")} )`}}class lt extends Kq{static get type(){return"FlipNode"}constructor(q,t){super(),this.sourceNode=q,this.components=t}getNodeType(q){return this.sourceNode.getNodeType(q)}generate(q){const{components:t,sourceNode:l}=this,e=this.getNodeType(q),n=l.build(q),i=q.getVarFromNode(this),o=q.getPropertyName(i);q.addLineFlowCode(o+" = "+n,this);const s=q.getTypeLength(e),a=[];let r=0;for(let m=0;m<s;m++){const q=X[m];q===t[r]?(a.push("1.0 - "+o+"."+q),r++):a.push(o+"."+q)}return`${q.getType(e)}( ${a.join(", ")} )`}}class et extends Xq{static get type(){return"InputNode"}constructor(q,t=null){super(t),this.isInputNode=!0,this.value=q,this.precision=null}getNodeType(){return null===this.nodeType?Gq(this.value):this.nodeType}getInputType(q){return this.getNodeType(q)}setPrecision(q){return this.precision=q,this}serialize(q){super.serialize(q),q.value=this.value,this.value&&this.value.toArray&&(q.value=this.value.toArray()),q.valueType=Gq(this.value),q.nodeType=this.nodeType,"ArrayBuffer"===q.valueType&&(q.value=function(q){let t="";const l=new Uint8Array(q);for(let e=0;e<l.length;e++)t+=String.fromCharCode(l[e]);return btoa(t)}(q.value)),q.precision=this.precision}deserialize(q){super.deserialize(q),this.nodeType=q.nodeType,this.value=Array.isArray(q.value)?Wq(q.valueType,...q.value):q.value,this.precision=q.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(q.value))}generate(){console.warn("Abstract function.")}}class nt extends et{static get type(){return"ConstNode"}constructor(q,t=null){super(q,t),this.isConstNode=!0}generateConst(q){return q.generateConst(this.getNodeType(q),this.value)}generate(q,t){const l=this.getNodeType(q);return q.format(this.generateConst(q),l,t)}}const it=new Map;function ot(q,t){if(it.has(q))console.warn(`Redefinition of method chaining ${q}`);else{if("function"!=typeof t)throw new Error(`Node element ${q} is not a function`);it.set(q,t)}}const st=q=>q.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),at=q=>st(q).split("").sort().join(""),rt={setup(q,t){const l=t.shift();return q(Mt(l),...t)},get(q,t,l){if("string"==typeof t&&void 0===q[t]){if(!0!==q.isStackNode&&"assign"===t)return(...q)=>(null.assign(l,...q),l);if(it.has(t)){const e=it.get(t);return q.isStackNode?(...q)=>l.add(e(...q)):(...q)=>e(l,...q)}if("self"===t)return q;if(t.endsWith("Assign")&&it.has(t.slice(0,t.length-6))){const e=it.get(t.slice(0,t.length-6));return q.isStackNode?(...q)=>l.assign(q[0],e(...q)):(...q)=>l.assign(e(l,...q))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=st(t),Ct(new qt(l,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=at(t.slice(3).toLowerCase()),l=>Ct(new tt(q,t,l));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=at(t.slice(4).toLowerCase()),()=>Ct(new lt(Ct(q),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),Ct(new qt(q,t));if(!0===/^\d+$/.test(t))return Ct(new Yq(l,new nt(Number(t),"uint")))}return Reflect.get(q,t,l)},set:(q,t,l,e)=>"string"!=typeof t||void 0!==q[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(q,t,l,e):(e[t].assign(l),!0)},mt=new WeakMap,ht=new WeakMap,ct=function(q,t=null){for(const l in q)q[l]=Ct(q[l],t);return q},dt=function(q,t=null){const l=q.length;for(let e=0;e<l;e++)q[e]=Ct(q[e],t);return q},xt=function(q,t=null,l=null,e=null){const n=q=>Ct(null!==e?Object.assign(q,e):q);return null===t?(...t)=>n(new q(...It(t))):null!==l?(l=Ct(l),(...e)=>n(new q(t,...It(e),l))):(...l)=>n(new q(t,...It(l)))};class ut extends Xq{constructor(q,t){super(),this.shaderNode=q,this.inputNodes=t}getNodeType(q){return this.shaderNode.nodeType||this.getOutputNode(q).getNodeType(q)}call(q){const{shaderNode:t,inputNodes:l}=this,e=q.getNodeProperties(t);if(e.onceOutput)return e.onceOutput;let n=null;if(t.layout){let e=ht.get(q.constructor);void 0===e&&(e=new WeakMap,ht.set(q.constructor,e));let i=e.get(t);void 0===i&&(i=Ct(q.buildFunctionNode(t)),e.set(t,i)),null!==q.currentFunctionNode&&q.currentFunctionNode.includes.push(i),n=Ct(i.call(l))}else{const e=t.jsFunc,i=null!==l?e(l,q):e(q);n=Ct(i)}return t.once&&(e.onceOutput=n),n}getOutputNode(q){const t=q.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(q)),t.outputNode}setup(q){return this.getOutputNode(q)}setupOutput(q){return q.addStack(),q.stack.outputNode=this.call(q),q.removeStack()}generate(q,t){return this.getOutputNode(q).build(q,t)}}class pt extends Xq{constructor(q,t){super(t),this.jsFunc=q,this.layout=null,this.global=!0,this.once=!1}setLayout(q){return this.layout=q,this}call(q=null){return Mt(q),Ct(new ut(this,q))}setup(){return this.call()}}const gt=[!1,!0],_t=[0,1,2,3],yt=[-1,-2],ft=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],wt=new Map;for(const ri of gt)wt.set(ri,new nt(ri));const zt=new Map;for(const ri of _t)zt.set(ri,new nt(ri,"uint"));const kt=new Map([...zt].map((q=>new nt(q.value,"int"))));for(const ri of yt)kt.set(ri,new nt(ri,"int"));const bt=new Map([...kt].map((q=>new nt(q.value))));for(const ri of ft)bt.set(ri,new nt(ri));for(const ri of ft)bt.set(-ri,new nt(-ri));const vt={bool:wt,uint:zt,ints:kt,float:bt},Tt=new Map([...wt,...bt]),St=(q,t)=>Tt.has(q)?Tt.get(q):!0===q.isNode?q:new nt(q,t),Et=function(q,t=null){return(...l)=>{if((0===l.length||!["bool","float","int","uint"].includes(q)&&l.every((q=>"object"!=typeof q)))&&(l=[Wq(q,...l)]),1===l.length&&null!==t&&t.has(l[0]))return Ct(t.get(l[0]));if(1===l.length){const t=St(l[0],q);return(q=>{try{return q.getNodeType()}catch(t){return}})(t)===q?Ct(t):Ct(new $q(t,q))}const e=l.map((q=>St(q)));return Ct(new Qq(e,q))}};function Nt(q,t){return new Proxy(new pt(q,t),rt)}const Ct=(q,t=null)=>function(q,t=null){const l=Gq(q);if("node"===l){let t=mt.get(q);return void 0===t&&(t=new Proxy(q,rt),mt.set(q,t),mt.set(t,t)),t}return null===t&&("float"===l||"boolean"===l)||l&&"shader"!==l&&"string"!==l?Ct(St(q,t)):"shader"===l?At(q):q}(q,t),Mt=(q,t=null)=>new ct(q,t),It=(q,t=null)=>new dt(q,t),Lt=(...q)=>new xt(...q),At=(q,t)=>{const l=new Nt(q,t),e=(...q)=>{let t;return Mt(q),t=q[0]&&q[0].isNode?[...q]:q[0],l.call(t)};return e.shaderNode=l,e.setLayout=q=>(l.setLayout(q),e),e.once=()=>(l.once=!0,e),e};ot("toGlobal",(q=>(q.global=!0,q))),ot("append",(function(q){return q}));const Pt=new Et("color"),Dt=new Et("float",vt.float),Bt=new Et("int",vt.ints),Rt=new Et("uint",vt.uint),Ot=new Et("bool",vt.bool),Ft=new Et("vec2"),jt=new Et("ivec2"),Vt=new Et("uvec2"),Ut=new Et("bvec2"),Gt=new Et("vec3"),Wt=new Et("ivec3"),Zt=new Et("uvec3"),Ht=new Et("bvec3"),Xt=new Et("vec4"),Yt=new Et("ivec4"),$t=new Et("uvec4"),Kt=new Et("bvec4"),Qt=new Et("mat2"),Jt=new Et("mat3"),ql=new Et("mat4");ot("toColor",Pt),ot("toFloat",Dt),ot("toInt",Bt),ot("toUint",Rt),ot("toBool",Ot),ot("toVec2",Ft),ot("toIVec2",jt),ot("toUVec2",Vt),ot("toBVec2",Ut),ot("toVec3",Gt),ot("toIVec3",Wt),ot("toUVec3",Zt),ot("toBVec3",Ht),ot("toVec4",Xt),ot("toIVec4",Yt),ot("toUVec4",$t),ot("toBVec4",Kt),ot("toMat2",Qt),ot("toMat3",Jt),ot("toMat4",ql);ot("element",Lt(Yq)),ot("convert",((q,t)=>Ct(new $q(Ct(q),t))));class tl extends Xq{static get type(){return"UniformGroupNode"}constructor(q,t=!1,l=1){super("string"),this.name=q,this.shared=t,this.order=l,this.isUniformGroup=!0}serialize(q){super.serialize(q),q.name=this.name,q.version=this.version,q.shared=this.shared}deserialize(q){super.deserialize(q),this.name=q.name,this.version=q.version,this.shared=q.shared}}const ll=q=>new tl(q),el=((q,t=0)=>new tl(q,!0,t))("render"),nl=ll("object");class il extends et{static get type(){return"UniformNode"}constructor(q,t=null){super(q,t),this.isUniformNode=!0,this.name="",this.groupNode=nl}label(q){return this.name=q,this}setGroup(q){return this.groupNode=q,this}getGroup(){return this.groupNode}getUniformHash(q){return this.getHash(q)}onUpdate(q,t){const l=this.getSelf();return q=q.bind(l),super.onUpdate((t=>{const e=q(t,l);void 0!==e&&(this.value=e)}),t)}generate(q,t){const l=this.getNodeType(q),e=this.getUniformHash(q);let n=q.getNodeFromHash(e);void 0===n&&(q.setHashNode(this,e),n=this);const i=n.getInputType(q),o=q.getUniformFromNode(n,i,q.shaderStage,this.name||q.context.label),s=q.getPropertyName(o);return void 0!==q.context.label&&delete q.context.label,q.format(s,l,t)}}class ol extends Xq{static get type(){return"PropertyNode"}constructor(q,t=null,l=!1){super(q),this.name=t,this.varying=l,this.isPropertyNode=!0}getHash(q){return this.name||super.getHash(q)}isGlobal(){return!0}generate(q){let t;return!0===this.varying?(t=q.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=q.getVarFromNode(this,this.name),q.getPropertyName(t)}}class sl extends Kq{static get type(){return"AssignNode"}constructor(q,t){super(),this.targetNode=q,this.sourceNode=t}hasDependencies(){return!1}getNodeType(q,t){return"void"!==t?this.targetNode.getNodeType(q):"void"}needsSplitAssign(q){const{targetNode:t}=this;if(!1===q.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const l=q.getTypeLength(t.node.getNodeType(q));return X.join("").slice(0,l)!==t.components}return!1}generate(q,t){const{targetNode:l,sourceNode:e}=this,n=this.needsSplitAssign(q),i=l.getNodeType(q),o=l.context({assign:!0}).build(q),s=e.build(q,i),a=e.getNodeType(q),r=q.getDataFromNode(this);let m;if(!0===r.initialized)"void"!==t&&(m=o);else if(n){const e=q.getVarFromNode(this,null,i),n=q.getPropertyName(e);q.addLineFlowCode(`${n} = ${s}`,this);const a=l.node.context({assign:!0}).build(q);for(let t=0;t<l.components.length;t++){const e=l.components[t];q.addLineFlowCode(`${a}.${e} = ${n}[ ${t} ]`,this)}"void"!==t&&(m=o)}else m=`${o} = ${s}`,"void"!==t&&"void"!==a||(q.addLineFlowCode(m,this),"void"!==t&&(m=o));return r.initialized=!0,q.format(m,i,t)}}ot("assign",Lt(sl));class al extends Kq{static get type(){return"FunctionCallNode"}constructor(q=null,t={}){super(),this.functionNode=q,this.parameters=t}setParameters(q){return this.parameters=q,this}getParameters(){return this.parameters}getNodeType(q){return this.functionNode.getNodeType(q)}generate(q){const t=[],l=this.functionNode,e=l.getInputs(q),n=this.parameters,i=(t,l)=>{const e=l.type;let n;return n="pointer"===e?"&"+t.build(q):t.build(q,e),n};if(Array.isArray(n))for(let o=0;o<n.length;o++)t.push(i(n[o],e[o]));else for(const o of e){const q=n[o.name];if(void 0===q)throw new Error(`FunctionCallNode: Input '${o.name}' not found in FunctionNode.`);t.push(i(q,o))}return`${l.build(q,"property")}( ${t.join(", ")} )`}}ot("call",((q,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?It(t):Mt(t[0]),Ct(new al(Ct(q),t)))));class rl extends Kq{static get type(){return"OperatorNode"}constructor(q,t,l,...e){if(super(),e.length>0){let n=new rl(q,t,l);for(let t=0;t<e.length-1;t++)n=new rl(q,n,e[t]);t=n,l=e[e.length-1]}this.op=q,this.aNode=t,this.bNode=l}getNodeType(q,t){const l=this.op,e=this.aNode,n=this.bNode,i=e.getNodeType(q),o=void 0!==n?n.getNodeType(q):null;if("void"===i||"void"===o)return"void";if("%"===l)return i;if("~"===l||"&"===l||"|"===l||"^"===l||">>"===l||"<<"===l)return q.getIntegerType(i);if("!"===l||"=="===l||"&&"===l||"||"===l||"^^"===l)return"bool";if("<"===l||">"===l||"<="===l||">="===l){const l=t?q.getTypeLength(t):Math.max(q.getTypeLength(i),q.getTypeLength(o));return l>1?`bvec${l}`:"bool"}return"float"===i&&q.isMatrix(o)?o:q.isMatrix(i)&&q.isVector(o)?q.getVectorFromMatrix(i):q.isVector(i)&&q.isMatrix(o)?q.getVectorFromMatrix(o):q.getTypeLength(o)>q.getTypeLength(i)?o:i}generate(q,t){const l=this.op,e=this.aNode,n=this.bNode,i=this.getNodeType(q,t);let o=null,s=null;"void"!==i?(o=e.getNodeType(q),s=void 0!==n?n.getNodeType(q):null,"<"===l||">"===l||"<="===l||">="===l||"=="===l?q.isVector(o)?s=o:o!==s&&(o=s="float"):">>"===l||"<<"===l?(o=i,s=q.changeComponentType(s,"uint")):q.isMatrix(o)&&q.isVector(s)?s=q.getVectorFromMatrix(o):o=q.isVector(o)&&q.isMatrix(s)?q.getVectorFromMatrix(s):s=i):o=s=i;const a=e.build(q,o),r=void 0!==n?n.build(q,s):null,m=q.getTypeLength(t),h=q.getFunctionOperator(l);return"void"!==t?"<"===l&&m>1?q.useComparisonMethod?q.format(`${q.getMethod("lessThan",t)}( ${a}, ${r} )`,i,t):q.format(`( ${a} < ${r} )`,i,t):"<="===l&&m>1?q.useComparisonMethod?q.format(`${q.getMethod("lessThanEqual",t)}( ${a}, ${r} )`,i,t):q.format(`( ${a} <= ${r} )`,i,t):">"===l&&m>1?q.useComparisonMethod?q.format(`${q.getMethod("greaterThan",t)}( ${a}, ${r} )`,i,t):q.format(`( ${a} > ${r} )`,i,t):">="===l&&m>1?q.useComparisonMethod?q.format(`${q.getMethod("greaterThanEqual",t)}( ${a}, ${r} )`,i,t):q.format(`( ${a} >= ${r} )`,i,t):"!"===l||"~"===l?q.format(`(${l}${a})`,o,t):h?q.format(`${h}( ${a}, ${r} )`,i,t):q.format(`( ${a} ${l} ${r} )`,i,t):"void"!==o?h?q.format(`${h}( ${a}, ${r} )`,i,t):q.format(`${a} ${l} ${r}`,i,t):void 0}serialize(q){super.serialize(q),q.op=this.op}deserialize(q){super.deserialize(q),this.op=q.op}}const ml=Lt(rl,"+"),hl=Lt(rl,"-"),cl=Lt(rl,"*"),dl=Lt(rl,"/"),xl=Lt(rl,"%"),ul=Lt(rl,"=="),pl=Lt(rl,"!="),gl=Lt(rl,"<"),_l=Lt(rl,">"),yl=Lt(rl,"<="),fl=Lt(rl,">="),wl=Lt(rl,"&&"),zl=Lt(rl,"||"),kl=Lt(rl,"!"),bl=Lt(rl,"^^"),vl=Lt(rl,"&"),Tl=Lt(rl,"~"),Sl=Lt(rl,"|"),El=Lt(rl,"^"),Nl=Lt(rl,"<<"),Cl=Lt(rl,">>");ot("add",ml),ot("sub",hl),ot("mul",cl),ot("div",dl),ot("modInt",xl),ot("equal",ul),ot("notEqual",pl),ot("lessThan",gl),ot("greaterThan",_l),ot("lessThanEqual",yl),ot("greaterThanEqual",fl),ot("and",wl),ot("or",zl),ot("not",kl),ot("xor",bl),ot("bitAnd",vl),ot("bitNot",Tl),ot("bitOr",Sl),ot("bitXor",El),ot("shiftLeft",Nl),ot("shiftRight",Cl);ot("remainder",((...q)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),xl(...q))));class Ml extends Kq{static get type(){return"MathNode"}constructor(q,t,l=null,e=null){super(),this.method=q,this.aNode=t,this.bNode=l,this.cNode=e}getInputType(q){const t=this.aNode.getNodeType(q),l=this.bNode?this.bNode.getNodeType(q):null,e=this.cNode?this.cNode.getNodeType(q):null,n=q.isMatrix(t)?0:q.getTypeLength(t),i=q.isMatrix(l)?0:q.getTypeLength(l),o=q.isMatrix(e)?0:q.getTypeLength(e);return n>i&&n>o?t:i>o?l:o>n?e:t}getNodeType(q){const t=this.method;return t===Ml.LENGTH||t===Ml.DISTANCE||t===Ml.DOT?"float":t===Ml.CROSS?"vec3":t===Ml.ALL?"bool":t===Ml.EQUALS?q.changeComponentType(this.aNode.getNodeType(q),"bool"):t===Ml.MOD?this.aNode.getNodeType(q):this.getInputType(q)}generate(q,t){let l=this.method;const e=this.getNodeType(q),n=this.getInputType(q),i=this.aNode,o=this.bNode,s=this.cNode,a=q.renderer.coordinateSystem;if(l===Ml.TRANSFORM_DIRECTION){let l=i,e=o;q.isMatrix(l.getNodeType(q))?e=Xt(Gt(e),0):l=Xt(Gt(l),0);const n=cl(l,e).xyz;return Wl(n).build(q,t)}if(l===Ml.NEGATE)return q.format("( - "+i.build(q,n)+" )",e,t);if(l===Ml.ONE_MINUS)return hl(1,i).build(q,t);if(l===Ml.RECIPROCAL)return dl(1,i).build(q,t);if(l===Ml.DIFFERENCE)return Jl(hl(i,o)).build(q,t);{const r=[];return l===Ml.CROSS||l===Ml.MOD?r.push(i.build(q,e),o.build(q,e)):a===hq&&l===Ml.STEP?r.push(i.build(q,1===q.getTypeLength(i.getNodeType(q))?"float":n),o.build(q,n)):a===hq&&(l===Ml.MIN||l===Ml.MAX)||l===Ml.MOD?r.push(i.build(q,n),o.build(q,1===q.getTypeLength(o.getNodeType(q))?"float":n)):l===Ml.REFRACT?r.push(i.build(q,n),o.build(q,n),s.build(q,"float")):l===Ml.MIX?r.push(i.build(q,n),o.build(q,n),s.build(q,1===q.getTypeLength(s.getNodeType(q))?"float":n)):(a===cq&&l===Ml.ATAN&&null!==o&&(l="atan2"),r.push(i.build(q,n)),null!==o&&r.push(o.build(q,n)),null!==s&&r.push(s.build(q,n))),q.format(`${q.getMethod(l,e)}( ${r.join(", ")} )`,e,t)}}serialize(q){super.serialize(q),q.method=this.method}deserialize(q){super.deserialize(q),this.method=q.method}}Ml.ALL="all",Ml.ANY="any",Ml.RADIANS="radians",Ml.DEGREES="degrees",Ml.EXP="exp",Ml.EXP2="exp2",Ml.LOG="log",Ml.LOG2="log2",Ml.SQRT="sqrt",Ml.INVERSE_SQRT="inversesqrt",Ml.FLOOR="floor",Ml.CEIL="ceil",Ml.NORMALIZE="normalize",Ml.FRACT="fract",Ml.SIN="sin",Ml.COS="cos",Ml.TAN="tan",Ml.ASIN="asin",Ml.ACOS="acos",Ml.ATAN="atan",Ml.ABS="abs",Ml.SIGN="sign",Ml.LENGTH="length",Ml.NEGATE="negate",Ml.ONE_MINUS="oneMinus",Ml.DFDX="dFdx",Ml.DFDY="dFdy",Ml.ROUND="round",Ml.RECIPROCAL="reciprocal",Ml.TRUNC="trunc",Ml.FWIDTH="fwidth",Ml.TRANSPOSE="transpose",Ml.BITCAST="bitcast",Ml.EQUALS="equals",Ml.MIN="min",Ml.MAX="max",Ml.MOD="mod",Ml.STEP="step",Ml.REFLECT="reflect",Ml.DISTANCE="distance",Ml.DIFFERENCE="difference",Ml.DOT="dot",Ml.CROSS="cross",Ml.POW="pow",Ml.TRANSFORM_DIRECTION="transformDirection",Ml.MIX="mix",Ml.CLAMP="clamp",Ml.REFRACT="refract",Ml.SMOOTHSTEP="smoothstep",Ml.FACEFORWARD="faceforward";const Il=Dt(Math.PI),Ll=Lt(Ml,Ml.ALL),Al=Lt(Ml,Ml.ANY),Pl=Lt(Ml,Ml.RADIANS),Dl=Lt(Ml,Ml.DEGREES),Bl=Lt(Ml,Ml.EXP),Rl=Lt(Ml,Ml.EXP2),Ol=Lt(Ml,Ml.LOG),Fl=Lt(Ml,Ml.LOG2),jl=Lt(Ml,Ml.SQRT),Vl=Lt(Ml,Ml.INVERSE_SQRT),Ul=Lt(Ml,Ml.FLOOR),Gl=Lt(Ml,Ml.CEIL),Wl=Lt(Ml,Ml.NORMALIZE),Zl=Lt(Ml,Ml.FRACT),Hl=Lt(Ml,Ml.SIN),Xl=Lt(Ml,Ml.COS),Yl=Lt(Ml,Ml.TAN),$l=Lt(Ml,Ml.ASIN),Kl=Lt(Ml,Ml.ACOS),Ql=Lt(Ml,Ml.ATAN),Jl=Lt(Ml,Ml.ABS),qe=Lt(Ml,Ml.SIGN),te=Lt(Ml,Ml.LENGTH),le=Lt(Ml,Ml.NEGATE),ee=Lt(Ml,Ml.ONE_MINUS),ne=Lt(Ml,Ml.DFDX),ie=Lt(Ml,Ml.DFDY),oe=Lt(Ml,Ml.ROUND),se=Lt(Ml,Ml.RECIPROCAL),ae=Lt(Ml,Ml.TRUNC),re=Lt(Ml,Ml.FWIDTH),me=Lt(Ml,Ml.TRANSPOSE);Ml.BITCAST;const he=Lt(Ml,Ml.EQUALS),ce=Lt(Ml,Ml.MIN),de=Lt(Ml,Ml.MAX),xe=Lt(Ml,Ml.MOD),ue=Lt(Ml,Ml.STEP),pe=Lt(Ml,Ml.REFLECT),ge=Lt(Ml,Ml.DISTANCE),_e=Lt(Ml,Ml.DIFFERENCE),ye=Lt(Ml,Ml.DOT),fe=Lt(Ml,Ml.CROSS),we=Lt(Ml,Ml.POW),ze=Lt(Ml,Ml.POW,2),ke=Lt(Ml,Ml.POW,3),be=Lt(Ml,Ml.POW,4),ve=Lt(Ml,Ml.TRANSFORM_DIRECTION),Te=Lt(Ml,Ml.MIX),Se=(q,t=0,l=1)=>Ct(new Ml(Ml.CLAMP,Ct(q),Ct(t),Ct(l))),Ee=Lt(Ml,Ml.REFRACT),Ne=Lt(Ml,Ml.SMOOTHSTEP),Ce=Lt(Ml,Ml.FACEFORWARD),Me=At((([q])=>{const t=ye(q.xy,Ft(12.9898,78.233)),l=xe(t,Il);return Zl(Hl(l).mul(43758.5453))}));ot("all",Ll),ot("any",Al),ot("equals",he),ot("radians",Pl),ot("degrees",Dl),ot("exp",Bl),ot("exp2",Rl),ot("log",Ol),ot("log2",Fl),ot("sqrt",jl),ot("inverseSqrt",Vl),ot("floor",Ul),ot("ceil",Gl),ot("normalize",Wl),ot("fract",Zl),ot("sin",Hl),ot("cos",Xl),ot("tan",Yl),ot("asin",$l),ot("acos",Kl),ot("atan",Ql),ot("abs",Jl),ot("sign",qe),ot("length",te),ot("lengthSq",(q=>ye(q,q))),ot("negate",le),ot("oneMinus",ee),ot("dFdx",ne),ot("dFdy",ie),ot("round",oe),ot("reciprocal",se),ot("trunc",ae),ot("fwidth",re),ot("atan2",((q,t)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),Ql(q,t)))),ot("min",ce),ot("max",de),ot("mod",xe),ot("step",ue),ot("reflect",pe),ot("distance",ge),ot("dot",ye),ot("cross",fe),ot("pow",we),ot("pow2",ze),ot("pow3",ke),ot("pow4",be),ot("transformDirection",ve),ot("mix",((q,t,l)=>Te(t,l,q))),ot("clamp",Se),ot("refract",Ee),ot("smoothstep",((q,t,l)=>Ne(t,l,q))),ot("faceForward",Ce),ot("difference",_e),ot("saturate",(q=>Se(q))),ot("cbrt",(q=>cl(qe(q),we(Jl(q),1/3)))),ot("transpose",me),ot("rand",Me);class Ie extends Xq{static get type(){return"ConditionalNode"}constructor(q,t,l=null){super(),this.condNode=q,this.ifNode=t,this.elseNode=l}getNodeType(q){const{ifNode:t,elseNode:l}=q.getNodeProperties(this);if(void 0===t)return this.setup(q),this.getNodeType(q);const e=t.getNodeType(q);if(null!==l){const t=l.getNodeType(q);if(q.getTypeLength(t)>q.getTypeLength(e))return t}return e}setup(q){const t=this.condNode.cache(),l=this.ifNode.cache(),e=this.elseNode?this.elseNode.cache():null,n=q.context.nodeBlock;q.getDataFromNode(l).parentNodeBlock=n,null!==e&&(q.getDataFromNode(e).parentNodeBlock=n);const i=q.getNodeProperties(this);i.condNode=t,i.ifNode=l.context({nodeBlock:l}),i.elseNode=e?e.context({nodeBlock:e}):null}generate(q,t){const l=this.getNodeType(q),e=q.getDataFromNode(this);if(void 0!==e.nodeProperty)return e.nodeProperty;const{condNode:n,ifNode:i,elseNode:o}=q.getNodeProperties(this),s="void"!==t,a=s?((q,t)=>Ct(new ol(q,t)))(l).build(q):"";e.nodeProperty=a;const r=n.build(q,"bool");q.addFlowCode(`\n${q.tab}if ( ${r} ) {\n\n`).addFlowTab();let m=i.build(q,l);if(m&&(m=s?a+" = "+m+";":"return "+m+";"),q.removeFlowTab().addFlowCode(q.tab+"\t"+m+"\n\n"+q.tab+"}"),null!==o){q.addFlowCode(" else {\n\n").addFlowTab();let t=o.build(q,l);t&&(t=s?a+" = "+t+";":"return "+t+";"),q.removeFlowTab().addFlowCode(q.tab+"\t"+t+"\n\n"+q.tab+"}\n\n")}else q.addFlowCode("\n\n");return q.format(a,l,t)}}const Le=Lt(Ie);ot("select",Le);ot("cond",((...q)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Le(...q))));class Ae extends Xq{static get type(){return"ContextNode"}constructor(q,t={}){super(),this.isContextNode=!0,this.node=q,this.value=t}getScope(){return this.node.getScope()}getNodeType(q){return this.node.getNodeType(q)}analyze(q){this.node.build(q)}setup(q){const t=q.getContext();q.setContext({...q.context,...this.value});const l=this.node.build(q);return q.setContext(t),l}generate(q,t){const l=q.getContext();q.setContext({...q.context,...this.value});const e=this.node.build(q,t);return q.setContext(l),e}}const Pe=Lt(Ae);ot("context",Pe),ot("label",((q,t)=>Pe(q,{label:t})));class De extends Xq{static get type(){return"VarNode"}constructor(q,t=null){super(),this.node=q,this.name=t,this.global=!0,this.isVarNode=!0}getHash(q){return this.name||super.getHash(q)}getNodeType(q){return this.node.getNodeType(q)}generate(q){const{node:t,name:l}=this,e=q.getVarFromNode(this,l,q.getVectorType(this.getNodeType(q))),n=q.getPropertyName(e),i=t.build(q,e.type);return q.addLineFlowCode(`${n} = ${i}`,this),n}}const Be=Lt(De);ot("toVar",((...q)=>Be(...q).append()));ot("temp",(q=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Be(q))));class Re extends Xq{static get type(){return"VaryingNode"}constructor(q,t=null){super(),this.node=q,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(q){return this.name||super.getHash(q)}getNodeType(q){return this.node.getNodeType(q)}setupVarying(q){const t=q.getNodeProperties(this);let l=t.varying;if(void 0===l){const e=this.name,n=this.getNodeType(q);t.varying=l=q.getVaryingFromNode(this,e,n),t.node=this.node}return l.needsInterpolation||(l.needsInterpolation="fragment"===q.shaderStage),l}setup(q){this.setupVarying(q)}analyze(q){return this.setupVarying(q),this.node.analyze(q)}generate(q){const t=q.getNodeProperties(this),l=this.setupVarying(q),e="fragment"===q.shaderStage&&!0===t.reassignPosition&&q.context.needsPositionReassign;if(void 0===t.propertyName||e){const n=this.getNodeType(q),i=q.getPropertyName(l,U);q.flowNodeFromShaderStage(U,this.node,n,i),t.propertyName=i,e?t.reassignPosition=!1:void 0===t.reassignPosition&&q.context.isPositionNodeInput&&(t.reassignPosition=!0)}return q.getPropertyName(l)}}const Oe=Lt(Re);ot("varying",Oe),ot("vertexStage",(q=>Oe(q)));const Fe=At((([q])=>{const t=q.mul(.9478672986).add(.0521327014).pow(2.4),l=q.mul(.0773993808),e=q.lessThanEqual(.04045);return Te(t,l,e)})).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),je=At((([q])=>{const t=q.pow(.41666).mul(1.055).sub(.055),l=q.mul(12.92),e=q.lessThanEqual(.0031308);return Te(t,l,e)})).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ve="WorkingColorSpace",Ue="OutputColorSpace";class Ge extends Kq{static get type(){return"ColorSpaceNode"}constructor(q,t,l){super("vec4"),this.colorNode=q,this.source=t,this.target=l}resolveColorSpace(q,t){return t===Ve?_q.workingColorSpace:t===Ue?q.context.outputColorSpace||q.renderer.outputColorSpace:t}setup(q){const{colorNode:t}=this,l=this.resolveColorSpace(q,this.source),e=this.resolveColorSpace(q,this.target);let n=t;return!1!==_q.enabled&&l!==e&&l&&e?(_q.getTransfer(l)===rq&&(n=Xt(Fe(n.rgb),n.a)),_q.getPrimaries(l)!==_q.getPrimaries(e)&&(n=Xt(Jt(_q._getMatrix(new dq,l,e)).mul(n.rgb),n.a)),_q.getTransfer(e)===rq&&(n=Xt(je(n.rgb),n.a)),n):n}}ot("toOutputColorSpace",(q=>Ct(new Ge(Ct(q),Ve,Ue)))),ot("toWorkingColorSpace",(q=>Ct(new Ge(Ct(q),Ue,Ve)))),ot("workingToColorSpace",((q,t)=>Ct(new Ge(Ct(q),Ve,t)))),ot("colorSpaceToWorking",((q,t)=>Ct(new Ge(Ct(q),t,Ve))));class We extends Yq{static get type(){return"ReferenceElementNode"}constructor(q,t){super(q,t),this.referenceNode=q,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(q){const t=super.generate(q),l=this.referenceNode.getNodeType(),e=this.getNodeType();return q.format(t,l,e)}}class Ze extends Xq{static get type(){return"ReferenceBaseNode"}constructor(q,t,l=null,e=null){super(),this.property=q,this.uniformType=t,this.object=l,this.count=e,this.properties=q.split("."),this.reference=l,this.node=null,this.group=null,this.updateType=H}setGroup(q){return this.group=q,this}element(q){return Ct(new We(this,Ct(q)))}setNodeType(q){const t=((q,t)=>{const l=(e=t||q,null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null);var e;return Ct(new il(q,l))})(null,q).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(q){return null===this.node&&(this.updateReference(q),this.updateValue()),this.node.getNodeType(q)}getValueFromReference(q=this.reference){const{properties:t}=this;let l=q[t[0]];for(let e=1;e<t.length;e++)l=l[t[e]];return l}updateReference(q){return this.reference=null!==this.object?this.object:q.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const q=this.getValueFromReference();Array.isArray(q)?this.node.array=q:this.node.value=q}}class He extends Ze{static get type(){return"RendererReferenceNode"}constructor(q,t,l=null){super(q,t,l),this.renderer=l,this.setGroup(el)}updateReference(q){return this.reference=null!==this.renderer?this.renderer:q.renderer,this.reference}}const Xe=(q,t,l=null)=>Ct(new He(q,t,l));class Ye extends Kq{static get type(){return"ToneMappingNode"}constructor(q,t=$e,l=null){super("vec3"),this.toneMapping=q,this.exposureNode=t,this.colorNode=l}customCacheKey(){return Vq(this.toneMapping)}setup(q){const t=this.colorNode||q.context.color,l=this.toneMapping;if(0===l)return t;let e=null;const n=q.renderer.library.getToneMappingFunction(l);return null!==n?e=Xt(n(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",l),e=t),e}}const $e=Xe("toneMappingExposure","float");ot("toneMapping",((q,t,l)=>((q,t,l)=>Ct(new Ye(q,Ct(t),Ct(l))))(t,l,q)));const Ke=new Eq,Qe=new Oq;class Je{constructor(q,t,l=!1){if(Array.isArray(q))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=q,this.itemSize=t,this.count=void 0!==q?q.length/t:0,this.normalized=l,this.usage=mq,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(q){!0===q&&this.version++}setUsage(q){return this.usage=q,this}addUpdateRange(q,t){this.updateRanges.push({start:q,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(q){return this.name=q.name,this.array=new q.array.constructor(q.array),this.itemSize=q.itemSize,this.count=q.count,this.normalized=q.normalized,this.usage=q.usage,this.gpuType=q.gpuType,this}copyAt(q,t,l){q*=this.itemSize,l*=t.itemSize;for(let e=0,n=this.itemSize;e<n;e++)this.array[q+e]=t.array[l+e];return this}copyArray(q){return this.array.set(q),this}applyMatrix3(q){if(2===this.itemSize)for(let t=0,l=this.count;t<l;t++)Qe.fromBufferAttribute(this,t),Qe.applyMatrix3(q),this.setXY(t,Qe.x,Qe.y);else if(3===this.itemSize)for(let t=0,l=this.count;t<l;t++)Ke.fromBufferAttribute(this,t),Ke.applyMatrix3(q),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this}applyMatrix4(q){for(let t=0,l=this.count;t<l;t++)Ke.fromBufferAttribute(this,t),Ke.applyMatrix4(q),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this}applyNormalMatrix(q){for(let t=0,l=this.count;t<l;t++)Ke.fromBufferAttribute(this,t),Ke.applyNormalMatrix(q),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this}transformDirection(q){for(let t=0,l=this.count;t<l;t++)Ke.fromBufferAttribute(this,t),Ke.transformDirection(q),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this}set(q,t=0){return this.array.set(q,t),this}getComponent(q,t){let l=this.array[q*this.itemSize+t];return this.normalized&&(l=eq(l,this.array)),l}setComponent(q,t,l){return this.normalized&&(l=nq(l,this.array)),this.array[q*this.itemSize+t]=l,this}getX(q){let t=this.array[q*this.itemSize];return this.normalized&&(t=eq(t,this.array)),t}setX(q,t){return this.normalized&&(t=nq(t,this.array)),this.array[q*this.itemSize]=t,this}getY(q){let t=this.array[q*this.itemSize+1];return this.normalized&&(t=eq(t,this.array)),t}setY(q,t){return this.normalized&&(t=nq(t,this.array)),this.array[q*this.itemSize+1]=t,this}getZ(q){let t=this.array[q*this.itemSize+2];return this.normalized&&(t=eq(t,this.array)),t}setZ(q,t){return this.normalized&&(t=nq(t,this.array)),this.array[q*this.itemSize+2]=t,this}getW(q){let t=this.array[q*this.itemSize+3];return this.normalized&&(t=eq(t,this.array)),t}setW(q,t){return this.normalized&&(t=nq(t,this.array)),this.array[q*this.itemSize+3]=t,this}setXY(q,t,l){return q*=this.itemSize,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array)),this.array[q+0]=t,this.array[q+1]=l,this}setXYZ(q,t,l,e){return q*=this.itemSize,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array),e=nq(e,this.array)),this.array[q+0]=t,this.array[q+1]=l,this.array[q+2]=e,this}setXYZW(q,t,l,e,n){return q*=this.itemSize,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array),e=nq(e,this.array),n=nq(n,this.array)),this.array[q+0]=t,this.array[q+1]=l,this.array[q+2]=e,this.array[q+3]=n,this}onUpload(q){return this.onUploadCallback=q,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const q={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(q.name=this.name),this.usage!==mq&&(q.usage=this.usage),q}}const qn=new Eq;class tn{constructor(q,t,l,e=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=q,this.itemSize=t,this.offset=l,this.normalized=e}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(q){this.data.needsUpdate=q}applyMatrix4(q){for(let t=0,l=this.data.count;t<l;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix4(q),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyNormalMatrix(q){for(let t=0,l=this.count;t<l;t++)qn.fromBufferAttribute(this,t),qn.applyNormalMatrix(q),this.setXYZ(t,qn.x,qn.y,qn.z);return this}transformDirection(q){for(let t=0,l=this.count;t<l;t++)qn.fromBufferAttribute(this,t),qn.transformDirection(q),this.setXYZ(t,qn.x,qn.y,qn.z);return this}getComponent(q,t){let l=this.array[q*this.data.stride+this.offset+t];return this.normalized&&(l=eq(l,this.array)),l}setComponent(q,t,l){return this.normalized&&(l=nq(l,this.array)),this.data.array[q*this.data.stride+this.offset+t]=l,this}setX(q,t){return this.normalized&&(t=nq(t,this.array)),this.data.array[q*this.data.stride+this.offset]=t,this}setY(q,t){return this.normalized&&(t=nq(t,this.array)),this.data.array[q*this.data.stride+this.offset+1]=t,this}setZ(q,t){return this.normalized&&(t=nq(t,this.array)),this.data.array[q*this.data.stride+this.offset+2]=t,this}setW(q,t){return this.normalized&&(t=nq(t,this.array)),this.data.array[q*this.data.stride+this.offset+3]=t,this}getX(q){let t=this.data.array[q*this.data.stride+this.offset];return this.normalized&&(t=eq(t,this.array)),t}getY(q){let t=this.data.array[q*this.data.stride+this.offset+1];return this.normalized&&(t=eq(t,this.array)),t}getZ(q){let t=this.data.array[q*this.data.stride+this.offset+2];return this.normalized&&(t=eq(t,this.array)),t}getW(q){let t=this.data.array[q*this.data.stride+this.offset+3];return this.normalized&&(t=eq(t,this.array)),t}setXY(q,t,l){return q=q*this.data.stride+this.offset,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array)),this.data.array[q+0]=t,this.data.array[q+1]=l,this}setXYZ(q,t,l,e){return q=q*this.data.stride+this.offset,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array),e=nq(e,this.array)),this.data.array[q+0]=t,this.data.array[q+1]=l,this.data.array[q+2]=e,this}setXYZW(q,t,l,e,n){return q=q*this.data.stride+this.offset,this.normalized&&(t=nq(t,this.array),l=nq(l,this.array),e=nq(e,this.array),n=nq(n,this.array)),this.data.array[q+0]=t,this.data.array[q+1]=l,this.data.array[q+2]=e,this.data.array[q+3]=n,this}clone(q){if(void 0===q){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const q=[];for(let t=0;t<this.count;t++){const l=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)q.push(this.data.array[l+t])}return new Je(new this.array.constructor(q),this.itemSize,this.normalized)}return void 0===q.interleavedBuffers&&(q.interleavedBuffers={}),void 0===q.interleavedBuffers[this.data.uuid]&&(q.interleavedBuffers[this.data.uuid]=this.data.clone(q)),new tn(q.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(q){if(void 0===q){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const q=[];for(let t=0;t<this.count;t++){const l=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)q.push(this.data.array[l+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:q,normalized:this.normalized}}return void 0===q.interleavedBuffers&&(q.interleavedBuffers={}),void 0===q.interleavedBuffers[this.data.uuid]&&(q.interleavedBuffers[this.data.uuid]=this.data.toJSON(q)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ln{constructor(q,t){this.isInterleavedBuffer=!0,this.array=q,this.stride=t,this.count=void 0!==q?q.length/t:0,this.usage=mq,this.updateRanges=[],this.version=0,this.uuid=J()}onUploadCallback(){}set needsUpdate(q){!0===q&&this.version++}setUsage(q){return this.usage=q,this}addUpdateRange(q,t){this.updateRanges.push({start:q,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(q){return this.array=new q.array.constructor(q.array),this.count=q.count,this.stride=q.stride,this.usage=q.usage,this}copyAt(q,t,l){q*=this.stride,l*=t.stride;for(let e=0,n=this.stride;e<n;e++)this.array[q+e]=t.array[l+e];return this}set(q,t=0){return this.array.set(q,t),this}clone(q){void 0===q.arrayBuffers&&(q.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=J()),void 0===q.arrayBuffers[this.array.buffer._uuid]&&(q.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(q.arrayBuffers[this.array.buffer._uuid]),l=new this.constructor(t,this.stride);return l.setUsage(this.usage),l}onUpload(q){return this.onUploadCallback=q,this}toJSON(q){return void 0===q.arrayBuffers&&(q.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=J()),void 0===q.arrayBuffers[this.array.buffer._uuid]&&(q.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}class en extends et{static get type(){return"BufferAttributeNode"}constructor(q,t=null,l=0,e=0){super(q,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=l,this.bufferOffset=e,this.usage=mq,this.instanced=!1,this.attribute=null,this.global=!0,q&&!0===q.isBufferAttribute&&(this.attribute=q,this.usage=q.usage,this.instanced=q.isInstancedBufferAttribute)}getHash(q){if(0===this.bufferStride&&0===this.bufferOffset){let t=q.globalCache.getData(this.value);return void 0===t&&(t={node:this},q.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(q){return null===this.bufferType&&(this.bufferType=q.getTypeFromAttribute(this.attribute)),this.bufferType}setup(q){if(null!==this.attribute)return;const t=this.getNodeType(q),l=this.value,e=q.getTypeLength(t),n=this.bufferStride||e,i=this.bufferOffset,o=!0===l.isInterleavedBuffer?l:new ln(l,n),s=new tn(o,e,i);o.setUsage(this.usage),this.attribute=s,this.attribute.isInstancedBufferAttribute=this.instanced}generate(q){const t=this.getNodeType(q),l=q.getBufferAttributeFromNode(this,t),e=q.getPropertyName(l);let n=null;if("vertex"===q.shaderStage||"compute"===q.shaderStage)this.name=e,n=e;else{n=Oe(this).build(q,t)}return n}getInputType(){return"bufferAttribute"}setUsage(q){return this.usage=q,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=q),this}setInstanced(q){return this.instanced=q,this}}ot("toAttribute",(q=>((q,t=null,l=0,e=0)=>Ct(new en(q,t,l,e)))(q.value)));class nn extends Xq{static get type(){return"ComputeNode"}constructor(q,t,l=[64]){super("void"),this.isComputeNode=!0,this.computeNode=q,this.count=t,this.workgroupSize=l,this.dispatchCount=0,this.version=1,this.name="",this.updateBeforeType=H,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}label(q){return this.name=q,this}updateDispatchCount(){const{count:q,workgroupSize:t}=this;let l=t[0];for(let e=1;e<t.length;e++)l*=t[e];this.dispatchCount=Math.ceil(q/l)}onInit(q){return this.onInitFunction=q,this}updateBefore({renderer:q}){q.compute(this)}generate(q){const{shaderStage:t}=q;if("compute"===t){const t=this.computeNode.build(q,"void");""!==t&&q.addLineFlowCode(t,this)}}}ot("compute",((q,t,l)=>Ct(new nn(Ct(q),t,l))));class on extends Xq{static get type(){return"CacheNode"}constructor(q,t=!0){super(),this.node=q,this.parent=t,this.isCacheNode=!0}getNodeType(q){const t=q.getCache(),l=q.getCacheFromNode(this,this.parent);q.setCache(l);const e=this.node.getNodeType(q);return q.setCache(t),e}build(q,...t){const l=q.getCache(),e=q.getCacheFromNode(this,this.parent);q.setCache(e);const n=this.node.build(q,...t);return q.setCache(l),n}}ot("cache",((q,t)=>Ct(new on(Ct(q),t))));class sn extends Xq{static get type(){return"BypassNode"}constructor(q,t){super(),this.isBypassNode=!0,this.outputNode=q,this.callNode=t}getNodeType(q){return this.outputNode.getNodeType(q)}generate(q){const t=this.callNode.build(q,"void");return""!==t&&q.addLineFlowCode(t,this),this.outputNode.build(q)}}ot("bypass",Lt(sn));class an extends Xq{static get type(){return"RemapNode"}constructor(q,t,l,e=Dt(0),n=Dt(1)){super(),this.node=q,this.inLowNode=t,this.inHighNode=l,this.outLowNode=e,this.outHighNode=n,this.doClamp=!0}setup(){const{node:q,inLowNode:t,inHighNode:l,outLowNode:e,outHighNode:n,doClamp:i}=this;let o=q.sub(t).div(l.sub(t));return!0===i&&(o=o.clamp()),o.mul(n.sub(e)).add(e)}}const rn=Lt(an,null,null,{doClamp:!1}),mn=Lt(an);ot("remap",rn),ot("remapClamp",mn);class hn extends Xq{static get type(){return"ExpressionNode"}constructor(q="",t="void"){super(t),this.snippet=q}generate(q,t){const l=this.getNodeType(q),e=this.snippet;if("void"!==l)return q.format(`( ${e} )`,l,t);q.addLineFlowCode(e,this)}}const cn=Lt(hn);ot("discard",(q=>(q?Le(q,cn("discard")):cn("discard")).append()));class dn extends Kq{static get type(){return"RenderOutputNode"}constructor(q,t,l){super("vec4"),this.colorNode=q,this.toneMapping=t,this.outputColorSpace=l,this.isRenderOutputNode=!0}setup({context:q}){let t=this.colorNode||q.color;const l=(null!==this.toneMapping?this.toneMapping:q.toneMapping)||0,e=(null!==this.outputColorSpace?this.outputColorSpace:q.outputColorSpace)||"";return 0!==l&&(t=t.toneMapping(l)),""!==e&&e!==_q.workingColorSpace&&(t=t.workingToColorSpace(e)),t}}ot("renderOutput",((q,t=null,l=null)=>Ct(new dn(Ct(q),t,l))));class xn{constructor(q){this.elements=[],this.connectors=[],this.mode="VIEW",this.helpers=!1,this.container=q,this.initScene(),this.initCamera(),this.setHelpers(),this.initRenderer(),this.initLighting(),this.initControls(),this.addEventListeners(),this.animate(),console.log("THREE",e),console.log(this)}initScene(){this.scene=new e.Scene,this.scene.background=new e.Color(15790320)}initCamera(){const q=window.innerWidth/window.innerHeight;this.camera=new e.PerspectiveCamera(75,q,.1,2e3),this.camera.position.set(0,0,500),this.camera.updateProjectionMatrix()}setHelpers(){this.axesHelper=new e.AxesHelper(100),this.cameraHelper=new e.CameraHelper(this.camera);this.gridHelper=new e.GridHelper(400,50),this.cameraDirection=new e.Vector3,this.camPositionSpan=document.querySelector("#position"),this.camLookAtSpan=document.querySelector("#lookingAt"),this.helpers=!1}showHelpers(){this.helpers||(this.scene.add(this.axesHelper),this.scene.add(this.cameraHelper),this.scene.add(this.gridHelper),this.helpers=!0)}hideHelpers(){this.helpers&&(this.scene.remove(this.axesHelper),this.scene.remove(this.cameraHelper),this.scene.remove(this.gridHelper),this.helpers=!1)}initRenderer(){this.renderer=new e.WebGLRenderer({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(this.renderer.domElement),console.log("initRenderer",this.container,this.renderer.domElement)}initLighting(){const q=new e.PointLight(16777215,4,0,0);let t=Math.abs(-836);q.position.set(1/3*580-290,-836,t),this.scene.add(q),this.spotLight=new e.PointLight(16777215,4,0,0),this.spotLightPosX=0,this.spotLightPosY=-509,this.spotLightPosZ=70,this.scene.add(this.spotLight),this.spotLightDirection=1}initControls(){this.controls=new V(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.1,this.controls.screenSpacePanning=!0,this.controls.zoomToCursor=!0,this.controls.saveState()}addEventListeners(){window.addEventListener("resize",this.onWindowResize.bind(this),!1)}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}animate(){this.tween&&this.tween.update(),requestAnimationFrame(this.animate.bind(this)),this.controls.update(),this.renderer.render(this.scene,this.camera),this.spotLightPosX>500&&(this.spotLightDirection=-1,this.spotLightPosX=500),this.spotLightPosX<-500&&(this.spotLightDirection=1,this.spotLightPosX=-500),this.spotLightPosX+=10*this.spotLightDirection,this.spotLight.position.set(this.spotLightPosX,this.spotLightPosY,this.spotLightPosZ)}reset(){this.hideHelpers(),this.controls.reset(),this.setMode("VIEW"),this.fitScreen()}arrange(){if(0===this.scene.children.length)return void console.warn("Scene is empty. Cannot calculate center.");const q=(new e.Box3).setFromObject(this.scene).getCenter(new e.Vector3),t=new e.Vector3(-q.x,-q.y,-q.z);this.scene.children.forEach((q=>{q instanceof e.Object3D&&q.position.add(t)}))}fitScreen(){const q=(new e.Box3).setFromObject(this.scene).getSize(new e.Vector3);console.log("fitScreen() -> size:",q);const t=Math.max(q.x,q.y,q.z),l=this.camera.fov*(Math.PI/180),n=Math.abs(t/2/Math.tan(l/2));this.camera.position.set(0,0,n),this.camera.lookAt(new e.Vector3(0,0,0)),this.camera.updateProjectionMatrix(),this.controls.saveState(),this.initialCameraPosition=this.camera.position.clone(),this.initialTarget=this.controls.target.clone()}center(){if(!this.initialCameraPosition||!this.initialTarget)return void console.warn("Initial camera position or target is not defined.");const q={cameraPositionX:this.camera.position.x,cameraPositionY:this.camera.position.y,cameraPositionZ:this.camera.position.z,controlsTargetX:this.controls.target.x,controlsTargetY:this.controls.target.y,controlsTargetZ:this.controls.target.z},t={cameraPositionX:this.initialCameraPosition.x,cameraPositionY:this.initialCameraPosition.y,cameraPositionZ:this.initialCameraPosition.z,controlsTargetX:this.initialTarget.x,controlsTargetY:this.initialTarget.y,controlsTargetZ:this.initialTarget.z},l=this.camera,e=this.controls;this.tween=new m(q).to(t,1200).easing(n.Quartic.Out).onUpdate((function(){l.position.set(q.cameraPositionX,q.cameraPositionY,q.cameraPositionZ),e.target.set(q.controlsTargetX,q.controlsTargetY,q.controlsTargetZ)})).onComplete((function(){})).start()}rotate(q){if(!this.initialCameraPosition||!this.initialTarget)return void console.warn("Initial camera position or target is not defined.");const t=Math.sqrt(this.initialCameraPosition.y*this.initialCameraPosition.y+this.initialCameraPosition.z*this.initialCameraPosition.z),l={cameraPositionX:this.camera.position.x,cameraPositionY:this.camera.position.y,cameraPositionZ:this.camera.position.z,controlsTargetX:this.controls.target.x,controlsTargetY:this.controls.target.y,controlsTargetZ:this.controls.target.z},i=e.MathUtils.degToRad(q),o={cameraPositionX:this.initialCameraPosition.x,cameraPositionY:t*Math.sin(i),cameraPositionZ:t*Math.cos(i),controlsTargetX:this.initialTarget.x,controlsTargetY:this.initialTarget.y,controlsTargetZ:this.initialTarget.z};console.log("rotate() -> from:",l),console.log("rotate() -> to:",o);const s=this.camera,a=this.controls;this.tween=new m(l).to(o,1200).easing(n.Quartic.Out).onUpdate((function(){s.position.set(l.cameraPositionX,l.cameraPositionY,l.cameraPositionZ),a.target.set(l.controlsTargetX,l.controlsTargetY,l.controlsTargetZ)})).start()}removeValueBars(){for(let q=this.elements.length-1;q>=0;q--){const t=this.elements[q];"ValueBarShape"===t.type&&(t.parent&&t.parent.remove(t),this.scene.remove(t),this.elements.splice(q,1))}}addValueBars(){const q=this.elements.filter((q=>q.parameters&&void 0!==q.parameters.value));if(0===q.length)throw new Error("No elements with `parameters.value` found.");const t=Math.max(...q.map((q=>q.parameters.value))),l=t-0;q.forEach(((q,t)=>{const n=(q.parameters.value-0)/l,i=new e.Color(`hsl(${(120*n).toString(10)}, 100%, 50%)`);q.addValueBar(100*n,i)}))}setMode(q){switch(this.removeValueBars(),this.mode=q,q){case"EDIT":case"VIEW":this.rotate(0);break;case"ANALYZE":this.rotate(-65),this.addValueBars();break;default:console.warn(`Unknown mode: ${q}`)}}addElement(q,t){return this.elements.push(q),this.scene.add(q),t&&q.position.set(t.x,t.y,0),q.setDiagram(this),q}removeElement(q){const t=this.elements.find((t=>t.id===q));t&&(this.scene.remove(t),this.elements=this.elements.filter((t=>t.id!==q)))}getElementById(q){return this.elements.find((t=>t.elementId===q))}getElements(){return this.elements}addConnector(q){return this.connectors.push(q),this.scene.add(q),q.setDiagram(this),q}clear(){this.elements=[],this.connectors=[],this.scene.children=this.scene.children.filter((q=>q instanceof e.AmbientLight))}toJSON(){return JSON.stringify(this.elements)}fromJSON(q){this.elements=JSON.parse(q)}export(){const q=JSON.stringify(this.scene.toJSON()),t=new Blob([q],{type:"application/json"}),l=URL.createObjectURL(t),e=document.createElement("a");e.href=l,e.download="diagram.json",e.click(),URL.revokeObjectURL(l)}import(q){console.error("Import method should be implemented by subclasses.")}}const un=48,pn={steps:2,depth:.6,bevelEnabled:!0,bevelThickness:.2,bevelSize:.4,bevelOffset:0,bevelSegments:4},gn=26265,_n=26265;class yn{constructor(q,t){this.geometry=q,this.material=t,this.width=this.getSize().x,this.height=this.getSize().y}getSize(){var q=new e.Vector3;return this.geometry.computeBoundingBox(),this.geometry.boundingBox.getSize(q),q}}class fn extends e.MeshLambertMaterial{constructor(q){super({vertexColors:!1,color:q,side:e.DoubleSide,emissive:new e.Color(q),emissiveIntensity:.1})}}class wn extends yn{constructor(){super(new e.BoxGeometry(1,1,1),new fn(255))}}class zn extends t.Loader{constructor(q){super(q)}load(q,l,e,n){const i=this,o=new t.FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(q,(function(q){const t=i.parse(JSON.parse(q));l&&l(t)}),e,n)}parse(q){return new kn(q)}}class kn{constructor(q){this.isFont=!0,this.type="Font",this.data=q}generateShapes(q,t=100){const l=[],e=function(q,t,l){const e=Array.from(q),n=t/l.resolution,i=(l.boundingBox.yMax-l.boundingBox.yMin+l.underlineThickness)*n,o=[];let s=0,a=0;for(let r=0;r<e.length;r++){const q=e[r];if("\n"===q)s=0,a-=i;else{const t=bn(q,n,s,a,l);s+=t.offsetX,o.push(t.path)}}return o}(q,t,this.data);for(let n=0,i=e.length;n<i;n++)l.push(...e[n].toShapes());return l}}function bn(q,l,e,n,i){const o=i.glyphs[q]||i.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+q+'" does not exists in font family '+i.familyName+".");const s=new t.ShapePath;let a,r,m,h,c,d,x,u;if(o.o){const q=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let t=0,i=q.length;t<i;){switch(q[t++]){case"m":a=q[t++]*l+e,r=q[t++]*l+n,s.moveTo(a,r);break;case"l":a=q[t++]*l+e,r=q[t++]*l+n,s.lineTo(a,r);break;case"q":m=q[t++]*l+e,h=q[t++]*l+n,c=q[t++]*l+e,d=q[t++]*l+n,s.quadraticCurveTo(c,d,m,h);break;case"b":m=q[t++]*l+e,h=q[t++]*l+n,c=q[t++]*l+e,d=q[t++]*l+n,x=q[t++]*l+e,u=q[t++]*l+n,s.bezierCurveTo(c,d,x,u,m,h)}}}return{offsetX:o.ha*l,path:s}}class vn extends t.ExtrudeGeometry{constructor(q,t={}){const l=t.font;if(void 0===l)super();else{const e=l.generateShapes(q,t.size);void 0===t.depth&&void 0!==t.height&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),t.depth=void 0!==t.depth?t.depth:void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(e,t)}this.type="TextGeometry"}}const Tn={glyphs:JSON.parse('{"0":{"ha":781,"x_min":78,"x_max":702,"o":"m 702 572 l 702 422 q 680 217 702 300 q 618 83 659 134 q 520 9 577 32 q 391 -14 463 -14 q 286 1 334 -14 q 199 46 237 15 q 134 129 161 78 q 92 252 106 180 q 78 422 78 325 l 78 572 q 100 776 78 694 q 163 908 122 858 q 261 979 203 958 q 389 1001 318 1001 q 495 987 447 1001 q 582 943 544 973 q 647 863 620 913 q 688 741 673 813 q 702 572 702 669 m 576 401 l 576 593 q 568 710 576 660 q 545 797 560 761 q 508 855 530 833 q 455 888 485 878 q 389 899 426 899 q 310 882 345 899 q 252 829 275 865 q 216 735 229 793 q 204 593 204 677 l 204 401 q 212 284 204 335 q 235 196 220 233 q 273 136 251 159 q 325 101 296 112 q 391 90 355 90 q 471 107 437 90 q 529 162 506 125 q 564 259 553 200 q 576 401 576 319 z "},"1":{"ha":781,"x_min":116,"x_max":494,"o":"m 494 993 l 494 0 l 369 0 l 369 836 l 116 744 l 116 857 l 475 993 l 494 993 z "},"2":{"ha":781,"x_min":64,"x_max":729,"o":"m 729 103 l 729 0 l 83 0 l 83 90 l 406 450 q 499 563 466 517 q 545 647 532 610 q 558 722 558 684 q 538 811 558 771 q 479 874 518 850 q 386 898 441 898 q 276 872 320 898 q 211 802 233 847 q 189 697 189 756 l 64 697 q 100 850 64 781 q 209 960 137 919 q 386 1001 281 1001 q 546 968 479 1001 q 648 876 612 935 q 684 737 684 817 q 669 649 684 694 q 629 561 654 605 q 570 474 604 517 q 498 390 536 431 l 234 103 l 729 103 z "},"3":{"ha":781,"x_min":64,"x_max":690,"o":"m 265 555 l 355 555 q 464 577 420 555 q 528 638 507 600 q 549 724 549 676 q 530 820 549 781 q 473 878 511 859 q 377 898 435 898 q 284 877 324 898 q 221 819 243 857 q 198 729 198 781 l 73 729 q 111 866 73 804 q 217 964 149 928 q 377 1001 286 1001 q 534 969 467 1001 q 638 876 601 938 q 675 722 675 814 q 658 642 675 684 q 605 563 641 600 q 511 503 568 526 q 372 479 453 479 l 265 479 l 265 555 m 265 452 l 265 528 l 372 528 q 528 505 467 528 q 626 446 590 483 q 676 364 661 408 q 690 275 690 319 q 667 153 690 206 q 601 62 644 99 q 502 5 559 24 q 378 -14 445 -14 q 257 5 313 -14 q 157 58 200 23 q 89 144 113 93 q 64 261 64 195 l 190 261 q 213 171 190 210 q 278 111 235 132 q 378 90 320 90 q 477 110 435 90 q 542 170 519 130 q 564 273 564 211 q 538 374 564 334 q 466 433 513 414 q 355 452 418 452 l 265 452 z "},"4":{"ha":781,"x_min":36,"x_max":749,"o":"m 749 332 l 749 229 l 36 229 l 36 303 l 478 987 l 581 987 l 471 789 l 178 332 l 749 332 m 612 987 l 612 0 l 486 0 l 486 987 l 612 987 z "},"5":{"ha":781,"x_min":104,"x_max":726,"o":"m 241 470 l 140 496 l 190 987 l 696 987 l 696 871 l 296 871 l 267 603 q 335 632 294 618 q 431 646 377 646 q 554 622 500 646 q 647 555 608 599 q 705 451 685 512 q 726 315 726 390 q 706 184 726 243 q 648 80 687 124 q 551 11 610 35 q 413 -14 492 -14 q 300 3 353 -14 q 205 54 247 20 q 137 139 163 88 q 104 260 111 191 l 224 260 q 256 166 232 204 q 320 109 281 128 q 413 90 360 90 q 492 105 458 90 q 551 150 527 121 q 587 220 574 179 q 600 313 600 262 q 587 400 600 360 q 548 470 574 440 q 486 516 523 500 q 402 533 450 533 q 307 516 339 533 q 241 470 275 499 z "},"6":{"ha":781,"x_min":90,"x_max":714,"o":"m 564 989 l 574 989 l 574 882 l 564 882 q 397 850 464 882 q 290 764 330 818 q 234 643 251 710 q 216 507 216 576 l 216 361 q 232 245 216 296 q 275 160 248 195 q 336 108 302 125 q 408 90 370 90 q 485 107 451 90 q 542 154 519 123 q 578 225 566 184 q 590 316 590 267 q 579 401 590 360 q 546 474 568 442 q 490 525 524 507 q 410 544 456 544 q 313 518 358 544 q 239 452 268 493 q 206 363 210 411 l 140 363 q 175 493 149 439 q 240 582 201 547 q 328 632 279 616 q 431 648 376 648 q 558 620 505 648 q 646 546 612 592 q 697 441 681 499 q 714 322 714 383 q 694 191 714 252 q 636 84 675 130 q 540 12 597 38 q 408 -14 483 -14 q 268 19 328 -14 q 169 107 208 52 q 110 229 130 162 q 90 366 90 296 l 90 425 q 111 629 90 529 q 184 811 132 730 q 328 941 236 892 q 564 989 420 989 z "},"7":{"ha":781,"x_min":53,"x_max":720,"o":"m 720 987 l 720 917 l 311 0 l 179 0 l 587 884 l 53 884 l 53 987 l 720 987 z "},"8":{"ha":781,"x_min":77,"x_max":705,"o":"m 705 267 q 663 114 705 177 q 550 19 621 52 q 391 -14 479 -14 q 231 19 302 -14 q 118 114 159 52 q 77 267 77 177 q 99 375 77 326 q 164 461 122 425 q 263 518 205 498 q 389 538 320 538 q 551 503 480 538 q 664 407 623 468 q 705 267 705 346 m 578 270 q 555 367 578 325 q 488 433 531 410 q 389 457 446 457 q 290 433 332 457 q 225 367 248 410 q 202 270 202 325 q 225 173 202 213 q 290 111 248 132 q 391 90 332 90 q 491 111 449 90 q 556 173 533 132 q 578 270 578 213 m 682 730 q 644 601 682 659 q 540 510 606 543 q 391 477 474 477 q 240 510 306 477 q 136 601 174 543 q 99 730 99 659 q 137 877 99 817 q 240 969 174 937 q 390 1001 306 1001 q 541 969 475 1001 q 644 877 606 937 q 682 730 682 817 m 556 728 q 535 816 556 778 q 477 876 514 854 q 390 898 439 898 q 303 877 340 898 q 246 819 267 857 q 225 728 225 781 q 246 640 225 677 q 304 581 267 602 q 391 559 341 559 q 477 581 440 559 q 535 640 514 602 q 556 728 556 677 z "},"9":{"ha":781,"x_min":68,"x_max":689,"o":"m 207 105 l 220 105 q 396 136 328 105 q 500 218 464 166 q 551 334 537 269 q 564 467 564 399 l 564 618 q 549 738 564 686 q 507 825 534 790 q 446 879 480 861 q 374 897 412 897 q 297 880 331 897 q 239 831 262 863 q 203 758 216 800 q 191 667 191 716 q 202 581 191 623 q 235 507 213 540 q 291 454 258 473 q 370 435 325 435 q 449 451 412 435 q 515 497 486 468 q 561 562 544 526 q 581 639 578 599 l 641 639 q 619 528 641 583 q 557 429 597 473 q 465 357 518 384 q 350 330 412 330 q 223 359 277 330 q 135 435 170 387 q 84 541 101 482 q 68 660 68 600 q 87 792 68 730 q 146 901 107 854 q 242 975 184 948 q 374 1001 299 1001 q 519 967 459 1001 q 616 876 578 933 q 671 748 654 819 q 689 602 689 677 l 689 556 q 679 400 689 479 q 642 250 669 321 q 562 121 614 178 q 426 32 510 64 q 220 -1 342 -1 l 207 -1 l 207 105 z "},"\\u0000":{"ha":0,"x_min":0,"x_max":0,"o":""},"\\u0002":{"ha":0,"x_min":0,"x_max":0,"o":""},"\\r":{"ha":345,"x_min":0,"x_max":0,"o":""}," ":{"ha":345,"x_min":0,"x_max":0,"o":""},"!":{"ha":358,"x_min":109,"x_max":258,"o":"m 245 987 l 236 279 l 123 279 l 113 987 l 245 987 m 109 63 q 128 115 109 94 q 183 136 146 136 q 238 115 219 136 q 258 63 258 94 q 238 13 258 34 q 183 -8 219 -8 q 128 13 146 -8 q 109 63 109 34 z "},"\\"":{"ha":445,"x_min":93,"x_max":372,"o":"m 189 1042 l 189 949 l 168 707 l 93 707 l 93 943 l 93 1042 l 189 1042 m 372 1042 l 372 949 l 351 707 l 276 707 l 276 948 l 276 1042 l 372 1042 z "},"#":{"ha":855,"x_min":81,"x_max":838,"o":"m 189 0 l 381 987 l 479 987 l 286 0 l 189 0 m 465 0 l 658 987 l 755 987 l 562 0 l 465 0 m 838 611 l 132 611 l 132 705 l 838 705 l 838 611 m 787 278 l 81 278 l 81 372 l 787 372 l 787 278 z "},"$":{"ha":781,"x_min":75,"x_max":707,"o":"m 457 1147 l 457 941 l 355 941 l 355 1147 l 457 1147 m 445 40 l 445 -141 l 344 -141 l 344 40 l 445 40 m 581 254 q 562 328 581 295 q 502 387 544 360 q 389 437 460 414 q 242 502 304 464 q 146 596 180 540 q 113 732 113 652 q 149 876 113 816 q 250 969 184 937 q 405 1002 316 1002 q 528 981 474 1002 q 620 920 583 960 q 678 820 658 879 q 698 684 698 761 l 573 684 q 562 767 573 729 q 530 833 551 805 q 477 877 508 861 q 405 892 446 892 q 311 872 348 892 q 256 817 274 852 q 239 734 239 781 q 256 659 239 691 q 316 600 274 626 q 433 549 359 574 q 582 483 521 521 q 675 391 643 446 q 707 256 707 336 q 667 108 707 168 q 557 17 628 48 q 390 -14 486 -14 q 276 1 332 -14 q 174 53 220 17 q 102 147 129 88 q 75 291 75 205 l 201 291 q 217 196 201 233 q 262 136 234 158 q 323 105 290 114 q 390 96 357 96 q 493 115 451 96 q 558 170 536 134 q 581 254 581 206 z "},"%":{"ha":1017,"x_min":71,"x_max":957,"o":"m 71 745 l 71 798 q 96 900 71 854 q 165 974 120 946 q 273 1002 211 1002 q 382 974 337 1002 q 452 900 427 946 q 476 798 476 854 l 476 745 q 452 644 476 690 q 383 570 428 598 q 275 543 338 543 q 166 570 212 543 q 96 644 120 598 q 71 745 71 690 m 165 798 l 165 745 q 177 686 165 714 q 214 641 189 659 q 275 624 238 624 q 335 641 311 624 q 370 686 359 659 q 382 745 382 714 l 382 798 q 370 858 382 829 q 334 903 358 886 q 273 920 310 920 q 213 903 237 920 q 177 858 189 886 q 165 798 165 829 m 552 189 l 552 242 q 576 344 552 298 q 646 418 601 390 q 754 446 692 446 q 863 418 818 446 q 932 344 908 390 q 957 242 957 298 l 957 189 q 933 87 957 134 q 864 14 909 41 q 755 -14 819 -14 q 647 14 692 -14 q 577 87 602 41 q 552 189 552 134 m 646 242 l 646 189 q 658 130 646 158 q 694 84 670 102 q 755 67 719 67 q 816 84 792 67 q 852 130 840 102 q 863 189 863 157 l 863 242 q 851 302 863 274 q 815 347 840 330 q 754 364 791 364 q 694 347 718 364 q 658 302 670 330 q 646 242 646 274 m 785 847 l 303 75 l 233 120 l 715 892 l 785 847 z "},"&":{"ha":864,"x_min":69,"x_max":859,"o":"m 278 548 l 426 653 q 492 712 469 682 q 515 793 515 741 q 484 866 515 833 q 396 899 453 899 q 330 880 357 899 q 289 832 302 862 q 275 766 275 802 q 290 703 275 735 q 332 635 305 670 q 392 560 358 600 l 859 0 l 709 0 l 326 458 q 235 568 275 518 q 172 665 195 618 q 149 762 149 711 q 180 892 149 839 q 267 973 211 945 q 397 1001 322 1001 q 522 972 469 1001 q 603 896 574 943 q 631 793 631 849 q 614 708 631 745 q 567 639 597 670 q 497 578 537 608 l 301 432 q 230 363 252 396 q 201 306 208 331 q 195 266 195 281 q 216 178 195 218 q 280 114 237 138 q 388 90 323 90 q 499 116 445 90 q 595 190 553 142 q 664 306 638 239 q 689 456 689 374 l 802 456 q 789 329 802 389 q 749 218 776 269 q 681 125 722 167 q 671 111 675 119 q 662 96 668 102 q 537 14 611 41 q 388 -14 463 -14 q 218 22 290 -14 q 108 121 146 58 q 69 266 69 184 q 96 376 69 328 q 170 465 123 423 q 278 548 217 506 z "},"\'":{"ha":243,"x_min":71,"x_max":172,"o":"m 172 1042 l 172 967 l 158 718 l 71 718 l 71 956 l 71 1042 l 172 1042 z "},"(":{"ha":475,"x_min":91,"x_max":449,"o":"m 91 395 l 91 401 q 124 669 91 549 q 209 879 157 789 q 317 1028 260 969 q 422 1114 374 1088 l 449 1031 q 368 947 409 1001 q 293 816 327 894 q 237 635 258 738 q 216 403 216 532 l 216 393 q 237 161 216 264 q 293 -21 258 58 q 368 -155 327 -100 q 449 -243 409 -210 l 422 -319 q 317 -233 374 -292 q 209 -84 260 -174 q 124 126 157 6 q 91 395 91 246 z "},")":{"ha":484,"x_min":26,"x_max":385,"o":"m 385 401 l 385 395 q 351 126 385 246 q 267 -84 318 6 q 158 -233 215 -174 q 53 -319 101 -292 l 26 -243 q 107 -158 66 -212 q 182 -23 148 -103 q 238 160 217 56 q 259 393 259 264 l 259 403 q 237 636 259 532 q 179 819 214 740 q 103 953 143 899 q 26 1038 62 1008 l 53 1114 q 158 1028 101 1088 q 267 879 215 969 q 351 669 318 789 q 385 401 385 549 z "},"*":{"ha":598,"x_min":19,"x_max":579,"o":"m 87 480 l 224 667 l 19 728 l 51 830 l 256 755 l 250 988 l 353 988 l 346 751 l 548 826 l 579 722 l 371 661 l 505 477 l 420 414 l 295 609 l 172 418 l 87 480 z "},"+":{"ha":788,"x_min":53,"x_max":730,"o":"m 730 530 l 730 412 l 53 412 l 53 530 l 730 530 m 454 818 l 454 99 l 329 99 l 329 818 l 454 818 z "},",":{"ha":273,"x_min":20,"x_max":210,"o":"m 210 149 l 210 48 q 178 -82 210 -14 q 91 -197 147 -151 l 20 -148 q 56 -87 41 -118 q 79 -23 71 -56 q 87 46 87 9 l 87 149 l 210 149 z "},"-":{"ha":384,"x_min":26,"x_max":357,"o":"m 357 471 l 357 368 l 26 368 l 26 471 l 357 471 z "},".":{"ha":366,"x_min":98,"x_max":254,"o":"m 98 66 q 118 120 98 98 q 176 142 138 142 q 234 120 214 142 q 254 66 254 98 q 234 14 254 35 q 176 -8 214 -8 q 118 14 138 -8 q 98 66 98 35 z "},"/":{"ha":573,"x_min":13,"x_max":532,"o":"m 532 987 l 121 -85 l 13 -85 l 425 987 l 532 987 z "},":":{"ha":336,"x_min":90,"x_max":247,"o":"m 90 66 q 110 120 90 98 q 168 142 130 142 q 226 120 206 142 q 246 66 246 98 q 226 14 246 35 q 168 -8 206 -8 q 110 14 130 -8 q 90 66 90 35 m 91 665 q 111 719 91 697 q 169 741 131 741 q 227 719 207 741 q 247 665 247 697 q 227 612 247 634 q 169 591 207 591 q 111 612 131 591 q 91 665 91 634 z "},";":{"ha":294,"x_min":28,"x_max":231,"o":"m 75 665 q 95 719 75 697 q 153 741 115 741 q 211 719 191 741 q 231 665 231 697 q 211 612 231 634 q 153 591 191 591 q 95 612 115 591 q 75 665 75 634 m 218 149 l 218 48 q 186 -82 218 -14 q 99 -197 155 -151 l 28 -148 q 64 -87 50 -118 q 87 -23 79 -56 q 95 46 95 9 l 95 149 l 218 149 z "},"<":{"ha":706,"x_min":49,"x_max":604,"o":"m 135 456 l 604 266 l 604 133 l 49 390 l 49 468 l 135 456 m 604 612 l 136 419 l 49 410 l 49 488 l 604 745 l 604 612 z "},"=":{"ha":762,"x_min":103,"x_max":669,"o":"m 669 661 l 669 552 l 103 552 l 103 661 l 669 661 m 669 380 l 669 271 l 103 271 l 103 380 l 669 380 z "},">":{"ha":726,"x_min":92,"x_max":671,"o":"m 574 429 l 92 616 l 92 746 l 671 490 l 671 410 l 574 429 m 92 263 l 575 455 l 671 469 l 671 391 l 92 134 l 92 263 z "},"?":{"ha":656,"x_min":51,"x_max":602,"o":"m 368 278 l 242 278 q 254 385 243 343 q 291 461 265 427 q 359 540 317 496 q 417 600 391 572 q 459 661 443 628 q 475 740 475 694 q 459 821 475 787 q 410 873 442 854 q 330 891 378 891 q 256 877 291 891 q 199 833 220 863 q 176 756 177 804 l 51 756 q 89 888 52 833 q 189 972 126 943 q 330 1001 252 1001 q 477 970 416 1001 q 570 881 538 939 q 602 743 602 823 q 577 631 602 682 q 513 535 552 580 q 431 450 475 490 q 381 372 394 415 q 368 278 368 328 m 237 63 q 256 115 237 94 q 311 136 275 136 q 366 115 347 136 q 385 63 385 94 q 366 13 385 34 q 311 -8 347 -8 q 256 13 275 -8 q 237 63 237 34 z "},"@":{"ha":1247,"x_min":74,"x_max":1182,"o":"m 1177 341 q 1158 216 1175 279 q 1109 101 1142 153 q 1025 17 1077 49 q 900 -14 973 -14 q 818 2 853 -14 q 761 50 783 19 q 731 125 739 81 q 728 224 722 170 l 762 600 l 862 600 l 827 224 q 830 143 823 174 q 850 95 836 112 q 881 73 863 79 q 914 66 898 66 q 987 88 955 66 q 1041 147 1019 109 q 1075 234 1063 184 q 1090 341 1087 284 q 1081 527 1095 442 q 1034 677 1067 612 q 948 789 1001 743 q 822 858 895 834 q 654 882 749 882 q 497 856 569 882 q 367 781 425 829 q 269 663 310 732 q 204 509 228 595 q 177 324 181 423 q 188 137 172 222 q 238 -15 203 52 q 327 -128 273 -81 q 451 -198 380 -174 q 608 -222 522 -222 q 729 -208 668 -222 q 832 -170 791 -194 l 858 -247 q 740 -292 810 -277 q 606 -307 669 -307 q 417 -279 503 -307 q 267 -197 332 -251 q 158 -66 201 -143 q 94 109 115 11 q 79 324 74 208 q 112 534 83 435 q 191 712 141 632 q 311 850 241 792 q 468 939 380 908 q 657 970 555 970 q 846 942 762 970 q 995 860 931 913 q 1101 729 1059 806 q 1163 554 1143 652 q 1177 341 1182 456 m 481 283 q 481 199 476 236 q 499 136 486 161 q 535 97 513 110 q 587 83 557 83 q 628 93 606 83 q 671 124 650 103 q 710 179 692 145 q 741 260 728 213 l 785 212 q 745 114 770 156 q 690 43 720 72 q 625 0 659 15 q 555 -14 591 -14 q 469 7 506 -14 q 408 68 431 28 q 376 162 385 107 q 373 283 367 216 q 398 415 379 355 q 445 523 417 475 q 509 604 473 570 q 585 654 545 637 q 667 671 625 671 q 782 650 740 671 q 862 600 824 629 l 804 532 q 753 568 785 551 q 677 584 721 584 q 608 565 640 584 q 549 508 575 546 q 505 414 523 470 q 481 283 488 358 z "},"A":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 z "},"B":{"ha":865,"x_min":115,"x_max":787,"o":"m 467 462 l 216 462 l 215 567 l 442 567 q 541 586 498 567 q 606 641 583 605 q 629 726 629 676 q 609 814 629 780 q 546 864 588 848 q 438 880 503 880 l 245 880 l 245 0 l 115 0 l 115 987 l 438 987 q 574 972 514 987 q 675 925 633 957 q 739 843 717 892 q 760 724 760 793 q 729 614 760 663 q 643 534 698 565 q 513 494 587 503 l 467 462 m 460 0 l 165 0 l 239 106 l 460 106 q 567 128 523 106 q 633 190 610 150 q 656 283 656 229 q 637 378 656 338 q 575 440 617 418 q 467 462 533 462 l 280 462 l 281 567 l 536 567 l 564 529 q 685 489 635 523 q 761 401 734 454 q 787 285 787 349 q 746 129 787 193 q 633 33 706 66 q 460 0 559 0 z "},"C":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 z "},"D":{"ha":911,"x_min":115,"x_max":829,"o":"m 382 0 l 176 0 l 177 106 l 382 106 q 558 151 488 106 q 664 276 629 195 q 700 464 700 356 l 700 524 q 680 675 700 609 q 620 787 659 741 q 524 857 581 833 q 394 880 467 880 l 172 880 l 172 987 l 394 987 q 571 955 491 987 q 709 862 651 923 q 798 716 767 802 q 829 523 829 630 l 829 464 q 798 271 829 357 q 708 125 767 185 q 567 32 650 64 q 382 0 485 0 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 z "},"E":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 z "},"F":{"ha":768,"x_min":115,"x_max":726,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 659 543 l 659 436 l 217 436 l 217 543 l 659 543 m 726 987 l 726 880 l 217 880 l 217 987 l 726 987 z "},"G":{"ha":946,"x_min":83,"x_max":844,"o":"m 844 492 l 844 130 q 786 70 826 103 q 676 11 746 36 q 495 -14 606 -14 q 329 18 405 -14 q 198 110 254 50 q 113 258 143 171 q 83 456 83 345 l 83 532 q 109 730 83 643 q 186 877 135 817 q 311 969 237 938 q 480 1001 385 1001 q 670 962 593 1001 q 789 854 746 923 q 844 699 832 786 l 713 699 q 679 796 705 752 q 604 867 652 840 q 480 894 556 894 q 361 869 412 894 q 279 797 311 844 q 230 684 246 750 q 214 534 214 617 l 214 456 q 234 303 214 370 q 292 189 254 236 q 381 117 329 142 q 496 93 433 93 q 609 105 566 93 q 677 133 652 117 q 714 165 701 150 l 714 386 l 486 386 l 486 492 l 844 492 z "},"H":{"ha":991,"x_min":115,"x_max":873,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 z "},"I":{"ha":378,"x_min":124,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 z "},"J":{"ha":766,"x_min":36,"x_max":659,"o":"m 529 288 l 529 987 l 659 987 l 659 288 q 619 123 659 191 q 509 21 579 56 q 348 -14 439 -14 q 186 18 257 -14 q 76 113 116 49 q 36 273 36 176 l 167 273 q 190 171 167 211 q 254 112 213 131 q 348 93 295 93 q 440 115 399 93 q 505 181 481 137 q 529 288 529 224 z "},"K":{"ha":871,"x_min":115,"x_max":871,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 842 987 l 431 527 l 201 288 l 179 427 l 353 618 l 684 987 l 842 987 m 715 0 l 350 481 l 428 585 l 871 0 l 715 0 z "},"L":{"ha":748,"x_min":115,"x_max":713,"o":"m 713 106 l 713 0 l 220 0 l 220 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 z "},"M":{"ha":1213,"x_min":115,"x_max":1097,"o":"m 156 987 l 283 987 l 606 182 l 929 987 l 1057 987 l 655 0 l 556 0 l 156 987 m 115 987 l 227 987 l 245 385 l 245 0 l 115 0 l 115 987 m 985 987 l 1097 987 l 1097 0 l 967 0 l 967 385 l 985 987 z "},"N":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 z "},"O":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 z "},"P":{"ha":876,"x_min":115,"x_max":825,"o":"m 479 387 l 215 387 l 215 494 l 479 494 q 603 518 555 494 q 672 586 650 543 q 694 685 694 629 q 672 781 694 736 q 603 853 650 825 q 479 880 555 880 l 245 880 l 245 0 l 115 0 l 115 987 l 479 987 q 668 949 591 987 q 785 842 745 910 q 825 686 825 774 q 785 524 825 591 q 668 422 745 457 q 479 387 591 387 z "},"Q":{"ha":956,"x_min":75,"x_max":872,"o":"m 621 113 l 872 -85 l 784 -167 l 537 29 l 621 113 m 869 525 l 869 463 q 841 263 869 351 q 761 113 813 175 q 636 19 709 52 q 473 -14 563 -14 q 312 19 385 -14 q 186 113 239 52 q 104 263 133 175 q 75 463 75 351 l 75 525 q 103 724 75 636 q 185 874 132 812 q 311 968 238 936 q 471 1001 384 1001 q 635 968 562 1001 q 760 874 708 936 q 841 724 812 812 q 869 525 869 636 m 739 463 l 739 526 q 721 682 739 614 q 669 796 703 750 q 585 866 634 842 q 471 890 535 890 q 362 866 411 890 q 277 796 313 842 q 223 682 242 750 q 204 526 204 614 l 204 463 q 223 306 204 374 q 278 191 242 237 q 363 121 313 144 q 473 97 412 97 q 586 121 536 97 q 670 191 635 144 q 722 306 704 237 q 739 463 739 374 z "},"R":{"ha":856,"x_min":115,"x_max":831,"o":"m 115 987 l 441 987 q 630 954 553 987 q 747 853 707 920 q 787 691 787 787 q 760 567 787 623 q 681 472 732 511 q 559 414 630 433 l 522 400 l 215 400 l 214 507 l 446 507 q 563 531 516 507 q 633 598 610 556 q 657 691 657 640 q 635 791 657 748 q 565 857 612 833 q 441 880 517 880 l 245 880 l 245 0 l 115 0 l 115 987 m 692 0 l 452 448 l 588 448 l 831 8 l 831 0 l 692 0 z "},"S":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 z "},"T":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 z "},"U":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 z "},"V":{"ha":884,"x_min":20,"x_max":866,"o":"m 433 150 l 724 987 l 866 987 l 500 0 l 399 0 l 433 150 m 161 987 l 450 150 l 486 0 l 385 0 l 20 987 l 161 987 z "},"W":{"ha":1232,"x_min":41,"x_max":1202,"o":"m 374 298 l 570 987 l 665 987 l 610 720 l 399 0 l 305 0 l 374 298 m 172 987 l 328 312 l 374 0 l 281 0 l 41 987 l 172 987 m 919 313 l 1072 987 l 1202 987 l 964 0 l 870 0 l 919 313 m 680 987 l 870 298 l 939 0 l 845 0 l 642 720 l 586 987 l 680 987 z "},"X":{"ha":871,"x_min":39,"x_max":834,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 z "},"Y":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 z "},"Z":{"ha":832,"x_min":59,"x_max":777,"o":"m 777 106 l 777 0 l 109 0 l 109 106 l 777 106 m 755 892 l 140 0 l 59 0 l 59 98 l 674 987 l 755 987 l 755 892 m 700 987 l 700 880 l 68 880 l 68 987 l 700 987 z "},"[":{"ha":368,"x_min":100,"x_max":355,"o":"m 355 1128 l 355 1025 l 225 1025 l 225 -109 l 355 -109 l 355 -212 l 100 -212 l 100 1128 l 355 1128 z "},"\\\\":{"ha":570,"x_min":28,"x_max":559,"o":"m 440 -85 l 28 987 l 147 987 l 559 -85 l 440 -85 z "},"]":{"ha":368,"x_min":7,"x_max":263,"o":"m 7 1025 l 7 1128 l 263 1128 l 263 -212 l 7 -212 l 7 -109 l 137 -109 l 137 1025 l 7 1025 z "},"^":{"ha":581,"x_min":43,"x_max":535,"o":"m 298 842 l 160 494 l 43 494 l 246 987 l 322 987 l 298 842 m 418 494 l 281 842 l 256 987 l 333 987 l 535 494 l 418 494 z "},"_":{"ha":627,"x_min":3,"x_max":625,"o":"m 625 0 l 625 -103 l 3 -103 l 3 0 l 625 0 z "},"`":{"ha":429,"x_min":39,"x_max":321,"o":"m 191 1042 l 321 842 l 214 842 l 39 1042 l 191 1042 z "},"a":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 z "},"b":{"ha":780,"x_min":95,"x_max":717,"o":"m 95 1042 l 221 1042 l 221 142 l 210 0 l 95 0 l 95 1042 m 717 373 l 717 359 q 698 211 717 279 q 642 92 679 142 q 553 14 606 42 q 431 -14 500 -14 q 309 11 361 -14 q 220 80 256 35 q 163 190 184 125 q 134 335 142 254 l 134 397 q 163 543 142 479 q 220 653 184 608 q 309 723 256 699 q 430 747 361 747 q 553 721 499 747 q 643 644 606 694 q 698 526 679 595 q 717 373 717 457 m 591 359 l 591 373 q 581 476 591 428 q 548 562 570 525 q 489 620 526 599 q 399 642 452 642 q 316 625 351 642 q 257 582 281 609 q 217 519 233 554 q 195 447 202 484 l 195 283 q 230 192 205 236 q 297 121 255 149 q 400 93 338 93 q 487 114 451 93 q 546 171 524 134 q 580 256 569 208 q 591 359 591 304 z "},"c":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 z "},"d":{"ha":783,"x_min":64,"x_max":684,"o":"m 558 142 l 558 1042 l 684 1042 l 684 0 l 569 0 l 558 142 m 64 359 l 64 373 q 85 526 64 457 q 144 644 106 595 q 236 721 182 694 q 355 747 289 747 q 476 723 424 747 q 564 653 528 699 q 621 543 600 608 q 650 397 642 479 l 650 335 q 622 190 643 254 q 564 80 600 125 q 475 11 528 35 q 353 -14 423 -14 q 236 14 289 -14 q 144 92 182 42 q 85 211 106 142 q 64 359 64 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 213 208 q 297 114 260 134 q 385 93 334 93 q 487 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 213 525 q 191 373 191 428 z "},"e":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 z "},"f":{"ha":483,"x_min":41,"x_max":485,"o":"m 283 0 l 157 0 l 157 811 q 186 945 157 890 q 269 1028 215 1000 q 398 1056 323 1056 q 442 1053 420 1056 q 485 1045 464 1050 l 478 943 q 446 947 464 946 q 410 949 428 949 q 341 933 370 949 q 298 886 313 917 q 283 811 283 856 l 283 0 m 439 734 l 439 637 l 41 637 l 41 734 l 439 734 z "},"g":{"ha":780,"x_min":66,"x_max":685,"o":"m 571 734 l 685 734 l 685 16 q 646 -150 685 -81 q 536 -254 606 -218 q 374 -290 466 -290 q 285 -278 336 -290 q 185 -238 234 -266 q 102 -162 136 -210 l 168 -87 q 265 -165 214 -143 q 365 -186 315 -186 q 468 -164 425 -186 q 535 -98 511 -142 q 559 9 559 -54 l 559 572 l 571 734 m 66 359 l 66 373 q 86 526 66 457 q 143 644 106 595 q 235 721 181 694 q 355 747 288 747 q 476 723 425 747 q 565 653 528 699 q 622 543 601 608 q 651 397 643 479 l 651 335 q 622 190 644 254 q 565 80 601 125 q 476 11 528 35 q 354 -14 424 -14 q 235 14 288 -14 q 144 92 182 42 q 86 211 106 142 q 66 359 66 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 214 208 q 297 114 260 134 q 385 93 334 93 q 488 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 583 484 q 528 582 552 554 q 469 625 504 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 214 525 q 191 373 191 428 z "},"h":{"ha":765,"x_min":96,"x_max":673,"o":"m 221 1042 l 221 0 l 96 0 l 96 1042 l 221 1042 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 z "},"i":{"ha":338,"x_min":96,"x_max":245,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 96 928 q 115 980 96 959 q 170 1001 134 1001 q 225 980 206 1001 q 245 928 245 959 q 225 879 245 899 q 170 858 206 858 q 115 879 134 858 q 96 928 96 899 z "},"j":{"ha":332,"x_min":-45,"x_max":235,"o":"m 99 734 l 225 734 l 225 -87 q 204 -201 225 -155 q 140 -272 182 -248 q 33 -296 98 -296 q -6 -293 16 -296 q -45 -285 -29 -290 l -44 -184 q -15 -188 -31 -186 q 14 -190 1 -190 q 60 -180 41 -190 q 89 -147 79 -170 q 99 -87 99 -125 l 99 734 m 86 928 q 105 980 86 959 q 160 1001 124 1001 q 216 980 197 1001 q 235 928 235 959 q 216 879 235 899 q 160 858 197 858 q 105 879 124 858 q 86 928 86 899 z "},"k":{"ha":704,"x_min":96,"x_max":703,"o":"m 222 1042 l 222 0 l 96 0 l 96 1042 l 222 1042 m 670 734 l 350 391 l 171 205 l 161 339 l 289 492 l 517 734 l 670 734 m 555 0 l 294 350 l 359 462 l 703 0 l 555 0 z "},"l":{"ha":338,"x_min":106,"x_max":232,"o":"m 232 1042 l 232 0 l 106 0 l 106 1042 l 232 1042 z "},"m":{"ha":1218,"x_min":94,"x_max":1124,"o":"m 220 588 l 220 0 l 94 0 l 94 734 l 214 734 l 220 588 m 195 395 l 136 397 q 156 536 137 472 q 212 648 175 600 q 305 721 250 695 q 434 747 361 747 q 529 733 486 747 q 604 687 572 718 q 654 607 636 656 q 671 489 671 558 l 671 0 l 546 0 l 546 483 q 527 575 546 541 q 472 626 507 610 q 389 642 437 642 q 296 622 334 642 q 237 568 259 602 q 204 489 214 533 q 195 395 195 444 m 670 464 l 586 438 q 606 554 587 498 q 662 653 625 610 q 753 722 699 696 q 878 747 808 747 q 982 732 937 747 q 1060 684 1028 716 q 1107 602 1091 652 q 1124 482 1124 551 l 1124 0 l 998 0 l 998 484 q 978 579 998 545 q 924 628 959 614 q 841 642 889 642 q 768 627 800 642 q 714 588 736 613 q 681 532 692 564 q 670 464 670 500 z "},"n":{"ha":767,"x_min":96,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 z "},"o":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"p":{"ha":780,"x_min":95,"x_max":715,"o":"m 221 593 l 221 -282 l 95 -282 l 95 734 l 210 734 l 221 593 m 715 373 l 715 359 q 696 211 715 279 q 641 92 677 142 q 552 14 605 42 q 431 -14 499 -14 q 307 9 361 -14 q 216 77 254 33 q 157 182 179 121 q 127 321 135 244 l 127 397 q 157 543 135 479 q 217 653 180 608 q 307 723 254 699 q 429 747 359 747 q 551 721 498 747 q 642 644 605 694 q 697 526 678 595 q 715 373 715 457 m 589 359 l 589 373 q 578 476 589 428 q 542 562 566 525 q 481 620 518 599 q 392 642 444 642 q 310 625 345 642 q 250 582 275 609 q 211 519 226 554 q 188 447 195 484 l 188 271 q 226 182 201 224 q 291 115 250 140 q 393 90 332 90 q 481 111 444 90 q 542 170 518 132 q 578 255 566 207 q 589 359 589 304 z "},"q":{"ha":789,"x_min":64,"x_max":684,"o":"m 557 -282 l 557 593 l 568 734 l 684 734 l 684 -282 l 557 -282 m 64 359 l 64 373 q 84 526 64 457 q 142 644 104 595 q 234 721 180 694 q 357 747 288 747 q 478 723 426 747 q 568 653 531 699 q 627 543 605 608 q 656 397 648 479 l 656 335 q 627 190 649 254 q 569 80 606 125 q 478 11 532 35 q 355 -14 425 -14 q 234 14 288 -14 q 142 92 180 42 q 84 211 104 142 q 64 359 64 279 m 191 373 l 191 359 q 202 255 191 304 q 238 170 214 207 q 299 111 262 132 q 387 90 336 90 q 491 117 449 90 q 557 188 532 144 q 596 283 583 233 l 596 447 q 573 519 589 484 q 532 583 557 555 q 471 628 507 611 q 388 644 435 644 q 299 623 336 644 q 238 563 262 601 q 202 477 214 526 q 191 373 191 428 z "},"r":{"ha":471,"x_min":96,"x_max":450,"o":"m 221 618 l 221 0 l 96 0 l 96 734 l 218 734 l 221 618 m 450 738 l 450 621 q 420 626 434 625 q 389 627 406 627 q 312 613 345 627 q 256 575 279 600 q 219 517 233 551 q 202 444 206 484 l 167 423 q 180 548 167 490 q 221 651 193 606 q 292 722 249 696 q 395 747 335 747 q 426 744 408 747 q 450 738 444 741 z "},"s":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 z "},"t":{"ha":454,"x_min":6,"x_max":406,"o":"m 403 734 l 403 637 l 6 637 l 6 734 l 403 734 m 140 912 l 266 912 l 266 182 q 277 125 266 144 q 307 100 289 106 q 347 94 326 94 q 379 97 362 94 q 406 102 397 100 l 406 0 q 367 -9 391 -5 q 309 -14 343 -14 q 224 5 263 -14 q 163 66 186 23 q 140 182 140 109 l 140 912 z "},"u":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 z "},"v":{"ha":673,"x_min":22,"x_max":648,"o":"m 319 113 l 519 734 l 648 734 l 384 0 l 300 0 l 319 113 m 151 734 l 358 110 l 372 0 l 288 0 l 22 734 l 151 734 z "},"w":{"ha":1044,"x_min":29,"x_max":1011,"o":"m 281 130 l 470 734 l 553 734 l 536 614 l 345 0 l 264 0 l 281 130 m 155 734 l 315 123 l 327 0 l 242 0 l 29 734 l 155 734 m 733 128 l 886 734 l 1011 734 l 798 0 l 714 0 l 733 128 m 571 734 l 755 140 l 777 0 l 696 0 l 499 615 l 483 734 l 571 734 z "},"x":{"ha":689,"x_min":28,"x_max":659,"o":"m 180 734 l 341 467 l 504 734 l 651 734 l 411 372 l 659 0 l 513 0 l 344 275 l 174 0 l 28 0 l 275 372 l 36 734 l 180 734 z "},"y":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 z "},"z":{"ha":689,"x_min":60,"x_max":642,"o":"m 642 103 l 642 0 l 109 0 l 109 103 l 642 103 m 623 645 l 137 0 l 60 0 l 60 92 l 543 734 l 623 734 l 623 645 m 567 734 l 567 630 l 66 630 l 66 734 l 567 734 z "},"{":{"ha":470,"x_min":43,"x_max":455,"o":"m 429 1083 l 455 1006 q 344 916 374 981 q 313 768 313 851 l 313 627 q 286 504 313 559 q 199 416 258 449 q 43 384 140 384 l 43 467 q 154 510 120 467 q 187 627 187 553 l 187 768 q 209 901 187 839 q 284 1010 231 963 q 429 1083 336 1057 m 455 -170 l 429 -248 q 284 -175 336 -222 q 209 -66 231 -128 q 187 67 187 -4 l 187 207 q 172 292 187 256 q 126 348 157 328 q 43 368 94 368 l 43 451 q 199 418 140 451 q 286 331 258 386 q 313 207 313 275 l 313 67 q 327 -36 313 12 q 371 -118 340 -83 q 455 -170 401 -153 z "},"|":{"ha":339,"x_min":119,"x_max":220,"o":"m 220 987 l 220 -183 l 119 -183 l 119 987 l 220 987 z "},"}":{"ha":470,"x_min":14,"x_max":425,"o":"m 14 1006 l 40 1083 q 185 1010 133 1057 q 260 901 238 963 q 281 768 281 839 l 281 627 q 296 542 281 578 q 343 486 311 506 q 425 467 374 467 l 425 390 q 270 421 330 390 q 183 506 210 452 q 155 627 155 559 l 155 768 q 142 871 155 823 q 99 954 130 919 q 14 1006 68 989 m 40 -248 l 14 -170 q 98 -118 67 -153 q 142 -36 129 -83 q 155 67 155 12 l 155 207 q 183 329 155 275 q 270 413 210 382 q 425 444 330 444 l 425 368 q 315 325 349 368 q 281 207 281 281 l 281 67 q 260 -66 281 -4 q 185 -175 238 -128 q 40 -248 133 -222 z "},"~":{"ha":945,"x_min":89,"x_max":857,"o":"m 753 527 l 857 528 q 841 429 857 475 q 795 348 825 383 q 725 293 766 313 q 637 273 685 273 q 533 297 578 273 q 435 367 488 321 q 371 416 400 399 q 308 434 342 434 q 249 417 273 434 q 211 370 224 401 q 198 297 198 340 l 89 296 q 105 394 89 349 q 150 473 121 439 q 219 526 179 507 q 308 545 260 545 q 414 519 368 545 q 510 450 460 494 q 575 400 547 416 q 637 383 604 383 q 698 401 672 383 q 739 452 724 420 q 753 527 753 485 z "},"¡":{"ha":339,"x_min":94,"x_max":243,"o":"m 106 -245 l 116 464 l 229 464 l 239 -245 l 106 -245 m 243 675 q 224 625 243 646 q 169 604 205 604 q 114 625 133 604 q 94 675 94 646 q 114 726 94 705 q 169 747 133 747 q 224 726 205 747 q 243 675 243 705 z "},"¢":{"ha":760,"x_min":71,"x_max":690,"o":"m 454 894 l 454 699 l 328 699 l 328 894 l 454 894 m 454 28 l 454 -166 l 328 -166 l 328 28 l 454 28 m 398 90 q 481 108 443 90 q 543 158 519 126 q 571 232 568 191 l 690 232 q 646 111 687 167 q 541 21 606 55 q 398 -14 476 -14 q 254 16 315 -14 q 152 96 192 45 q 91 213 111 146 q 71 353 71 279 l 71 381 q 91 521 71 455 q 152 638 111 587 q 254 718 193 689 q 398 747 315 747 q 549 712 484 747 q 650 617 613 677 q 690 481 687 557 l 571 481 q 546 564 568 527 q 486 622 524 600 q 398 644 448 644 q 301 622 340 644 q 240 561 262 599 q 207 476 217 522 q 197 381 197 429 l 197 353 q 207 258 197 304 q 239 173 216 211 q 301 112 262 135 q 398 90 340 90 z "},"£":{"ha":808,"x_min":62,"x_max":765,"o":"m 765 0 l 64 0 l 64 106 l 765 106 l 765 0 m 517 422 l 62 422 l 62 529 l 517 529 l 517 422 m 295 705 l 310 273 q 292 154 311 209 q 235 71 273 98 l 117 106 q 154 141 140 113 q 174 205 168 169 q 180 272 180 242 l 165 705 q 204 864 165 798 q 312 966 243 930 q 466 1001 380 1001 q 617 968 555 1001 q 713 875 680 935 q 746 737 746 816 l 616 737 q 593 829 616 794 q 534 879 570 863 q 455 895 497 895 q 374 872 410 895 q 316 808 338 850 q 295 705 295 766 z "},"¤":{"ha":991,"x_min":71,"x_max":930,"o":"m 212 412 q 234 292 212 349 q 296 194 256 236 q 387 127 335 151 q 498 103 439 103 q 610 127 558 103 q 701 194 662 151 q 763 292 741 236 q 785 412 785 349 q 763 532 785 477 q 701 630 741 588 q 610 696 662 673 q 498 720 558 720 q 387 696 439 720 q 296 630 335 673 q 234 532 256 588 q 212 412 212 477 m 95 412 q 126 580 95 503 q 213 715 158 657 q 342 805 269 772 q 498 837 415 837 q 655 805 582 837 q 784 715 728 772 q 871 580 840 657 q 902 412 902 503 q 871 245 902 322 q 784 110 840 168 q 655 19 728 52 q 498 -14 582 -14 q 342 19 415 -14 q 213 110 269 52 q 126 245 158 168 q 95 412 95 322 m 930 765 l 793 625 l 703 718 l 840 858 l 930 765 m 297 122 l 160 -18 l 71 75 l 208 214 l 297 122 m 840 -18 l 703 121 l 793 214 l 930 75 l 840 -18 m 208 625 l 71 765 l 160 857 l 297 718 l 208 625 z "},"¥":{"ha":730,"x_min":10,"x_max":719,"o":"m 648 500 l 648 415 l 81 415 l 81 500 l 648 500 m 648 302 l 648 218 l 81 218 l 81 302 l 648 302 m 326 452 l 574 987 l 719 987 l 425 410 l 342 410 l 326 452 m 157 987 l 408 447 l 388 410 l 305 410 l 10 987 l 157 987 m 427 525 l 427 0 l 297 0 l 297 525 l 427 525 z "},"¦":{"ha":334,"x_min":100,"x_max":226,"o":"m 226 -183 l 100 -183 l 100 354 l 226 354 l 226 -183 m 226 987 l 226 473 l 100 473 l 100 987 l 226 987 z "},"§":{"ha":852,"x_min":62,"x_max":777,"o":"m 474 73 l 474 153 q 570 171 530 153 q 630 220 609 189 q 651 290 651 251 q 639 346 651 322 q 600 390 627 370 q 525 429 572 410 q 409 469 478 448 q 277 512 335 489 q 179 568 219 536 q 117 645 138 600 q 96 753 96 690 q 120 856 96 810 q 186 934 143 901 q 291 984 230 966 q 428 1002 352 1002 q 606 968 532 1002 q 721 869 681 934 q 761 709 761 804 l 635 709 q 611 805 635 762 q 541 873 587 848 q 428 899 495 899 q 311 879 357 899 q 244 827 266 859 q 222 755 222 794 q 232 696 222 721 q 269 653 243 672 q 341 617 294 634 q 458 580 387 600 q 593 535 534 559 q 693 478 652 511 q 755 401 734 446 q 777 292 777 355 q 755 200 777 241 q 694 131 734 159 q 598 88 654 103 q 474 73 543 73 m 356 593 l 356 511 q 263 493 300 511 q 209 445 227 475 q 191 375 191 414 q 202 316 191 341 q 239 272 212 292 q 312 235 265 252 q 432 197 359 217 q 566 152 507 176 q 664 97 624 128 q 725 20 704 65 q 746 -87 746 -24 q 723 -193 746 -146 q 656 -271 699 -239 q 552 -319 612 -302 q 416 -336 491 -336 q 288 -321 351 -336 q 173 -272 224 -306 q 92 -182 122 -238 q 62 -43 62 -125 l 187 -42 q 208 -133 187 -96 q 261 -191 228 -170 q 335 -223 295 -213 q 416 -233 376 -233 q 527 -214 481 -233 q 596 -162 572 -195 q 621 -89 621 -130 q 609 -34 621 -57 q 570 9 597 -10 q 497 47 543 28 q 382 85 451 65 q 250 130 309 106 q 150 186 191 154 q 87 265 109 219 q 66 374 66 311 q 86 464 66 424 q 144 533 106 505 q 236 577 182 562 q 356 593 290 593 z "},"¨":{"ha":581,"x_min":68,"x_max":509,"o":"m 68 930 q 87 981 68 960 q 142 1002 106 1002 q 198 981 179 1002 q 217 930 217 960 q 198 880 217 901 q 142 859 179 859 q 87 880 106 859 q 68 930 68 901 m 361 928 q 379 980 361 959 q 435 1001 398 1001 q 490 980 471 1001 q 509 928 509 959 q 490 879 509 899 q 435 858 471 858 q 379 879 398 858 q 361 928 361 899 z "},"©":{"ha":1091,"x_min":62,"x_max":1025,"o":"m 661 406 l 760 406 q 699 246 760 299 q 534 193 638 193 q 410 226 463 193 q 329 318 357 259 q 300 455 300 377 l 300 533 q 329 670 300 611 q 410 762 357 729 q 534 795 463 795 q 699 743 638 795 q 760 583 760 690 l 661 583 q 629 680 661 650 q 534 709 597 709 q 459 686 490 709 q 413 624 429 664 q 397 534 397 585 l 397 455 q 413 364 397 404 q 459 302 429 324 q 534 279 490 279 q 629 309 597 279 q 661 406 661 338 m 140 494 q 172 326 140 404 q 258 190 203 248 q 387 99 314 132 q 544 66 460 66 q 700 99 627 66 q 828 190 773 132 q 915 326 884 248 q 946 494 946 404 q 915 663 946 585 q 828 798 884 740 q 700 888 773 856 q 544 920 627 920 q 387 888 460 920 q 258 798 314 856 q 172 663 203 740 q 140 494 140 585 m 62 494 q 100 694 62 602 q 203 856 137 787 q 357 963 270 924 q 544 1001 444 1001 q 731 963 644 1001 q 884 856 818 924 q 987 694 950 787 q 1025 494 1025 602 q 987 294 1025 387 q 884 133 950 202 q 731 24 818 63 q 544 -14 644 -14 q 357 24 444 -14 q 203 133 270 63 q 100 294 137 202 q 62 494 62 387 z "},"ª":{"ha":621,"x_min":100,"x_max":532,"o":"m 404 585 l 404 815 q 394 865 404 844 q 367 896 385 885 q 319 906 348 906 q 246 888 273 906 q 219 835 219 870 l 110 844 q 136 925 110 890 q 209 981 162 961 q 319 1002 256 1002 q 421 981 378 1002 q 490 918 465 960 q 514 814 514 877 l 514 602 q 518 538 514 568 q 532 479 522 509 l 420 479 q 404 585 404 530 m 431 779 l 431 704 l 330 704 q 263 693 290 704 q 223 665 236 682 q 210 625 210 647 q 231 579 210 596 q 295 562 252 562 q 354 575 324 562 q 403 608 383 589 q 422 644 422 627 l 435 568 q 403 523 425 546 q 348 485 382 500 q 269 469 315 469 q 143 511 187 469 q 100 623 100 553 q 125 708 100 673 q 202 761 151 743 q 330 779 253 779 l 431 779 z "},"«":{"ha":652,"x_min":68,"x_max":589,"o":"m 365 642 l 188 369 l 68 370 l 68 378 l 269 642 l 365 642 m 188 375 l 365 102 l 269 102 l 68 366 l 68 374 l 188 375 m 589 642 l 412 369 l 293 370 l 293 378 l 493 642 l 589 642 m 412 375 l 589 102 l 493 102 l 293 366 l 293 374 l 412 375 z "},"¬":{"ha":769,"x_min":86,"x_max":650,"o":"m 650 543 l 650 433 l 86 433 l 86 543 l 650 543 m 650 492 l 650 255 l 524 255 l 524 492 l 650 492 z "},"®":{"ha":1092,"x_min":62,"x_max":1024,"o":"m 561 444 l 413 444 l 412 531 l 549 531 q 603 541 578 532 q 643 569 627 551 q 658 613 658 587 q 646 667 658 647 q 608 695 635 686 q 535 704 581 704 l 443 704 l 443 215 l 347 215 l 347 790 l 535 790 q 651 771 602 790 q 726 714 700 752 q 753 617 753 675 q 736 551 753 581 q 686 501 719 522 q 607 467 654 480 q 603 463 605 467 q 598 458 600 458 q 584 449 587 452 q 577 445 581 446 q 561 444 574 444 m 554 444 l 568 505 q 711 461 673 505 q 749 349 749 416 l 749 312 q 752 264 749 287 q 761 226 755 241 l 761 215 l 663 215 q 655 265 656 233 q 654 313 654 298 l 654 348 q 631 421 654 397 q 554 444 608 444 m 140 494 q 171 326 140 404 q 258 190 202 248 q 387 99 313 132 q 543 66 460 66 q 700 99 627 66 q 828 190 772 132 q 914 326 883 248 q 945 494 945 404 q 914 663 945 585 q 828 798 883 740 q 700 888 772 856 q 543 920 627 920 q 387 888 460 920 q 258 798 313 856 q 171 663 202 740 q 140 494 140 585 m 62 494 q 99 694 62 602 q 203 856 136 787 q 356 963 269 924 q 543 1001 444 1001 q 730 963 643 1001 q 883 856 817 924 q 987 694 949 787 q 1024 494 1024 602 q 987 294 1024 387 q 883 133 949 202 q 730 24 817 63 q 543 -14 643 -14 q 356 24 444 -14 q 203 133 269 63 q 99 294 136 202 q 62 494 62 387 z "},"¯":{"ha":637,"x_min":97,"x_max":552,"o":"m 552 980 l 552 884 l 97 884 l 97 980 l 552 980 z "},"°":{"ha":519,"x_min":89,"x_max":432,"o":"m 89 825 q 113 913 89 873 q 176 978 136 954 q 262 1002 215 1002 q 347 978 309 1002 q 409 913 386 954 q 432 825 432 873 q 409 738 432 777 q 347 674 386 698 q 262 651 309 651 q 176 674 215 651 q 113 738 136 698 q 89 825 89 777 m 173 825 q 199 763 173 788 q 262 738 225 738 q 323 763 298 738 q 348 825 348 788 q 323 889 348 863 q 262 915 298 915 q 199 889 225 915 q 173 825 173 863 z "},"±":{"ha":743,"x_min":66,"x_max":687,"o":"m 687 580 l 687 477 l 66 477 l 66 580 l 687 580 m 441 859 l 441 196 l 328 196 l 328 859 l 441 859 m 659 103 l 659 1 l 92 1 l 92 103 l 659 103 z "},"²":{"ha":509,"x_min":45,"x_max":463,"o":"m 463 539 l 463 452 l 58 452 l 58 526 l 253 709 q 301 760 283 738 q 327 801 319 783 q 334 833 334 819 q 313 887 334 866 q 251 908 291 908 q 176 882 200 908 q 152 818 152 857 l 45 818 q 69 907 45 867 q 139 971 94 947 q 248 995 184 995 q 353 975 309 995 q 419 920 396 956 q 442 835 442 884 q 426 768 442 799 q 381 705 410 736 q 312 638 352 674 l 193 539 l 463 539 z "},"³":{"ha":509,"x_min":43,"x_max":452,"o":"m 180 764 l 237 764 q 292 773 271 764 q 325 799 314 783 q 336 838 336 816 q 315 888 336 867 q 246 908 293 908 q 182 891 208 908 q 157 845 157 874 l 50 845 q 76 925 50 891 q 146 977 102 958 q 244 995 190 995 q 348 978 303 995 q 418 926 393 960 q 443 843 443 892 q 421 777 443 807 q 357 729 399 747 q 256 711 315 711 l 180 711 l 180 764 m 180 686 l 180 739 l 256 739 q 367 722 323 739 q 431 675 410 706 q 452 602 452 645 q 425 517 452 552 q 351 463 398 481 q 245 445 304 445 q 148 461 194 445 q 72 513 101 478 q 43 604 43 549 l 149 604 q 176 552 149 573 q 248 532 203 532 q 320 553 296 532 q 345 607 345 574 q 332 653 345 635 q 295 678 319 670 q 237 686 271 686 l 180 686 z "},"´":{"ha":435,"x_min":83,"x_max":366,"o":"m 83 842 l 215 1042 l 366 1042 l 184 842 l 83 842 z "},"µ":{"ha":787,"x_min":105,"x_max":682,"o":"m 557 734 l 682 734 l 682 0 l 569 0 l 557 170 l 557 734 m 579 341 l 626 342 q 612 200 626 265 q 569 87 598 135 q 494 12 540 39 q 385 -14 449 -14 q 293 -1 334 -14 q 224 41 253 12 q 176 116 195 70 l 151 312 l 230 312 q 241 198 230 242 q 274 130 253 154 q 321 98 294 106 q 380 89 349 89 q 479 107 440 89 q 540 160 518 126 q 570 240 562 194 q 579 341 579 286 m 105 734 l 230 734 l 230 -282 l 105 -282 l 105 734 z "},"¶":{"ha":680,"x_min":46,"x_max":565,"o":"m 565 0 l 439 0 l 439 353 l 380 353 q 197 394 272 353 q 84 507 123 435 q 46 670 46 578 q 84 833 46 761 q 197 946 123 905 q 380 987 272 987 l 565 987 l 565 0 z "},"·":{"ha":363,"x_min":100,"x_max":256,"o":"m 100 494 q 120 548 100 526 q 178 570 140 570 q 236 548 216 570 q 256 494 256 526 q 236 442 256 463 q 178 420 216 420 q 120 442 140 420 q 100 494 100 463 z "},"¸":{"ha":345,"x_min":79,"x_max":289,"o":"m 103 0 l 193 0 l 185 -36 q 257 -68 224 -43 q 289 -153 289 -94 q 276 -211 289 -185 q 237 -256 262 -237 q 173 -285 211 -275 q 83 -295 134 -295 l 79 -222 q 135 -216 110 -222 q 176 -194 161 -209 q 191 -155 191 -179 q 180 -120 191 -133 q 144 -101 168 -107 q 82 -92 120 -94 l 103 0 z "},"¹":{"ha":509,"x_min":83,"x_max":336,"o":"m 336 987 l 336 452 l 230 452 l 230 860 l 83 821 l 83 909 l 323 987 l 336 987 z "},"º":{"ha":632,"x_min":83,"x_max":547,"o":"m 83 707 l 83 762 q 112 886 83 832 q 192 971 140 940 q 315 1002 244 1002 q 439 971 387 1002 q 519 886 491 940 q 547 762 547 832 l 547 707 q 519 584 547 637 q 439 499 491 530 q 317 469 388 469 q 193 499 245 469 q 112 584 140 530 q 83 707 83 637 m 194 762 l 194 707 q 207 633 194 666 q 248 582 220 601 q 317 563 275 563 q 384 582 357 563 q 424 633 411 601 q 437 707 437 666 l 437 762 q 424 836 437 803 q 384 887 410 868 q 315 906 357 906 q 248 887 275 906 q 207 836 220 868 q 194 762 194 803 z "},"»":{"ha":651,"x_min":70,"x_max":603,"o":"m 70 104 l 247 376 l 366 376 l 366 367 l 166 104 l 70 104 m 70 644 l 166 644 l 366 380 l 366 371 l 247 370 l 70 644 m 307 104 l 484 376 l 603 376 l 603 367 l 403 104 l 307 104 m 307 644 l 403 644 l 603 380 l 603 371 l 484 370 l 307 644 z "},"¼":{"ha":1017,"x_min":58,"x_max":967,"o":"m 310 985 l 310 450 l 204 450 l 204 858 l 58 819 l 58 907 l 298 985 l 310 985 m 783 852 l 301 81 l 231 125 l 713 897 l 783 852 m 967 203 l 967 115 l 534 115 l 529 184 l 785 535 l 869 535 l 777 380 l 636 203 l 967 203 m 894 535 l 894 0 l 787 0 l 787 535 l 894 535 z "},"½":{"ha":1078,"x_min":54,"x_max":1004,"o":"m 753 852 l 271 81 l 201 125 l 683 897 l 753 852 m 307 985 l 307 450 l 201 450 l 201 858 l 54 819 l 54 907 l 294 985 l 307 985 m 1004 87 l 1004 0 l 599 0 l 599 73 l 794 257 q 842 308 825 286 q 868 348 860 330 q 876 381 876 366 q 854 435 876 414 q 792 456 832 456 q 717 430 741 456 q 693 366 693 404 l 586 366 q 610 454 586 414 q 680 518 635 494 q 789 543 726 543 q 894 523 850 543 q 960 468 937 503 q 983 382 983 432 q 967 315 983 347 q 922 253 951 284 q 853 186 893 222 l 734 87 l 1004 87 z "},"¾":{"ha":1080,"x_min":76,"x_max":1029,"o":"m 869 852 l 387 81 l 317 125 l 799 897 l 869 852 m 1029 203 l 1029 115 l 596 115 l 591 184 l 848 535 l 932 535 l 839 380 l 699 203 l 1029 203 m 956 535 l 956 0 l 850 0 l 850 535 l 956 535 m 214 764 l 271 764 q 326 773 304 764 q 358 799 347 783 q 370 838 370 816 q 348 888 370 867 q 279 908 326 908 q 215 891 241 908 q 190 845 190 874 l 83 845 q 109 925 83 891 q 179 977 135 958 q 277 995 223 995 q 381 978 336 995 q 451 926 426 960 q 476 843 476 892 q 454 777 476 807 q 390 729 432 747 q 289 711 349 711 l 214 711 l 214 764 m 214 686 l 214 739 l 289 739 q 400 722 357 739 q 465 675 444 706 q 486 602 486 645 q 458 517 486 552 q 384 463 431 481 q 278 445 337 445 q 181 461 227 445 q 105 513 134 478 q 76 604 76 549 l 182 604 q 210 552 182 573 q 281 532 237 532 q 354 553 329 532 q 378 607 378 574 q 365 653 378 635 q 328 678 352 670 q 271 686 304 686 l 214 686 z "},"¿":{"ha":658,"x_min":46,"x_max":603,"o":"m 273 461 l 399 461 q 388 356 399 396 q 352 281 376 315 q 285 202 327 248 q 231 143 256 172 q 189 81 205 115 q 172 0 172 47 q 190 -83 172 -50 q 241 -135 208 -117 q 324 -152 275 -152 q 399 -137 364 -152 q 455 -91 433 -122 q 477 -14 477 -60 l 603 -14 q 565 -146 602 -90 q 466 -232 528 -202 q 324 -262 403 -262 q 174 -231 236 -262 q 79 -143 112 -201 q 46 -4 46 -85 q 71 110 46 58 q 134 208 96 163 q 212 292 172 253 q 250 342 237 316 q 268 398 263 368 q 273 461 273 428 m 405 676 q 386 625 405 646 q 331 604 367 604 q 275 625 294 604 q 256 676 256 646 q 275 727 256 706 q 331 747 294 747 q 386 727 367 747 q 405 676 405 706 z "},"Æ":{"ha":1298,"x_min":-10,"x_max":1275,"o":"m 658 886 l 144 0 l -10 0 l 587 987 l 668 987 l 658 886 m 756 358 l 756 239 l 252 239 l 252 358 l 756 358 m 1275 103 l 1275 0 l 778 0 l 778 103 l 1275 103 m 760 987 l 802 0 l 675 0 l 634 987 l 760 987 m 1178 566 l 1178 463 l 751 463 l 751 566 l 1178 566 m 1233 987 l 1233 884 l 736 884 l 736 987 l 1233 987 z "},"×":{"ha":741,"x_min":60,"x_max":671,"o":"m 141 140 l 60 223 l 589 762 l 669 678 l 141 140 m 591 140 l 62 678 l 143 762 l 671 223 l 591 140 z "},"Ø":{"ha":956,"x_min":81,"x_max":888,"o":"m 888 1028 l 208 -63 l 111 -63 l 793 1028 l 888 1028 m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 348 7 409 -14 q 238 69 287 28 q 153 167 189 109 q 99 299 118 225 q 81 463 81 374 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 611 980 549 1001 q 721 919 672 959 q 804 820 770 878 q 857 688 838 762 q 875 525 875 614 m 745 463 l 745 526 q 734 654 745 597 q 700 755 722 711 q 645 829 677 800 q 570 874 612 859 q 477 890 528 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 222 334 210 391 q 258 232 235 276 q 314 157 281 187 q 389 112 347 127 q 479 97 430 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 z "},"Þ":{"ha":821,"x_min":113,"x_max":758,"o":"m 113 987 l 239 987 l 239 0 l 113 0 l 113 987 m 176 789 l 427 789 q 608 751 534 789 q 720 649 682 714 q 758 500 758 584 q 720 353 758 418 q 608 250 682 288 q 427 213 534 213 l 211 213 l 211 315 l 427 315 q 546 342 500 315 q 611 411 591 369 q 632 499 632 453 q 611 589 632 547 q 546 659 591 632 q 427 686 500 686 l 237 686 l 176 789 z "},"ß":{"ha":826,"x_min":95,"x_max":766,"o":"m 220 754 l 220 0 l 95 0 l 95 754 q 114 885 95 829 q 169 978 134 941 q 253 1035 204 1016 q 361 1054 302 1054 q 493 1029 435 1054 q 583 955 550 1005 q 616 825 616 904 q 603 735 616 771 q 573 671 590 699 q 543 617 556 644 q 530 556 530 591 q 553 489 530 519 q 612 433 577 460 q 683 375 648 406 q 743 306 719 345 q 766 215 766 267 q 733 87 766 138 q 640 11 699 36 q 505 -14 581 -14 q 428 -6 469 -14 q 354 12 387 1 q 302 35 320 23 l 331 140 q 400 107 355 125 q 492 89 445 89 q 578 105 545 89 q 626 149 611 121 q 641 209 641 176 q 617 277 641 248 q 558 334 593 307 q 487 392 523 361 q 428 463 452 422 q 404 557 404 503 q 418 629 404 598 q 451 688 433 661 q 484 746 469 715 q 498 814 498 776 q 481 890 498 860 q 435 936 464 920 q 368 951 406 951 q 288 930 321 951 q 237 866 255 909 q 220 754 220 822 z "},"æ":{"ha":1173,"x_min":54,"x_max":1126,"o":"m 508 124 l 508 488 q 491 572 508 537 q 442 626 475 607 q 363 644 410 644 q 275 627 313 644 q 218 580 238 609 q 197 515 197 551 l 73 528 q 94 615 73 575 q 153 685 115 655 q 244 731 191 715 q 363 747 298 747 q 503 718 443 747 q 596 631 563 689 q 630 487 630 574 l 630 148 l 508 124 m 536 431 l 536 336 l 359 336 q 260 318 300 336 q 199 269 220 299 q 179 203 179 239 q 194 145 179 171 q 240 103 210 119 q 319 88 271 88 q 394 102 355 88 q 464 138 432 116 q 516 184 496 160 q 537 230 536 209 l 602 132 q 544 65 584 99 q 443 8 505 31 q 294 -14 380 -14 q 163 13 217 -14 q 81 90 109 40 q 54 206 54 140 q 73 301 54 260 q 131 372 92 343 q 226 416 169 401 q 357 431 283 431 l 536 431 m 857 -14 q 709 13 773 -14 q 602 89 646 40 q 536 205 559 138 q 514 353 514 273 l 514 382 q 537 530 514 463 q 603 646 561 597 q 703 721 646 694 q 827 747 760 748 q 956 725 900 747 q 1050 659 1012 702 q 1107 555 1088 616 q 1126 418 1126 494 l 1126 338 l 581 338 l 581 434 l 1000 434 l 1000 455 q 983 549 1000 507 q 928 618 966 592 q 827 644 890 644 q 744 624 780 644 q 683 568 708 604 q 646 484 659 532 q 633 382 633 437 l 633 353 q 646 250 633 298 q 686 166 659 202 q 755 109 713 130 q 857 89 798 89 q 987 114 937 89 q 1070 161 1036 138 l 1114 69 q 1066 38 1099 58 q 981 2 1034 18 q 857 -14 929 -14 z "},"ð":{"ha":814,"x_min":85,"x_max":726,"o":"m 173 964 l 212 1072 q 420 991 326 1046 q 583 853 515 935 q 689 664 652 770 q 726 429 726 557 l 726 363 q 702 210 726 279 q 636 91 679 141 q 535 14 593 41 q 408 -14 477 -14 q 278 12 337 -14 q 175 83 218 37 q 109 188 132 128 q 85 317 85 248 q 108 459 85 396 q 172 569 131 523 q 268 639 213 614 q 389 663 323 663 q 527 627 466 663 q 625 534 589 591 q 661 416 661 477 l 614 416 q 602 464 614 439 q 565 511 589 489 q 505 547 541 533 q 419 560 468 560 q 331 543 370 560 q 266 495 292 526 q 225 418 239 463 q 212 317 212 374 q 225 235 212 275 q 263 162 238 195 q 326 109 289 129 q 411 90 363 90 q 490 110 455 90 q 549 168 524 131 q 587 255 574 205 q 600 363 600 304 l 600 431 q 566 640 600 550 q 473 793 532 729 q 337 900 414 858 q 173 964 260 941 m 670 961 l 306 713 l 256 781 l 621 1028 l 670 961 z "},"÷":{"ha":793,"x_min":48,"x_max":725,"o":"m 725 532 l 725 407 l 48 407 l 48 532 l 725 532 m 313 745 q 333 799 313 777 q 391 821 353 821 q 449 799 429 821 q 469 745 469 777 q 449 692 469 713 q 391 671 429 671 q 333 692 353 671 q 313 745 313 713 m 313 191 q 333 245 313 223 q 391 267 353 267 q 449 245 429 267 q 469 191 469 223 q 449 138 469 160 q 391 117 429 117 q 333 138 353 117 q 313 191 313 160 z "},"ø":{"ha":787,"x_min":62,"x_max":730,"o":"m 667 820 l 217 -92 l 134 -92 l 583 820 l 667 820 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"þ":{"ha":800,"x_min":101,"x_max":722,"o":"m 227 1042 l 227 -282 l 101 -282 l 101 1042 l 227 1042 m 722 373 l 722 359 q 703 211 722 279 q 647 92 684 142 q 558 14 611 42 q 437 -14 505 -14 q 313 9 367 -14 q 222 77 260 33 q 163 182 185 121 q 133 321 141 244 l 133 397 q 163 543 141 479 q 223 653 186 608 q 313 723 260 699 q 435 747 366 747 q 557 721 504 747 q 648 644 611 694 q 703 526 684 595 q 722 373 722 457 m 595 359 l 595 373 q 584 476 595 428 q 548 562 572 525 q 487 620 524 599 q 398 642 450 642 q 316 625 351 642 q 256 582 281 609 q 217 519 232 554 q 194 447 201 484 l 194 271 q 220 203 204 235 q 260 145 236 170 q 318 104 284 119 q 399 90 353 90 q 487 111 450 90 q 548 170 524 132 q 584 255 572 207 q 595 359 595 304 z "},"đ":{"ha":830,"x_min":64,"x_max":812,"o":"m 558 142 l 558 1042 l 684 1042 l 684 0 l 569 0 l 558 142 m 64 359 l 64 373 q 85 526 64 457 q 144 644 106 595 q 236 721 182 694 q 355 747 289 747 q 476 723 424 747 q 564 653 528 699 q 621 543 600 608 q 650 397 642 479 l 650 335 q 622 190 643 254 q 564 80 600 125 q 475 11 528 35 q 353 -14 423 -14 q 236 14 289 -14 q 144 92 182 42 q 85 211 106 142 q 64 359 64 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 213 208 q 297 114 260 134 q 385 93 334 93 q 487 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 213 525 q 191 373 191 428 m 812 939 l 812 836 l 380 836 l 380 939 l 812 939 z "},"Ħ":{"ha":973,"x_min":20,"x_max":961,"o":"m 961 791 l 961 694 l 20 694 l 20 791 l 961 791 m 755 563 l 755 456 l 221 456 l 221 563 l 755 563 m 241 987 l 241 0 l 111 0 l 111 987 l 241 987 m 870 987 l 870 0 l 739 0 l 739 987 l 870 987 z "},"ı":{"ha":344,"x_min":106,"x_max":231,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 z "},"ĸ":{"ha":773,"x_min":105,"x_max":738,"o":"m 231 734 l 231 0 l 105 0 l 105 734 l 231 734 m 713 734 l 351 313 l 189 313 l 170 423 l 293 423 l 562 734 l 713 734 m 579 0 l 287 332 l 368 423 l 738 0 l 579 0 z "},"Ł":{"ha":748,"x_min":24,"x_max":713,"o":"m 423 629 l 423 545 l 24 418 l 24 503 l 423 629 m 713 106 l 713 0 l 219 0 l 219 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 z "},"ł":{"ha":376,"x_min":24,"x_max":355,"o":"m 355 631 l 355 548 l 24 421 l 24 504 l 355 631 m 247 1042 l 247 0 l 121 0 l 121 1042 l 247 1042 z "},"Ŋ":{"ha":962,"x_min":110,"x_max":858,"o":"m 110 987 l 241 987 l 241 0 l 110 0 l 110 987 m 149 910 l 241 987 l 819 77 l 727 0 l 149 910 m 727 987 l 858 987 l 858 -57 q 831 -188 858 -134 q 755 -269 804 -241 q 636 -296 705 -296 q 597 -294 615 -296 q 558 -285 578 -292 l 568 -180 q 602 -187 579 -184 q 634 -189 624 -189 q 685 -173 664 -189 q 716 -128 705 -157 q 727 -57 727 -98 l 727 987 z "},"ŋ":{"ha":787,"x_min":99,"x_max":684,"o":"m 224 577 l 224 0 l 99 0 l 99 734 l 212 734 l 224 577 m 186 391 l 157 389 q 176 533 157 467 q 231 646 195 598 q 319 721 267 694 q 436 747 371 747 q 539 731 493 747 q 617 681 585 715 q 667 592 650 646 q 684 463 684 538 l 684 -60 q 658 -189 684 -136 q 583 -269 632 -242 q 465 -296 534 -296 q 426 -294 444 -296 q 388 -285 408 -292 l 397 -178 q 432 -184 408 -182 q 465 -186 456 -186 q 516 -172 495 -186 q 548 -130 536 -158 q 559 -60 559 -102 l 559 460 q 548 546 559 511 q 517 602 538 581 q 467 632 496 623 q 399 642 437 642 q 302 622 342 642 q 236 568 262 602 q 198 488 210 533 q 186 391 186 442 z "},"Œ":{"ha":1324,"x_min":71,"x_max":1221,"o":"m 448 1002 q 551 997 500 1002 q 647 987 602 993 l 647 880 q 552 893 602 888 q 448 899 501 899 q 343 879 390 899 q 264 822 297 860 q 214 728 231 784 q 197 598 197 672 l 197 391 q 214 260 197 317 q 265 166 232 204 q 345 108 298 127 q 449 89 391 89 q 552 94 502 89 q 647 107 603 99 l 647 0 q 551 -9 602 -5 q 449 -14 501 -14 q 295 15 365 -14 q 176 99 226 45 q 98 227 125 153 q 71 391 71 301 l 71 597 q 98 761 71 686 q 175 889 125 835 q 294 972 225 943 q 448 1002 363 1002 m 1221 106 l 1221 0 l 699 0 l 699 106 l 1221 106 m 725 987 l 725 0 l 594 0 l 594 987 l 725 987 m 1152 563 l 1152 456 l 699 456 l 699 563 l 1152 563 m 1215 987 l 1215 880 l 699 880 l 699 987 l 1215 987 z "},"œ":{"ha":1261,"x_min":66,"x_max":1215,"o":"m 935 -14 q 798 13 859 -14 q 693 89 736 40 q 626 205 650 138 q 603 353 603 273 l 603 382 q 628 530 603 463 q 697 646 654 597 q 798 721 741 694 q 916 747 854 748 q 1048 723 992 747 q 1142 655 1105 699 q 1197 552 1179 612 q 1215 420 1215 492 l 1215 338 l 677 338 l 677 440 l 1090 440 l 1090 458 q 1072 550 1090 507 q 1015 618 1053 592 q 916 644 977 644 q 841 624 875 644 q 781 568 806 604 q 743 484 756 532 q 729 382 729 437 l 729 353 q 742 250 729 298 q 781 166 755 202 q 846 109 807 130 q 935 89 884 89 q 1060 110 1010 89 q 1145 162 1111 132 l 1194 77 q 1098 15 1161 44 q 935 -14 1035 -14 m 66 359 l 66 374 q 88 522 66 454 q 153 641 111 590 q 256 719 195 691 q 393 747 316 747 q 532 719 471 747 q 635 641 593 691 q 700 522 677 590 q 722 374 722 454 l 722 359 q 700 211 722 279 q 635 93 677 143 q 532 14 593 42 q 394 -14 471 -14 q 256 14 317 -14 q 153 93 195 42 q 88 211 111 143 q 66 359 66 279 m 192 374 l 192 359 q 204 255 192 304 q 241 169 216 207 q 304 110 266 132 q 394 89 342 89 q 484 110 446 89 q 547 169 522 132 q 584 255 572 207 q 596 359 596 304 l 596 374 q 584 477 596 429 q 547 563 572 526 q 483 623 522 601 q 393 644 445 644 q 303 623 341 644 q 240 563 265 601 q 204 477 216 526 q 192 374 192 429 z "},"ſ":{"ha":345,"x_min":109,"x_max":436,"o":"m 235 0 l 109 0 l 109 811 q 137 945 109 890 q 216 1028 165 1000 q 338 1056 267 1056 q 387 1052 363 1056 q 436 1042 411 1048 l 420 945 q 393 951 408 949 q 358 953 378 953 q 291 936 318 953 q 249 887 263 919 q 235 811 235 856 l 235 0 z "},"Ə":{"ha":960,"x_min":64,"x_max":880,"o":"m 473 -14 q 296 18 372 -14 q 168 108 219 49 q 90 250 116 167 q 64 436 64 333 l 64 520 l 800 520 l 800 419 l 195 419 l 195 396 q 209 278 195 333 q 256 182 224 223 q 342 118 289 141 q 473 94 395 94 q 591 123 539 94 q 678 202 642 151 q 732 319 713 252 q 750 461 750 385 l 750 525 q 732 668 750 602 q 676 785 714 734 q 578 864 638 836 q 435 892 519 892 q 287 873 347 892 q 187 836 227 854 l 155 932 q 208 960 172 943 q 300 988 243 976 q 435 1001 357 1001 q 626 966 543 1001 q 765 868 709 931 q 851 717 822 804 q 880 525 880 630 l 880 461 q 849 269 880 356 q 761 118 817 182 q 631 21 705 55 q 473 -14 557 -14 z "},"ƒ":{"ha":473,"x_min":-20,"x_max":475,"o":"m 412 734 l 412 637 l 275 637 l 275 -60 q 249 -189 275 -136 q 174 -269 222 -242 q 56 -296 125 -296 q 18 -294 35 -296 q -20 -285 0 -292 l -10 -184 q 23 -191 0 -189 q 56 -193 47 -193 q 106 -177 85 -193 q 138 -132 127 -161 q 149 -60 149 -102 l 149 637 l 33 637 l 33 734 l 149 734 l 149 811 q 177 945 149 890 q 256 1028 204 1000 q 378 1056 307 1056 q 427 1052 403 1056 q 475 1042 451 1048 l 460 943 q 430 948 448 946 q 393 949 413 949 q 327 933 353 949 q 288 887 300 918 q 275 811 275 856 l 275 734 l 412 734 z "},"Ơ":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 z "},"ơ":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"Ư":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 z "},"ư":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 z "},"ȷ":{"ha":350,"x_min":-52,"x_max":243,"o":"m 117 734 l 243 734 l 243 -60 q 217 -189 243 -136 q 142 -269 191 -242 q 24 -296 93 -296 q -14 -294 3 -296 q -52 -285 -32 -292 l -42 -184 q -8 -191 -32 -189 q 24 -193 15 -193 q 74 -177 54 -193 q 106 -132 95 -161 q 117 -60 117 -102 l 117 734 z "},"ə":{"ha":732,"x_min":67,"x_max":680,"o":"m 347 749 q 485 722 423 749 q 589 645 546 694 q 656 529 633 596 q 680 382 680 462 l 680 352 q 654 205 680 272 q 585 89 629 138 q 484 13 541 40 q 366 -13 428 -14 q 234 11 290 -13 q 141 79 178 35 q 85 182 104 123 q 67 314 67 242 l 67 397 l 605 397 l 605 294 l 193 294 l 193 277 q 211 185 193 228 q 268 116 229 142 q 366 90 307 90 q 441 110 407 90 q 500 166 475 130 q 539 250 526 202 q 553 352 553 298 l 553 382 q 540 484 553 436 q 501 568 527 532 q 437 625 475 604 q 347 646 398 646 q 222 624 273 646 q 138 572 172 603 l 88 658 q 185 720 122 690 q 347 749 248 749 z "},"ˆ":{"ha":654,"x_min":115,"x_max":526,"o":"m 357 1042 l 526 857 l 526 850 l 421 850 l 319 964 l 218 850 l 115 850 l 115 857 l 281 1042 l 357 1042 z "},"ˇ":{"ha":617,"x_min":96,"x_max":515,"o":"m 202 1041 l 304 926 l 407 1041 l 515 1041 l 515 1034 l 343 848 l 266 848 l 96 1034 l 96 1041 l 202 1041 z "},"ˉ":{"ha":637,"x_min":97,"x_max":552,"o":"m 552 980 l 552 884 l 97 884 l 97 980 l 552 980 z "},"˘":{"ha":593,"x_min":88,"x_max":494,"o":"m 392 1014 l 494 1014 q 469 920 494 961 q 399 856 445 879 q 292 833 354 833 q 143 883 197 833 q 88 1014 88 934 l 190 1014 q 213 943 190 974 q 292 913 236 913 q 369 943 346 913 q 392 1014 392 974 z "},"˙":{"ha":338,"x_min":96,"x_max":245,"o":"m 96 928 q 115 979 96 958 q 170 1000 134 1000 q 225 979 206 1000 q 245 928 245 958 q 225 877 245 898 q 170 857 206 857 q 115 877 134 857 q 96 928 96 898 z "},"˚":{"ha":465,"x_min":82,"x_max":374,"o":"m 82 956 q 101 1027 82 995 q 154 1078 121 1059 q 228 1097 186 1097 q 332 1055 290 1097 q 374 956 374 1014 q 354 885 374 916 q 302 835 335 853 q 228 817 269 817 q 124 857 166 817 q 82 956 82 896 m 149 956 q 171 902 149 926 q 228 878 193 878 q 284 901 262 878 q 307 956 307 924 q 284 1011 307 987 q 228 1036 262 1036 q 171 1011 193 1036 q 149 956 149 987 z "},"˛":{"ha":376,"x_min":34,"x_max":273,"o":"m 209 39 l 259 0 q 203 -45 230 -22 q 160 -95 177 -68 q 143 -151 143 -121 q 155 -186 143 -173 q 196 -200 167 -200 q 236 -194 218 -200 q 264 -182 254 -187 l 273 -264 q 230 -284 256 -275 q 164 -294 204 -294 q 72 -261 109 -294 q 34 -165 34 -229 q 52 -92 34 -128 q 109 -23 70 -56 q 209 39 147 10 z "},"˜":{"ha":655,"x_min":83,"x_max":564,"o":"m 479 1025 l 564 1018 q 544 931 564 968 q 491 873 524 894 q 417 853 458 853 q 360 863 382 853 q 320 885 338 873 q 283 908 302 898 q 235 918 264 918 q 188 896 207 918 q 168 842 168 874 l 83 846 q 103 933 83 896 q 155 992 122 971 q 229 1014 189 1014 q 280 1004 258 1014 q 322 982 302 994 q 363 959 342 969 q 411 949 384 949 q 459 971 439 949 q 479 1025 479 994 z "},"˝":{"ha":518,"x_min":64,"x_max":551,"o":"m 254 836 l 410 1041 l 551 1041 l 369 836 l 254 836 m 64 836 l 180 1041 l 314 1041 l 166 836 l 64 836 z "},"˳":{"ha":408,"x_min":86,"x_max":319,"o":"m 86 -165 q 121 -83 86 -115 q 204 -52 156 -52 q 285 -83 251 -52 q 319 -165 319 -115 q 285 -245 319 -214 q 204 -275 251 -275 q 121 -245 156 -275 q 86 -165 86 -214 m 145 -165 q 162 -204 145 -188 q 204 -221 180 -221 q 244 -205 227 -221 q 260 -165 260 -189 q 244 -123 260 -140 q 204 -106 227 -106 q 162 -123 180 -106 q 145 -165 145 -140 z "},"̀":{"ha":0,"x_min":-581,"x_max":-299,"o":"m -430 1042 l -299 842 l -406 842 l -581 1042 l -430 1042 z "},"́":{"ha":0,"x_min":-446,"x_max":-163,"o":"m -446 842 l -315 1042 l -163 1042 l -345 842 l -446 842 z "},"̃":{"ha":0,"x_min":-601,"x_max":-121,"o":"m -205 1025 l -121 1018 q -140 931 -121 968 q -193 873 -160 894 q -267 853 -226 853 q -324 863 -302 853 q -364 885 -347 873 q -401 908 -382 898 q -449 918 -420 918 q -497 896 -477 918 q -516 842 -516 874 l -601 846 q -582 933 -601 896 q -529 992 -562 971 q -455 1014 -496 1014 q -404 1004 -426 1014 q -362 982 -382 994 q -321 959 -342 969 q -273 949 -300 949 q -225 971 -245 949 q -205 1025 -205 994 z "},"̉":{"ha":0,"x_min":-458,"x_max":-248,"o":"m -353 842 l -443 842 l -444 945 q -387 952 -409 947 q -355 968 -366 958 q -345 996 -345 979 q -354 1020 -345 1010 q -378 1037 -363 1030 q -414 1046 -394 1043 q -458 1048 -435 1048 l -453 1120 q -365 1112 -403 1120 q -300 1086 -326 1103 q -261 1045 -274 1069 q -248 994 -248 1022 q -280 919 -248 942 q -352 890 -313 895 l -353 842 z "},"̏":{"ha":0,"x_min":-668,"x_max":-170,"o":"m -347 849 l -461 849 l -668 1029 l -515 1029 l -347 849 m -170 849 l -271 849 l -438 1029 l -298 1029 l -170 849 z "},"̣":{"ha":0,"x_min":-483,"x_max":-334,"o":"m -483 -167 q -464 -115 -483 -136 q -409 -94 -446 -94 q -354 -115 -373 -94 q -334 -167 -334 -136 q -354 -217 -334 -196 q -409 -237 -373 -237 q -464 -217 -446 -237 q -483 -167 -483 -196 z "},"΄":{"ha":357,"x_min":125,"x_max":279,"o":"m 125 857 l 161 1084 l 279 1084 l 201 857 l 125 857 z "},"΅":{"ha":703,"x_min":77,"x_max":610,"o":"m 294 956 l 326 1135 l 454 1135 l 386 956 l 294 956 m 77 930 q 96 981 77 960 q 151 1002 115 1002 q 207 981 187 1002 q 226 930 226 960 q 207 880 226 901 q 151 859 187 859 q 96 880 115 859 q 77 930 77 901 m 461 928 q 480 980 461 959 q 535 1001 499 1001 q 591 980 572 1001 q 610 928 610 959 q 591 879 610 899 q 535 858 572 858 q 480 879 499 858 q 461 928 461 899 z "},"·":{"ha":363,"x_min":100,"x_max":256,"o":"m 100 494 q 120 548 100 526 q 178 570 140 570 q 236 548 216 570 q 256 494 256 526 q 236 442 256 463 q 178 420 216 420 q 120 442 140 420 q 100 494 100 463 z "},"Γ":{"ha":772,"x_min":121,"x_max":727,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 z "},"Δ":{"ha":979,"x_min":22,"x_max":947,"o":"m 522 895 l 156 0 l 22 0 l 438 987 l 520 987 l 522 895 m 812 0 l 467 901 l 471 987 l 553 987 l 947 0 l 812 0 m 844 106 l 844 0 l 121 0 l 121 106 l 844 106 z "},"∆":{"ha":979,"x_min":22,"x_max":947,"o":"m 522 895 l 156 0 l 22 0 l 438 987 l 520 987 l 522 895 m 812 0 l 467 901 l 471 987 l 553 987 l 947 0 l 812 0 m 844 106 l 844 0 l 121 0 l 121 106 l 844 106 z "},"Θ":{"ha":945,"x_min":70,"x_max":864,"o":"m 651 550 l 651 448 l 301 448 l 301 550 l 651 550 m 864 525 l 864 463 q 836 263 864 351 q 756 113 808 175 q 631 19 704 52 q 468 -14 558 -14 q 337 7 398 -14 q 227 69 276 28 q 142 167 178 109 q 89 299 107 225 q 70 463 70 374 l 70 525 q 99 724 70 636 q 180 874 127 812 q 306 968 233 936 q 467 1001 379 1001 q 600 980 538 1001 q 710 919 662 959 q 793 820 759 878 q 846 688 828 762 q 864 525 864 614 m 734 463 l 734 526 q 723 654 734 597 q 689 755 711 711 q 634 829 667 800 q 559 874 602 859 q 467 890 517 890 q 357 866 406 890 q 273 796 308 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 212 334 199 391 q 247 232 224 276 q 303 157 271 187 q 378 112 336 127 q 468 97 420 97 q 581 121 532 97 q 665 191 631 144 q 717 306 699 237 q 734 463 734 374 z "},"Λ":{"ha":911,"x_min":34,"x_max":870,"o":"m 484 880 l 174 0 l 34 0 l 394 987 l 479 987 l 484 880 m 730 0 l 418 884 l 425 987 l 511 987 l 870 0 l 730 0 z "},"Ξ":{"ha":793,"x_min":81,"x_max":718,"o":"m 81 0 l 81 106 l 718 106 l 718 0 l 81 0 m 140 457 l 140 564 l 652 564 l 652 457 l 140 457 m 84 880 l 84 987 l 706 987 l 706 880 l 84 880 z "},"Π":{"ha":991,"x_min":121,"x_max":869,"o":"m 869 987 l 869 0 l 739 0 l 739 880 l 252 880 l 252 0 l 121 0 l 121 987 l 869 987 z "},"Σ":{"ha":793,"x_min":47,"x_max":741,"o":"m 741 107 l 741 0 l 98 0 l 98 107 l 741 107 m 708 987 l 708 880 l 79 880 l 79 987 l 708 987 m 512 503 l 512 487 l 126 0 l 47 0 l 47 97 l 374 495 l 47 890 l 47 987 l 126 987 l 512 503 z "},"Φ":{"ha":995,"x_min":53,"x_max":947,"o":"m 555 119 l 444 119 q 284 146 356 119 q 160 222 212 173 q 81 339 109 271 q 53 490 53 408 q 102 684 53 600 q 239 815 152 768 q 441 863 326 863 l 557 863 q 715 836 644 863 q 838 759 786 809 q 918 642 890 709 q 947 491 947 574 q 898 297 947 381 q 761 166 849 214 q 555 119 673 119 m 444 227 l 556 227 q 703 260 645 227 q 789 352 760 292 q 817 491 817 411 q 801 600 817 551 q 752 683 785 648 q 672 736 720 718 q 559 755 623 755 l 441 755 q 297 722 355 755 q 211 630 239 689 q 182 490 182 570 q 198 381 182 430 q 246 298 214 333 q 328 245 279 264 q 444 227 378 227 m 566 987 l 566 0 l 435 0 l 435 987 l 566 987 z "},"Ψ":{"ha":961,"x_min":61,"x_max":891,"o":"m 760 987 l 891 987 l 891 631 q 838 420 891 507 q 692 289 785 334 q 480 243 599 243 l 460 243 q 301 269 374 243 q 174 344 228 294 q 91 466 121 393 q 61 631 61 538 l 61 987 l 191 987 l 191 631 q 211 511 191 564 q 267 423 231 459 q 353 369 303 387 q 461 351 402 351 l 481 351 q 627 383 564 351 q 725 478 690 416 q 760 631 760 541 l 760 987 m 536 987 l 536 0 l 406 0 l 406 987 l 536 987 z "},"Ω":{"ha":924,"x_min":77,"x_max":833,"o":"m 701 492 l 701 571 q 684 711 701 650 q 634 812 667 771 q 556 874 602 853 q 454 895 511 895 q 352 874 397 895 q 275 812 307 853 q 227 711 243 771 q 210 571 210 650 l 210 492 q 224 338 210 406 q 266 223 239 271 q 331 148 293 176 q 414 111 368 119 l 414 15 q 279 67 340 24 q 173 177 218 110 q 102 325 127 243 q 77 492 77 406 l 77 570 q 104 745 77 666 q 182 881 132 824 q 301 970 232 939 q 454 1001 370 1001 q 608 970 538 1001 q 728 881 677 939 q 805 745 778 824 q 833 570 833 666 l 833 492 q 808 326 833 407 q 739 177 783 244 q 633 67 694 111 q 500 15 572 24 l 500 111 q 582 148 545 120 q 646 224 619 176 q 686 339 672 272 q 701 492 701 406 m 500 0 l 500 106 l 828 106 l 828 0 l 500 0 m 80 0 l 80 106 l 414 106 l 414 0 l 80 0 z "},"Ω":{"ha":924,"x_min":77,"x_max":833,"o":"m 701 492 l 701 571 q 684 711 701 650 q 634 812 667 771 q 556 874 602 853 q 454 895 511 895 q 352 874 397 895 q 275 812 307 853 q 227 711 243 771 q 210 571 210 650 l 210 492 q 224 338 210 406 q 266 223 239 271 q 331 148 293 176 q 414 111 368 119 l 414 15 q 279 67 340 24 q 173 177 218 110 q 102 325 127 243 q 77 492 77 406 l 77 570 q 104 745 77 666 q 182 881 132 824 q 301 970 232 939 q 454 1001 370 1001 q 608 970 538 1001 q 728 881 677 939 q 805 745 778 824 q 833 570 833 666 l 833 492 q 808 326 833 407 q 739 177 783 244 q 633 67 694 111 q 500 15 572 24 l 500 111 q 582 148 545 120 q 646 224 619 176 q 686 339 672 272 q 701 492 701 406 m 500 0 l 500 106 l 828 106 l 828 0 l 500 0 m 80 0 l 80 106 l 414 106 l 414 0 l 80 0 z "},"α":{"ha":785,"x_min":68,"x_max":776,"o":"m 68 340 l 68 354 q 87 513 68 441 q 142 637 106 585 q 232 719 178 690 q 355 747 286 747 q 450 732 408 747 q 525 686 492 716 q 581 613 557 656 q 618 515 604 570 q 638 394 632 460 l 638 338 q 610 192 631 256 q 555 81 590 127 q 471 10 521 35 q 353 -14 420 -14 q 232 12 286 -14 q 142 85 179 38 q 87 198 106 133 q 68 340 68 262 m 194 354 l 194 340 q 205 242 194 288 q 238 162 216 197 q 297 108 261 127 q 385 89 334 89 q 469 109 434 89 q 529 164 505 130 q 569 244 553 199 q 595 337 585 289 l 595 382 q 572 478 587 431 q 532 563 557 525 q 471 622 507 600 q 386 644 435 644 q 298 621 334 644 q 239 558 262 598 q 205 466 216 518 q 194 354 194 413 m 576 734 l 683 734 l 683 200 q 687 149 683 169 q 699 118 691 130 q 716 103 707 107 q 737 98 726 98 q 750 100 744 98 q 760 102 755 101 l 776 9 q 734 -10 755 -6 q 692 -14 714 -14 q 635 -2 661 -14 q 593 35 610 9 q 566 101 575 60 q 557 200 557 142 l 557 574 l 576 734 z "},"β":{"ha":823,"x_min":109,"x_max":747,"o":"m 351 559 l 450 559 q 611 523 545 559 q 712 427 677 488 q 747 288 747 366 q 708 124 747 192 q 598 22 668 57 q 439 -14 529 -14 q 335 1 387 -14 q 240 47 283 16 q 172 127 197 78 q 146 243 146 176 l 196 271 q 225 180 196 221 q 306 114 254 138 q 427 89 358 89 q 532 114 489 89 q 598 184 576 140 q 621 286 621 229 q 601 377 621 333 q 543 450 581 422 q 448 479 504 479 l 351 479 l 351 559 m 411 1001 q 564 967 499 1001 q 665 873 629 933 q 701 735 701 813 q 665 617 701 671 q 564 532 629 564 q 411 500 498 500 l 351 500 l 351 582 l 408 582 q 505 602 468 582 q 558 657 541 622 q 575 738 575 692 q 557 815 575 779 q 502 875 538 852 q 411 898 466 898 q 321 876 361 898 q 258 815 281 854 q 235 728 235 777 l 235 -260 l 109 -260 l 109 728 q 151 865 109 803 q 260 964 192 927 q 411 1001 329 1001 z "},"γ":{"ha":696,"x_min":32,"x_max":673,"o":"m 415 90 l 415 -283 l 290 -283 l 290 90 l 415 90 m 349 170 l 544 734 l 673 734 l 401 0 l 317 0 l 349 170 m 160 734 l 361 170 l 389 0 l 305 0 l 32 734 l 160 734 z "},"δ":{"ha":787,"x_min":66,"x_max":722,"o":"m 150 861 q 181 967 150 922 q 270 1037 212 1013 q 407 1061 327 1061 q 503 1052 460 1061 q 591 1023 546 1043 l 591 916 q 510 941 559 927 q 404 956 460 956 q 337 944 366 956 q 293 912 309 933 q 277 864 277 892 q 284 835 277 850 q 308 803 291 819 q 355 770 325 787 q 434 737 386 753 q 595 651 531 704 q 690 525 659 597 q 722 360 722 452 l 722 345 q 700 203 722 269 q 635 89 677 138 q 532 14 593 41 q 395 -14 471 -14 q 256 14 317 -14 q 152 89 195 41 q 88 203 110 138 q 66 345 66 269 l 66 360 q 97 507 66 441 q 179 616 128 572 q 290 675 231 661 l 290 678 q 214 723 245 696 q 166 785 182 750 q 150 861 150 821 m 192 360 l 192 345 q 204 247 192 293 q 241 165 216 201 q 304 109 266 130 q 395 89 342 89 q 484 109 446 89 q 546 165 522 130 q 583 247 571 201 q 595 345 595 293 l 595 360 q 581 446 595 404 q 540 524 566 488 q 477 584 513 559 q 396 618 441 609 q 306 597 345 618 q 242 541 267 576 q 204 458 217 505 q 192 360 192 412 z "},"ε":{"ha":749,"x_min":68,"x_max":681,"o":"m 356 398 l 505 398 l 505 325 l 366 325 q 272 312 310 325 q 214 274 233 300 q 194 206 194 248 q 206 161 194 182 q 241 123 218 140 q 298 98 264 107 q 374 88 332 88 q 470 106 429 88 q 533 154 511 125 q 556 217 556 184 l 681 217 q 654 114 681 157 q 584 42 628 70 q 485 0 540 14 q 374 -14 431 -14 q 252 1 308 -14 q 155 45 196 16 q 91 114 113 73 q 68 207 68 155 q 87 289 68 253 q 143 349 106 324 q 234 386 180 373 q 356 398 288 398 m 505 351 l 356 351 q 243 365 294 351 q 156 405 192 379 q 100 463 119 430 q 81 534 81 496 q 101 626 81 586 q 161 692 122 665 q 254 733 199 719 q 374 747 308 747 q 488 732 435 747 q 582 688 541 717 q 646 620 623 660 q 669 530 669 580 l 544 530 q 521 588 544 562 q 460 630 498 614 q 374 645 422 645 q 279 629 317 645 q 224 588 242 613 q 206 534 206 562 q 215 490 206 510 q 243 455 224 470 q 293 433 262 441 q 366 425 323 425 l 505 425 l 505 351 z "},"ζ":{"ha":720,"x_min":74,"x_max":654,"o":"m 597 987 l 654 987 l 654 906 l 416 617 q 327 500 363 555 q 272 388 291 445 q 254 262 254 331 q 260 205 254 229 q 279 164 266 182 q 312 136 292 147 q 361 116 333 124 l 450 90 q 539 63 500 76 q 602 23 579 50 q 625 -60 625 -4 q 605 -135 625 -96 q 557 -207 585 -174 q 505 -260 530 -241 l 439 -203 q 474 -159 460 -179 q 497 -119 489 -138 q 505 -79 505 -100 q 494 -51 505 -64 q 460 -27 483 -38 q 401 -7 437 -16 l 340 9 q 240 46 281 25 q 175 96 200 67 q 139 165 150 125 q 127 258 127 205 q 146 374 127 309 q 207 514 165 439 q 317 670 249 589 l 597 987 m 74 987 l 614 987 l 614 885 l 74 885 l 74 987 z "},"η":{"ha":787,"x_min":99,"x_max":684,"o":"m 224 577 l 224 0 l 99 0 l 99 734 l 212 734 l 224 577 m 199 391 l 146 389 q 165 533 146 467 q 223 646 185 598 q 314 721 260 694 q 436 747 368 747 q 539 734 493 747 q 617 688 585 720 q 667 603 650 656 q 684 471 684 550 l 684 -281 l 559 -281 l 559 469 q 548 553 559 519 q 517 607 538 587 q 467 635 496 627 q 399 644 437 644 q 307 624 345 644 q 245 569 269 604 q 210 488 221 534 q 199 391 199 442 z "},"θ":{"ha":791,"x_min":83,"x_max":707,"o":"m 395 1001 q 500 984 452 1001 q 587 933 549 968 q 652 847 625 899 q 693 723 679 794 q 707 559 707 651 l 707 434 q 693 271 707 342 q 652 145 679 199 q 588 56 626 92 q 502 4 550 21 q 396 -14 454 -14 q 291 4 339 -14 q 204 56 243 21 q 139 145 166 92 q 98 271 112 199 q 83 434 83 342 l 83 559 q 98 723 83 651 q 139 847 112 794 q 203 933 165 899 q 290 984 241 968 q 395 1001 338 1001 m 395 899 q 315 878 350 899 q 257 816 280 857 q 221 716 233 775 q 209 581 209 657 l 209 543 l 581 543 l 581 581 q 573 692 581 642 q 551 781 566 742 q 513 845 536 819 q 461 885 490 871 q 395 899 431 899 m 396 90 q 462 104 433 90 q 514 145 492 118 q 551 212 536 172 q 574 302 566 252 q 581 414 581 353 l 581 441 l 209 441 l 209 414 q 217 302 209 353 q 240 212 224 252 q 278 145 256 172 q 331 104 301 118 q 396 90 360 90 z "},"ι":{"ha":450,"x_min":132,"x_max":399,"o":"m 132 734 l 258 734 l 258 187 q 270 131 258 150 q 300 105 281 112 q 339 99 318 99 q 372 102 355 99 q 398 107 389 105 l 399 5 q 360 -4 384 1 q 302 -9 336 -9 q 217 10 256 -9 q 155 72 178 28 q 132 188 132 115 l 132 734 z "},"λ":{"ha":770,"x_min":26,"x_max":734,"o":"m 366 547 l 165 0 l 26 0 l 311 747 l 399 739 l 366 547 m 178 1029 q 243 1021 216 1029 q 291 998 271 1013 q 325 960 311 982 q 348 911 338 939 l 637 159 q 656 123 647 136 q 677 104 666 110 q 705 98 689 98 q 719 99 711 98 q 730 100 726 99 l 734 -3 q 712 -9 727 -6 q 682 -12 698 -12 q 611 -2 641 -12 q 559 38 582 8 q 515 126 537 67 l 307 663 l 227 858 q 206 899 217 884 q 180 920 195 913 q 145 926 165 926 q 130 926 140 926 q 113 925 119 926 l 113 1021 q 143 1027 123 1025 q 178 1029 163 1029 z "},"ξ":{"ha":681,"x_min":69,"x_max":636,"o":"m 616 975 l 599 874 q 548 886 574 881 q 497 895 523 892 q 444 899 471 899 q 327 881 372 899 q 260 834 281 863 q 239 771 239 805 q 251 710 239 738 q 290 663 264 683 q 359 633 317 644 q 460 623 401 623 l 555 623 l 555 544 l 457 544 q 316 561 379 544 q 208 609 253 578 q 138 680 162 640 q 113 768 113 721 q 136 867 113 824 q 203 940 159 910 q 307 985 246 970 q 442 1001 367 1001 q 506 998 474 1001 q 567 988 538 994 q 616 975 595 982 m 457 595 l 555 595 l 555 519 l 460 519 q 316 496 376 519 q 226 424 257 473 q 195 301 195 376 q 222 199 195 241 q 292 133 249 158 q 385 96 336 109 l 460 79 q 555 50 516 65 q 615 7 594 34 q 636 -68 636 -20 q 615 -143 635 -104 q 568 -214 595 -181 q 517 -267 541 -248 l 444 -210 q 481 -168 465 -186 q 507 -130 497 -149 q 516 -83 516 -110 q 506 -54 516 -66 q 472 -33 495 -42 q 412 -15 450 -24 l 372 -5 q 250 33 305 10 q 154 89 194 55 q 91 176 113 123 q 69 304 69 228 q 98 430 69 376 q 178 521 126 484 q 301 577 230 558 q 457 595 372 595 z "},"π":{"ha":828,"x_min":28,"x_max":806,"o":"m 771 734 l 771 630 l 28 630 l 28 734 l 771 734 m 269 734 l 269 0 l 142 0 l 142 734 l 269 734 m 540 734 l 666 734 l 666 187 q 677 131 666 150 q 707 105 689 112 q 747 99 726 99 q 780 102 762 99 q 806 107 797 105 l 806 5 q 767 -4 791 1 q 709 -9 743 -9 q 625 10 663 -9 q 563 72 586 28 q 540 188 540 115 l 540 734 z "},"ρ":{"ha":787,"x_min":99,"x_max":716,"o":"m 99 -282 l 99 393 q 123 546 99 480 q 189 657 146 612 q 285 725 231 702 q 401 747 340 747 q 539 719 480 747 q 637 637 597 690 q 696 513 677 585 q 716 354 716 441 l 716 340 q 698 198 716 262 q 644 85 680 133 q 555 12 608 38 q 435 -14 503 -14 q 311 9 364 -14 q 220 76 257 33 q 160 182 182 120 q 131 321 138 243 q 147 308 132 321 q 177 283 162 296 q 192 271 192 271 q 230 182 205 224 q 294 115 254 140 q 397 90 335 90 q 484 109 448 90 q 544 162 521 128 q 579 242 568 197 q 590 340 590 288 l 590 354 q 580 466 590 413 q 547 558 570 518 q 489 621 525 598 q 401 644 453 644 q 320 621 354 644 q 266 559 287 597 q 235 477 245 522 q 225 391 225 433 l 224 -282 l 99 -282 z "},"ς":{"ha":747,"x_min":68,"x_max":674,"o":"m 389 747 q 536 716 471 747 q 637 626 600 685 q 674 481 674 566 l 555 481 q 536 564 555 527 q 481 623 518 601 q 389 644 444 644 q 301 622 338 644 q 240 561 264 599 q 206 476 217 522 q 195 381 195 429 l 195 353 q 221 243 195 292 q 302 159 248 195 q 435 102 355 124 q 531 73 489 88 q 598 29 574 58 q 623 -56 623 0 q 603 -130 623 -91 q 556 -201 583 -168 q 505 -254 528 -234 l 438 -197 q 473 -155 459 -173 q 495 -117 488 -136 q 503 -72 503 -98 q 492 -39 503 -52 q 458 -17 481 -26 q 397 0 435 -8 q 218 70 291 24 q 106 187 144 117 q 68 353 68 258 l 68 381 q 90 521 68 455 q 152 638 111 587 q 253 718 193 689 q 389 747 313 747 z "},"σ":{"ha":787,"x_min":66,"x_max":779,"o":"m 66 359 l 66 374 q 88 516 66 451 q 152 631 110 582 q 255 707 195 680 q 393 734 316 734 q 431 719 414 732 q 469 691 448 707 q 525 667 490 676 q 631 590 587 637 q 699 482 675 543 q 722 349 722 421 l 722 334 q 700 203 722 266 q 635 92 677 141 q 532 15 593 43 q 394 -14 471 -14 q 256 15 317 -14 q 153 93 195 43 q 88 212 110 144 q 66 359 66 279 m 191 374 l 191 359 q 203 255 191 304 q 240 170 216 207 q 303 111 265 132 q 394 90 342 90 q 484 111 446 90 q 547 170 522 132 q 583 255 571 207 q 595 359 595 304 l 595 374 q 583 471 595 425 q 546 553 571 517 q 483 610 522 589 q 393 630 445 630 q 303 610 341 630 q 240 553 264 589 q 203 471 216 517 q 191 374 191 425 m 779 734 l 779 630 l 392 630 l 392 734 l 779 734 z "},"τ":{"ha":724,"x_min":55,"x_max":669,"o":"m 669 734 l 669 632 l 55 632 l 55 734 l 669 734 m 291 734 l 416 734 l 416 183 q 426 127 416 146 q 452 100 436 107 q 488 93 469 93 q 523 98 507 93 q 551 111 539 104 l 578 22 q 517 -7 547 -1 q 456 -14 488 -14 q 367 7 404 -14 q 311 72 330 27 q 291 190 291 117 l 291 734 z "},"υ":{"ha":758,"x_min":98,"x_max":688,"o":"m 98 734 l 223 734 l 223 289 q 233 196 223 235 q 262 134 243 158 q 306 100 281 111 q 360 89 331 89 q 448 114 410 89 q 511 182 486 140 q 549 277 536 225 q 562 381 562 329 q 537 562 561 473 q 479 734 513 650 l 611 734 q 649 639 631 692 q 677 522 667 586 q 688 382 688 458 q 669 232 688 304 q 610 105 650 161 q 509 18 570 50 q 366 -14 449 -14 q 255 4 304 -14 q 170 59 205 22 q 116 153 135 96 q 98 290 98 211 l 98 734 z "},"φ":{"ha":979,"x_min":60,"x_max":920,"o":"m 421 -324 l 421 580 q 443 662 421 627 q 502 715 464 696 q 591 734 541 734 q 718 707 659 734 q 823 630 777 680 q 894 514 868 581 q 920 369 920 448 q 896 225 920 294 q 820 102 872 156 q 685 17 768 48 q 484 -14 602 -14 q 287 18 368 -14 q 156 106 206 50 q 83 233 106 161 q 60 382 60 304 q 79 524 60 458 q 138 642 99 589 q 233 734 176 695 l 301 644 q 236 566 261 609 q 199 475 211 522 q 185 382 187 429 q 201 278 185 330 q 251 183 216 226 q 343 115 286 140 q 484 89 400 89 q 666 131 598 89 q 764 238 734 174 q 794 369 794 302 q 780 465 793 418 q 741 549 766 512 q 678 609 715 587 q 591 631 641 631 q 558 616 570 631 q 547 585 547 602 l 547 -324 l 421 -324 z "},"ψ":{"ha":972,"x_min":65,"x_max":913,"o":"m 65 734 l 191 734 l 191 403 q 212 257 191 317 q 273 160 234 197 q 364 106 312 123 q 477 89 416 89 q 624 115 564 89 q 720 184 684 140 q 772 280 755 227 q 788 385 788 332 q 762 564 786 476 q 702 734 738 651 l 834 734 q 873 640 855 692 q 902 524 891 587 q 913 385 913 460 q 891 234 913 306 q 818 106 868 162 q 685 18 768 50 q 484 -14 603 -14 q 311 10 388 -14 q 178 85 233 35 q 94 216 123 136 q 65 404 65 295 l 65 734 m 415 734 l 541 734 l 541 -321 l 415 -321 l 415 734 z "},"ω":{"ha":1144,"x_min":83,"x_max":1059,"o":"m 836 734 l 967 734 q 1013 638 991 691 q 1046 521 1034 585 q 1059 380 1059 457 q 1045 231 1059 302 q 999 105 1030 160 q 916 18 967 50 q 791 -14 864 -14 q 687 8 732 -14 q 610 73 642 30 q 562 178 578 115 q 546 321 546 240 l 546 522 l 634 522 l 634 319 q 645 213 634 256 q 677 141 656 169 q 725 101 697 114 q 784 89 752 89 q 853 112 825 89 q 899 175 882 135 q 925 268 917 216 q 933 380 933 321 q 904 561 931 473 q 836 734 876 650 m 175 734 l 307 734 q 238 561 266 650 q 209 380 211 473 q 214 290 209 333 q 230 210 219 246 q 258 146 241 174 q 300 104 275 119 q 357 89 325 89 q 417 101 390 89 q 465 141 445 114 q 497 213 486 169 q 508 319 508 256 l 508 522 l 596 522 l 596 321 q 580 178 596 240 q 532 73 564 115 q 455 8 500 30 q 351 -14 410 -14 q 248 6 292 -14 q 172 64 203 27 q 121 152 140 102 q 92 260 101 201 q 83 380 83 318 q 96 521 83 457 q 130 638 109 585 q 175 734 151 691 z "},"ϑ":{"ha":804,"x_min":83,"x_max":777,"o":"m 772 527 l 777 426 q 711 408 748 415 q 638 401 674 401 q 420 448 513 401 q 276 576 327 495 q 225 757 225 656 l 225 768 q 255 895 225 842 q 335 975 284 947 q 451 1003 386 1003 q 546 986 504 1003 q 618 937 589 970 q 664 858 648 905 q 680 750 680 810 l 680 296 q 643 126 680 195 q 541 21 606 57 q 387 -14 475 -14 q 263 7 319 -14 q 166 70 207 29 q 104 168 126 111 q 83 296 83 224 l 83 522 l 208 523 l 208 296 q 230 186 208 232 q 292 117 252 141 q 387 93 332 93 q 477 115 440 93 q 535 181 515 136 q 555 296 555 227 l 555 750 q 548 815 555 788 q 529 861 542 843 q 496 887 515 879 q 451 896 477 896 q 400 883 422 896 q 364 843 377 871 q 351 768 351 814 l 351 755 q 384 633 351 690 q 480 543 416 577 q 638 509 545 509 q 708 514 673 509 q 772 527 743 519 z "},"ϒ":{"ha":740,"x_min":-26,"x_max":770,"o":"m 437 466 l 437 0 l 307 0 l 307 466 l 437 466 m 368 516 l 524 869 q 570 946 547 919 q 622 985 593 974 q 685 996 650 996 q 729 992 709 996 q 770 978 749 988 l 745 875 q 731 879 742 878 q 710 881 721 881 q 683 876 696 881 q 659 860 670 871 q 638 827 648 848 l 427 368 l 336 369 l 368 516 m 222 869 l 378 511 l 407 369 l 316 368 l 106 827 q 85 860 96 848 q 61 876 73 871 q 34 881 48 881 q 12 879 23 881 q -2 875 1 878 l -26 977 q 15 992 -5 987 q 58 996 35 996 q 121 986 92 996 q 174 948 149 976 q 222 869 199 921 z "},"ϖ":{"ha":1090,"x_min":51,"x_max":1060,"o":"m 1060 734 l 1060 631 l 51 631 l 51 734 l 1060 734 m 787 734 l 920 734 q 965 638 944 691 q 998 521 985 585 q 1011 380 1011 457 q 1003 260 1011 318 q 977 152 994 201 q 930 64 959 102 q 861 6 901 27 q 768 -14 821 -14 q 664 8 709 -14 q 587 73 618 30 q 540 178 556 115 q 524 321 524 240 l 524 490 l 612 490 l 612 319 q 623 213 612 256 q 654 141 634 169 q 702 101 675 114 q 762 89 729 89 q 809 104 789 89 q 844 146 829 119 q 868 210 859 173 q 881 290 877 246 q 886 380 886 333 q 856 561 883 473 q 787 734 828 650 m 178 734 l 310 734 q 241 561 269 650 q 212 380 214 473 q 216 290 212 333 q 230 210 220 246 q 253 146 239 174 q 288 104 268 119 q 336 89 309 89 q 395 101 368 89 q 443 141 422 114 q 474 213 463 169 q 486 319 486 256 l 486 490 l 574 490 l 574 321 q 557 178 574 240 q 510 73 541 115 q 433 8 478 30 q 329 -14 387 -14 q 236 6 276 -14 q 167 64 195 27 q 120 152 138 102 q 94 260 102 201 q 85 380 85 318 q 98 521 85 457 q 133 638 111 585 q 178 734 154 691 z "},"Ђ":{"ha":1042,"x_min":29,"x_max":989,"o":"m 389 441 l 389 554 q 470 580 425 568 q 559 598 515 591 q 637 605 603 605 q 825 569 747 605 q 946 463 904 532 q 989 294 989 393 q 967 167 989 223 q 904 72 946 111 q 799 13 862 33 q 651 -8 735 -8 l 650 94 q 748 109 708 94 q 812 149 788 123 q 847 212 836 176 q 858 293 858 249 q 833 401 858 357 q 759 469 808 446 q 636 492 709 492 q 551 486 593 492 q 467 468 508 479 q 389 441 426 457 m 441 987 l 441 0 l 311 0 l 311 987 l 441 987 m 795 987 l 795 880 l 29 880 l 29 987 l 795 987 z "},"Є":{"ha":937,"x_min":83,"x_max":844,"o":"m 601 552 l 601 446 l 196 446 l 196 552 l 601 552 m 713 314 l 844 314 q 790 146 834 220 q 667 30 747 73 q 470 -14 588 -14 q 311 19 382 -14 q 189 112 240 52 q 111 256 138 172 q 83 444 83 340 l 83 542 q 111 730 83 646 q 190 876 138 815 q 316 968 242 936 q 481 1001 389 1001 q 670 959 593 1001 q 791 843 747 917 q 844 671 834 768 l 713 671 q 678 790 704 740 q 605 867 652 840 q 481 894 557 894 q 366 869 416 894 q 282 797 316 844 q 232 686 249 751 q 215 543 215 622 l 215 444 q 225 333 215 386 q 254 237 235 281 q 304 160 274 193 q 376 111 335 128 q 470 93 417 93 q 602 119 553 93 q 677 195 652 145 q 713 314 703 244 z "},"Љ":{"ha":1488,"x_min":34,"x_max":1429,"o":"m 254 987 l 385 987 l 362 504 q 346 318 357 399 q 315 176 335 236 q 262 77 294 116 q 182 19 229 38 q 69 0 135 0 l 34 0 l 34 106 l 61 109 q 126 126 99 111 q 173 170 154 140 q 205 248 193 200 q 224 364 217 295 q 235 525 231 433 l 254 987 m 744 987 l 744 880 l 299 880 l 299 987 l 744 987 m 825 605 l 1095 605 q 1277 566 1203 605 q 1390 458 1352 526 q 1429 302 1429 389 q 1407 182 1429 237 q 1343 86 1385 127 q 1238 22 1300 45 q 1095 0 1176 0 l 726 0 l 726 987 l 857 987 l 857 106 l 1095 106 q 1212 135 1167 106 q 1278 209 1257 163 q 1299 303 1299 254 q 1278 397 1299 353 q 1212 470 1257 441 q 1095 498 1167 498 l 825 498 l 825 605 z "},"Њ":{"ha":1501,"x_min":121,"x_max":1441,"o":"m 756 559 l 756 453 l 231 453 l 231 559 l 756 559 m 252 987 l 252 0 l 121 0 l 121 987 l 252 987 m 838 574 l 1107 574 q 1290 538 1215 574 q 1402 438 1364 502 q 1441 290 1441 374 q 1419 174 1441 227 q 1355 82 1398 121 q 1250 22 1312 43 q 1107 0 1188 0 l 738 0 l 738 987 l 869 987 l 869 113 l 1107 113 q 1224 138 1179 113 q 1291 204 1270 163 q 1312 292 1312 245 q 1291 378 1312 338 q 1224 443 1270 418 q 1107 468 1179 468 l 838 468 l 838 574 z "},"Ћ":{"ha":1131,"x_min":42,"x_max":1012,"o":"m 1012 0 l 882 0 l 882 309 q 859 429 882 386 q 791 490 836 472 q 677 507 745 507 q 598 504 636 507 q 523 494 559 500 q 451 480 486 488 q 380 460 415 471 l 380 568 q 447 587 414 578 q 514 602 479 595 q 589 611 549 608 q 677 614 629 614 q 857 584 782 614 q 972 487 932 554 q 1012 309 1012 420 l 1012 0 m 450 987 l 450 0 l 319 0 l 319 987 l 450 987 m 808 987 l 808 880 l 42 880 l 42 987 l 808 987 z "},"Џ":{"ha":990,"x_min":119,"x_max":868,"o":"m 119 0 l 119 987 l 251 987 l 251 106 l 737 106 l 737 987 l 868 987 l 868 0 l 119 0 m 564 94 l 564 -243 l 433 -243 l 433 94 l 564 94 z "},"Б":{"ha":876,"x_min":111,"x_max":814,"o":"m 717 987 l 717 880 l 241 880 l 241 0 l 111 0 l 111 987 l 717 987 m 210 585 l 479 585 q 663 549 588 585 q 776 448 737 513 q 814 295 814 382 q 793 176 814 230 q 728 82 771 122 q 623 21 686 43 q 479 0 561 0 l 111 0 l 111 987 l 241 987 l 241 106 l 479 106 q 597 133 552 106 q 663 203 642 160 q 684 296 684 247 q 663 387 684 346 q 597 453 642 429 q 479 478 552 478 l 210 478 l 210 585 z "},"Д":{"ha":1044,"x_min":35,"x_max":1005,"o":"m 891 106 l 891 0 l 144 0 l 144 106 l 891 106 m 165 106 l 165 -243 l 35 -243 l 35 106 l 165 106 m 1005 106 l 1004 -242 l 874 -242 l 874 106 l 1005 106 m 763 987 l 763 880 l 330 880 l 330 987 l 763 987 m 876 987 l 876 0 l 745 0 l 745 987 l 876 987 m 286 987 l 416 987 l 396 590 q 379 425 392 500 q 347 287 366 349 q 304 175 328 224 q 252 91 279 126 q 194 32 224 55 q 133 0 163 9 l 73 0 l 73 106 l 115 106 q 156 161 133 125 q 201 255 178 197 q 241 395 224 312 q 264 590 258 477 l 286 987 z "},"Ж":{"ha":1261,"x_min":18,"x_max":1252,"o":"m 397 451 l 45 987 l 198 987 l 460 559 l 646 559 l 625 451 l 397 451 m 468 461 l 181 0 l 18 0 l 385 574 l 468 461 m 703 987 l 703 0 l 573 0 l 573 987 l 703 987 m 1226 987 l 872 451 l 651 451 l 631 559 l 810 559 l 1072 987 l 1226 987 m 1089 0 l 803 461 l 886 574 l 1252 0 l 1089 0 z "},"З":{"ha":825,"x_min":54,"x_max":767,"o":"m 417 474 l 300 474 l 300 557 l 412 557 q 533 578 487 557 q 600 637 579 600 q 621 723 621 674 q 598 809 621 770 q 527 871 575 848 q 403 895 479 895 q 300 873 346 895 q 227 814 254 852 q 199 728 199 777 l 68 728 q 95 841 68 791 q 168 927 121 892 q 274 982 214 963 q 403 1001 335 1001 q 547 983 482 1001 q 657 930 611 965 q 728 842 703 895 q 752 721 752 790 q 728 625 752 670 q 661 547 705 581 q 555 493 616 513 q 417 474 493 474 m 300 532 l 417 532 q 566 515 500 532 q 675 465 631 498 q 744 385 720 433 q 767 275 767 337 q 740 153 767 206 q 665 62 713 99 q 549 5 616 24 q 403 -14 482 -14 q 277 3 339 -14 q 165 55 215 20 q 84 144 115 90 q 54 274 54 198 l 185 274 q 213 183 185 224 q 289 117 240 142 q 403 92 338 92 q 529 116 477 92 q 609 180 581 139 q 636 273 636 221 q 622 352 636 318 q 579 407 607 385 q 509 439 551 429 q 412 450 467 450 l 300 450 l 300 532 z "},"И":{"ha":991,"x_min":121,"x_max":868,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 z "},"Л":{"ha":983,"x_min":33,"x_max":862,"o":"m 749 987 l 749 880 l 298 880 l 298 987 l 749 987 m 862 987 l 862 0 l 731 0 l 731 987 l 862 987 m 253 987 l 383 987 l 361 504 q 345 318 356 399 q 313 176 334 236 q 260 77 293 116 q 181 19 228 38 q 68 0 134 0 l 33 0 l 33 106 l 60 109 q 125 126 98 111 q 172 170 153 140 q 203 248 191 200 q 223 364 216 295 q 234 525 230 433 l 253 987 z "},"У":{"ha":873,"x_min":52,"x_max":832,"o":"m 420 328 l 682 987 l 832 987 l 483 165 q 450 98 468 130 q 405 41 431 66 q 339 1 378 16 q 243 -14 300 -14 q 204 -13 227 -14 q 175 -9 182 -11 l 179 96 q 208 93 186 94 q 240 92 230 92 q 301 108 279 92 q 337 148 323 123 q 363 197 351 172 l 420 328 m 199 987 l 473 372 l 506 251 l 396 243 l 52 987 l 199 987 z "},"Ф":{"ha":1072,"x_min":57,"x_max":1022,"o":"m 457 889 l 621 889 q 779 860 706 889 q 906 779 852 831 q 991 653 961 726 q 1022 492 1022 580 q 991 330 1022 404 q 906 204 961 257 q 779 122 852 151 q 621 93 706 93 l 457 93 q 299 122 372 93 q 172 203 227 151 q 87 329 117 256 q 57 490 57 402 q 87 651 57 578 q 172 778 117 724 q 299 860 227 831 q 457 889 372 889 m 457 786 q 307 749 368 786 q 213 646 245 712 q 181 490 181 579 q 199 369 181 423 q 252 276 217 315 q 339 216 288 237 q 457 195 391 195 l 622 195 q 771 232 710 195 q 865 336 833 269 q 897 492 897 403 q 879 612 897 558 q 826 705 861 667 q 740 765 791 744 q 622 786 688 786 l 457 786 m 602 1028 l 602 -41 l 477 -41 l 477 1028 l 602 1028 z "},"Ц":{"ha":1016,"x_min":119,"x_max":971,"o":"m 971 110 l 959 -238 l 842 -238 l 842 0 l 745 0 l 745 110 l 971 110 m 119 0 l 119 987 l 250 987 l 250 106 l 736 106 l 736 987 l 867 987 l 867 0 l 119 0 z "},"Ч":{"ha":951,"x_min":102,"x_max":831,"o":"m 102 987 l 233 987 l 233 679 q 256 559 233 602 q 323 498 278 515 q 437 480 369 480 q 516 484 477 480 q 591 493 554 487 q 663 508 627 499 q 733 527 699 517 l 733 420 q 667 401 700 410 q 599 386 634 392 q 525 376 564 380 q 437 373 485 373 q 257 403 332 373 q 142 500 182 433 q 102 679 102 568 l 102 987 m 700 987 l 831 987 l 831 0 l 700 0 l 700 987 z "},"Ш":{"ha":1307,"x_min":119,"x_max":1188,"o":"m 119 987 l 251 987 l 251 106 l 590 106 l 590 987 l 720 987 l 720 106 l 1057 106 l 1057 987 l 1188 987 l 1188 0 l 119 0 l 119 987 z "},"Щ":{"ha":1345,"x_min":119,"x_max":1288,"o":"m 1288 103 l 1276 -238 l 1163 -238 l 1163 0 l 1067 0 l 1067 103 l 1288 103 m 119 987 l 251 987 l 251 106 l 590 106 l 590 987 l 720 987 l 720 106 l 1057 106 l 1057 987 l 1188 987 l 1188 0 l 119 0 l 119 987 z "},"Ъ":{"ha":1054,"x_min":12,"x_max":994,"o":"m 12 884 l 12 987 l 321 987 l 321 884 l 12 884 m 389 585 l 658 585 q 841 549 766 585 q 955 448 916 513 q 994 295 994 382 q 971 176 994 230 q 907 82 949 122 q 802 21 864 43 q 658 0 739 0 l 290 0 l 290 987 l 420 987 l 420 106 l 658 106 q 775 133 730 106 q 842 203 821 160 q 863 296 863 247 q 842 387 863 346 q 775 453 821 429 q 658 478 730 478 l 389 478 l 389 585 z "},"Ы":{"ha":1201,"x_min":121,"x_max":1075,"o":"m 220 585 l 490 585 q 673 549 598 585 q 786 448 747 513 q 825 295 825 382 q 803 176 825 230 q 739 82 781 122 q 633 21 696 43 q 490 0 571 0 l 121 0 l 121 987 l 252 987 l 252 106 l 490 106 q 607 133 562 106 q 673 203 652 160 q 694 296 694 247 q 673 387 694 346 q 607 453 652 429 q 490 478 562 478 l 220 478 l 220 585 m 1075 987 l 1075 0 l 944 0 l 944 987 l 1075 987 z "},"Ь":{"ha":871,"x_min":111,"x_max":814,"o":"m 210 585 l 479 585 q 663 549 588 585 q 776 448 737 513 q 814 295 814 382 q 793 176 814 230 q 728 82 771 122 q 623 21 686 43 q 479 0 561 0 l 111 0 l 111 987 l 241 987 l 241 106 l 479 106 q 597 133 552 106 q 663 203 642 160 q 684 296 684 247 q 663 387 684 346 q 597 453 642 429 q 479 478 552 478 l 210 478 l 210 585 z "},"Э":{"ha":937,"x_min":100,"x_max":860,"o":"m 746 546 l 746 439 l 341 439 l 341 546 l 746 546 m 100 314 l 231 314 q 267 195 241 244 q 342 119 292 145 q 475 93 391 93 q 589 120 541 93 q 668 196 637 148 q 714 308 699 244 q 730 444 730 372 l 730 543 q 719 660 730 606 q 686 757 708 714 q 632 831 665 800 q 558 878 600 861 q 463 894 515 894 q 339 867 387 894 q 266 790 292 840 q 231 671 241 740 l 100 671 q 154 843 111 768 q 274 959 197 917 q 463 1001 351 1001 q 628 968 555 1001 q 753 876 701 936 q 832 730 805 815 q 860 542 860 646 l 860 444 q 832 256 860 340 q 754 112 805 172 q 632 19 703 52 q 475 -14 562 -14 q 277 30 356 -14 q 154 146 197 73 q 100 314 111 220 z "},"Ю":{"ha":1242,"x_min":124,"x_max":1190,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 481 535 l 481 432 l 247 432 l 247 535 l 481 535 m 1190 525 l 1190 463 q 1162 263 1190 351 q 1082 113 1135 175 q 957 19 1030 52 q 794 -14 884 -14 q 634 19 707 -14 q 508 113 561 52 q 425 263 454 175 q 396 463 396 351 l 396 525 q 425 724 396 636 q 507 874 454 812 q 632 968 559 936 q 793 1001 705 1001 q 956 968 883 1001 q 1081 874 1029 936 q 1162 724 1134 812 q 1190 525 1190 636 m 1061 463 l 1061 526 q 1043 682 1061 614 q 990 796 1025 750 q 906 866 956 842 q 793 890 856 890 q 683 866 732 890 q 598 796 633 842 q 545 682 564 750 q 526 526 526 614 l 526 463 q 545 306 526 374 q 599 191 564 237 q 684 121 635 144 q 794 97 733 97 q 907 121 858 97 q 991 191 957 144 q 1043 306 1025 237 q 1061 463 1061 374 z "},"Я":{"ha":884,"x_min":61,"x_max":763,"o":"m 663 385 l 385 385 l 321 411 q 156 515 214 445 q 98 690 98 585 q 141 852 98 785 q 261 953 183 918 q 447 987 340 987 l 763 987 l 763 0 l 632 0 l 632 880 l 447 880 q 284 829 338 880 q 229 690 229 777 q 253 588 229 633 q 325 517 277 543 q 443 492 372 492 l 663 492 l 663 385 m 440 452 l 200 0 l 61 0 l 308 452 l 440 452 z "},"б":{"ha":768,"x_min":66,"x_max":722,"o":"m 566 1053 l 669 1053 q 649 948 669 987 q 594 888 629 909 q 515 856 559 867 q 425 835 471 845 q 316 797 366 823 q 231 723 267 770 q 179 600 195 675 q 170 412 162 524 l 170 349 l 66 349 l 66 412 q 91 631 66 537 q 159 789 115 724 q 263 891 203 853 q 397 943 324 929 q 488 965 450 954 q 546 998 526 977 q 566 1053 566 1018 m 418 692 q 546 667 490 692 q 642 597 602 642 q 702 491 681 552 q 722 359 722 431 l 722 345 q 700 202 722 268 q 636 89 678 137 q 533 13 593 40 q 395 -14 472 -14 q 257 13 317 -14 q 153 89 196 40 q 89 202 111 137 q 66 345 66 268 l 66 359 q 73 393 66 376 q 88 426 79 409 q 104 462 97 443 q 173 575 130 523 q 278 660 217 627 q 418 692 340 692 m 393 589 q 280 557 324 589 q 214 473 235 526 q 192 359 192 420 l 192 345 q 204 247 192 293 q 241 165 216 201 q 304 109 266 130 q 395 89 342 89 q 485 109 447 89 q 547 165 523 130 q 584 247 572 201 q 596 345 596 293 l 596 359 q 584 447 596 406 q 547 520 572 488 q 484 571 522 552 q 393 589 446 589 z "},"в":{"ha":794,"x_min":107,"x_max":722,"o":"m 440 323 l 199 323 l 198 423 l 395 423 q 492 435 453 423 q 551 469 531 446 q 570 526 570 492 q 559 573 570 553 q 526 606 548 593 q 470 626 503 619 q 393 632 437 632 l 233 632 l 233 0 l 107 0 l 107 734 l 393 734 q 519 722 463 734 q 615 685 575 709 q 675 622 654 660 q 696 532 696 584 q 683 469 696 499 q 643 416 669 439 q 578 379 616 393 q 489 360 539 364 l 440 323 m 440 0 l 154 0 l 216 102 l 440 102 q 527 115 492 102 q 579 153 562 128 q 596 212 596 178 q 579 272 596 247 q 527 310 562 296 q 440 323 492 323 l 250 323 l 251 423 l 489 423 l 534 385 q 637 355 595 380 q 701 292 679 330 q 722 209 722 254 q 703 118 722 157 q 647 53 684 79 q 558 13 610 26 q 440 0 506 0 z "},"г":{"ha":583,"x_min":105,"x_max":570,"o":"m 570 734 l 570 630 l 231 630 l 231 0 l 105 0 l 105 734 l 570 734 z "},"д":{"ha":838,"x_min":31,"x_max":795,"o":"m 228 734 l 353 734 l 342 459 q 319 279 338 355 q 269 150 299 203 q 200 60 238 96 q 123 0 163 24 l 60 0 l 64 102 l 90 103 q 133 158 112 130 q 172 225 154 186 q 201 320 189 264 q 216 459 213 377 l 228 734 m 259 734 l 701 734 l 701 0 l 575 0 l 575 618 l 259 618 l 259 734 m 32 103 l 795 103 l 795 -216 l 669 -216 l 669 0 l 157 0 l 157 -216 l 31 -216 l 32 103 z "},"ж":{"ha":1064,"x_min":15,"x_max":1044,"o":"m 318 319 l 40 734 l 191 734 l 381 430 l 528 430 l 509 319 l 318 319 m 387 332 l 174 0 l 15 0 l 307 423 l 387 332 m 592 734 l 592 0 l 467 0 l 467 734 l 592 734 m 1020 734 l 742 319 l 551 319 l 531 430 l 678 430 l 868 734 l 1020 734 m 886 0 l 672 332 l 753 423 l 1044 0 l 886 0 z "},"з":{"ha":705,"x_min":60,"x_max":638,"o":"m 370 351 l 235 351 l 235 428 l 359 428 q 442 441 412 428 q 486 478 473 454 q 498 534 498 502 q 484 588 498 562 q 437 629 469 613 q 352 645 406 645 q 273 630 309 645 q 217 588 238 614 q 197 530 197 562 l 71 530 q 110 645 71 597 q 212 720 148 694 q 352 747 276 747 q 466 733 416 747 q 552 692 517 719 q 606 626 587 665 q 625 534 625 586 q 607 463 625 496 q 556 405 589 430 q 476 365 523 379 q 370 351 429 351 m 235 398 l 370 398 q 486 386 435 398 q 570 349 536 373 q 621 289 604 324 q 638 207 638 253 q 617 114 638 155 q 559 45 597 73 q 468 1 521 16 q 352 -14 416 -14 q 214 11 281 -14 q 103 86 146 35 q 60 217 60 138 l 185 217 q 206 154 185 184 q 265 106 227 124 q 352 87 302 87 q 440 104 405 87 q 493 147 475 120 q 511 206 511 174 q 495 273 511 248 q 445 310 479 298 q 359 321 412 321 l 235 321 l 235 398 z "},"и":{"ha":802,"x_min":106,"x_max":696,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 z "},"к":{"ha":751,"x_min":106,"x_max":738,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 713 734 l 366 313 l 190 313 l 171 423 l 315 423 l 561 734 l 713 734 m 578 0 l 309 332 l 389 423 l 738 0 l 578 0 z "},"л":{"ha":803,"x_min":30,"x_max":696,"o":"m 586 734 l 586 630 l 231 630 l 231 734 l 586 734 m 696 734 l 696 0 l 571 0 l 571 734 l 696 734 m 201 734 l 327 734 l 308 380 q 293 235 303 298 q 264 127 282 172 q 219 55 246 83 q 155 13 193 26 q 69 0 118 0 l 30 0 l 30 111 l 57 113 q 107 126 86 115 q 142 160 127 138 q 165 219 156 183 q 179 304 174 255 q 187 420 184 354 l 201 734 z "},"м":{"ha":1030,"x_min":107,"x_max":924,"o":"m 517 167 l 767 734 l 888 734 l 561 0 l 474 0 l 149 734 l 269 734 l 517 167 m 233 734 l 233 0 l 107 0 l 107 734 l 233 734 m 798 0 l 798 734 l 924 734 l 924 0 l 798 0 z "},"н":{"ha":801,"x_min":106,"x_max":695,"o":"m 593 416 l 593 314 l 205 314 l 205 416 l 593 416 m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 695 734 l 695 0 l 569 0 l 569 734 l 695 734 z "},"п":{"ha":802,"x_min":106,"x_max":696,"o":"m 585 734 l 585 630 l 214 630 l 214 734 l 585 734 m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 696 734 l 696 0 l 570 0 l 570 734 l 696 734 z "},"т":{"ha":668,"x_min":27,"x_max":641,"o":"m 395 734 l 395 0 l 269 0 l 269 734 l 395 734 m 641 734 l 641 632 l 27 632 l 27 734 l 641 734 z "},"ф":{"ha":1008,"x_min":68,"x_max":939,"o":"m 939 354 l 939 340 q 922 198 939 262 q 872 85 905 133 q 789 12 838 38 q 674 -14 739 -14 q 580 0 621 -14 q 511 43 539 15 q 466 110 483 71 q 444 197 450 149 l 444 523 q 466 616 450 575 q 511 687 483 658 q 579 732 539 716 q 673 747 619 747 q 768 729 726 747 q 843 675 810 710 q 896 592 875 641 q 928 484 918 544 q 939 354 939 423 m 814 340 l 814 354 q 807 445 814 401 q 788 524 801 488 q 753 587 774 560 q 703 629 732 614 q 635 644 673 644 q 568 634 595 644 q 526 607 541 624 q 505 572 511 591 l 505 147 q 528 119 513 132 q 570 97 544 106 q 637 89 597 89 q 718 108 684 89 q 773 162 751 127 q 804 242 794 197 q 814 340 814 288 m 68 340 l 68 354 q 79 484 68 423 q 111 592 90 544 q 165 675 133 641 q 240 729 197 710 q 335 747 282 747 q 426 732 387 747 q 492 687 465 716 q 536 616 519 658 q 559 523 552 575 l 559 210 q 536 117 553 159 q 493 46 520 76 q 426 1 466 17 q 334 -14 387 -14 q 219 12 269 -14 q 136 85 170 38 q 85 198 102 133 q 68 340 68 262 m 194 354 l 194 340 q 203 242 194 288 q 232 162 212 197 q 285 108 252 127 q 365 89 317 89 q 432 99 406 89 q 474 125 458 109 q 498 159 490 142 l 498 572 q 476 607 491 591 q 434 634 460 624 q 366 644 408 644 q 286 621 319 644 q 232 558 252 598 q 203 466 212 518 q 194 354 194 413 m 435 -282 l 435 1042 l 562 1042 l 562 -282 l 435 -282 z "},"ц":{"ha":823,"x_min":106,"x_max":783,"o":"m 106 0 l 106 734 l 232 734 l 232 103 l 570 103 l 570 734 l 696 734 l 696 0 l 106 0 m 783 103 l 770 -218 l 659 -218 l 659 0 l 563 0 l 563 103 l 783 103 z "},"ч":{"ha":755,"x_min":71,"x_max":649,"o":"m 649 734 l 649 0 l 524 0 l 524 734 l 649 734 m 606 397 l 606 294 q 529 268 568 279 q 447 251 490 257 q 354 244 404 244 q 203 274 267 244 q 105 366 140 304 q 71 521 71 427 l 71 735 l 196 735 l 196 521 q 214 422 196 460 q 268 366 233 384 q 354 348 303 348 q 446 354 403 348 q 529 372 489 361 q 606 397 568 382 z "},"ш":{"ha":1124,"x_min":106,"x_max":1020,"o":"m 106 734 l 232 734 l 232 103 l 500 103 l 500 734 l 627 734 l 627 103 l 895 103 l 895 734 l 1020 734 l 1020 0 l 106 0 l 106 734 z "},"щ":{"ha":1149,"x_min":99,"x_max":1116,"o":"m 1116 103 l 1103 -218 l 991 -218 l 991 0 l 896 0 l 896 103 l 1116 103 m 99 734 l 224 734 l 224 103 l 493 103 l 493 734 l 619 734 l 619 103 l 887 103 l 887 734 l 1013 734 l 1013 0 l 99 0 l 99 734 z "},"ъ":{"ha":862,"x_min":20,"x_max":825,"o":"m 342 734 l 342 631 l 20 631 l 20 734 l 342 734 m 330 481 l 551 481 q 701 451 640 481 q 793 366 762 420 q 825 243 825 312 q 807 148 825 193 q 754 71 789 104 q 668 19 720 37 q 551 0 617 0 l 238 0 l 238 734 l 364 734 l 364 103 l 551 103 q 637 123 605 103 q 684 174 669 142 q 698 239 698 205 q 684 304 698 272 q 637 357 669 336 q 551 378 605 378 l 330 378 l 330 481 z "},"ы":{"ha":1078,"x_min":107,"x_max":954,"o":"m 199 481 l 419 481 q 569 451 508 481 q 662 366 630 420 q 693 243 693 312 q 675 148 693 193 q 623 71 658 104 q 537 19 588 37 q 419 0 486 0 l 107 0 l 107 734 l 233 734 l 233 103 l 419 103 q 506 123 473 103 q 553 174 538 142 q 567 239 567 205 q 553 304 567 272 q 506 357 538 336 q 419 378 473 378 l 199 378 l 199 481 m 954 734 l 954 0 l 829 0 l 829 734 l 954 734 z "},"ь":{"ha":754,"x_min":107,"x_max":693,"o":"m 199 481 l 419 481 q 569 451 508 481 q 662 366 630 420 q 693 243 693 312 q 675 148 693 193 q 623 71 658 104 q 537 19 588 37 q 419 0 486 0 l 107 0 l 107 734 l 233 734 l 233 103 l 419 103 q 506 123 473 103 q 553 174 538 142 q 567 239 567 205 q 553 304 567 272 q 506 357 538 336 q 419 378 473 378 l 199 378 l 199 481 z "},"э":{"ha":747,"x_min":68,"x_max":673,"o":"m 353 644 q 274 626 311 644 q 212 575 236 608 q 188 501 188 543 l 68 501 q 109 623 68 567 q 214 713 149 679 q 353 747 279 747 q 490 718 430 747 q 590 638 549 689 q 652 521 631 587 q 673 381 673 455 l 673 353 q 652 213 673 279 q 590 95 631 146 q 489 15 549 44 q 353 -14 430 -14 q 207 21 271 -14 q 105 116 142 56 q 68 252 68 176 l 188 252 q 210 169 188 206 q 269 111 232 132 q 353 89 307 89 q 441 112 404 89 q 502 173 478 135 q 537 258 526 211 q 548 353 548 305 l 548 381 q 537 476 548 429 q 502 561 526 523 q 442 622 479 599 q 353 644 405 644 m 609 425 l 609 323 l 271 323 l 271 425 l 609 425 z "},"ю":{"ha":1134,"x_min":107,"x_max":1074,"o":"m 513 422 l 513 320 l 123 320 l 123 422 l 513 422 m 233 734 l 233 0 l 107 0 l 107 734 l 233 734 m 406 359 l 406 374 q 429 522 406 454 q 496 641 452 590 q 601 719 540 691 q 739 747 663 747 q 879 719 817 747 q 984 641 941 691 q 1051 522 1028 590 q 1074 374 1074 454 l 1074 359 q 1051 212 1074 279 q 985 93 1028 144 q 880 15 941 43 q 741 -14 818 -14 q 602 15 663 -14 q 496 93 540 43 q 429 212 452 144 q 406 359 406 279 m 532 374 l 532 359 q 545 255 532 304 q 584 170 558 207 q 649 111 610 132 q 741 90 688 90 q 832 111 793 90 q 897 170 871 132 q 936 255 922 207 q 949 359 949 304 l 949 374 q 936 477 949 429 q 896 563 922 526 q 831 623 870 601 q 739 644 791 644 q 649 623 688 644 q 584 563 610 601 q 545 477 558 526 q 532 374 532 429 z "},"я":{"ha":762,"x_min":32,"x_max":656,"o":"m 244 350 l 380 350 l 168 0 l 32 0 l 244 350 m 349 734 l 656 734 l 656 0 l 530 0 l 530 632 l 349 632 q 262 614 296 632 q 212 568 228 596 q 197 509 197 539 q 211 451 197 479 q 256 406 225 424 q 334 389 286 389 l 564 389 l 564 286 l 334 286 q 222 302 271 286 q 140 350 174 319 q 88 421 106 380 q 71 510 71 462 q 89 599 71 558 q 143 670 108 640 q 231 717 179 701 q 349 734 283 734 z "},"ђ":{"ha":765,"x_min":-17,"x_max":673,"o":"m 547 308 l 673 308 l 673 -60 q 647 -189 673 -136 q 572 -269 621 -242 q 454 -296 523 -296 q 415 -294 433 -296 q 376 -285 397 -292 l 387 -184 q 420 -191 397 -189 q 454 -193 444 -193 q 504 -177 484 -193 q 536 -132 525 -161 q 547 -60 547 -102 l 547 308 m 221 1042 l 221 0 l 96 0 l 96 1042 l 221 1042 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 415 923 l 415 820 l -17 820 l -17 923 l 415 923 z "},"є":{"ha":747,"x_min":70,"x_max":688,"o":"m 471 418 l 471 315 l 96 315 l 96 418 l 471 418 m 397 90 q 479 108 441 90 q 542 158 517 126 q 570 232 566 191 l 688 232 q 645 111 685 167 q 539 21 604 55 q 397 -14 475 -14 q 252 16 314 -14 q 150 96 191 45 q 90 213 110 146 q 70 353 70 279 l 70 381 q 90 521 70 455 q 151 638 110 587 q 253 718 191 689 q 396 747 314 747 q 547 712 482 747 q 648 617 611 677 q 688 481 685 557 l 570 481 q 544 564 566 527 q 485 622 522 600 q 396 644 447 644 q 299 622 338 644 q 238 561 260 599 q 205 476 215 522 q 195 381 195 429 l 195 353 q 205 258 195 304 q 238 173 215 211 q 299 112 260 135 q 397 90 338 90 z "},"љ":{"ha":1178,"x_min":26,"x_max":1133,"o":"m 198 734 l 323 734 l 304 380 q 290 235 300 298 q 261 127 279 172 q 216 55 243 83 q 152 13 189 26 q 66 0 115 0 l 26 0 l 26 111 l 54 113 q 103 126 83 115 q 138 160 124 138 q 162 219 153 183 q 176 304 171 255 q 184 420 182 354 l 198 734 m 562 734 l 562 630 l 224 630 l 224 734 l 562 734 m 638 454 l 859 454 q 1009 425 948 454 q 1101 345 1070 396 q 1133 230 1133 294 q 1115 140 1133 182 q 1062 67 1097 98 q 977 18 1027 35 q 859 0 926 0 l 547 0 l 547 734 l 672 734 l 672 102 l 859 102 q 946 121 913 102 q 992 171 978 141 q 1006 231 1006 201 q 992 289 1006 261 q 946 334 978 317 q 859 352 913 352 l 638 352 l 638 454 z "},"њ":{"ha":1196,"x_min":106,"x_max":1156,"o":"m 593 456 l 593 355 l 205 355 l 205 456 l 593 456 m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 661 454 l 882 454 q 1031 425 970 454 q 1124 345 1093 396 q 1156 230 1156 294 q 1138 140 1156 182 q 1085 67 1120 98 q 999 18 1050 35 q 882 0 948 0 l 569 0 l 569 734 l 695 734 l 695 102 l 882 102 q 968 121 936 102 q 1015 171 1000 141 q 1029 231 1029 201 q 1015 289 1029 261 q 968 334 1000 317 q 882 352 936 352 l 661 352 l 661 454 z "},"ћ":{"ha":787,"x_min":-2,"x_max":673,"o":"m 221 1042 l 221 0 l 96 0 l 96 1042 l 221 1042 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 430 926 l 430 823 l -2 823 l -2 926 l 430 926 z "},"џ":{"ha":802,"x_min":106,"x_max":696,"o":"m 340 103 l 466 103 l 466 -241 l 340 -241 l 340 103 m 106 734 l 232 734 l 232 103 l 570 103 l 570 734 l 696 734 l 696 0 l 106 0 l 106 734 z "},"Ѡ":{"ha":1221,"x_min":106,"x_max":1122,"o":"m 547 987 l 652 987 l 652 270 q 632 145 652 199 q 575 56 612 92 q 489 3 538 21 q 380 -14 439 -14 q 271 3 321 -14 q 184 56 221 21 q 126 145 147 92 q 106 270 106 199 l 106 987 l 237 987 l 237 270 q 248 192 237 225 q 278 136 258 159 q 323 103 297 114 q 380 92 349 92 q 466 112 429 92 q 525 171 504 132 q 547 270 547 210 l 547 987 m 991 987 l 1122 987 l 1122 270 q 1084 112 1122 175 q 983 17 1047 48 q 836 -14 918 -14 q 733 3 781 -14 q 650 56 685 21 q 595 145 615 92 q 576 270 576 199 l 576 987 l 682 987 l 682 270 q 693 192 682 225 q 725 136 705 159 q 774 103 746 114 q 836 92 803 92 q 916 112 881 92 q 971 171 951 132 q 991 270 991 210 l 991 987 z "},"ѡ":{"ha":1072,"x_min":87,"x_max":986,"o":"m 473 734 l 575 734 l 575 240 q 557 129 575 176 q 506 49 539 81 q 429 1 473 17 q 332 -14 385 -14 q 234 1 279 -14 q 157 49 190 17 q 106 129 124 81 q 87 240 87 176 l 87 734 l 214 734 l 214 240 q 222 174 214 202 q 247 126 231 145 q 284 98 263 108 q 332 89 306 89 q 404 105 372 89 q 455 156 436 122 q 473 240 473 189 l 473 734 m 861 734 l 986 734 l 986 240 q 953 98 986 155 q 862 14 920 42 q 730 -14 804 -14 q 638 1 680 -14 q 564 49 595 17 q 516 129 533 81 q 498 240 498 176 l 498 734 l 600 734 l 600 240 q 610 174 600 202 q 637 126 619 145 q 678 98 654 108 q 730 89 702 89 q 782 98 758 89 q 823 126 806 108 q 851 174 841 145 q 861 240 861 202 l 861 734 z "},"ѣ":{"ha":753,"x_min":-25,"x_max":692,"o":"m 197 506 l 418 506 q 568 473 507 506 q 661 385 629 441 q 692 256 692 328 q 661 126 692 184 q 568 34 629 68 q 418 0 507 0 l 106 0 l 106 1057 l 231 1057 l 231 103 l 418 103 q 505 124 472 103 q 551 180 537 146 q 566 251 566 214 q 551 322 566 287 q 505 380 537 357 q 418 404 472 404 l 197 404 l 197 506 m 450 837 l 450 734 l -25 734 l -25 837 l 450 837 z "},"Ѥ":{"ha":1245,"x_min":125,"x_max":1151,"o":"m 888 565 l 888 462 l 205 462 l 205 565 l 888 565 m 1020 315 l 1151 315 q 1097 147 1141 221 q 974 30 1053 73 q 776 -13 895 -13 q 618 20 689 -13 q 496 112 547 52 q 418 257 446 172 q 391 445 391 341 l 391 543 q 418 731 391 647 q 497 876 446 816 q 623 969 549 937 q 787 1002 696 1002 q 977 960 899 1002 q 1097 843 1054 918 q 1151 671 1141 769 l 1020 671 q 985 790 1010 741 q 911 867 959 840 q 787 895 864 895 q 672 869 722 895 q 589 798 623 844 q 538 688 555 752 q 522 545 522 623 l 522 445 q 531 334 522 387 q 561 237 541 281 q 611 161 581 193 q 682 111 641 129 q 776 94 724 94 q 909 120 859 94 q 984 196 958 146 q 1020 315 1009 245 m 256 987 l 256 0 l 125 0 l 125 987 l 256 987 z "},"ѥ":{"ha":1037,"x_min":104,"x_max":977,"o":"m 783 418 l 783 315 l 185 315 l 185 418 l 783 418 m 686 90 q 768 108 730 90 q 831 158 806 126 q 859 232 855 191 l 977 232 q 933 111 974 167 q 828 21 893 55 q 686 -14 764 -14 q 541 16 603 -14 q 439 96 479 45 q 379 213 399 146 q 359 353 359 279 l 359 381 q 379 521 359 455 q 439 638 399 587 q 542 718 480 689 q 686 747 603 747 q 836 712 772 747 q 937 617 900 677 q 977 481 974 557 l 859 481 q 833 564 855 527 q 773 622 811 600 q 686 644 736 644 q 589 622 627 644 q 527 561 550 599 q 495 476 505 522 q 485 381 485 429 l 485 353 q 494 258 485 304 q 527 173 504 211 q 588 112 549 135 q 686 90 627 90 m 230 734 l 230 0 l 104 0 l 104 734 l 230 734 z "},"Ѧ":{"ha":838,"x_min":27,"x_max":850,"o":"m 468 882 l 161 0 l 27 0 l 383 987 l 467 987 l 468 882 m 715 0 l 414 887 l 417 987 l 500 987 l 850 0 l 715 0 m 677 408 l 677 298 l 198 298 l 198 408 l 677 408 m 499 374 l 499 0 l 371 0 l 371 374 l 499 374 z "},"ѧ":{"ha":743,"x_min":10,"x_max":720,"o":"m 347 519 l 139 0 l 10 0 l 311 734 l 406 734 l 347 519 m 591 0 l 379 519 l 322 734 l 418 734 l 720 0 l 591 0 m 570 304 l 570 201 l 167 201 l 167 304 l 570 304 m 429 279 l 429 0 l 304 0 l 304 279 l 429 279 z "},"Ѩ":{"ha":1223,"x_min":137,"x_max":1208,"o":"m 583 408 l 583 299 l 212 299 l 212 408 l 583 408 m 827 882 l 520 0 l 386 0 l 742 987 l 825 987 l 827 882 m 1074 0 l 772 887 l 776 987 l 859 987 l 1208 0 l 1074 0 m 1036 408 l 1036 298 l 557 298 l 557 408 l 1036 408 m 858 374 l 858 0 l 730 0 l 730 374 l 858 374 m 268 987 l 268 0 l 137 0 l 137 987 l 268 987 z "},"ѩ":{"ha":1050,"x_min":128,"x_max":1023,"o":"m 504 304 l 504 201 l 186 201 l 186 304 l 504 304 m 650 519 l 442 0 l 313 0 l 614 734 l 709 734 l 650 519 m 895 0 l 682 519 l 625 734 l 722 734 l 1023 0 l 895 0 m 873 304 l 873 201 l 470 201 l 470 304 l 873 304 m 732 279 l 732 0 l 607 0 l 607 279 l 732 279 m 254 734 l 254 0 l 128 0 l 128 734 l 254 734 z "},"Ѫ":{"ha":1184,"x_min":100,"x_max":1085,"o":"m 231 0 l 100 0 l 100 251 q 139 426 100 360 q 252 521 178 492 q 429 550 326 550 l 755 550 q 933 521 859 550 q 1046 426 1006 492 q 1085 251 1085 360 l 1085 0 l 954 0 l 954 251 q 932 367 954 326 q 867 426 911 409 q 755 443 823 443 l 429 443 q 280 403 329 443 q 231 251 231 363 l 231 0 m 871 987 l 871 880 l 329 880 l 329 987 l 871 987 m 554 467 l 857 987 l 1005 987 l 657 414 l 574 414 l 554 467 m 338 987 l 643 462 l 620 414 l 538 414 l 189 987 l 338 987 m 660 530 l 660 0 l 530 0 l 530 530 l 660 530 z "},"ѫ":{"ha":1021,"x_min":102,"x_max":919,"o":"m 228 0 l 102 0 l 102 111 q 138 286 102 220 q 242 380 174 351 q 404 410 310 410 l 617 410 q 779 380 711 410 q 883 286 846 351 q 919 111 919 220 l 919 0 l 793 0 l 793 111 q 774 230 793 188 q 716 290 755 273 q 617 307 677 307 l 404 307 q 306 290 345 307 q 247 230 267 273 q 228 111 228 188 l 228 0 m 760 734 l 760 631 l 292 631 l 292 734 l 760 734 m 478 339 l 699 734 l 840 734 l 572 287 l 496 287 l 478 339 m 331 734 l 554 336 l 534 287 l 458 287 l 190 734 l 331 734 m 576 394 l 576 0 l 450 0 l 450 394 l 576 394 z "},"Ѭ":{"ha":1566,"x_min":124,"x_max":1466,"o":"m 857 551 l 857 448 l 238 448 l 238 551 l 857 551 m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 612 0 l 481 0 l 481 251 q 521 426 481 360 q 634 521 560 492 q 810 550 707 550 l 1137 550 q 1315 521 1241 550 q 1427 426 1388 492 q 1466 251 1466 360 l 1466 0 l 1336 0 l 1336 251 q 1314 367 1336 326 q 1249 426 1293 409 q 1137 443 1204 443 l 810 443 q 662 403 711 443 q 612 251 612 363 l 612 0 m 1253 987 l 1253 880 l 711 880 l 711 987 l 1253 987 m 936 467 l 1238 987 l 1387 987 l 1038 414 l 956 414 l 936 467 m 720 987 l 1025 462 l 1002 414 l 920 414 l 571 987 l 720 987 m 1042 530 l 1042 0 l 911 0 l 911 530 l 1042 530 z "},"ѭ":{"ha":1357,"x_min":106,"x_max":1255,"o":"m 846 410 l 846 307 l 172 307 l 172 410 l 846 410 m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 564 0 l 439 0 l 439 111 q 475 286 439 220 q 578 380 511 351 q 741 410 646 410 l 954 410 q 1115 380 1048 410 q 1219 286 1183 351 q 1255 111 1255 220 l 1255 0 l 1130 0 l 1130 111 q 1111 230 1130 188 q 1052 290 1091 273 q 954 307 1013 307 l 741 307 q 642 290 681 307 q 584 230 603 273 q 564 111 564 188 l 564 0 m 1096 734 l 1096 631 l 628 631 l 628 734 l 1096 734 m 814 339 l 1035 734 l 1176 734 l 908 287 l 832 287 l 814 339 m 667 734 l 890 336 l 871 287 l 795 287 l 526 734 l 667 734 m 912 394 l 912 0 l 787 0 l 787 394 l 912 394 z "},"Ѯ":{"ha":719,"x_min":54,"x_max":636,"o":"m 90 987 l 297 987 q 427 969 368 987 q 530 917 486 951 q 597 833 573 882 q 621 721 621 783 q 597 626 621 670 q 530 550 574 583 q 424 498 486 517 q 286 480 362 480 l 188 480 l 188 558 l 283 558 q 406 579 359 558 q 474 637 452 600 q 495 724 495 675 q 474 804 495 768 q 409 863 453 841 q 297 884 366 884 l 90 884 l 90 987 m 188 532 l 286 532 q 435 515 370 532 q 545 465 500 498 q 613 385 590 433 q 636 275 636 337 q 612 153 636 206 q 544 62 587 99 q 440 6 500 25 q 311 -13 381 -13 l 275 -13 q 197 -34 220 -13 q 174 -90 174 -56 q 193 -150 174 -125 q 237 -191 212 -175 q 283 -216 263 -206 l 233 -300 q 151 -252 191 -282 q 82 -180 110 -222 q 54 -83 55 -138 q 82 15 54 -24 q 160 71 109 53 q 280 90 210 90 l 311 90 q 395 103 357 90 q 458 141 432 117 q 497 200 484 166 q 511 273 511 233 q 496 353 511 319 q 452 410 481 387 q 381 445 423 433 q 283 456 338 456 l 188 456 l 188 532 m 267 1306 l 369 1191 l 471 1306 l 580 1306 l 580 1299 l 408 1114 l 330 1114 l 160 1299 l 160 1306 l 267 1306 z "},"ѯ":{"ha":669,"x_min":52,"x_max":602,"o":"m 87 734 l 292 734 q 409 720 355 734 q 503 678 463 705 q 565 612 543 651 q 587 524 587 573 q 565 452 587 485 q 503 393 543 418 q 406 354 463 368 q 281 340 350 340 l 182 340 l 182 418 l 278 418 q 384 432 343 418 q 442 470 424 446 q 460 527 460 494 q 450 567 460 549 q 419 600 440 586 q 367 622 399 614 q 292 630 335 630 l 87 630 l 87 734 m 182 392 l 281 392 q 417 380 357 392 q 518 344 477 368 q 580 286 559 320 q 602 206 602 251 q 579 114 602 155 q 517 45 557 73 q 423 2 477 16 q 305 -13 369 -13 l 272 -13 q 194 -34 217 -13 q 171 -90 171 -56 q 190 -150 171 -125 q 235 -191 209 -175 q 281 -216 260 -206 l 230 -300 q 148 -252 189 -282 q 80 -180 107 -222 q 52 -83 52 -138 q 79 15 52 -24 q 157 71 106 53 q 277 90 208 90 l 305 90 q 377 98 345 90 q 430 122 408 106 q 464 158 452 137 q 475 203 475 178 q 463 253 475 232 q 425 288 450 274 q 363 309 399 302 q 278 316 326 316 l 182 316 l 182 392 m 212 1075 l 314 960 l 416 1075 l 525 1075 l 525 1067 l 353 882 l 275 882 l 105 1068 l 105 1075 l 212 1075 z "},"Ѳ":{"ha":945,"x_min":70,"x_max":864,"o":"m 467 1001 q 600 980 538 1001 q 710 919 662 959 q 793 820 759 878 q 846 688 828 762 q 864 525 864 614 l 864 463 q 836 263 864 351 q 756 113 808 175 q 631 19 704 52 q 468 -14 558 -14 q 337 7 398 -14 q 227 69 276 28 q 142 167 178 109 q 89 299 107 225 q 70 463 70 374 l 70 525 q 99 724 70 636 q 180 874 127 812 q 306 968 233 936 q 467 1001 379 1001 m 467 890 q 366 870 412 890 q 285 812 319 850 q 229 716 251 773 q 201 586 208 660 q 200 563 201 575 q 199 539 199 551 l 734 539 q 734 562 734 551 q 732 585 734 574 q 706 716 726 659 q 651 811 686 772 q 571 870 617 850 q 467 890 524 890 m 468 97 q 573 117 526 97 q 653 176 620 137 q 707 274 687 216 q 732 407 727 332 q 733 421 733 414 q 734 436 734 429 l 200 436 q 201 415 201 425 q 203 395 202 405 q 231 267 210 323 q 288 174 253 212 q 368 116 322 136 q 468 97 414 97 z "},"ѳ":{"ha":789,"x_min":62,"x_max":730,"o":"m 395 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 m 395 644 q 313 627 349 644 q 252 579 277 610 q 211 508 227 549 q 191 422 196 468 l 602 422 q 581 508 597 468 q 540 579 566 549 q 478 627 514 610 q 395 644 441 644 m 397 90 q 480 107 444 90 q 542 156 516 125 q 583 230 568 188 q 602 319 598 271 l 190 319 q 209 230 194 271 q 250 156 224 188 q 313 107 276 125 q 397 90 349 90 z "},"Ѵ":{"ha":876,"x_min":15,"x_max":844,"o":"m 439 254 l 614 802 q 663 917 636 873 q 727 980 690 960 q 813 1000 763 1000 l 844 1000 l 844 884 l 836 884 q 795 875 812 884 q 764 845 778 866 q 736 787 750 824 l 473 0 l 372 0 l 439 254 m 157 987 l 393 254 l 459 0 l 358 0 l 15 987 l 157 987 z "},"ѵ":{"ha":697,"x_min":32,"x_max":703,"o":"m 355 214 l 462 583 q 507 678 481 642 q 565 731 533 714 q 630 747 596 747 q 668 745 650 747 q 703 730 686 742 l 688 630 q 677 634 685 632 q 659 635 669 635 q 632 628 646 635 q 606 607 618 621 q 587 573 595 593 l 385 0 l 302 0 l 355 214 m 160 734 l 323 214 l 373 0 l 290 0 l 32 734 l 160 734 z "},"Ѻ":{"ha":945,"x_min":70,"x_max":864,"o":"m 536 1078 l 536 816 l 410 816 l 410 1078 l 536 1078 m 536 172 l 536 -96 l 410 -96 l 410 172 l 536 172 m 864 525 l 864 463 q 836 263 864 351 q 756 113 808 175 q 631 19 704 52 q 468 -14 558 -14 q 337 7 398 -14 q 227 69 276 28 q 142 167 178 109 q 89 299 107 225 q 70 463 70 374 l 70 525 q 99 724 70 636 q 180 874 127 812 q 306 968 233 936 q 467 1001 379 1001 q 600 980 538 1001 q 710 919 662 959 q 793 820 759 878 q 846 688 828 762 q 864 525 864 614 m 734 463 l 734 526 q 723 654 734 597 q 689 755 711 711 q 634 829 667 800 q 559 874 602 859 q 467 890 517 890 q 357 866 406 890 q 273 796 308 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 212 334 199 391 q 247 232 224 276 q 303 157 271 187 q 378 112 336 127 q 468 97 420 97 q 581 121 532 97 q 665 191 631 144 q 717 306 699 237 q 734 463 734 374 z "},"ѻ":{"ha":787,"x_min":62,"x_max":730,"o":"m 457 818 l 457 568 l 331 568 l 331 818 l 457 818 m 457 168 l 457 -81 l 331 -81 l 331 168 l 457 168 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"Ѽ":{"ha":1216,"x_min":106,"x_max":1117,"o":"m 886 1185 l 913 1185 l 913 1099 l 885 1099 q 780 1112 826 1099 q 697 1142 734 1125 q 628 1171 660 1158 q 566 1184 596 1184 q 510 1166 531 1184 q 489 1111 489 1148 l 489 1099 l 402 1099 l 402 1123 q 445 1234 402 1198 q 563 1271 488 1271 q 640 1258 604 1271 q 712 1228 675 1245 q 790 1198 748 1211 q 886 1185 833 1185 m 589 898 l 537 935 q 571 986 559 962 q 583 1037 583 1010 l 583 1101 l 690 1101 l 690 1032 q 674 980 690 1006 q 634 932 658 954 q 589 898 610 910 m 380 987 l 380 880 q 307 858 339 880 q 256 792 275 836 q 237 680 237 747 l 237 293 q 248 204 237 242 q 278 142 258 167 q 323 104 297 117 q 380 92 349 92 q 466 112 429 92 q 525 171 504 132 q 547 270 547 210 l 547 560 l 652 560 l 652 270 q 632 145 652 199 q 575 56 612 92 q 489 3 538 21 q 380 -14 439 -14 q 271 5 321 -14 q 184 62 221 24 q 126 158 147 100 q 106 293 106 216 l 106 680 q 142 851 106 783 q 240 953 178 919 q 380 987 302 987 m 843 880 l 843 987 q 952 968 902 987 q 1039 910 1002 949 q 1097 814 1076 872 q 1117 680 1117 757 l 1117 293 q 1097 158 1117 216 q 1039 62 1076 100 q 952 5 1002 24 q 843 -14 902 -14 q 735 3 785 -14 q 649 56 686 21 q 592 145 612 92 q 572 270 572 199 l 572 560 l 677 560 l 677 270 q 690 192 677 225 q 724 136 702 159 q 777 103 747 114 q 843 92 807 92 q 900 104 874 92 q 946 142 926 117 q 976 204 965 167 q 987 293 987 242 l 987 680 q 976 768 987 730 q 946 831 965 806 q 900 868 926 856 q 843 880 874 880 z "},"ѽ":{"ha":1066,"x_min":85,"x_max":983,"o":"m 827 946 l 855 946 l 855 860 l 825 860 q 720 873 766 860 q 637 903 674 886 q 569 932 600 920 q 507 945 537 945 q 451 927 472 945 q 429 871 429 909 l 429 859 l 342 859 l 342 884 q 386 995 342 958 q 504 1031 429 1031 q 580 1019 545 1031 q 652 989 616 1006 q 731 959 688 972 q 827 946 773 946 m 528 652 l 477 690 q 512 741 500 717 q 524 791 524 766 l 524 856 l 630 856 l 630 787 q 614 734 630 761 q 574 686 597 708 q 528 652 551 665 m 330 741 l 330 638 q 269 619 296 638 q 227 561 242 600 q 212 462 212 522 l 212 265 q 220 187 212 220 q 245 132 229 154 q 282 100 261 111 q 330 89 304 89 q 386 98 360 89 q 431 126 412 108 q 461 174 450 145 q 472 240 472 202 l 472 399 l 573 399 l 573 240 q 555 129 573 176 q 504 49 537 81 q 427 1 471 17 q 330 -14 382 -14 q 232 3 277 -14 q 155 55 188 20 q 104 143 122 90 q 85 265 85 195 l 85 462 q 117 617 85 555 q 204 710 149 680 q 330 741 259 741 m 739 638 l 739 741 q 837 723 792 741 q 915 671 882 706 q 965 585 947 637 q 983 462 983 532 l 983 265 q 965 143 983 195 q 915 55 947 90 q 837 3 882 20 q 739 -14 792 -14 q 643 1 687 -14 q 565 49 598 17 q 514 129 532 81 q 496 240 496 176 l 496 399 l 597 399 l 597 240 q 608 174 597 202 q 638 126 619 145 q 683 98 657 108 q 739 89 709 89 q 787 100 765 89 q 824 132 808 111 q 849 187 840 154 q 858 265 858 220 l 858 462 q 849 540 858 507 q 824 595 840 573 q 787 627 808 616 q 739 638 765 638 z "},"Ѿ":{"ha":1221,"x_min":106,"x_max":1122,"o":"m 554 1145 l 342 1145 l 342 1218 l 892 1218 l 892 1145 l 668 1145 l 668 1060 l 554 1060 l 554 1145 m 547 987 l 652 987 l 652 270 q 632 145 652 199 q 575 56 612 92 q 489 3 538 21 q 380 -14 439 -14 q 271 3 321 -14 q 184 56 221 21 q 126 145 147 92 q 106 270 106 199 l 106 987 l 237 987 l 237 270 q 248 192 237 225 q 278 136 258 159 q 323 103 297 114 q 380 92 349 92 q 466 112 429 92 q 525 171 504 132 q 547 270 547 210 l 547 987 m 991 987 l 1122 987 l 1122 270 q 1084 112 1122 175 q 983 17 1047 48 q 836 -14 918 -14 q 733 3 781 -14 q 650 56 685 21 q 595 145 615 92 q 576 270 576 199 l 576 987 l 682 987 l 682 270 q 693 192 682 225 q 725 136 705 159 q 774 103 746 114 q 836 92 803 92 q 916 112 881 92 q 971 171 951 132 q 991 270 991 210 l 991 987 z "},"ѿ":{"ha":1072,"x_min":87,"x_max":986,"o":"m 478 915 l 266 915 l 266 988 l 816 988 l 818 915 l 592 915 l 592 829 l 478 829 l 478 915 m 473 734 l 575 734 l 575 240 q 557 129 575 176 q 506 49 539 81 q 429 1 473 17 q 332 -14 385 -14 q 234 1 279 -14 q 157 49 190 17 q 106 129 124 81 q 87 240 87 176 l 87 734 l 214 734 l 214 240 q 222 174 214 202 q 247 126 231 145 q 284 98 263 108 q 332 89 306 89 q 404 105 372 89 q 455 156 436 122 q 473 240 473 189 l 473 734 m 861 734 l 986 734 l 986 240 q 953 98 986 155 q 862 14 920 42 q 730 -14 804 -14 q 638 1 680 -14 q 564 49 595 17 q 516 129 533 81 q 498 240 498 176 l 498 734 l 600 734 l 600 240 q 610 174 600 202 q 637 126 619 145 q 678 98 654 108 q 730 89 702 89 q 782 98 758 89 q 823 126 806 108 q 851 174 841 145 q 861 240 861 202 l 861 734 z "},"Ҁ":{"ha":902,"x_min":80,"x_max":822,"o":"m 457 92 l 457 -14 q 332 6 390 -14 q 228 64 274 26 q 148 155 181 102 q 98 271 115 207 q 80 409 80 336 l 80 578 q 107 747 80 670 q 185 881 134 824 q 305 970 235 939 q 458 1002 374 1002 q 651 962 570 1002 q 777 847 732 922 q 822 671 821 773 l 692 671 q 664 790 691 741 q 585 867 637 840 q 458 895 534 895 q 355 870 401 895 q 277 803 309 846 q 228 703 245 760 q 211 580 211 646 l 211 409 q 222 309 211 356 q 253 221 233 261 q 304 153 274 182 q 372 108 334 124 q 457 92 411 92 m 535 92 l 535 -258 l 405 -258 l 405 92 l 535 92 z "},"ҁ":{"ha":743,"x_min":68,"x_max":673,"o":"m 389 89 l 389 -14 q 252 15 312 -14 q 152 95 193 44 q 89 213 111 146 q 68 353 68 279 l 68 381 q 89 521 68 455 q 152 638 111 587 q 252 718 193 689 q 389 747 312 747 q 535 712 471 747 q 636 617 600 677 q 673 481 673 557 l 555 481 q 533 564 555 527 q 473 623 511 601 q 389 644 435 644 q 300 622 337 644 q 240 561 263 599 q 205 476 216 522 q 194 381 194 429 l 194 353 q 205 257 194 304 q 239 172 216 210 q 300 112 262 134 q 389 89 337 89 m 458 89 l 458 -259 l 332 -259 l 332 89 l 458 89 z "},"҂":{"ha":867,"x_min":79,"x_max":793,"o":"m 548 550 l 408 303 l 604 186 l 557 102 l 359 218 l 236 0 l 122 0 l 275 270 l 79 386 l 125 469 l 323 353 l 463 601 l 266 717 l 313 802 l 511 686 l 638 910 l 750 910 l 594 634 l 793 518 l 743 435 l 548 550 z "},"҃":{"ha":0,"x_min":-625,"x_max":-147,"o":"m -147 892 l -513 892 l -513 807 l -625 808 l -625 966 l -258 966 l -259 1039 l -147 1038 l -147 892 z "},"҄":{"ha":0,"x_min":-618,"x_max":-106,"o":"m -618 970 l -590 970 q -494 983 -536 970 q -415 1013 -452 996 q -343 1043 -379 1030 q -267 1056 -308 1056 q -149 1019 -192 1056 q -106 908 -106 983 l -106 884 l -193 884 l -193 896 q -214 951 -193 934 q -270 969 -235 969 q -332 956 -300 969 q -400 927 -363 943 q -484 897 -437 910 q -589 884 -530 884 l -618 884 l -618 970 z "},"҅":{"ha":0,"x_min":-452,"x_max":-290,"o":"m -343 884 l -452 1017 l -452 1101 l -330 1101 l -331 1006 l -290 928 l -343 884 z "},"҆":{"ha":0,"x_min":-410,"x_max":-248,"o":"m -248 1017 l -358 884 l -410 928 l -370 1006 l -371 1101 l -248 1101 l -248 1017 z "},"҈":{"ha":0,"x_min":-1024,"x_max":297,"o":"m -439 859 l -516 859 q -478 951 -516 916 q -374 987 -439 987 q -269 951 -307 987 q -231 859 -231 916 l -307 859 q -322 907 -307 886 q -374 928 -337 928 q -425 907 -410 928 q -439 859 -439 886 m -38 671 l -115 671 q -77 763 -115 728 q 27 799 -39 799 q 132 763 94 799 q 171 671 171 728 l 94 671 q 79 719 94 699 q 27 740 64 740 q -23 719 -8 740 q -38 671 -38 699 m 88 330 l 12 330 q 50 422 12 387 q 154 458 88 458 q 259 422 220 458 q 297 330 297 387 l 221 330 q 206 378 221 357 q 154 399 191 399 q 103 378 119 399 q 88 330 88 357 m -45 -22 l -122 -22 q -84 70 -122 35 q 20 106 -45 106 q 125 70 87 106 q 163 -22 163 35 l 87 -22 q 73 26 87 5 q 20 47 58 47 q -30 26 -15 47 q -45 -22 -45 5 m -436 -214 l -513 -214 q -474 -122 -513 -158 q -370 -87 -436 -87 q -266 -122 -304 -87 q -227 -214 -227 -158 l -303 -214 q -318 -166 -303 -187 q -370 -146 -334 -146 q -421 -166 -406 -146 q -436 -214 -436 -187 m -827 671 l -905 671 q -866 763 -905 728 q -762 799 -827 799 q -657 763 -695 799 q -618 671 -618 728 l -694 671 q -710 719 -694 699 q -762 740 -725 740 q -812 719 -798 740 q -827 671 -827 699 m -947 330 l -1024 330 q -986 422 -1024 387 q -882 458 -947 458 q -777 422 -815 458 q -739 330 -739 387 l -814 330 q -829 378 -814 357 q -882 399 -844 399 q -932 378 -917 399 q -947 330 -947 357 m -834 -22 l -911 -22 q -873 70 -911 35 q -769 106 -835 106 q -664 70 -703 106 q -625 -22 -625 35 l -702 -22 q -717 26 -702 5 q -769 47 -732 47 q -819 26 -804 47 q -834 -22 -834 5 z "},"҉":{"ha":0,"x_min":-1013,"x_max":246,"o":"m -409 -41 l -316 -41 l -309 -50 l -391 -280 l -456 -280 l -409 -41 m -356 764 l -448 764 l -456 773 l -374 1002 l -309 1002 l -356 764 m 12 334 l 12 428 l 20 436 l 246 352 l 246 286 l 12 334 m -778 388 l -778 294 l -787 286 l -1013 370 l -1013 436 l -778 388 m -85 612 l -151 680 l -150 690 l 68 794 l 114 748 l -85 612 m -681 81 l -615 14 l -616 3 l -833 -101 l -880 -54 l -681 81 m -644 650 l -710 583 l -722 585 l -822 806 l -778 852 l -644 650 m -123 42 l -58 109 l -46 108 l 55 -113 l 10 -161 l -123 42 z "},"Ҋ":{"ha":1048,"x_min":121,"x_max":990,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 m 599 1232 l 701 1232 q 676 1138 701 1179 q 606 1074 652 1097 q 498 1051 561 1051 q 350 1102 404 1051 q 295 1232 295 1152 l 397 1232 q 420 1162 397 1192 q 498 1131 443 1131 q 576 1162 553 1131 q 599 1232 599 1192 m 990 103 l 990 2 q 959 -129 990 -60 q 871 -243 928 -197 l 800 -194 q 837 -133 822 -164 q 860 -70 852 -102 q 867 0 867 -37 l 867 103 l 990 103 z "},"ҋ":{"ha":855,"x_min":106,"x_max":819,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 m 501 1000 l 603 1000 q 578 906 603 947 q 509 842 554 865 q 401 819 463 819 q 252 869 307 819 q 197 1000 197 920 l 299 1000 q 322 929 299 960 q 401 899 345 899 q 478 929 455 899 q 501 1000 501 960 m 819 103 l 819 2 q 787 -129 819 -60 q 700 -243 756 -197 l 629 -194 q 665 -133 650 -164 q 688 -70 680 -102 q 696 0 696 -37 l 696 103 l 819 103 z "},"ҍ":{"ha":753,"x_min":-25,"x_max":692,"o":"m 197 506 l 418 506 q 568 473 507 506 q 661 385 629 441 q 692 256 692 328 q 661 126 692 184 q 568 34 629 68 q 418 0 507 0 l 106 0 l 106 1119 l 231 1119 l 231 103 l 418 103 q 505 124 472 103 q 551 180 537 146 q 566 251 566 214 q 551 322 566 287 q 505 380 537 357 q 418 404 472 404 l 197 404 l 197 506 m 450 987 l 450 884 l -25 884 l -25 987 l 450 987 z "},"Ҏ":{"ha":886,"x_min":115,"x_max":841,"o":"m 591 665 l 841 390 l 766 321 l 517 595 l 591 665 m 479 387 l 215 387 l 215 494 l 479 494 q 603 518 555 494 q 672 586 650 543 q 694 685 694 629 q 672 781 694 736 q 603 853 650 825 q 479 880 555 880 l 245 880 l 245 0 l 115 0 l 115 987 l 479 987 q 668 949 591 987 q 785 842 745 910 q 825 686 825 774 q 785 524 825 591 q 668 422 745 457 q 479 387 591 387 z "},"ҏ":{"ha":788,"x_min":95,"x_max":718,"o":"m 494 264 l 718 10 l 644 -60 l 420 194 l 494 264 m 221 593 l 221 -282 l 95 -282 l 95 734 l 210 734 l 221 593 m 715 373 l 715 359 q 696 211 715 279 q 641 92 677 142 q 552 14 605 42 q 431 -14 499 -14 q 307 9 361 -14 q 216 77 254 33 q 157 182 179 121 q 127 321 135 244 l 127 397 q 157 543 135 479 q 217 653 180 608 q 307 723 254 699 q 429 747 359 747 q 551 721 498 747 q 642 644 605 694 q 697 526 678 595 q 715 373 715 457 m 589 359 l 589 373 q 578 476 589 428 q 542 562 566 525 q 481 620 518 599 q 392 642 444 642 q 310 625 345 642 q 250 582 275 609 q 211 519 226 554 q 188 447 195 484 l 188 271 q 214 203 198 235 q 254 145 230 170 q 312 104 278 119 q 393 90 347 90 q 481 111 444 90 q 542 170 518 132 q 578 255 566 207 q 589 359 589 304 z "},"Ґ":{"ha":762,"x_min":110,"x_max":719,"o":"m 719 1215 l 719 884 l 593 884 l 593 1215 l 719 1215 m 717 987 l 717 880 l 241 880 l 241 0 l 110 0 l 110 987 l 717 987 z "},"ґ":{"ha":619,"x_min":99,"x_max":566,"o":"m 566 949 l 566 630 l 440 630 l 440 949 l 566 949 m 564 734 l 564 630 l 224 630 l 224 0 l 99 0 l 99 734 l 564 734 z "},"Ҕ":{"ha":843,"x_min":121,"x_max":779,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 m 229 456 l 229 565 l 374 565 q 544 538 469 565 q 672 461 619 512 q 751 338 724 411 q 779 174 779 266 q 758 17 779 85 q 697 -100 738 -52 q 597 -172 657 -147 q 458 -197 537 -197 l 456 -97 q 549 -78 511 -97 q 610 -23 587 -58 q 643 63 633 13 q 653 174 653 113 q 635 295 652 242 q 583 383 617 347 q 496 437 548 419 q 374 456 444 456 l 229 456 z "},"ҕ":{"ha":699,"x_min":99,"x_max":650,"o":"m 124 328 l 124 438 l 303 438 q 482 400 404 438 q 605 290 560 361 q 650 115 650 218 q 636 31 650 78 q 591 -63 622 -17 q 511 -144 561 -109 q 389 -193 462 -179 l 356 -94 q 457 -46 420 -77 q 509 26 494 -16 q 524 115 525 68 q 496 232 524 184 q 418 304 467 279 q 303 328 368 328 l 124 328 m 564 734 l 564 630 l 224 630 l 224 0 l 99 0 l 99 734 l 564 734 z "},"Җ":{"ha":1325,"x_min":18,"x_max":1303,"o":"m 397 451 l 45 987 l 198 987 l 460 559 l 646 559 l 625 451 l 397 451 m 468 461 l 181 0 l 18 0 l 385 574 l 468 461 m 703 987 l 703 0 l 573 0 l 573 987 l 703 987 m 1226 987 l 872 451 l 651 451 l 631 559 l 810 559 l 1072 987 l 1226 987 m 1089 0 l 803 461 l 886 574 l 1252 0 l 1089 0 m 1303 104 l 1303 -243 l 1178 -243 l 1178 104 l 1303 104 z "},"җ":{"ha":1107,"x_min":15,"x_max":1083,"o":"m 318 319 l 40 734 l 191 734 l 381 430 l 528 430 l 509 319 l 318 319 m 387 332 l 174 0 l 15 0 l 307 423 l 387 332 m 592 734 l 592 0 l 467 0 l 467 734 l 592 734 m 1020 734 l 742 319 l 551 319 l 531 430 l 678 430 l 868 734 l 1020 734 m 886 0 l 672 332 l 753 423 l 1044 0 l 886 0 m 1083 104 l 1083 -243 l 958 -243 l 958 104 l 1083 104 z "},"Қ":{"ha":972,"x_min":121,"x_max":914,"o":"m 252 987 l 252 0 l 121 0 l 121 987 l 252 987 m 860 987 l 431 444 l 199 444 l 179 553 l 353 553 l 698 987 l 860 987 m 728 0 l 357 461 l 431 576 l 888 0 l 728 0 m 914 102 l 914 -245 l 789 -245 l 789 102 l 914 102 z "},"қ":{"ha":819,"x_min":106,"x_max":782,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 713 734 l 366 313 l 190 313 l 171 423 l 315 423 l 561 734 l 713 734 m 578 0 l 309 332 l 389 423 l 738 0 l 578 0 m 782 104 l 782 -243 l 656 -243 l 656 104 l 782 104 z "},"Ҝ":{"ha":875,"x_min":111,"x_max":867,"o":"m 111 987 l 241 987 l 241 0 l 111 0 l 111 987 m 312 727 l 413 727 l 413 279 l 312 279 l 312 727 m 684 987 l 838 987 l 522 444 l 189 444 l 170 553 l 465 553 l 684 987 m 458 461 l 535 574 l 867 0 l 704 0 l 458 461 z "},"ҝ":{"ha":780,"x_min":105,"x_max":781,"o":"m 105 734 l 231 734 l 231 0 l 105 0 l 105 734 m 299 568 l 400 568 l 400 181 l 299 181 l 299 568 m 604 734 l 756 734 l 479 313 l 189 313 l 170 423 l 429 423 l 604 734 m 422 332 l 503 423 l 781 0 l 622 0 l 422 332 z "},"Ҡ":{"ha":1137,"x_min":47,"x_max":1136,"o":"m 408 987 l 408 884 l 47 884 l 47 987 l 408 987 m 499 987 l 499 0 l 369 0 l 369 987 l 499 987 m 1108 987 l 679 444 l 447 444 l 427 553 l 601 553 l 945 987 l 1108 987 m 976 0 l 605 461 l 678 576 l 1136 0 l 976 0 z "},"ҡ":{"ha":958,"x_min":43,"x_max":953,"o":"m 387 734 l 387 631 l 43 631 l 43 734 l 387 734 m 448 734 l 448 0 l 321 0 l 321 734 l 448 734 m 928 734 l 581 313 l 405 313 l 386 423 l 530 423 l 776 734 l 928 734 m 793 0 l 524 332 l 604 423 l 953 0 l 793 0 z "},"Ң":{"ha":1041,"x_min":115,"x_max":983,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 m 983 104 l 983 -243 l 857 -243 l 857 104 l 983 104 z "},"ң":{"ha":842,"x_min":106,"x_max":804,"o":"m 593 416 l 593 314 l 205 314 l 205 416 l 593 416 m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 695 734 l 695 0 l 569 0 l 569 734 l 695 734 m 804 104 l 804 -243 l 679 -243 l 679 104 l 804 104 z "},"Ҥ":{"ha":1356,"x_min":115,"x_max":1305,"o":"m 1305 987 l 1305 884 l 864 884 l 784 987 l 1305 987 m 759 563 l 759 456 l 225 456 l 225 563 l 759 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 z "},"ҥ":{"ha":990,"x_min":99,"x_max":940,"o":"m 940 734 l 940 630 l 624 630 l 624 734 l 940 734 m 587 416 l 587 314 l 198 314 l 198 416 l 587 416 m 224 734 l 224 0 l 99 0 l 99 734 l 224 734 m 688 734 l 688 0 l 562 0 l 562 734 l 688 734 z "},"Ҧ":{"ha":1422,"x_min":119,"x_max":1354,"o":"m 867 987 l 867 0 l 737 0 l 737 880 l 250 880 l 250 0 l 119 0 l 119 987 l 867 987 m 804 456 l 804 565 l 949 565 q 1120 538 1045 565 q 1247 461 1195 512 q 1327 338 1300 411 q 1354 174 1354 266 q 1334 17 1354 85 q 1273 -100 1314 -52 q 1173 -172 1233 -147 q 1034 -197 1113 -197 l 1032 -97 q 1125 -78 1087 -97 q 1185 -23 1162 -58 q 1219 63 1208 13 q 1229 174 1229 113 q 1211 295 1228 242 q 1158 383 1193 347 q 1072 437 1124 419 q 949 456 1019 456 l 804 456 z "},"ҧ":{"ha":1207,"x_min":99,"x_max":1161,"o":"m 616 328 l 616 438 l 802 438 q 987 400 906 438 q 1115 290 1068 361 q 1161 115 1161 218 q 1147 31 1161 78 q 1103 -63 1133 -17 q 1022 -144 1072 -109 q 901 -193 972 -179 l 867 -94 q 968 -46 931 -77 q 1020 26 1004 -16 q 1036 115 1036 68 q 1005 232 1036 184 q 923 304 975 279 q 802 328 870 328 l 616 328 m 577 734 l 577 630 l 206 630 l 206 734 l 577 734 m 224 734 l 224 0 l 99 0 l 99 734 l 224 734 m 688 734 l 688 0 l 562 0 l 562 734 l 688 734 z "},"Ҩ":{"ha":1030,"x_min":77,"x_max":979,"o":"m 979 90 l 979 -19 q 748 17 852 -19 q 568 119 644 53 q 453 275 493 184 q 412 474 412 366 l 412 628 q 432 775 412 707 q 489 893 452 842 q 577 971 526 943 q 690 1000 628 1000 q 805 972 753 1000 q 893 895 856 945 q 950 776 930 844 q 970 625 970 707 l 970 460 q 937 273 970 359 q 840 122 903 186 q 691 22 778 58 q 498 -14 604 -14 q 325 22 403 -14 q 192 122 248 58 q 106 272 136 186 q 77 458 77 358 l 77 574 q 99 743 77 665 q 163 879 121 821 q 261 969 204 937 q 389 1002 319 1002 l 389 890 q 313 867 347 890 q 257 800 280 843 q 221 700 233 758 q 209 576 209 643 l 209 458 q 229 315 209 380 q 287 200 249 249 q 377 124 324 151 q 498 96 431 96 q 643 124 579 96 q 750 201 706 152 q 817 317 793 251 q 840 460 840 383 l 840 629 q 829 734 840 687 q 800 817 819 782 q 753 870 781 852 q 690 889 726 889 q 628 870 656 889 q 582 815 601 850 q 553 733 563 780 q 543 630 543 686 l 543 473 q 571 317 543 387 q 655 196 600 246 q 792 118 711 145 q 979 90 873 90 z "},"ҩ":{"ha":838,"x_min":75,"x_max":801,"o":"m 801 98 l 801 -8 q 609 22 694 -8 q 463 106 523 52 q 370 232 402 160 q 338 389 338 304 l 338 458 q 353 575 338 522 q 395 667 368 628 q 463 727 423 706 q 553 749 503 749 q 642 726 602 749 q 710 661 682 703 q 753 564 739 620 q 768 444 768 509 l 768 373 q 743 220 768 291 q 669 97 717 150 q 555 15 621 44 q 408 -14 489 -14 q 272 16 334 -14 q 167 101 211 47 q 99 229 123 156 q 75 387 75 302 l 75 425 q 92 553 75 494 q 141 655 109 612 q 216 723 172 699 q 313 747 260 747 l 313 641 q 267 625 288 641 q 231 580 246 609 q 208 512 216 551 q 200 427 200 473 l 200 387 q 214 271 200 324 q 256 177 229 217 q 321 115 283 137 q 408 93 359 93 q 506 114 463 93 q 580 174 549 136 q 626 262 610 212 q 642 373 642 313 l 642 446 q 636 523 642 487 q 619 585 631 558 q 591 627 608 612 q 553 642 574 642 q 514 629 531 642 q 486 591 497 616 q 469 533 475 567 q 463 460 463 500 l 463 387 q 486 270 463 323 q 552 179 509 217 q 658 119 595 140 q 801 98 721 98 z "},"Ҳ":{"ha":884,"x_min":39,"x_max":863,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 m 863 104 l 863 -243 l 737 -243 l 737 104 l 863 104 z "},"ҳ":{"ha":723,"x_min":28,"x_max":699,"o":"m 180 734 l 341 467 l 504 734 l 651 734 l 411 372 l 659 0 l 513 0 l 344 275 l 174 0 l 28 0 l 275 372 l 36 734 l 180 734 m 699 104 l 699 -243 l 573 -243 l 573 104 l 699 104 z "},"Ҵ":{"ha":1246,"x_min":35,"x_max":1142,"o":"m 682 987 l 682 884 l 35 884 l 35 987 l 682 987 m 1142 110 l 1130 -238 l 1013 -238 l 1013 0 l 916 0 l 916 110 l 1142 110 m 290 0 l 290 987 l 421 987 l 421 106 l 908 106 l 908 987 l 1038 987 l 1038 0 l 290 0 z "},"ҵ":{"ha":931,"x_min":21,"x_max":884,"o":"m 501 734 l 501 631 l 21 631 l 21 734 l 501 734 m 207 0 l 207 734 l 333 734 l 333 103 l 671 103 l 671 734 l 796 734 l 796 0 l 207 0 m 884 103 l 871 -218 l 759 -218 l 759 0 l 663 0 l 663 103 l 884 103 z "},"Ҷ":{"ha":996,"x_min":102,"x_max":938,"o":"m 102 987 l 233 987 l 233 679 q 256 559 233 602 q 323 498 278 515 q 437 480 369 480 q 516 484 477 480 q 591 493 554 487 q 663 508 627 499 q 733 527 699 517 l 733 420 q 667 401 700 410 q 599 386 634 392 q 525 376 564 380 q 437 373 485 373 q 257 403 332 373 q 142 500 182 433 q 102 679 102 568 l 102 987 m 700 987 l 831 987 l 831 0 l 700 0 l 700 987 m 938 104 l 938 -243 l 812 -243 l 812 104 l 938 104 z "},"ҷ":{"ha":796,"x_min":71,"x_max":759,"o":"m 649 734 l 649 0 l 524 0 l 524 734 l 649 734 m 606 397 l 606 294 q 529 268 568 279 q 447 251 490 257 q 354 244 404 244 q 203 274 267 244 q 105 366 140 304 q 71 521 71 427 l 71 735 l 196 735 l 196 521 q 214 422 196 460 q 268 366 233 384 q 354 348 303 348 q 446 354 403 348 q 529 372 489 361 q 606 397 568 382 m 759 104 l 759 -243 l 633 -243 l 633 104 l 759 104 z "},"Ҹ":{"ha":944,"x_min":102,"x_max":831,"o":"m 536 691 l 536 216 l 435 216 l 435 691 l 536 691 m 102 987 l 233 987 l 233 679 q 256 559 233 602 q 323 498 278 515 q 437 480 369 480 q 516 484 477 480 q 591 493 554 487 q 663 508 627 499 q 733 527 699 517 l 733 420 q 667 401 700 410 q 599 386 634 392 q 525 376 564 380 q 437 373 485 373 q 257 403 332 373 q 142 500 182 433 q 102 679 102 568 l 102 987 m 700 987 l 831 987 l 831 0 l 700 0 l 700 987 z "},"ҹ":{"ha":767,"x_min":90,"x_max":668,"o":"m 438 539 l 438 155 l 337 155 l 337 539 l 438 539 m 668 734 l 668 0 l 543 0 l 543 734 l 668 734 m 625 397 l 625 294 q 548 268 587 279 q 466 251 509 257 q 373 244 423 244 q 222 274 286 244 q 124 366 159 304 q 90 521 90 427 l 90 735 l 215 735 l 215 521 q 233 422 215 460 q 287 366 252 384 q 373 348 322 348 q 465 354 422 348 q 548 372 508 361 q 625 397 587 382 z "},"Һ":{"ha":944,"x_min":93,"x_max":821,"o":"m 821 0 l 690 0 l 690 309 q 668 429 690 386 q 601 490 646 472 q 487 507 555 507 q 408 504 446 507 q 333 494 370 500 q 261 479 296 488 q 191 460 225 471 l 191 568 q 257 587 224 578 q 325 602 290 595 q 399 611 359 608 q 487 614 439 614 q 667 584 592 614 q 781 487 741 554 q 821 309 821 420 l 821 0 m 224 0 l 93 0 l 93 987 l 224 987 l 224 0 z "},"Ҽ":{"ha":1074,"x_min":43,"x_max":997,"o":"m 43 733 l 146 733 q 163 647 146 684 q 218 589 181 610 q 314 568 256 568 l 314 473 q 164 505 225 473 q 73 596 104 537 q 43 733 43 654 m 679 -16 q 500 16 578 -16 q 368 104 422 47 q 287 238 315 161 q 260 409 260 316 l 260 578 q 288 748 260 671 q 367 883 317 826 q 485 970 418 939 q 629 1000 551 1001 q 788 969 720 1000 q 904 878 857 937 q 974 736 950 819 q 997 549 997 652 l 997 473 l 339 473 l 339 567 l 866 567 l 866 589 q 853 707 866 652 q 813 804 841 762 q 740 868 785 845 q 629 892 694 892 q 527 867 572 892 q 452 800 483 843 q 406 700 422 756 q 390 578 390 643 l 390 409 q 406 286 390 343 q 457 185 422 229 q 547 117 492 142 q 679 92 602 92 q 819 111 763 92 q 913 149 876 130 l 945 52 q 895 25 929 41 q 808 -3 861 9 q 679 -16 754 -16 z "},"ҽ":{"ha":823,"x_min":-24,"x_max":762,"o":"m -24 581 l 77 581 q 111 475 77 515 q 218 435 144 435 l 218 343 q 85 372 139 343 q 4 454 31 401 q -24 581 -24 508 m 476 -14 q 337 13 399 -14 q 231 86 275 39 q 163 199 186 134 q 139 341 139 264 l 139 370 q 165 529 139 459 q 237 648 192 600 q 340 722 283 697 q 460 747 398 747 q 596 720 539 747 q 690 645 653 693 q 745 531 727 596 q 762 388 762 465 l 762 332 l 214 332 l 214 434 l 636 434 l 636 444 q 624 516 634 480 q 594 581 614 551 q 541 627 574 610 q 460 644 508 644 q 381 626 417 644 q 319 573 345 608 q 279 487 294 538 q 265 370 265 436 l 265 341 q 280 243 265 289 q 322 163 294 197 q 391 109 351 128 q 483 89 431 89 q 595 116 549 89 q 676 189 642 143 l 753 128 q 692 60 729 92 q 602 7 655 27 q 476 -14 549 -14 z "},"Ӄ":{"ha":875,"x_min":111,"x_max":833,"o":"m 241 987 l 241 0 l 111 0 l 111 987 l 241 987 m 833 987 l 389 448 l 189 448 l 170 564 l 332 564 l 680 987 l 833 987 m 277 448 l 277 562 l 426 562 q 596 535 521 562 q 724 459 671 509 q 803 335 776 408 q 831 170 831 262 q 810 15 831 83 q 749 -103 790 -54 q 648 -177 709 -151 q 507 -202 587 -202 l 505 -99 q 597 -79 560 -99 q 658 -24 635 -60 q 691 61 681 12 q 701 169 701 110 q 683 289 700 237 q 631 377 665 341 q 545 430 596 412 q 426 448 494 448 l 277 448 z "},"ӄ":{"ha":755,"x_min":105,"x_max":712,"o":"m 231 734 l 231 0 l 105 0 l 105 734 l 231 734 m 712 734 l 345 313 l 189 313 l 170 423 l 293 423 l 559 734 l 712 734 m 159 313 l 159 422 l 347 422 q 532 389 451 422 q 660 289 613 356 q 706 119 706 221 q 691 38 705 83 q 647 -52 677 -7 q 567 -129 617 -96 q 446 -176 517 -163 l 412 -77 q 513 -32 476 -61 q 565 35 549 -3 q 581 119 581 74 q 550 231 581 189 q 468 294 520 274 q 347 313 416 313 l 159 313 z "},"Ӆ":{"ha":1040,"x_min":33,"x_max":983,"o":"m 749 987 l 749 880 l 298 880 l 298 987 l 749 987 m 862 987 l 862 0 l 731 0 l 731 987 l 862 987 m 253 987 l 383 987 l 361 504 q 345 318 356 399 q 313 176 334 236 q 260 77 293 116 q 181 19 228 38 q 68 0 134 0 l 33 0 l 33 106 l 60 109 q 125 126 98 111 q 172 170 153 140 q 203 248 191 200 q 223 364 216 295 q 234 525 230 433 l 253 987 m 983 103 l 983 2 q 951 -129 983 -60 q 864 -243 920 -197 l 793 -194 q 829 -133 814 -164 q 852 -70 844 -102 q 860 0 860 -37 l 860 103 l 983 103 z "},"ӆ":{"ha":857,"x_min":30,"x_max":819,"o":"m 586 734 l 586 630 l 231 630 l 231 734 l 586 734 m 696 734 l 696 0 l 571 0 l 571 734 l 696 734 m 201 734 l 327 734 l 308 380 q 293 235 303 298 q 264 127 282 172 q 219 55 246 83 q 155 13 193 26 q 69 0 118 0 l 30 0 l 30 111 l 57 113 q 107 126 86 115 q 142 160 127 138 q 165 219 156 183 q 179 304 174 255 q 187 420 184 354 l 201 734 m 819 103 l 819 2 q 788 -129 819 -60 q 701 -243 757 -197 l 629 -194 q 666 -133 651 -164 q 689 -70 681 -102 q 696 0 696 -37 l 696 103 l 819 103 z "},"Ӈ":{"ha":989,"x_min":121,"x_max":867,"o":"m 121 987 l 252 987 l 252 542 l 736 542 l 736 987 l 867 987 l 867 -57 q 841 -188 867 -134 q 764 -269 814 -241 q 646 -296 715 -296 q 607 -294 625 -296 q 568 -285 589 -292 l 578 -180 q 611 -187 589 -184 q 644 -189 634 -189 q 694 -173 673 -189 q 726 -128 715 -157 q 736 -57 736 -98 l 736 435 l 252 435 l 252 0 l 121 0 l 121 987 z "},"ӈ":{"ha":787,"x_min":99,"x_max":688,"o":"m 99 734 l 224 734 l 224 416 l 562 416 l 562 734 l 688 734 l 688 -60 q 662 -189 688 -136 q 586 -269 635 -242 q 469 -296 537 -296 q 430 -294 448 -296 q 393 -285 412 -292 l 403 -184 q 436 -191 413 -189 q 469 -193 460 -193 q 519 -177 498 -193 q 551 -132 540 -161 q 562 -60 562 -102 l 562 314 l 224 314 l 224 0 l 99 0 l 99 734 z "},"Ӊ":{"ha":1054,"x_min":115,"x_max":996,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 m 996 103 l 996 2 q 965 -129 996 -60 q 878 -243 934 -197 l 806 -194 q 843 -133 828 -164 q 866 -70 858 -102 q 873 0 873 -37 l 873 103 l 996 103 z "},"ӊ":{"ha":854,"x_min":106,"x_max":818,"o":"m 593 416 l 593 314 l 205 314 l 205 416 l 593 416 m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 695 734 l 695 0 l 569 0 l 569 734 l 695 734 m 818 103 l 818 2 q 787 -129 818 -60 q 699 -243 755 -197 l 628 -194 q 665 -133 650 -164 q 687 -70 680 -102 q 695 0 695 -37 l 695 103 l 818 103 z "},"Ӎ":{"ha":1269,"x_min":115,"x_max":1211,"o":"m 156 987 l 283 987 l 606 182 l 929 987 l 1057 987 l 655 0 l 556 0 l 156 987 m 115 987 l 227 987 l 245 385 l 245 0 l 115 0 l 115 987 m 985 987 l 1097 987 l 1097 0 l 967 0 l 967 385 l 985 987 m 1211 103 l 1211 2 q 1180 -129 1211 -60 q 1093 -243 1149 -197 l 1021 -194 q 1058 -133 1043 -164 q 1081 -70 1073 -102 q 1088 0 1088 -37 l 1088 103 l 1211 103 z "},"ӎ":{"ha":1084,"x_min":107,"x_max":1047,"o":"m 517 167 l 767 734 l 888 734 l 561 0 l 474 0 l 149 734 l 269 734 l 517 167 m 233 734 l 233 0 l 107 0 l 107 734 l 233 734 m 798 0 l 798 734 l 924 734 l 924 0 l 798 0 m 1047 103 l 1047 2 q 1016 -129 1047 -60 q 928 -243 985 -197 l 857 -194 q 894 -133 879 -164 q 917 -70 909 -102 q 924 0 924 -37 l 924 103 l 1047 103 z "},"Ә":{"ha":960,"x_min":64,"x_max":880,"o":"m 435 1001 q 626 966 543 1001 q 765 868 709 931 q 851 717 822 804 q 880 525 880 630 l 880 461 q 849 269 880 356 q 761 118 817 181 q 631 20 705 55 q 473 -14 557 -14 q 296 18 372 -14 q 168 108 219 49 q 90 250 116 167 q 64 436 64 333 l 64 520 l 800 520 l 800 419 l 195 419 l 195 396 q 209 278 195 333 q 256 182 224 223 q 342 118 289 141 q 473 94 395 94 q 591 123 539 94 q 678 202 642 151 q 732 319 713 252 q 750 461 750 385 l 750 525 q 732 668 750 602 q 676 785 714 734 q 578 864 638 836 q 435 892 519 892 q 287 873 347 892 q 187 836 227 854 l 155 932 q 208 960 172 943 q 300 988 243 976 q 435 1001 357 1001 z "},"Ӡ":{"ha":808,"x_min":71,"x_max":724,"o":"m 100 987 l 694 987 l 694 903 l 355 499 l 278 499 l 278 578 l 541 880 l 100 880 l 100 987 m 278 577 l 380 578 q 566 543 489 578 q 684 440 643 507 q 724 275 724 372 q 700 152 724 206 q 630 61 675 98 q 524 5 585 24 q 391 -14 463 -14 q 275 2 332 -14 q 172 54 218 19 q 98 143 125 89 q 71 274 71 198 l 201 274 q 225 183 201 224 q 291 117 249 142 q 391 92 334 92 q 500 116 455 92 q 570 180 546 139 q 594 273 594 221 q 569 389 594 344 q 495 455 544 434 q 374 476 446 476 l 278 476 l 278 577 z "},"ӡ":{"ha":808,"x_min":72,"x_max":722,"o":"m 100 734 l 690 734 l 691 654 l 361 245 l 277 245 l 277 323 l 529 630 l 100 630 l 100 734 m 277 320 l 376 320 q 563 286 485 320 q 681 184 640 251 q 722 21 722 117 q 697 -102 722 -48 q 628 -192 673 -155 q 523 -249 584 -229 q 390 -268 463 -268 q 275 -251 332 -268 q 173 -200 218 -235 q 99 -110 127 -165 q 72 20 72 -56 l 197 20 q 221 -73 197 -31 q 289 -140 245 -115 q 390 -165 332 -165 q 502 -141 456 -165 q 572 -76 547 -117 q 596 18 596 -35 q 570 135 596 90 q 495 200 545 180 q 373 221 445 221 l 277 221 l 277 320 z "},"Ӻ":{"ha":819,"x_min":39,"x_max":773,"o":"m 773 987 l 773 880 l 297 880 l 297 0 l 167 0 l 167 987 l 773 987 m 471 588 l 471 485 l 39 485 l 39 588 l 471 588 m 281 104 l 408 104 l 408 -60 q 381 -189 408 -136 q 307 -269 355 -242 q 189 -296 258 -296 q 151 -294 168 -296 q 113 -285 133 -292 l 123 -178 q 156 -184 133 -182 q 189 -186 180 -186 q 239 -172 218 -186 q 271 -130 260 -158 q 281 -60 281 -102 l 281 104 z "},"ӻ":{"ha":637,"x_min":39,"x_max":623,"o":"m 623 734 l 623 630 l 284 630 l 284 0 l 159 0 l 159 734 l 623 734 m 471 467 l 471 363 l 39 363 l 39 467 l 471 467 m 271 104 l 397 104 l 397 -60 q 371 -189 397 -136 q 296 -269 345 -242 q 178 -296 247 -296 q 140 -294 157 -296 q 102 -285 122 -292 l 112 -178 q 145 -184 122 -182 q 178 -186 169 -186 q 228 -172 208 -186 q 260 -130 249 -158 q 271 -60 271 -102 l 271 104 z "},"Ӽ":{"ha":899,"x_min":39,"x_max":878,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 m 752 104 l 878 104 l 878 -60 q 852 -189 878 -136 q 777 -269 826 -242 q 660 -296 728 -296 q 621 -294 639 -296 q 584 -285 604 -292 l 593 -178 q 627 -184 604 -182 q 660 -186 650 -186 q 710 -172 689 -186 q 741 -130 730 -158 q 752 -60 752 -102 l 752 104 z "},"ӽ":{"ha":738,"x_min":28,"x_max":714,"o":"m 180 734 l 341 467 l 504 734 l 651 734 l 411 372 l 659 0 l 513 0 l 344 275 l 174 0 l 28 0 l 275 372 l 36 734 l 180 734 m 588 104 l 714 104 l 714 -60 q 688 -189 714 -136 q 613 -269 662 -242 q 496 -296 564 -296 q 457 -294 475 -296 q 420 -285 439 -292 l 429 -178 q 463 -184 439 -182 q 496 -186 486 -186 q 546 -172 525 -186 q 577 -130 566 -158 q 588 -60 588 -102 l 588 104 z "},"Ԁ":{"ha":862,"x_min":59,"x_max":763,"o":"m 394 599 l 663 599 l 663 492 l 394 492 q 276 465 321 492 q 211 396 231 439 q 190 303 190 353 q 211 209 190 254 q 276 135 231 163 q 394 106 321 106 l 632 106 l 632 987 l 763 987 l 763 0 l 394 0 q 211 39 286 0 q 98 147 136 79 q 59 302 59 215 q 81 422 59 368 q 145 516 102 476 q 250 577 188 555 q 394 599 313 599 z "},"Ԃ":{"ha":1143,"x_min":61,"x_max":1112,"o":"m 396 599 l 665 599 l 665 492 l 396 492 q 279 465 323 492 q 213 396 234 439 q 193 303 193 353 q 213 209 193 254 q 279 135 234 163 q 396 106 323 106 l 635 106 l 635 987 l 765 987 l 765 0 l 396 0 q 213 39 288 0 q 100 147 138 79 q 61 302 61 215 q 83 422 61 368 q 147 516 104 476 q 252 577 190 555 q 396 599 315 599 m 825 0 l 730 0 l 730 106 l 825 106 q 909 130 876 107 q 960 194 943 153 q 979 290 978 235 q 977 344 980 316 q 969 401 975 372 q 957 459 964 431 q 939 513 949 487 l 1065 513 q 1087 440 1077 478 q 1105 365 1098 403 q 1110 290 1112 326 q 1069 129 1109 193 q 965 32 1029 64 q 825 0 901 0 z "},"ԃ":{"ha":1197,"x_min":68,"x_max":1117,"o":"m 68 340 l 68 354 q 87 513 68 441 q 142 637 106 585 q 232 719 178 690 q 355 747 286 747 q 450 732 408 747 q 525 686 492 716 q 581 614 557 656 q 618 517 604 571 q 638 397 632 463 l 638 335 q 610 190 631 254 q 555 80 590 125 q 471 10 521 34 q 353 -14 420 -14 q 232 12 286 -14 q 142 85 179 38 q 87 198 106 133 q 68 340 68 262 m 194 354 l 194 340 q 205 242 194 288 q 238 164 216 197 q 297 111 261 130 q 385 92 334 92 q 487 119 447 92 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 298 619 334 642 q 239 557 262 597 q 205 465 216 517 q 194 354 194 413 m 550 234 l 550 1058 l 676 1058 l 676 234 q 690 158 675 191 q 730 107 704 125 q 792 89 756 89 q 876 109 840 90 q 937 163 912 127 q 976 248 962 198 q 989 359 989 297 q 980 495 991 427 q 948 632 968 564 l 1070 632 q 1103 497 1088 566 q 1116 359 1117 429 q 1088 194 1114 264 q 1017 78 1062 124 q 914 9 972 32 q 792 -14 857 -14 q 667 9 720 -16 q 584 90 614 35 q 550 234 554 145 z "},"Ԅ":{"ha":1101,"x_min":37,"x_max":1012,"o":"m 305 429 l 173 429 l 173 536 l 271 536 q 395 556 348 536 q 464 614 442 575 q 486 710 486 652 q 474 780 486 749 q 438 834 463 811 q 374 868 413 857 q 280 880 335 880 l 37 880 l 37 987 l 280 987 q 424 969 361 987 q 529 916 487 951 q 594 829 572 881 q 616 709 616 777 q 606 637 616 671 q 576 576 595 604 q 527 526 556 548 q 460 487 498 504 q 376 460 422 471 q 371 455 374 460 q 367 447 369 451 q 362 442 364 443 q 327 434 335 435 q 305 429 319 433 m 477 207 l 477 208 l 477 252 q 456 345 477 305 q 397 407 435 385 q 305 429 359 429 l 317 503 q 457 485 401 503 q 546 433 513 467 q 593 354 579 399 q 608 254 608 308 l 608 207 q 620 148 608 174 q 654 107 631 122 q 708 92 677 92 q 781 112 749 93 q 834 166 812 131 q 868 250 856 201 q 880 359 880 299 q 870 495 882 427 q 838 632 859 564 l 965 632 q 997 497 983 566 q 1010 359 1012 429 q 984 195 1009 265 q 918 79 960 125 q 821 9 876 33 q 707 -14 767 -14 q 588 7 638 -16 q 509 78 537 29 q 477 207 481 127 z "},"ԅ":{"ha":898,"x_min":33,"x_max":852,"o":"m 252 300 l 92 300 l 91 401 l 218 401 q 311 415 275 401 q 362 454 346 429 q 379 512 379 479 q 362 574 379 547 q 309 617 345 601 q 215 633 273 633 l 37 633 l 33 734 l 215 734 q 373 708 308 734 q 471 633 437 682 q 505 516 505 585 q 493 454 505 482 q 456 405 480 427 q 395 367 431 383 q 312 339 359 351 q 309 332 311 338 q 306 318 307 325 q 302 310 304 311 q 273 304 279 305 q 252 300 268 303 m 504 144 l 504 145 q 517 102 503 119 q 568 85 530 85 q 634 99 606 85 q 683 139 663 113 q 714 201 703 165 q 726 284 725 238 q 716 392 727 336 q 683 500 705 448 l 805 500 q 838 393 823 448 q 851 284 852 338 q 826 151 850 208 q 763 57 803 94 q 673 0 724 19 q 568 -18 623 -18 q 488 -10 522 -19 q 429 18 453 -1 q 393 70 406 38 q 378 145 380 101 l 378 197 q 362 252 378 229 q 314 288 346 275 q 235 300 282 300 l 259 372 q 407 350 353 372 q 482 288 460 327 q 504 197 504 248 l 504 144 z "},"Ԇ":{"ha":745,"x_min":56,"x_max":688,"o":"m 269 429 l 119 429 l 119 532 l 229 532 q 358 553 310 532 q 428 612 406 573 q 450 708 450 652 q 429 802 450 762 q 362 863 408 841 q 243 884 317 884 l 56 884 l 56 987 l 243 987 q 425 956 351 987 q 537 861 498 924 q 575 707 575 799 q 565 636 575 669 q 536 575 555 603 q 488 525 517 547 q 421 486 459 503 q 338 458 384 469 q 333 454 336 458 q 328 447 330 450 q 323 442 326 443 q 297 436 306 438 q 283 433 289 434 q 269 429 277 432 m 268 429 l 279 503 q 456 471 392 503 q 546 382 519 439 q 572 252 572 325 l 572 159 q 577 105 572 132 q 591 56 581 79 q 618 17 602 34 l 618 0 l 490 0 q 460 50 469 19 q 449 112 451 81 q 447 161 447 143 l 447 250 q 425 344 447 304 q 363 407 404 385 q 268 429 323 429 m 688 144 l 688 43 q 656 -87 688 -18 q 569 -202 625 -156 l 498 -153 q 534 -92 519 -123 q 557 -28 549 -61 q 565 41 565 5 l 565 144 l 688 144 z "},"ԇ":{"ha":700,"x_min":82,"x_max":668,"o":"m 312 299 l 132 299 l 132 401 l 275 401 q 370 414 334 401 q 422 453 406 428 q 438 512 438 478 q 422 574 438 547 q 370 617 406 602 q 275 632 334 632 l 82 632 l 83 734 l 275 734 q 398 719 345 734 q 489 676 452 705 q 545 608 526 648 q 564 516 564 568 q 552 454 564 481 q 515 404 539 426 q 454 366 490 382 q 370 338 418 349 q 365 325 368 338 q 359 310 361 311 q 337 305 344 307 q 327 302 331 303 q 312 299 322 300 m 295 299 l 320 372 q 467 347 414 372 q 542 280 520 323 q 564 182 564 237 l 564 117 q 568 80 564 100 q 580 42 571 60 q 604 13 589 24 l 604 0 l 475 0 q 449 36 456 12 q 440 83 441 60 q 438 117 438 106 l 438 182 q 422 244 438 218 q 374 285 406 271 q 295 299 342 299 m 668 134 l 668 33 q 637 -98 668 -29 q 550 -213 606 -167 l 478 -163 q 515 -103 500 -134 q 537 -39 530 -72 q 545 31 545 -6 l 545 134 l 668 134 z "},"Ԉ":{"ha":1347,"x_min":47,"x_max":1292,"o":"m 267 987 l 397 987 l 375 504 q 359 318 370 399 q 328 176 348 236 q 275 77 307 116 q 195 19 242 38 q 82 0 148 0 l 47 0 l 47 106 l 74 109 q 139 126 112 111 q 186 170 167 140 q 218 248 205 200 q 237 364 230 295 q 248 525 244 433 l 267 987 m 747 987 l 747 880 l 314 880 l 314 987 l 747 987 m 722 235 l 722 987 l 852 987 l 852 235 q 860 177 852 203 q 883 132 868 151 q 919 102 898 113 q 966 92 940 92 q 1048 111 1013 92 q 1108 165 1084 130 q 1146 249 1133 200 q 1160 359 1159 298 q 1150 495 1161 427 q 1118 632 1139 564 l 1245 632 q 1278 497 1263 566 q 1291 359 1292 429 q 1263 194 1289 264 q 1192 78 1236 124 q 1089 9 1147 32 q 966 -14 1031 -14 q 838 11 892 -14 q 752 91 783 36 q 722 235 722 146 z "},"ԉ":{"ha":1122,"x_min":43,"x_max":1081,"o":"m 214 734 l 340 734 l 321 380 q 306 235 316 298 q 277 127 296 172 q 232 55 259 83 q 168 13 205 26 q 82 0 131 0 l 43 0 l 43 111 l 71 113 q 120 126 99 115 q 155 160 140 138 q 178 219 169 183 q 193 304 187 255 q 201 420 198 354 l 214 734 m 576 734 l 576 630 l 242 630 l 242 734 l 576 734 m 554 234 l 554 734 l 680 734 l 680 234 q 688 175 680 201 q 711 129 696 148 q 747 99 726 109 q 795 89 768 89 q 862 106 833 89 q 911 154 891 123 q 942 229 931 185 q 954 328 953 273 q 944 458 955 393 q 913 587 932 523 l 1034 587 q 1066 459 1052 524 q 1080 328 1081 394 q 1055 178 1078 242 q 992 71 1031 113 q 902 7 953 28 q 795 -14 851 -14 q 696 0 741 -14 q 621 43 652 14 q 571 120 589 73 q 554 234 554 168 z "},"Ԋ":{"ha":1385,"x_min":115,"x_max":1292,"o":"m 226 542 l 741 542 l 741 435 l 226 435 l 226 542 m 115 987 l 245 987 l 245 0 l 115 0 l 115 987 m 722 987 l 852 987 l 852 235 q 866 161 852 193 q 905 110 880 128 q 966 92 931 92 q 1048 112 1013 93 q 1108 165 1084 130 q 1146 249 1133 200 q 1160 359 1160 298 q 1150 495 1162 427 q 1118 632 1139 564 l 1244 632 q 1277 497 1263 566 q 1291 359 1292 429 q 1263 194 1289 264 q 1192 78 1236 124 q 1089 9 1147 32 q 966 -14 1031 -14 q 840 9 893 -16 q 756 90 786 35 q 722 235 726 146 l 722 987 z "},"ԋ":{"ha":1152,"x_min":98,"x_max":1094,"o":"m 584 415 l 584 313 l 197 313 l 197 415 l 584 415 m 224 734 l 224 0 l 98 0 l 98 734 l 224 734 m 566 234 l 566 734 l 692 734 l 692 234 q 700 175 692 201 q 723 129 708 148 q 759 99 738 110 q 807 89 781 89 q 874 106 845 90 q 924 154 904 123 q 955 229 944 185 q 966 328 966 273 q 956 458 968 393 q 925 587 945 523 l 1046 587 q 1079 459 1064 524 q 1093 328 1094 394 q 1068 178 1091 242 q 1005 71 1045 113 q 915 7 966 28 q 807 -14 864 -14 q 710 -1 753 -15 q 635 42 667 12 q 587 120 604 72 q 566 234 570 168 z "},"Ԍ":{"ha":862,"x_min":80,"x_max":804,"o":"m 473 -14 q 313 17 385 -14 q 189 105 241 49 q 108 238 136 162 q 80 405 80 315 l 80 583 q 108 749 80 673 q 189 882 136 825 q 313 970 241 939 q 473 1002 385 1002 q 610 987 551 1002 q 713 943 669 972 l 673 848 q 581 883 630 871 q 473 895 532 895 q 362 870 411 895 q 280 803 314 846 q 229 704 246 760 q 211 584 211 648 l 211 405 q 229 284 211 340 q 280 184 246 227 q 362 117 314 141 q 473 92 411 92 q 581 117 536 93 q 648 185 625 141 q 672 289 671 229 q 664 411 673 349 q 638 533 654 473 l 765 533 q 791 412 778 473 q 803 289 804 351 q 755 119 802 186 q 635 19 709 52 q 473 -14 560 -14 z "},"ԍ":{"ha":715,"x_min":69,"x_max":656,"o":"m 402 89 q 478 104 450 90 q 517 143 505 118 q 530 204 529 169 q 527 284 530 242 q 516 364 524 326 l 637 364 q 650 284 644 325 q 655 204 656 244 q 621 82 654 130 q 531 9 587 33 q 402 -14 474 -14 q 260 15 322 -14 q 155 96 198 45 q 91 213 113 147 q 69 353 69 279 l 69 381 q 90 520 69 454 q 152 637 111 587 q 252 718 193 688 q 388 747 311 747 q 501 736 453 747 q 578 703 549 724 l 549 606 q 476 634 517 624 q 388 644 435 644 q 300 621 336 644 q 240 560 263 598 q 205 475 216 522 q 195 381 195 428 l 195 353 q 207 258 195 305 q 243 173 218 212 q 308 112 268 135 q 402 89 347 89 z "},"Ԏ":{"ha":986,"x_min":24,"x_max":917,"o":"m 806 987 l 806 880 l 24 880 l 24 987 l 806 987 m 347 235 l 347 987 l 477 987 l 477 235 q 485 177 477 203 q 507 132 492 151 q 543 103 522 113 q 591 92 564 92 q 673 112 637 93 q 733 165 709 130 q 770 249 758 200 q 785 359 783 298 q 774 495 786 427 q 743 632 763 564 l 869 632 q 902 497 888 566 q 915 359 917 429 q 887 194 913 264 q 817 78 861 124 q 714 9 772 32 q 591 -14 656 -14 q 464 9 517 -16 q 381 90 411 35 q 347 235 351 146 z "},"ԏ":{"ha":890,"x_min":47,"x_max":819,"o":"m 663 734 l 663 632 l 47 632 l 47 734 l 663 734 m 291 234 l 291 734 l 416 734 l 416 234 q 430 158 416 191 q 471 107 444 125 q 533 89 497 89 q 600 103 571 90 q 650 143 629 117 q 681 207 670 170 q 692 290 692 243 q 682 400 694 343 q 651 510 671 456 l 772 510 q 804 401 789 456 q 818 290 819 345 q 793 156 817 213 q 730 61 770 98 q 640 4 691 23 q 533 -14 589 -14 q 435 -1 479 -15 q 361 42 392 12 q 312 120 330 72 q 291 234 294 168 z "},"Ԑ":{"ha":937,"x_min":102,"x_max":867,"o":"m 479 532 l 609 532 l 609 450 l 484 450 q 376 439 422 450 q 297 407 329 429 q 250 352 266 385 q 233 273 233 318 q 251 201 233 234 q 301 144 268 168 q 383 106 334 119 q 493 92 431 92 q 621 117 566 92 q 707 183 676 142 q 737 274 737 224 l 867 274 q 836 143 867 198 q 750 54 804 89 q 629 2 696 19 q 493 -14 562 -14 q 336 5 408 -14 q 213 61 265 24 q 131 152 160 98 q 102 275 102 206 q 127 385 102 337 q 201 465 153 433 q 319 515 249 498 q 479 532 389 532 m 609 474 l 479 474 q 331 493 397 474 q 217 547 264 513 q 143 625 169 581 q 117 721 117 670 q 144 842 117 790 q 220 930 170 895 q 338 984 269 966 q 493 1002 408 1002 q 673 968 591 1002 q 805 874 755 935 q 854 728 854 812 l 724 728 q 693 814 724 777 q 610 873 662 852 q 493 895 557 895 q 354 871 408 895 q 274 809 300 848 q 248 723 248 770 q 261 656 248 686 q 303 604 275 626 q 376 569 332 581 q 484 557 421 557 l 609 557 l 609 474 z "},"Ԓ":{"ha":1043,"x_min":33,"x_max":985,"o":"m 749 987 l 749 880 l 298 880 l 298 987 l 749 987 m 862 987 l 862 0 l 731 0 l 731 987 l 862 987 m 253 987 l 383 987 l 361 504 q 345 318 356 399 q 313 176 334 236 q 260 77 293 116 q 181 19 228 38 q 68 0 134 0 l 33 0 l 33 106 l 60 109 q 125 126 98 111 q 172 170 153 140 q 203 248 191 200 q 223 364 216 295 q 234 525 230 433 l 253 987 m 859 104 l 985 104 l 985 -60 q 959 -189 985 -136 q 884 -269 933 -242 q 767 -296 836 -296 q 728 -294 746 -296 q 691 -285 711 -292 l 701 -178 q 734 -184 711 -182 q 767 -186 758 -186 q 817 -172 796 -186 q 848 -130 838 -158 q 859 -60 859 -102 l 859 104 z "},"ԓ":{"ha":859,"x_min":30,"x_max":822,"o":"m 586 734 l 586 630 l 231 630 l 231 734 l 586 734 m 696 734 l 696 0 l 571 0 l 571 734 l 696 734 m 201 734 l 327 734 l 308 380 q 293 235 303 298 q 264 127 282 172 q 219 55 246 83 q 155 13 193 26 q 69 0 118 0 l 30 0 l 30 111 l 57 113 q 107 126 86 115 q 142 160 127 138 q 165 219 156 183 q 179 304 174 255 q 187 420 184 354 l 201 734 m 696 104 l 822 104 l 822 -60 q 796 -189 822 -136 q 721 -269 770 -242 q 604 -296 672 -296 q 565 -294 583 -296 q 528 -285 547 -292 l 537 -178 q 571 -184 547 -182 q 604 -186 594 -186 q 653 -172 633 -186 q 685 -130 674 -158 q 696 -60 696 -102 l 696 104 z "}," ":{"ha":708,"x_min":0,"x_max":0,"o":""}," ":{"ha":1417,"x_min":0,"x_max":0,"o":""}," ":{"ha":708,"x_min":0,"x_max":0,"o":""}," ":{"ha":1417,"x_min":0,"x_max":0,"o":""}," ":{"ha":473,"x_min":0,"x_max":0,"o":""}," ":{"ha":354,"x_min":0,"x_max":0,"o":""}," ":{"ha":236,"x_min":0,"x_max":0,"o":""}," ":{"ha":781,"x_min":0,"x_max":0,"o":""}," ":{"ha":380,"x_min":0,"x_max":0,"o":""}," ":{"ha":283,"x_min":0,"x_max":0,"o":""}," ":{"ha":142,"x_min":0,"x_max":0,"o":""},"​":{"ha":0,"x_min":0,"x_max":0,"o":""},"‐":{"ha":382,"x_min":26,"x_max":357,"o":"m 357 471 l 357 368 l 26 368 l 26 471 l 357 471 z "},"‑":{"ha":382,"x_min":26,"x_max":357,"o":"m 357 471 l 357 368 l 26 368 l 26 471 l 357 471 z "},"–":{"ha":911,"x_min":110,"x_max":789,"o":"m 789 545 l 789 441 l 110 441 l 110 545 l 789 545 z "},"—":{"ha":1084,"x_min":98,"x_max":1004,"o":"m 1004 545 l 1004 441 l 98 441 l 98 545 l 1004 545 z "},"‗":{"ha":633,"x_min":9,"x_max":630,"o":"m 630 -172 l 630 -275 l 9 -275 l 9 -172 l 630 -172 m 630 0 l 630 -103 l 9 -103 l 9 0 l 630 0 z "},"‘":{"ha":278,"x_min":66,"x_max":255,"o":"m 66 728 l 66 810 q 80 896 66 851 q 120 983 94 941 q 184 1055 146 1025 l 255 1006 q 207 914 224 961 q 190 812 190 867 l 190 728 l 66 728 z "},"’":{"ha":278,"x_min":33,"x_max":222,"o":"m 222 1042 l 222 955 q 209 869 222 914 q 168 782 195 824 q 104 709 142 741 l 33 759 q 81 851 64 804 q 98 953 98 898 l 98 1042 l 222 1042 z "},"‚":{"ha":277,"x_min":24,"x_max":214,"o":"m 214 123 l 214 54 q 200 -32 214 13 q 160 -119 186 -77 q 96 -192 134 -161 l 24 -143 q 73 -51 56 -98 q 89 52 89 -3 l 89 123 l 214 123 z "},"‛":{"ha":278,"x_min":54,"x_max":243,"o":"m 54 1042 l 178 1042 l 178 953 q 195 851 178 898 q 243 759 212 804 l 172 709 q 108 782 135 741 q 67 869 81 824 q 54 955 54 914 l 54 1042 z "},"“":{"ha":491,"x_min":71,"x_max":474,"o":"m 71 728 l 71 810 q 85 896 71 851 q 125 983 99 941 q 189 1055 152 1025 l 260 1006 q 212 914 229 961 q 195 812 195 867 l 195 728 l 71 728 m 285 728 l 285 810 q 299 896 285 851 q 339 983 313 941 q 403 1055 366 1025 l 474 1006 q 426 914 443 961 q 409 812 409 867 l 409 728 l 285 728 z "},"”":{"ha":496,"x_min":41,"x_max":439,"o":"m 231 1042 l 231 955 q 217 869 231 914 q 176 782 203 824 q 113 709 150 741 l 41 759 q 89 851 73 804 q 106 953 106 898 l 106 1042 l 231 1042 m 439 1042 l 439 955 q 425 869 439 914 q 385 782 411 824 q 321 709 358 741 l 249 759 q 297 851 281 804 q 314 953 314 898 l 314 1042 l 439 1042 z "},"„":{"ha":479,"x_min":24,"x_max":415,"o":"m 214 167 l 214 54 q 200 -37 214 10 q 160 -129 186 -85 q 96 -205 134 -172 l 24 -155 q 73 -57 56 -107 q 89 52 89 -7 l 89 167 l 214 167 m 415 167 l 415 54 q 401 -37 415 10 q 361 -129 387 -85 q 297 -205 334 -172 l 225 -155 q 273 -57 257 -107 q 290 52 290 -7 l 290 167 l 415 167 z "},"†":{"ha":766,"x_min":47,"x_max":719,"o":"m 445 987 l 445 0 l 319 0 l 319 987 l 445 987 m 719 734 l 719 630 l 47 630 l 47 734 l 719 734 z "},"‡":{"ha":792,"x_min":59,"x_max":730,"o":"m 454 987 l 454 -282 l 329 -282 l 329 987 l 454 987 m 730 734 l 730 630 l 59 630 l 59 734 l 730 734 m 730 103 l 730 0 l 59 0 l 59 103 l 730 103 z "},"•":{"ha":469,"x_min":94,"x_max":371,"o":"m 94 496 l 94 524 q 131 621 94 583 q 232 659 168 659 q 334 621 296 659 q 371 524 371 583 l 371 496 q 334 401 371 439 q 233 363 297 363 q 132 401 169 363 q 94 496 94 439 z "},"‥":{"ha":654,"x_min":100,"x_max":553,"o":"m 100 66 q 120 120 100 98 q 178 142 140 142 q 236 120 216 142 q 256 66 256 98 q 236 14 256 35 q 178 -8 216 -8 q 120 14 140 -8 q 100 66 100 35 m 397 66 q 417 120 397 98 q 475 142 437 142 q 533 120 513 142 q 553 66 553 98 q 533 14 553 35 q 475 -8 513 -8 q 417 14 437 -8 q 397 66 397 35 z "},"…":{"ha":929,"x_min":100,"x_max":834,"o":"m 100 66 q 120 120 100 98 q 178 142 140 142 q 236 120 216 142 q 256 66 256 98 q 236 14 256 35 q 178 -8 216 -8 q 120 14 140 -8 q 100 66 100 35 m 397 66 q 417 120 397 98 q 475 142 437 142 q 533 120 513 142 q 553 66 553 98 q 533 14 553 35 q 475 -8 513 -8 q 417 14 437 -8 q 397 66 397 35 m 678 66 q 698 120 678 98 q 756 142 718 142 q 814 120 794 142 q 834 66 834 98 q 814 14 834 35 q 756 -8 794 -8 q 698 14 718 -8 q 678 66 678 35 z "},"‧":{"ha":260,"x_min":56,"x_max":204,"o":"m 56 420 q 75 471 56 450 q 130 492 94 492 q 185 471 166 492 q 204 420 204 450 q 185 369 204 390 q 130 349 166 349 q 75 369 94 349 q 56 420 56 390 z "},"‰":{"ha":1331,"x_min":46,"x_max":1274,"o":"m 46 745 l 46 798 q 71 900 46 854 q 140 974 95 946 q 248 1002 186 1002 q 357 974 312 1002 q 427 900 403 946 q 451 798 451 854 l 451 745 q 427 644 451 690 q 358 570 403 598 q 250 543 313 543 q 141 570 186 543 q 71 644 96 598 q 46 745 46 690 m 140 798 l 140 745 q 152 686 140 714 q 189 641 164 659 q 250 624 213 624 q 310 641 286 624 q 346 686 334 659 q 357 745 357 714 l 357 798 q 346 858 357 829 q 310 903 334 886 q 248 920 286 920 q 188 903 212 920 q 152 858 164 886 q 140 798 140 829 m 558 189 l 558 242 q 583 344 558 298 q 652 418 607 390 q 760 446 698 446 q 862 418 820 446 q 927 344 905 390 q 950 242 950 298 l 950 189 q 927 87 950 134 q 863 14 905 41 q 762 -14 821 -14 q 653 14 699 -14 q 583 87 608 41 q 558 189 558 134 m 652 242 l 652 189 q 664 130 652 158 q 701 84 676 102 q 762 67 725 67 q 822 84 798 67 q 858 130 846 102 q 869 189 869 157 l 869 242 q 858 302 869 274 q 822 347 846 330 q 760 364 798 364 q 700 347 724 364 q 664 302 676 330 q 652 242 652 274 m 882 189 l 882 242 q 905 344 882 298 q 970 418 928 390 q 1072 446 1013 446 q 1180 418 1135 446 q 1250 344 1225 390 q 1274 242 1274 298 l 1274 189 q 1250 87 1274 134 q 1181 14 1226 41 q 1073 -14 1136 -14 q 971 14 1014 -14 q 905 87 928 41 q 882 189 882 134 m 963 242 l 963 189 q 975 130 963 158 q 1011 84 987 102 q 1072 67 1036 67 q 1133 84 1109 67 q 1168 130 1156 102 q 1180 189 1180 157 l 1180 242 q 1168 302 1180 274 q 1132 347 1156 330 q 1071 364 1108 364 q 1011 347 1035 364 q 975 302 987 330 q 963 242 963 274 m 774 847 l 292 75 l 220 120 l 703 892 l 774 847 z "},"‹":{"ha":417,"x_min":73,"x_max":370,"o":"m 370 644 l 193 371 l 73 372 l 73 380 l 273 644 l 370 644 m 193 377 l 370 104 l 273 104 l 73 368 l 73 376 l 193 377 z "},"›":{"ha":417,"x_min":61,"x_max":357,"o":"m 61 104 l 238 376 l 357 376 l 357 367 l 157 104 l 61 104 m 61 644 l 157 644 l 357 380 l 357 371 l 238 370 l 61 644 z "},"⁄":{"ha":631,"x_min":41,"x_max":593,"o":"m 593 847 l 111 75 l 41 120 l 523 892 l 593 847 z "},"⁰":{"ha":509,"x_min":55,"x_max":454,"o":"m 454 767 l 454 673 q 430 545 454 595 q 360 470 405 494 q 256 445 315 445 q 150 470 195 445 q 80 545 105 494 q 55 673 55 595 l 55 767 q 80 895 55 844 q 150 970 104 945 q 254 995 195 995 q 359 970 315 995 q 429 895 404 945 q 454 767 454 844 m 347 664 l 347 777 q 336 851 347 822 q 305 893 326 880 q 254 907 284 907 q 204 893 224 907 q 172 851 183 880 q 161 777 161 822 l 161 664 q 172 589 161 618 q 204 546 183 560 q 256 532 226 532 q 306 546 286 532 q 337 589 326 560 q 347 664 347 618 z "},"⁴":{"ha":509,"x_min":37,"x_max":475,"o":"m 475 656 l 475 568 l 41 568 l 37 637 l 293 987 l 377 987 l 284 832 l 144 656 l 475 656 m 401 987 l 401 452 l 295 452 l 295 987 l 401 987 z "},"⁵":{"ha":509,"x_min":62,"x_max":461,"o":"m 161 694 l 77 715 l 110 987 l 435 987 l 435 899 l 198 899 l 182 783 q 221 795 195 788 q 277 803 246 803 q 376 782 335 803 q 439 722 417 761 q 461 627 461 682 q 439 537 461 579 q 374 470 418 496 q 262 445 330 445 q 167 463 212 445 q 94 515 122 481 q 62 599 65 550 l 168 599 q 197 548 171 564 q 262 532 222 532 q 333 559 311 532 q 354 629 354 587 q 328 697 354 671 q 252 724 301 724 q 195 714 214 724 q 161 694 176 705 z "},"⁶":{"ha":509,"x_min":58,"x_max":464,"o":"m 360 994 l 375 994 l 375 905 l 368 905 q 256 886 301 905 q 188 827 210 867 q 165 726 165 787 l 165 647 q 178 583 165 609 q 213 545 191 557 q 264 532 235 532 q 313 545 292 532 q 346 579 334 557 q 357 628 357 601 q 333 695 357 670 q 263 721 309 721 q 210 710 234 721 q 172 681 186 699 q 157 644 158 663 l 128 676 q 150 735 130 705 q 207 787 170 766 q 292 808 243 808 q 388 784 349 808 q 445 720 426 760 q 464 629 464 679 q 440 535 464 576 q 371 469 416 493 q 266 445 327 445 q 156 471 202 445 q 84 545 109 497 q 58 658 58 593 l 58 695 q 78 821 58 766 q 135 915 97 876 q 230 974 174 954 q 360 994 286 994 z "},"⁷":{"ha":509,"x_min":40,"x_max":460,"o":"m 460 987 l 460 926 l 222 452 l 110 452 l 347 900 l 40 900 l 40 987 l 460 987 z "},"⁸":{"ha":509,"x_min":54,"x_max":455,"o":"m 455 599 q 429 514 455 548 q 357 462 403 479 q 255 445 312 445 q 153 462 198 445 q 80 514 107 479 q 54 599 54 548 q 80 678 54 645 q 151 730 106 711 q 254 748 197 748 q 357 730 312 748 q 429 678 403 711 q 455 599 455 645 m 349 607 q 337 647 349 631 q 303 673 325 664 q 254 682 282 682 q 205 673 226 682 q 172 647 184 664 q 161 607 161 631 q 172 567 161 584 q 205 541 184 550 q 255 532 227 532 q 304 541 283 532 q 337 567 326 550 q 349 607 349 584 m 442 846 q 418 772 442 804 q 352 723 394 741 q 255 706 310 706 q 158 723 200 706 q 91 772 115 741 q 67 846 67 804 q 91 927 67 894 q 158 978 115 960 q 254 995 200 995 q 351 978 309 995 q 418 927 393 960 q 442 846 442 894 m 335 839 q 325 875 335 860 q 297 899 315 890 q 254 908 279 908 q 195 890 217 908 q 174 839 174 871 q 183 803 174 819 q 212 779 193 787 q 255 770 230 770 q 314 789 292 770 q 335 839 335 808 z "},"⁹":{"ha":509,"x_min":50,"x_max":448,"o":"m 142 534 l 151 534 q 261 551 219 534 q 323 606 303 569 q 342 698 342 642 l 342 797 q 330 859 342 834 q 296 895 317 883 q 248 907 275 907 q 199 893 220 907 q 167 856 178 879 q 156 804 156 832 q 166 755 156 777 q 198 721 177 734 q 250 708 219 708 q 302 720 280 708 q 337 749 325 731 q 351 784 350 766 l 382 753 q 361 693 381 722 q 306 644 340 663 q 226 625 271 625 q 130 648 169 625 q 70 711 90 671 q 50 804 50 751 q 74 900 50 857 q 143 969 98 943 q 248 995 187 995 q 356 969 311 995 q 425 894 401 943 q 448 777 448 845 l 448 742 q 431 616 448 671 q 376 524 413 562 q 284 467 340 486 q 152 448 229 448 l 142 448 l 142 534 z "},"⁺":{"ha":559,"x_min":54,"x_max":505,"o":"m 505 727 l 505 639 l 54 639 l 54 727 l 505 727 m 324 922 l 324 444 l 235 444 l 235 922 l 324 922 z "},"⁻":{"ha":515,"x_min":54,"x_max":461,"o":"m 461 730 l 461 642 l 54 642 l 54 730 l 461 730 z "},"⁼":{"ha":515,"x_min":54,"x_max":461,"o":"m 461 646 l 461 557 l 54 557 l 54 646 l 461 646 m 461 806 l 461 718 l 54 718 l 54 806 l 461 806 z "},"⁽":{"ha":337,"x_min":57,"x_max":283,"o":"m 57 676 l 57 688 q 89 884 57 801 q 166 1020 121 967 q 248 1094 211 1073 l 283 1015 q 229 948 256 990 q 184 842 202 905 q 167 688 167 778 l 167 675 q 177 551 167 604 q 204 459 187 498 q 242 393 221 420 q 283 345 262 366 l 248 271 q 187 319 220 286 q 124 404 154 353 q 76 523 95 455 q 57 676 57 591 z "},"⁾":{"ha":337,"x_min":54,"x_max":280,"o":"m 280 688 l 280 676 q 248 479 280 563 q 171 344 216 396 q 89 271 126 292 l 54 345 q 109 413 82 372 q 153 516 135 453 q 170 675 170 580 l 170 688 q 160 808 170 755 q 133 900 150 861 q 95 968 116 939 q 54 1015 75 996 l 89 1094 q 150 1044 117 1078 q 212 960 182 1010 q 261 841 242 909 q 280 688 280 772 z "},"ⁿ":{"ha":587,"x_min":83,"x_max":516,"o":"m 198 868 l 198 441 l 83 441 l 83 984 l 170 984 l 198 868 m 182 731 l 151 730 q 164 836 151 787 q 202 919 177 884 q 261 975 227 955 q 340 994 296 994 q 433 973 393 994 q 494 905 473 951 q 516 786 516 859 l 516 441 l 401 441 l 401 764 q 389 843 401 814 q 354 884 376 871 q 302 897 332 897 q 234 874 261 897 q 195 815 208 852 q 182 731 182 778 z "},"₀":{"ha":509,"x_min":55,"x_max":454,"o":"m 454 65 l 454 -29 q 430 -157 454 -106 q 360 -232 405 -208 q 256 -257 315 -257 q 150 -232 195 -257 q 80 -157 105 -208 q 55 -29 55 -106 l 55 65 q 80 193 55 142 q 150 268 104 243 q 254 293 195 293 q 359 268 315 293 q 429 193 404 243 q 454 65 454 142 m 347 -38 l 347 75 q 336 149 347 120 q 305 192 326 178 q 254 205 284 205 q 204 192 224 205 q 172 149 183 178 q 161 75 161 120 l 161 -38 q 172 -113 161 -83 q 204 -156 183 -142 q 256 -170 226 -170 q 306 -156 286 -170 q 337 -113 326 -142 q 347 -38 347 -83 z "},"₁":{"ha":509,"x_min":83,"x_max":336,"o":"m 336 286 l 336 -249 l 230 -249 l 230 159 l 83 120 l 83 208 l 323 286 l 336 286 z "},"₂":{"ha":509,"x_min":45,"x_max":463,"o":"m 463 -162 l 463 -249 l 58 -249 l 58 -176 l 253 8 q 301 59 283 37 q 327 99 319 81 q 334 132 334 117 q 313 186 334 165 q 251 207 291 207 q 176 181 200 207 q 152 117 152 155 l 45 117 q 69 205 45 165 q 139 270 94 245 q 248 294 184 294 q 353 274 309 294 q 419 219 396 254 q 442 134 442 183 q 426 66 442 98 q 381 4 410 35 q 312 -63 352 -27 l 193 -162 l 463 -162 z "},"₃":{"ha":509,"x_min":43,"x_max":452,"o":"m 180 62 l 237 62 q 292 72 271 62 q 325 98 314 81 q 336 136 336 115 q 315 186 336 166 q 246 207 293 207 q 182 190 208 207 q 157 144 157 173 l 50 144 q 76 223 50 190 q 146 275 102 257 q 244 294 190 294 q 348 276 303 294 q 418 225 393 259 q 443 142 443 191 q 421 76 443 106 q 357 27 399 45 q 256 9 315 9 l 180 9 l 180 62 m 180 -16 l 180 37 l 256 37 q 367 21 323 37 q 431 -26 410 5 q 452 -100 452 -56 q 425 -184 452 -149 q 351 -238 398 -220 q 245 -256 304 -256 q 148 -240 194 -256 q 72 -188 101 -223 q 43 -98 43 -153 l 149 -98 q 176 -149 149 -128 q 248 -170 203 -170 q 320 -149 296 -170 q 345 -94 345 -127 q 332 -48 345 -66 q 295 -23 319 -31 q 237 -16 271 -16 l 180 -16 z "},"₄":{"ha":509,"x_min":37,"x_max":475,"o":"m 475 -45 l 475 -134 l 41 -134 l 37 -64 l 293 286 l 377 286 l 284 131 l 144 -45 l 475 -45 m 401 286 l 401 -249 l 295 -249 l 295 286 l 401 286 z "},"₅":{"ha":509,"x_min":62,"x_max":461,"o":"m 161 -7 l 77 14 l 110 286 l 435 286 l 435 197 l 198 197 l 182 81 q 221 94 195 87 q 277 102 246 102 q 376 81 335 102 q 439 20 417 60 q 461 -74 461 -19 q 439 -164 461 -122 q 374 -231 418 -205 q 262 -256 330 -256 q 167 -238 212 -256 q 94 -186 122 -220 q 62 -102 65 -151 l 168 -102 q 197 -153 171 -137 q 262 -170 222 -170 q 333 -142 311 -170 q 354 -73 354 -114 q 328 -4 354 -31 q 252 22 301 22 q 195 13 214 22 q 161 -7 176 3 z "},"₆":{"ha":509,"x_min":58,"x_max":464,"o":"m 360 293 l 375 293 l 375 204 l 368 204 q 256 185 301 204 q 188 125 210 165 q 165 24 165 85 l 165 -54 q 178 -118 165 -92 q 213 -157 191 -144 q 264 -170 235 -170 q 313 -157 292 -170 q 346 -122 334 -144 q 357 -73 357 -100 q 333 -6 357 -31 q 263 20 309 20 q 210 8 234 20 q 172 -20 186 -3 q 157 -57 158 -38 l 128 -25 q 150 34 130 4 q 207 85 170 64 q 292 106 243 106 q 388 83 349 106 q 445 18 426 59 q 464 -73 464 -22 q 440 -166 464 -125 q 371 -232 416 -208 q 266 -256 327 -256 q 156 -230 202 -256 q 84 -156 109 -204 q 58 -43 58 -109 l 58 -6 q 78 120 58 64 q 135 214 97 175 q 230 273 174 252 q 360 293 286 293 z "},"₇":{"ha":509,"x_min":40,"x_max":460,"o":"m 460 286 l 460 225 l 222 -249 l 110 -249 l 347 199 l 40 199 l 40 286 l 460 286 z "},"₈":{"ha":509,"x_min":54,"x_max":455,"o":"m 455 -102 q 429 -188 455 -153 q 357 -239 403 -222 q 255 -256 312 -256 q 153 -239 198 -256 q 80 -188 107 -222 q 54 -102 54 -153 q 80 -23 54 -56 q 151 28 106 10 q 254 47 197 47 q 357 28 312 47 q 429 -23 403 10 q 455 -102 455 -56 m 349 -94 q 337 -54 349 -71 q 303 -28 325 -37 q 254 -19 282 -19 q 205 -28 226 -19 q 172 -54 184 -37 q 161 -94 161 -71 q 172 -134 161 -117 q 205 -160 184 -151 q 255 -170 227 -170 q 304 -160 283 -170 q 337 -134 326 -151 q 349 -94 349 -117 m 442 144 q 418 71 442 102 q 352 22 394 39 q 255 5 310 5 q 158 22 200 5 q 91 71 115 39 q 67 144 67 102 q 91 226 67 193 q 158 276 115 259 q 254 294 200 294 q 351 276 309 294 q 418 226 393 259 q 442 144 442 193 m 335 138 q 325 174 335 159 q 297 198 315 189 q 254 207 279 207 q 195 189 217 207 q 174 138 174 170 q 183 102 174 117 q 212 77 193 86 q 255 68 230 68 q 314 87 292 68 q 335 138 335 106 z "},"₉":{"ha":509,"x_min":50,"x_max":448,"o":"m 142 -168 l 151 -168 q 261 -150 219 -168 q 323 -96 303 -132 q 342 -3 342 -59 l 342 96 q 330 157 342 133 q 296 194 317 182 q 248 206 275 206 q 199 192 220 206 q 167 154 178 178 q 156 103 156 131 q 166 54 156 76 q 198 20 177 33 q 250 7 219 7 q 302 18 280 7 q 337 47 325 30 q 351 83 350 65 l 382 52 q 361 -8 381 21 q 306 -57 340 -38 q 226 -76 271 -76 q 130 -53 169 -76 q 70 10 90 -31 q 50 103 50 50 q 74 198 50 155 q 143 268 98 241 q 248 294 187 294 q 356 268 311 294 q 425 193 401 241 q 448 75 448 144 l 448 41 q 431 -85 448 -31 q 376 -177 413 -140 q 284 -234 340 -215 q 152 -254 229 -254 l 142 -254 l 142 -168 z "},"₊":{"ha":559,"x_min":54,"x_max":505,"o":"m 505 50 l 505 -38 l 54 -38 l 54 50 l 505 50 m 324 245 l 324 -233 l 235 -233 l 235 245 l 324 245 z "},"₋":{"ha":515,"x_min":54,"x_max":461,"o":"m 461 53 l 461 -35 l 54 -35 l 54 53 l 461 53 z "},"₌":{"ha":515,"x_min":54,"x_max":461,"o":"m 461 -31 l 461 -119 l 54 -119 l 54 -31 l 461 -31 m 461 130 l 461 41 l 54 41 l 54 130 l 461 130 z "},"₍":{"ha":337,"x_min":57,"x_max":283,"o":"m 57 20 l 57 32 q 89 218 57 139 q 166 347 121 297 q 248 416 211 397 l 283 338 q 229 275 256 315 q 184 176 202 235 q 167 33 167 117 l 167 20 q 184 -129 167 -70 q 229 -225 202 -188 q 283 -289 256 -263 l 248 -364 q 187 -317 220 -349 q 124 -237 154 -286 q 76 -125 95 -189 q 57 20 57 -60 z "},"₎":{"ha":337,"x_min":54,"x_max":280,"o":"m 280 39 l 280 28 q 248 -162 280 -81 q 171 -293 216 -242 q 89 -363 126 -343 l 54 -288 q 109 -223 82 -262 q 153 -125 135 -185 q 170 27 170 -64 l 170 40 q 153 180 170 122 q 109 277 135 238 q 54 338 82 315 l 89 416 q 150 371 117 402 q 213 292 183 340 q 261 181 242 245 q 280 39 280 118 z "},"₤":{"ha":808,"x_min":62,"x_max":765,"o":"m 765 0 l 64 0 l 64 106 l 765 106 l 765 0 m 295 705 l 310 273 q 292 154 311 209 q 235 71 273 98 l 117 106 q 154 141 140 113 q 174 205 168 169 q 180 272 180 242 l 165 705 q 204 864 165 798 q 312 966 243 930 q 466 1001 380 1001 q 617 968 555 1001 q 713 875 680 935 q 746 737 746 816 l 616 737 q 593 829 616 794 q 534 879 570 863 q 455 895 497 895 q 374 872 410 895 q 316 808 338 850 q 295 705 295 766 m 536 581 l 536 496 l 62 496 l 62 581 l 536 581 m 536 404 l 536 319 l 62 319 l 62 404 l 536 404 z "},"₦":{"ha":1100,"x_min":21,"x_max":1079,"o":"m 1079 638 l 1079 535 l 21 535 l 21 638 l 1079 638 m 1079 435 l 1079 332 l 21 332 l 21 435 l 1079 435 m 927 987 l 927 0 l 796 0 l 299 762 l 299 0 l 168 0 l 168 987 l 299 987 l 798 224 l 798 987 l 927 987 z "},"₧":{"ha":1140,"x_min":113,"x_max":1044,"o":"m 370 383 l 211 383 l 211 486 l 370 486 q 489 515 448 486 q 543 589 529 543 q 557 684 557 634 q 543 781 557 735 q 489 856 529 827 q 370 884 448 884 l 239 884 l 239 0 l 113 0 l 113 987 l 370 987 q 551 948 481 987 q 652 841 620 909 q 684 686 684 772 q 652 530 684 599 q 551 422 620 462 q 370 383 481 383 m 1040 734 l 1040 637 l 644 637 l 644 734 l 1040 734 m 778 912 l 903 912 l 903 182 q 915 125 903 144 q 945 100 926 106 q 984 94 963 94 q 1017 97 1000 94 q 1043 102 1034 100 l 1044 0 q 1005 -9 1029 -5 q 947 -14 981 -14 q 863 5 901 -14 q 801 66 824 23 q 778 182 778 109 l 778 912 z "},"₨":{"ha":1469,"x_min":115,"x_max":1400,"o":"m 115 987 l 441 987 q 630 954 553 987 q 747 853 707 920 q 787 691 787 787 q 760 567 787 623 q 681 472 732 511 q 559 414 630 433 l 522 400 l 215 400 l 214 507 l 446 507 q 563 531 516 507 q 633 598 610 556 q 657 691 657 640 q 635 791 657 748 q 565 857 612 833 q 441 880 517 880 l 245 880 l 245 0 l 115 0 l 115 987 m 692 0 l 452 448 l 588 448 l 831 8 l 831 0 l 692 0 m 1275 195 q 1263 245 1275 222 q 1215 288 1251 269 q 1106 321 1179 307 q 996 352 1045 334 q 912 395 947 370 q 860 454 878 420 q 842 533 842 488 q 861 615 842 576 q 916 684 880 654 q 1002 730 951 713 q 1114 747 1052 747 q 1264 716 1202 747 q 1360 633 1326 685 q 1393 518 1393 581 l 1267 518 q 1250 577 1267 549 q 1197 625 1232 606 q 1114 644 1163 644 q 1029 628 1061 644 q 982 588 997 612 q 968 536 968 564 q 975 500 968 516 q 1000 471 982 484 q 1052 446 1019 458 q 1137 423 1085 435 q 1285 374 1227 403 q 1372 304 1343 346 q 1400 204 1400 263 q 1380 116 1400 156 q 1323 47 1360 76 q 1233 2 1285 18 q 1117 -14 1181 -14 q 953 21 1020 -14 q 851 111 886 56 q 817 227 817 165 l 943 227 q 972 145 945 175 q 1039 102 1000 115 q 1117 90 1078 90 q 1203 103 1168 90 q 1257 140 1238 117 q 1275 195 1275 164 z "},"₩":{"ha":1027,"x_min":21,"x_max":1006,"o":"m 1006 665 l 1006 562 l 21 562 l 21 665 l 1006 665 m 1006 430 l 1006 328 l 21 328 l 21 430 l 1006 430 m 289 0 l 334 320 l 454 987 l 543 987 l 498 667 l 376 0 l 289 0 m 172 987 l 298 323 l 334 0 l 251 0 l 41 987 l 172 987 m 694 0 l 730 323 l 853 987 l 984 987 l 774 0 l 694 0 m 576 987 l 696 322 l 740 0 l 649 0 l 531 669 l 488 987 l 576 987 z "},"₪":{"ha":1071,"x_min":95,"x_max":976,"o":"m 95 734 l 474 734 q 572 719 528 734 q 646 673 615 705 q 693 588 677 641 q 709 460 709 536 l 709 237 l 583 237 l 583 461 q 574 541 583 508 q 546 593 564 573 q 500 622 527 613 q 437 631 473 631 l 221 631 l 221 0 l 95 0 l 95 734 m 741 0 l 362 0 l 362 498 l 488 498 l 488 103 l 703 103 q 784 119 751 103 q 833 173 817 136 q 850 273 850 210 l 850 734 l 976 734 l 976 274 q 960 145 976 198 q 912 61 943 93 q 838 15 882 29 q 741 0 795 0 z "},"€":{"ha":781,"x_min":64,"x_max":714,"o":"m 553 92 q 629 98 592 92 q 701 115 667 104 l 714 7 q 635 -8 676 -3 q 551 -14 593 -14 q 404 11 471 -14 q 288 85 336 36 q 212 208 239 134 q 185 380 185 281 l 185 606 q 212 779 185 705 q 287 902 238 852 q 402 976 336 951 q 551 1001 469 1001 q 633 995 593 1001 q 714 980 673 989 l 701 871 q 629 888 667 882 q 552 895 591 895 q 454 877 498 895 q 379 824 410 859 q 332 734 349 789 q 316 607 316 680 l 316 380 q 333 252 316 307 q 380 163 349 198 q 455 110 412 127 q 553 92 499 92 m 576 629 l 576 544 l 64 544 l 64 629 l 576 629 m 576 452 l 576 368 l 64 368 l 64 452 l 576 452 z "},"₱":{"ha":1016,"x_min":21,"x_max":996,"o":"m 996 823 l 996 720 l 21 720 l 21 823 l 996 823 m 996 656 l 996 553 l 21 553 l 21 656 l 996 656 m 519 387 l 256 387 l 256 494 l 519 494 q 644 518 596 494 q 713 586 691 543 q 735 685 735 629 q 713 781 735 736 q 644 853 691 825 q 519 880 596 880 l 286 880 l 286 0 l 155 0 l 155 987 l 519 987 q 709 949 631 987 q 826 842 786 910 q 866 686 866 774 q 826 524 866 591 q 709 422 786 457 q 519 387 631 387 z "},"₹":{"ha":718,"x_min":29,"x_max":690,"o":"m 690 746 l 659 639 l 29 639 l 60 746 l 690 746 m 408 0 l 49 419 l 48 503 l 214 503 q 333 527 286 503 q 404 593 380 551 q 427 686 427 634 q 405 787 427 743 q 335 856 382 831 q 210 880 287 880 l 31 880 l 62 987 l 210 987 q 405 952 328 987 q 519 848 481 916 q 557 684 557 781 q 526 536 557 602 q 422 433 494 471 q 228 396 350 396 l 562 8 l 562 0 l 408 0 m 690 987 l 659 880 l 151 880 l 182 987 l 690 987 z "},"₺":{"ha":773,"x_min":22,"x_max":713,"o":"m 318 987 l 318 0 l 188 0 l 188 987 l 318 987 m 583 523 l 713 523 l 713 463 q 685 264 713 353 q 604 114 656 176 q 479 20 552 52 q 315 -13 406 -13 q 252 -9 283 -13 q 188 0 220 -5 l 315 98 q 430 122 380 98 q 514 191 480 145 q 566 306 548 237 q 583 463 583 374 l 583 523 m 488 892 l 488 771 l 22 558 l 22 679 l 488 892 m 488 667 l 488 547 l 22 334 l 22 454 l 488 667 z "},"₼":{"ha":917,"x_min":63,"x_max":854,"o":"m 854 0 l 728 0 l 728 127 q 717 257 728 199 q 683 358 705 315 q 627 432 660 402 q 552 477 594 462 q 458 492 509 492 q 347 468 397 492 q 262 399 298 445 q 208 285 227 353 q 189 127 189 217 l 189 0 l 63 0 l 63 126 q 92 326 63 237 q 173 475 121 414 q 298 570 226 537 q 458 602 370 602 q 591 581 530 602 q 701 520 652 560 q 784 421 749 479 q 836 289 818 363 q 854 126 854 215 l 854 0 m 521 734 l 521 0 l 395 0 l 395 734 l 521 734 z "},"₽":{"ha":922,"x_min":21,"x_max":871,"o":"m 526 387 l 21 387 l 21 494 l 526 494 q 648 517 600 494 q 718 585 695 541 q 741 687 741 628 q 719 779 741 735 q 651 852 698 823 q 526 880 604 880 l 292 880 l 292 0 l 161 0 l 161 987 l 526 987 q 715 949 638 987 q 831 843 791 911 q 871 688 871 776 q 831 526 871 593 q 715 423 791 458 q 526 387 638 387 m 518 294 l 518 187 l 21 187 l 21 294 l 518 294 z "},"℅":{"ha":1025,"x_min":83,"x_max":957,"o":"m 368 715 l 462 715 q 439 629 462 668 q 375 566 417 589 q 275 543 334 543 q 173 570 216 543 q 107 644 130 598 q 83 745 83 690 l 83 798 q 106 900 83 854 q 172 974 130 946 q 273 1002 215 1002 q 374 978 332 1002 q 439 915 416 954 q 462 828 462 876 l 368 828 q 345 892 368 864 q 273 920 321 920 q 220 903 241 920 q 188 858 199 886 q 178 798 178 829 l 178 745 q 189 686 178 714 q 221 641 199 659 q 275 624 243 624 q 345 653 323 624 q 368 715 368 683 m 552 189 l 552 242 q 576 344 552 298 q 646 418 601 390 q 754 446 692 446 q 863 418 818 446 q 932 344 908 390 q 957 242 957 298 l 957 189 q 933 87 957 134 q 864 14 909 41 q 755 -14 819 -14 q 647 14 692 -14 q 577 87 602 41 q 552 189 552 134 m 646 242 l 646 189 q 658 130 646 158 q 694 84 670 102 q 755 67 719 67 q 816 84 792 67 q 852 130 840 102 q 863 189 863 157 l 863 242 q 851 302 863 274 q 815 347 840 330 q 754 364 791 364 q 694 347 718 364 q 658 302 670 330 q 646 242 646 274 m 785 847 l 302 75 l 232 120 l 714 892 l 785 847 z "},"ℓ":{"ha":661,"x_min":71,"x_max":593,"o":"m 486 93 l 486 -14 q 365 7 416 -14 q 279 70 313 29 q 229 166 245 110 q 212 292 212 223 l 212 798 q 225 905 212 858 q 264 986 239 953 q 327 1037 290 1019 q 410 1055 363 1055 q 483 1040 450 1055 q 541 997 516 1025 q 580 930 566 969 q 593 840 593 890 l 593 812 q 571 669 593 743 q 505 527 549 595 q 398 404 462 458 q 253 317 335 349 q 71 285 171 285 l 71 404 q 250 444 175 404 q 373 546 326 484 q 444 680 421 609 q 467 811 467 750 l 467 840 q 463 888 467 868 q 451 922 459 909 q 433 941 444 935 q 410 947 422 947 q 378 938 391 947 q 356 910 365 929 q 342 863 347 891 q 338 798 338 836 l 338 292 q 345 209 338 245 q 370 146 353 172 q 415 106 387 120 q 486 93 444 93 z "},"№":{"ha":1428,"x_min":110,"x_max":1350,"o":"m 1327 376 l 1327 280 l 909 280 l 909 376 l 1327 376 m 886 698 l 886 765 q 914 887 886 835 q 995 969 943 940 q 1118 998 1046 998 q 1241 969 1190 998 q 1321 887 1293 940 q 1350 765 1350 835 l 1350 698 q 1322 576 1350 628 q 1242 494 1294 524 q 1119 465 1190 465 q 995 494 1047 465 q 914 576 943 524 q 886 698 886 628 m 996 765 l 996 698 q 1009 625 996 656 q 1050 577 1023 594 q 1119 559 1078 559 q 1186 577 1160 559 q 1226 625 1213 594 q 1240 698 1240 656 l 1240 765 q 1226 837 1240 806 q 1186 886 1213 868 q 1118 903 1159 903 q 1050 886 1077 903 q 1009 837 1023 868 q 996 765 996 806 m 777 987 l 777 0 l 638 0 l 236 769 l 236 0 l 110 0 l 110 987 l 248 987 l 652 216 l 652 987 l 777 987 z "},"™":{"ha":869,"x_min":71,"x_max":732,"o":"m 671 623 l 671 891 l 577 623 l 542 623 l 447 890 l 447 623 l 386 623 l 386 987 l 462 987 l 559 718 l 656 987 l 732 987 l 732 623 l 671 623 m 332 987 l 332 932 l 232 932 l 232 623 l 170 623 l 170 932 l 71 932 l 71 987 l 332 987 z "},"℮":{"ha":884,"x_min":103,"x_max":794,"o":"m 708 134 l 709 64 q 589 7 652 28 q 458 -14 525 -14 q 320 16 385 -14 q 207 98 256 46 q 131 220 158 151 q 103 367 103 289 q 133 514 103 446 q 214 635 163 583 q 329 718 265 688 q 458 747 392 747 q 589 720 528 747 q 696 643 650 692 q 768 527 742 593 q 794 380 794 460 q 794 372 794 378 q 794 349 794 366 l 273 349 l 273 126 q 358 72 311 92 q 458 52 406 52 q 585 72 522 52 q 708 134 648 92 m 458 684 q 360 661 408 684 q 273 601 312 639 l 273 413 l 640 413 l 640 607 q 557 663 604 642 q 458 684 511 684 z "},"⅛":{"ha":1067,"x_min":57,"x_max":989,"o":"m 309 973 l 309 438 l 203 438 l 203 846 l 57 807 l 57 895 l 297 973 l 309 973 m 749 847 l 267 75 l 197 120 l 679 892 l 749 847 m 989 146 q 963 61 989 96 q 892 10 937 27 q 789 -7 846 -7 q 687 10 732 -7 q 615 61 642 27 q 588 146 588 96 q 614 226 588 193 q 686 277 640 259 q 789 296 731 296 q 892 277 846 296 q 963 226 937 259 q 989 146 989 193 m 884 155 q 871 195 884 178 q 838 221 859 212 q 789 230 817 230 q 739 221 760 230 q 707 195 718 212 q 695 155 695 178 q 707 115 695 132 q 740 89 718 98 q 789 79 761 79 q 839 89 817 79 q 872 115 860 98 q 884 155 884 132 m 977 393 q 952 320 977 351 q 886 271 928 288 q 789 254 844 254 q 692 271 734 254 q 626 320 650 288 q 602 393 602 351 q 626 475 602 441 q 692 525 650 508 q 789 543 734 543 q 885 525 843 543 q 952 475 928 508 q 977 393 977 441 m 869 387 q 860 423 869 408 q 832 447 850 438 q 789 456 814 456 q 730 437 751 456 q 708 387 708 419 q 718 351 708 366 q 746 326 728 335 q 789 317 764 317 q 848 336 827 317 q 869 387 869 355 z "},"⅜":{"ha":1187,"x_min":68,"x_max":1098,"o":"m 206 759 l 263 759 q 318 768 296 759 q 351 794 340 778 q 362 833 362 811 q 340 883 362 863 q 272 903 319 903 q 208 886 233 903 q 182 840 182 869 l 76 840 q 102 920 76 886 q 172 972 127 954 q 270 990 216 990 q 374 973 329 990 q 444 922 418 956 q 469 838 469 888 q 447 772 469 802 q 383 724 425 742 q 281 706 341 706 l 206 706 l 206 759 m 206 681 l 206 734 l 281 734 q 393 718 349 734 q 457 671 436 701 q 478 597 478 640 q 451 512 478 547 q 377 458 424 477 q 271 440 330 440 q 173 457 220 440 q 98 509 127 473 q 68 599 68 544 l 175 599 q 202 548 175 568 q 274 527 229 527 q 346 548 321 527 q 371 602 371 569 q 358 648 371 631 q 320 673 345 665 q 263 681 296 681 l 206 681 m 879 847 l 397 75 l 326 120 l 808 892 l 879 847 m 1098 146 q 1072 61 1098 96 q 1000 10 1046 27 q 898 -7 955 -7 q 795 10 841 -7 q 723 61 750 27 q 696 146 696 96 q 723 226 696 193 q 794 277 749 259 q 897 296 840 296 q 1000 277 955 296 q 1072 226 1046 259 q 1098 146 1098 193 m 992 155 q 980 195 992 178 q 946 221 968 212 q 897 230 925 230 q 848 221 869 230 q 815 195 827 212 q 804 155 804 178 q 815 115 804 132 q 848 89 827 98 q 898 79 869 79 q 947 89 926 79 q 980 115 968 98 q 992 155 992 132 m 1085 393 q 1061 320 1085 351 q 995 271 1037 288 q 898 254 953 254 q 801 271 843 254 q 734 320 758 288 q 710 393 710 351 q 734 475 710 441 q 801 525 758 508 q 897 543 843 543 q 994 525 951 543 q 1061 475 1036 508 q 1085 393 1085 441 m 978 387 q 968 423 978 408 q 940 447 958 438 q 897 456 922 456 q 838 437 860 456 q 817 387 817 419 q 826 351 817 366 q 854 326 836 335 q 898 317 873 317 q 957 336 935 317 q 978 387 978 355 z "},"⅝":{"ha":1182,"x_min":68,"x_max":1091,"o":"m 167 686 l 82 707 l 115 979 l 440 979 l 440 890 l 203 890 l 188 774 q 226 787 201 780 q 283 795 252 795 q 381 774 340 795 q 445 713 422 753 q 467 619 467 674 q 445 529 467 571 q 379 462 423 488 q 267 437 335 437 q 172 455 217 437 q 99 507 127 473 q 68 591 71 542 l 173 591 q 202 540 176 556 q 267 524 228 524 q 338 551 317 524 q 359 621 359 579 q 333 689 359 663 q 257 715 307 715 q 201 706 220 715 q 167 686 182 696 m 856 847 l 374 75 l 303 120 l 785 892 l 856 847 m 1091 146 q 1065 61 1091 96 q 994 10 1039 27 q 891 -7 948 -7 q 789 10 834 -7 q 716 61 743 27 q 690 146 690 96 q 716 226 690 193 q 787 277 742 259 q 890 296 833 296 q 994 277 948 296 q 1065 226 1039 259 q 1091 146 1091 193 m 985 155 q 973 195 985 178 q 940 221 961 212 q 890 230 918 230 q 841 221 862 230 q 808 195 820 212 q 797 155 797 178 q 808 115 797 132 q 841 89 820 98 q 891 79 863 79 q 940 89 919 79 q 974 115 962 98 q 985 155 985 132 m 1078 393 q 1054 320 1078 351 q 988 271 1030 288 q 891 254 946 254 q 794 271 836 254 q 727 320 751 288 q 703 393 703 351 q 727 475 703 441 q 794 525 751 508 q 890 543 836 543 q 987 525 945 543 q 1054 475 1029 508 q 1078 393 1078 441 m 971 387 q 961 423 971 408 q 933 447 951 438 q 890 456 916 456 q 831 437 853 456 q 810 387 810 419 q 820 351 810 366 q 848 326 829 335 q 891 317 866 317 q 950 336 928 317 q 971 387 971 355 z "},"⅞":{"ha":1114,"x_min":61,"x_max":1040,"o":"m 481 979 l 481 918 l 243 444 l 131 444 l 368 892 l 61 892 l 61 979 l 481 979 m 789 847 l 307 75 l 236 120 l 718 892 l 789 847 m 1040 146 q 1014 61 1040 96 q 942 10 987 27 q 840 -7 897 -7 q 737 10 783 -7 q 665 61 692 27 q 638 146 638 96 q 664 226 638 193 q 736 277 690 259 q 839 296 781 296 q 942 277 897 296 q 1014 226 987 259 q 1040 146 1040 193 m 934 155 q 922 195 934 178 q 888 221 909 212 q 839 230 867 230 q 789 221 810 230 q 757 195 768 212 q 745 155 745 178 q 757 115 745 132 q 790 89 768 98 q 840 79 811 79 q 889 89 867 79 q 922 115 910 98 q 934 155 934 132 m 1027 393 q 1003 320 1027 351 q 937 271 979 288 q 840 254 895 254 q 742 271 785 254 q 676 320 700 288 q 652 393 652 351 q 676 475 652 441 q 742 525 700 508 q 839 543 785 543 q 936 525 893 543 q 1002 475 978 508 q 1027 393 1027 441 m 920 387 q 910 423 920 408 q 882 447 900 438 q 839 456 864 456 q 780 437 802 456 q 758 387 758 419 q 768 351 758 366 q 796 326 778 335 q 840 317 814 317 q 898 336 877 317 q 920 387 920 355 z "},"∂":{"ha":792,"x_min":72,"x_max":729,"o":"m 389 693 q 507 667 451 693 q 603 595 564 641 q 581 705 597 655 q 541 795 565 755 q 486 862 517 835 q 419 904 455 890 q 345 919 384 919 q 277 914 309 919 q 215 901 245 909 q 152 880 184 892 l 141 981 q 195 1003 166 993 q 263 1021 224 1014 q 356 1028 302 1028 q 490 1003 431 1028 q 595 929 550 977 q 669 811 640 880 q 714 656 699 743 q 729 467 729 569 l 729 427 q 715 285 729 352 q 673 164 701 218 q 605 69 645 109 q 513 7 565 29 q 399 -14 462 -14 q 261 13 322 -14 q 158 89 201 40 q 94 202 116 137 q 72 345 72 268 l 72 359 q 93 492 72 431 q 156 598 115 553 q 255 668 197 643 q 389 693 314 693 m 401 590 q 310 571 349 590 q 247 520 272 553 q 210 447 222 488 q 198 359 198 406 l 198 345 q 210 247 198 293 q 247 165 222 201 q 310 109 271 130 q 399 89 348 89 q 491 113 452 89 q 554 180 529 137 q 591 279 579 222 q 604 402 604 336 l 604 448 q 587 489 600 465 q 551 536 574 513 q 490 574 527 559 q 401 590 453 590 z "},"∏":{"ha":965,"x_min":115,"x_max":850,"o":"m 850 987 l 850 -144 l 724 -144 l 724 884 l 241 884 l 241 -144 l 115 -144 l 115 987 l 850 987 z "},"∑":{"ha":813,"x_min":47,"x_max":811,"o":"m 811 -80 l 811 -182 l 97 -182 l 97 -80 l 811 -80 m 759 987 l 759 885 l 74 885 l 74 987 l 759 987 m 593 408 l 593 391 l 114 -182 l 47 -182 l 47 -86 l 460 400 l 47 890 l 47 987 l 114 987 l 593 408 z "},"−":{"ha":794,"x_min":114,"x_max":680,"o":"m 680 545 l 680 441 l 114 441 l 114 545 l 680 545 z "},"√":{"ha":828,"x_min":43,"x_max":798,"o":"m 371 167 l 669 987 l 798 987 l 431 -1 l 347 -1 l 371 167 m 256 530 l 390 167 l 418 -1 l 335 -1 l 128 530 l 256 530 m 43 427 l 43 530 l 251 530 l 251 427 l 43 427 z "},"∞":{"ha":1428,"x_min":67,"x_max":1354,"o":"m 67 357 l 67 376 q 91 516 67 450 q 157 635 114 583 q 261 718 201 688 q 395 747 321 747 q 524 719 469 747 q 620 644 579 690 q 687 548 660 599 q 731 453 714 498 q 756 381 747 408 l 756 353 q 731 281 747 326 q 687 185 714 236 q 620 89 660 134 q 525 15 580 43 q 397 -14 469 -14 q 261 16 322 -14 q 157 98 201 45 q 91 217 114 150 q 67 357 67 283 m 193 376 l 193 357 q 206 254 193 302 q 245 168 219 205 q 309 110 271 131 q 397 89 347 89 q 483 110 445 89 q 549 165 520 132 q 596 235 577 198 q 627 303 616 271 q 643 353 639 335 l 643 381 q 627 430 639 398 q 596 498 616 461 q 549 568 577 534 q 482 623 520 602 q 395 644 444 644 q 309 623 347 644 q 245 564 271 602 q 206 478 219 527 q 193 376 193 430 m 1354 376 l 1354 357 q 1330 217 1354 283 q 1263 98 1306 150 q 1159 16 1219 45 q 1024 -14 1098 -14 q 896 15 951 -14 q 801 89 841 43 q 733 185 760 134 q 689 281 706 236 q 665 353 673 326 l 665 381 q 690 453 673 408 q 734 548 707 498 q 801 644 761 599 q 897 719 842 690 q 1025 747 952 747 q 1159 718 1099 747 q 1263 635 1219 688 q 1330 516 1307 583 q 1354 376 1354 450 m 1228 357 l 1228 376 q 1215 478 1228 430 q 1175 564 1201 527 q 1112 623 1149 602 q 1025 644 1074 644 q 939 623 977 644 q 872 568 901 602 q 824 498 844 534 q 793 430 804 461 q 777 381 781 398 l 777 353 q 793 303 781 335 q 824 235 804 271 q 872 165 844 198 q 938 110 900 132 q 1024 89 976 89 q 1111 110 1073 89 q 1175 168 1149 131 q 1215 254 1201 205 q 1228 357 1228 302 z "},"∫":{"ha":356,"x_min":-55,"x_max":444,"o":"m 243 -73 q 217 -198 243 -149 q 142 -272 191 -248 q 24 -296 93 -296 q -16 -293 3 -296 q -55 -283 -35 -290 l -42 -184 q -16 -190 -33 -187 q 12 -193 1 -193 q 68 -180 45 -193 q 104 -141 92 -168 q 117 -73 117 -114 l 117 812 q 144 946 117 892 q 224 1028 172 1000 q 347 1056 275 1056 q 395 1052 371 1056 q 444 1042 419 1048 l 428 945 q 401 951 416 949 q 366 953 386 953 q 298 936 326 953 q 257 888 271 920 q 243 812 243 857 l 243 -73 z "},"≈":{"ha":783,"x_min":68,"x_max":703,"o":"m 70 483 l 69 611 q 146 666 101 646 q 235 686 191 686 q 320 672 290 687 q 394 636 351 658 q 463 602 434 616 q 542 589 492 589 q 628 612 586 589 q 702 675 670 635 l 703 547 q 629 493 671 513 q 543 473 587 473 q 464 487 492 473 q 395 520 435 500 q 321 556 352 542 q 235 570 290 571 q 146 547 191 570 q 70 483 102 524 m 69 200 l 68 328 q 145 382 100 363 q 235 402 191 402 q 320 389 289 404 q 393 353 351 374 q 462 319 433 332 q 541 306 491 306 q 627 329 585 306 q 701 393 669 352 l 702 264 q 628 210 670 229 q 542 190 586 190 q 463 203 492 190 q 394 237 434 216 q 320 273 351 258 q 235 287 289 288 q 146 264 191 287 q 69 200 101 241 z "},"≠":{"ha":762,"x_min":103,"x_max":669,"o":"m 618 799 l 213 106 l 149 146 l 553 839 l 618 799 m 669 661 l 669 552 l 103 552 l 103 661 l 669 661 m 669 380 l 669 271 l 103 271 l 103 380 l 669 380 z "},"≤":{"ha":706,"x_min":41,"x_max":608,"o":"m 135 479 l 604 307 l 604 186 l 49 420 l 49 491 l 135 479 m 604 621 l 136 446 l 49 438 l 49 509 l 604 742 l 604 621 m 608 104 l 608 1 l 41 1 l 41 104 l 608 104 z "},"≥":{"ha":726,"x_min":90,"x_max":671,"o":"m 574 467 l 92 638 l 92 755 l 671 523 l 671 451 l 574 467 m 92 317 l 575 491 l 671 505 l 671 433 l 92 199 l 92 317 m 656 103 l 656 0 l 90 0 l 90 103 l 656 103 z "},"◊":{"ha":700,"x_min":30,"x_max":671,"o":"m 30 493 l 301 987 l 385 987 l 373 897 l 159 493 l 377 90 l 387 0 l 304 0 l 30 493 m 327 90 l 541 493 l 323 897 l 314 987 l 397 987 l 671 493 l 399 0 l 316 0 l 327 90 z "},"":{"ha":399,"x_min":123,"x_max":279,"o":"m 123 187 q 143 241 123 219 q 201 263 163 263 q 259 241 239 263 q 279 187 279 219 q 259 134 279 156 q 201 113 239 113 q 143 134 163 113 q 123 187 123 156 m 123 785 q 143 839 123 817 q 201 861 163 861 q 259 839 239 861 q 279 785 279 817 q 259 732 279 754 q 201 711 239 711 q 143 732 163 711 q 123 785 123 754 z "},"":{"ha":445,"x_min":75,"x_max":382,"o":"m 170 734 l 170 429 l 75 429 l 75 734 l 170 734 m 382 734 l 382 429 l 287 429 l 287 734 l 382 734 z "},"":{"ha":350,"x_min":63,"x_max":233,"o":"m 233 162 l 233 109 q 209 -7 233 55 q 134 -110 184 -68 l 63 -60 q 101 19 88 -22 q 113 107 113 60 l 113 162 l 233 162 z "},"ﬁ":{"ha":770,"x_min":22,"x_max":660,"o":"m 263 0 l 138 0 l 138 798 q 170 939 138 881 q 263 1026 203 996 q 406 1056 323 1056 q 502 1044 455 1056 q 598 1015 549 1032 l 577 909 q 505 932 546 921 q 415 943 464 943 q 299 907 334 943 q 263 798 263 871 l 263 0 m 413 734 l 413 637 l 22 637 l 22 734 l 413 734 m 660 734 l 660 0 l 534 0 l 534 734 l 660 734 z "},"ﬂ":{"ha":789,"x_min":41,"x_max":680,"o":"m 283 0 l 157 0 l 157 811 q 187 945 157 890 q 272 1028 216 1000 q 408 1056 328 1056 q 483 1050 438 1056 q 579 1034 528 1044 q 680 1015 631 1025 l 621 924 q 505 942 557 936 q 418 949 454 949 q 343 933 374 949 q 298 886 313 917 q 283 811 283 856 l 283 0 m 554 0 l 554 1015 l 680 1015 l 680 0 l 554 0 m 439 734 l 439 637 l 41 637 l 41 734 l 439 734 z "},"ﬃ":{"ha":1185,"x_min":41,"x_max":1076,"o":"m 283 0 l 157 0 l 157 811 q 186 945 157 890 q 269 1028 215 1000 q 398 1056 323 1056 q 442 1053 420 1056 q 485 1045 464 1050 l 478 943 q 446 947 464 946 q 410 949 428 949 q 341 933 370 949 q 298 886 313 917 q 283 811 283 856 l 283 0 m 446 734 l 446 637 l 41 637 l 41 734 l 446 734 m 680 0 l 554 0 l 554 798 q 586 939 554 881 q 679 1026 618 996 q 822 1056 739 1056 q 918 1044 871 1056 q 1015 1015 965 1032 l 993 909 q 921 932 962 921 q 831 943 880 943 q 715 907 751 943 q 680 798 680 871 l 680 0 m 829 734 l 829 637 l 438 637 l 438 734 l 829 734 m 1076 734 l 1076 0 l 951 0 l 951 734 l 1076 734 z "},"ﬄ":{"ha":1185,"x_min":41,"x_max":1076,"o":"m 283 0 l 157 0 l 157 811 q 186 945 157 890 q 269 1028 215 1000 q 398 1056 323 1056 q 442 1053 420 1056 q 485 1045 464 1050 l 478 943 q 446 947 464 946 q 410 949 428 949 q 341 933 370 949 q 298 886 313 917 q 283 811 283 856 l 283 0 m 446 734 l 446 637 l 41 637 l 41 734 l 446 734 m 680 0 l 554 0 l 554 811 q 584 945 554 890 q 669 1028 613 1000 q 805 1056 725 1056 q 880 1050 835 1056 q 976 1034 925 1044 q 1076 1015 1027 1025 l 1018 924 q 902 942 954 936 q 814 949 850 949 q 740 933 770 949 q 695 886 710 917 q 680 811 680 856 l 680 0 m 951 0 l 951 1015 l 1076 1015 l 1076 0 l 951 0 m 836 734 l 836 637 l 438 637 l 438 734 l 836 734 z "},"\ufeff":{"ha":0,"x_min":0,"x_max":0,"o":""},"￼":{"ha":1424,"x_min":62,"x_max":1377,"o":"m 138 793 l 62 793 l 62 986 l 271 986 l 271 907 l 138 907 l 138 793 m 1301 907 l 1166 907 l 1166 986 l 1377 986 l 1377 793 l 1301 793 l 1301 907 m 271 -270 l 62 -270 l 62 -56 l 138 -56 l 138 -193 l 271 -193 l 271 -270 m 1377 -270 l 1166 -270 l 1166 -193 l 1301 -193 l 1301 -56 l 1377 -56 l 1377 -270 m 1084 -270 l 896 -270 l 896 -193 l 1084 -193 l 1084 -270 m 542 -270 l 355 -270 l 355 -193 l 542 -193 l 542 -270 m 542 907 l 355 907 l 355 986 l 542 986 l 542 907 m 1377 197 l 1377 28 l 1301 28 l 1301 197 l 1377 197 m 1377 708 l 1377 538 l 1301 538 l 1301 708 l 1377 708 m 813 -270 l 625 -270 l 625 -193 l 813 -193 l 813 -270 m 138 197 l 138 28 l 62 28 l 62 197 l 138 197 m 813 907 l 625 907 l 625 986 l 813 986 l 813 907 m 1084 907 l 896 907 l 896 986 l 1084 986 l 1084 907 m 138 453 l 138 282 l 62 282 l 62 453 l 138 453 m 138 708 l 138 538 l 62 538 l 62 708 l 138 708 m 1377 453 l 1377 282 l 1301 282 l 1301 453 l 1377 453 m 1144 288 l 1144 545 l 1206 545 l 1206 288 q 1170 203 1206 235 q 1080 172 1134 172 q 983 200 1020 172 q 946 283 946 227 l 1009 283 q 1028 237 1009 252 q 1080 222 1047 222 q 1126 240 1107 222 q 1144 288 1144 259 m 755 336 l 653 336 l 652 384 l 732 384 q 792 398 772 384 q 812 438 812 412 q 792 476 812 466 q 732 486 772 486 l 669 486 l 669 171 l 605 171 l 605 543 l 732 543 q 809 532 777 543 q 859 499 842 522 q 876 441 876 477 q 865 399 876 418 q 831 368 853 380 q 777 353 809 356 q 775 347 777 353 q 772 340 774 340 q 764 337 764 337 q 755 336 764 336 m 755 171 l 629 171 l 662 222 l 755 222 q 807 237 790 222 q 825 278 825 252 q 807 320 825 304 q 755 336 790 336 l 674 336 l 675 384 l 777 384 q 787 384 787 384 q 795 380 787 383 q 797 373 795 379 q 800 366 800 366 q 848 351 829 363 q 878 318 868 338 q 888 276 888 299 q 853 198 888 224 q 755 171 817 171 m 559 393 l 559 317 q 516 210 559 252 q 404 169 473 169 q 291 210 334 169 q 247 317 247 252 l 247 393 q 290 500 247 459 q 403 542 334 542 q 516 500 473 542 q 559 393 559 459 m 497 317 l 497 393 q 472 466 497 439 q 403 493 447 493 q 334 466 359 493 q 309 393 309 439 l 309 317 q 335 244 309 271 q 404 218 360 218 q 472 244 448 218 q 497 317 497 271 z "},"�":{"ha":1425,"x_min":62,"x_max":1361,"o":"m 62 436 l 711 1097 l 1361 436 l 711 -225 l 62 436 m 630 273 l 767 273 q 775 328 767 307 q 812 368 784 349 q 891 436 858 393 q 924 536 924 480 q 868 674 924 623 q 710 725 811 725 q 564 683 624 725 q 503 545 504 640 l 640 545 q 663 598 642 582 q 710 614 684 614 q 767 593 748 614 q 787 536 787 571 q 769 474 787 500 q 724 431 751 448 q 671 389 692 408 q 641 342 650 369 q 630 273 631 316 m 767 96 l 767 211 l 630 211 l 630 96 l 767 96 m 716 -376 l 716 -374 l 719 -374 l 719 -376 l 716 -376 m 715 1464 l 715 1467 l 718 1467 l 718 1464 l 715 1464 z "}," ":{"ha":345,"x_min":0,"x_max":0,"o":""},"­":{"ha":384,"x_min":26,"x_max":357,"o":"m 357 471 l 357 368 l 26 368 l 26 471 l 357 471 z "},"Đ":{"ha":932,"x_min":25,"x_max":850,"o":"m 402 0 l 196 0 l 197 106 l 402 106 q 578 151 508 106 q 685 276 649 195 q 720 464 720 356 l 720 524 q 700 675 720 609 q 640 787 680 741 q 544 857 601 833 q 414 880 488 880 l 192 880 l 192 987 l 414 987 q 591 955 511 987 q 729 862 671 923 q 819 716 787 802 q 850 523 850 630 l 850 464 q 819 271 850 357 q 729 125 787 185 q 588 32 670 64 q 402 0 505 0 m 266 987 l 266 0 l 135 0 l 135 987 l 266 987 m 457 554 l 457 451 l 25 451 l 25 554 l 457 554 z "},"Ð":{"ha":932,"x_min":25,"x_max":850,"o":"m 402 0 l 196 0 l 197 106 l 402 106 q 578 151 508 106 q 685 276 649 195 q 720 464 720 356 l 720 524 q 700 675 720 609 q 640 787 680 741 q 544 857 601 833 q 414 880 488 880 l 192 880 l 192 987 l 414 987 q 591 955 511 987 q 729 862 671 923 q 819 716 787 802 q 850 523 850 630 l 850 464 q 819 271 850 357 q 729 125 787 185 q 588 32 670 64 q 402 0 505 0 m 266 987 l 266 0 l 135 0 l 135 987 l 266 987 m 457 554 l 457 451 l 25 451 l 25 554 l 457 554 z "},"ħ":{"ha":785,"x_min":1,"x_max":693,"o":"m 241 1042 l 241 0 l 116 0 l 116 1042 l 241 1042 m 212 395 l 159 397 q 182 536 160 472 q 243 648 203 600 q 337 721 282 695 q 458 747 391 747 q 555 733 512 747 q 630 686 599 718 q 677 604 661 654 q 693 481 693 553 l 693 0 l 567 0 l 567 482 q 550 575 567 540 q 500 626 533 610 q 420 642 468 642 q 335 622 374 642 q 270 568 297 602 q 227 489 242 533 q 212 395 212 444 m 433 939 l 433 836 l 1 836 l 1 939 l 433 939 z "},"Ŧ":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 m 637 661 l 637 557 l 205 557 l 205 661 l 637 661 z "},"ŧ":{"ha":454,"x_min":-8,"x_max":424,"o":"m 403 734 l 403 637 l 6 637 l 6 734 l 403 734 m 140 912 l 266 912 l 266 182 q 277 125 266 144 q 307 100 289 106 q 347 94 326 94 q 379 97 362 94 q 406 102 397 100 l 406 0 q 367 -9 391 -5 q 309 -14 343 -14 q 224 5 263 -14 q 163 66 186 23 q 140 182 140 109 l 140 912 m 424 511 l 424 408 l -8 408 l -8 511 l 424 511 z "},"À":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 396 1253 l 527 1053 l 419 1053 l 244 1253 l 396 1253 z "},"Á":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 387 1053 l 518 1253 l 669 1253 l 488 1053 l 387 1053 z "},"Â":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 494 1253 l 662 1067 l 662 1061 l 557 1061 l 456 1175 l 355 1061 l 252 1061 l 252 1068 l 418 1253 l 494 1253 z "},"Ã":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 612 1239 l 696 1232 q 677 1145 696 1182 q 624 1087 657 1107 q 550 1067 591 1067 q 493 1077 515 1067 q 453 1099 471 1086 q 416 1121 435 1112 q 368 1131 397 1131 q 320 1109 340 1131 q 301 1056 301 1088 l 216 1060 q 236 1147 216 1109 q 288 1206 255 1185 q 362 1227 321 1227 q 413 1218 391 1227 q 455 1195 435 1208 q 496 1173 475 1183 q 544 1163 517 1163 q 592 1185 572 1163 q 612 1239 612 1207 z "},"Ä":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 237 1141 q 256 1192 237 1171 q 311 1213 275 1213 q 367 1192 348 1213 q 386 1141 386 1171 q 367 1091 386 1112 q 311 1070 348 1070 q 256 1091 275 1070 q 237 1141 237 1112 m 530 1139 q 548 1191 530 1170 q 604 1212 567 1212 q 659 1191 640 1212 q 678 1139 678 1170 q 659 1089 678 1110 q 604 1069 640 1069 q 548 1089 567 1069 q 530 1139 530 1110 z "},"Å":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 310 1174 q 329 1245 310 1213 q 381 1296 349 1277 q 456 1315 414 1315 q 559 1274 517 1315 q 602 1174 602 1232 q 582 1103 602 1135 q 530 1054 563 1072 q 456 1036 497 1036 q 352 1075 394 1036 q 310 1174 310 1114 m 377 1174 q 399 1120 377 1144 q 456 1096 421 1096 q 512 1119 490 1096 q 534 1174 534 1143 q 512 1230 534 1206 q 456 1254 490 1254 q 399 1230 421 1254 q 377 1174 377 1206 z "},"Ǻ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 429 1192 l 528 1316 l 656 1316 l 507 1192 l 429 1192 m 342 1045 q 376 1127 342 1095 q 458 1158 410 1158 q 538 1127 505 1158 q 572 1045 572 1095 q 538 965 572 996 q 458 935 505 935 q 376 965 410 935 q 342 1045 342 996 m 399 1045 q 416 1005 399 1021 q 458 988 434 988 q 498 1005 481 988 q 515 1045 515 1021 q 498 1088 515 1071 q 458 1105 481 1105 q 416 1088 434 1105 q 399 1045 399 1071 z "},"Ç":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 420 -7 l 510 -7 l 502 -43 q 573 -75 541 -50 q 606 -160 606 -101 q 592 -218 606 -192 q 553 -263 579 -244 q 489 -292 528 -281 q 400 -302 451 -302 l 395 -229 q 452 -222 427 -229 q 493 -201 477 -216 q 508 -162 508 -186 q 496 -127 508 -140 q 461 -107 485 -114 q 399 -98 437 -101 l 420 -7 z "},"È":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 360 1260 l 491 1061 l 383 1061 l 208 1260 l 360 1260 z "},"É":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 351 1061 l 482 1260 l 633 1260 l 452 1061 l 351 1061 z "},"Ê":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 458 1260 l 626 1075 l 626 1068 l 522 1068 l 420 1183 l 319 1068 l 216 1068 l 216 1076 l 382 1260 l 458 1260 z "},"Ë":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 201 1148 q 220 1200 201 1179 q 275 1221 239 1221 q 331 1200 312 1221 q 350 1148 350 1179 q 331 1098 350 1119 q 275 1078 312 1078 q 220 1098 239 1078 q 201 1148 201 1119 m 494 1147 q 512 1198 494 1177 q 568 1219 531 1219 q 623 1198 604 1219 q 642 1147 642 1177 q 623 1097 642 1118 q 568 1076 604 1076 q 512 1097 531 1076 q 494 1147 494 1118 z "},"Ì":{"ha":378,"x_min":-22,"x_max":260,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 130 1260 l 260 1061 l 153 1061 l -22 1260 l 130 1260 z "},"Í":{"ha":378,"x_min":120,"x_max":403,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 120 1061 l 252 1260 l 403 1260 l 221 1061 l 120 1061 z "},"Î":{"ha":378,"x_min":-15,"x_max":395,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 227 1260 l 395 1075 l 395 1068 l 291 1068 l 189 1183 l 88 1068 l -15 1068 l -15 1076 l 151 1260 l 227 1260 z "},"Ï":{"ha":378,"x_min":-29,"x_max":412,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m -29 1148 q -10 1200 -29 1179 q 45 1221 9 1221 q 100 1200 81 1221 q 119 1148 119 1179 q 100 1098 119 1119 q 45 1078 81 1078 q -10 1098 9 1078 q -29 1148 -29 1119 m 263 1147 q 282 1198 263 1177 q 337 1219 300 1219 q 392 1198 373 1219 q 412 1147 412 1177 q 392 1097 412 1118 q 337 1076 373 1076 q 282 1097 300 1076 q 263 1147 263 1118 z "},"Ñ":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 m 648 1239 l 733 1232 q 713 1145 733 1182 q 661 1087 694 1107 q 587 1067 628 1067 q 530 1077 552 1067 q 490 1099 507 1086 q 453 1121 472 1112 q 405 1131 433 1131 q 357 1109 376 1131 q 338 1056 338 1088 l 253 1060 q 272 1147 253 1109 q 325 1206 292 1185 q 399 1227 358 1227 q 450 1218 428 1227 q 492 1195 472 1208 q 532 1173 511 1183 q 581 1163 553 1163 q 629 1185 609 1163 q 648 1239 648 1207 z "},"Ò":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 420 1254 l 551 1055 l 443 1055 l 268 1254 l 420 1254 z "},"Ó":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 410 1055 l 542 1254 l 693 1254 l 511 1055 l 410 1055 z "},"Ô":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 517 1254 l 686 1069 l 686 1062 l 581 1062 l 479 1177 l 378 1062 l 275 1062 l 275 1069 l 441 1254 l 517 1254 z "},"Õ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 635 1240 l 720 1233 q 701 1146 720 1183 q 648 1088 681 1109 q 574 1068 615 1068 q 517 1078 539 1068 q 477 1100 494 1088 q 440 1123 459 1113 q 392 1133 420 1133 q 344 1111 363 1133 q 325 1057 325 1089 l 240 1061 q 259 1148 240 1111 q 312 1207 279 1186 q 386 1229 345 1229 q 437 1219 415 1229 q 479 1197 459 1209 q 519 1174 498 1184 q 568 1164 541 1164 q 616 1186 596 1164 q 635 1240 635 1208 z "},"Ö":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 261 1142 q 280 1194 261 1173 q 335 1215 299 1215 q 391 1194 372 1215 q 410 1142 410 1173 q 391 1092 410 1113 q 335 1072 372 1072 q 280 1092 299 1072 q 261 1142 261 1113 m 553 1141 q 572 1192 553 1171 q 627 1213 591 1213 q 683 1192 663 1213 q 702 1141 702 1171 q 683 1091 702 1112 q 627 1070 663 1070 q 572 1091 591 1070 q 553 1141 553 1112 z "},"Ù":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 393 1253 l 524 1053 l 416 1053 l 241 1253 l 393 1253 z "},"Ú":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 383 1053 l 515 1253 l 666 1253 l 484 1053 l 383 1053 z "},"Û":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 490 1253 l 659 1067 l 659 1061 l 554 1061 l 452 1175 l 351 1061 l 248 1061 l 248 1068 l 414 1253 l 490 1253 z "},"Ü":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 234 1141 q 253 1192 234 1171 q 308 1213 272 1213 q 363 1192 345 1213 q 382 1141 382 1171 q 363 1091 382 1112 q 308 1070 345 1070 q 253 1091 272 1070 q 234 1141 234 1112 m 526 1139 q 545 1191 526 1170 q 600 1212 564 1212 q 655 1191 636 1212 q 675 1139 675 1170 q 655 1089 675 1110 q 600 1069 636 1069 q 545 1089 564 1069 q 526 1139 526 1110 z "},"Ý":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 350 1053 l 481 1252 l 633 1252 l 451 1053 l 350 1053 z "},"à":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 335 1042 l 466 842 l 358 842 l 183 1042 l 335 1042 z "},"á":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 326 842 l 457 1042 l 608 1042 l 427 842 l 326 842 z "},"â":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 433 1042 l 601 857 l 601 850 l 496 850 l 395 964 l 294 850 l 191 850 l 191 857 l 357 1042 l 433 1042 z "},"ã":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 551 1028 l 635 1021 q 616 934 635 971 q 563 876 596 897 q 489 856 530 856 q 432 866 454 856 q 392 888 410 876 q 355 910 374 901 q 307 920 336 920 q 259 899 279 920 q 240 845 240 877 l 155 849 q 175 936 155 899 q 227 995 194 974 q 301 1017 260 1017 q 352 1007 330 1017 q 394 984 374 997 q 435 962 414 972 q 483 952 456 952 q 531 974 511 952 q 551 1028 551 996 z "},"ä":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 176 930 q 195 981 176 960 q 250 1002 214 1002 q 306 981 287 1002 q 325 930 325 960 q 306 880 325 901 q 250 859 287 859 q 195 880 214 859 q 176 930 176 901 m 469 928 q 487 980 469 959 q 543 1001 506 1001 q 598 980 578 1001 q 617 928 617 959 q 598 879 617 899 q 543 858 578 858 q 487 879 506 858 q 469 928 469 899 z "},"å":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 249 963 q 268 1034 249 1002 q 320 1085 288 1066 q 395 1104 353 1104 q 498 1063 456 1104 q 541 963 541 1021 q 521 892 541 924 q 469 843 502 861 q 395 825 436 825 q 291 864 333 825 q 249 963 249 903 m 316 963 q 338 909 316 933 q 395 885 360 885 q 451 908 429 885 q 473 963 473 932 q 451 1019 473 995 q 395 1043 429 1043 q 338 1019 360 1043 q 316 963 316 995 z "},"ǻ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 368 981 l 467 1105 l 595 1105 l 446 981 l 368 981 m 281 834 q 315 916 281 884 q 397 947 349 947 q 477 916 444 947 q 511 834 511 884 q 477 754 511 785 q 397 724 444 724 q 315 754 349 724 q 281 834 281 785 m 338 834 q 355 794 338 810 q 397 777 373 777 q 437 794 420 777 q 454 834 454 810 q 437 877 454 860 q 397 894 420 894 q 355 877 373 894 q 338 834 338 860 z "},"ç":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 320 -7 l 410 -7 l 402 -43 q 474 -75 441 -50 q 506 -160 506 -101 q 493 -218 506 -192 q 454 -263 479 -244 q 390 -292 428 -281 q 300 -302 351 -302 l 296 -229 q 352 -222 327 -229 q 393 -201 378 -216 q 408 -162 408 -186 q 397 -127 408 -140 q 361 -107 385 -114 q 299 -98 337 -101 l 320 -7 z "},"è":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 323 1042 l 454 842 l 347 842 l 172 1042 l 323 1042 z "},"é":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 314 842 l 446 1042 l 597 1042 l 415 842 l 314 842 z "},"ê":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 421 1042 l 589 857 l 589 850 l 485 850 l 383 964 l 282 850 l 179 850 l 179 857 l 345 1042 l 421 1042 z "},"ë":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 165 930 q 184 981 165 960 q 239 1002 203 1002 q 294 981 275 1002 q 313 930 313 960 q 294 880 313 901 q 239 859 275 859 q 184 880 203 859 q 165 930 165 901 m 457 928 q 476 980 457 959 q 531 1001 494 1001 q 586 980 567 1001 q 606 928 606 959 q 586 879 606 899 q 531 858 567 858 q 476 879 494 858 q 457 928 457 899 z "},"ì":{"ha":344,"x_min":-41,"x_max":242,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 111 1040 l 242 841 l 134 841 l -41 1040 l 111 1040 z "},"í":{"ha":344,"x_min":102,"x_max":385,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 102 841 l 233 1040 l 385 1040 l 203 841 l 102 841 z "},"î":{"ha":344,"x_min":-33,"x_max":377,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 209 1040 l 377 855 l 377 848 l 273 848 l 171 963 l 70 848 l -33 848 l -33 856 l 133 1040 l 209 1040 z "},"ï":{"ha":344,"x_min":-47,"x_max":393,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m -47 928 q -28 980 -47 959 q 26 1001 -9 1001 q 82 980 63 1001 q 101 928 101 959 q 82 879 101 899 q 26 858 63 858 q -28 879 -9 858 q -47 928 -47 899 m 245 927 q 263 979 245 958 q 319 1000 282 1000 q 374 979 355 1000 q 393 927 393 958 q 374 877 393 898 q 319 857 355 857 q 263 877 282 857 q 245 927 245 898 z "},"ñ":{"ha":767,"x_min":96,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 545 1028 l 629 1021 q 610 934 629 971 q 557 876 590 897 q 483 856 524 856 q 426 866 448 856 q 386 888 404 876 q 349 910 368 901 q 301 920 330 920 q 253 899 273 920 q 234 845 234 877 l 149 849 q 169 936 149 899 q 221 995 188 974 q 295 1017 254 1017 q 346 1007 324 1017 q 388 984 368 997 q 429 962 408 972 q 477 952 450 952 q 525 974 505 952 q 545 1028 545 996 z "},"ò":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 330 1042 l 461 842 l 353 842 l 178 1042 l 330 1042 z "},"ó":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 321 842 l 452 1042 l 604 1042 l 422 842 l 321 842 z "},"ô":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 428 1042 l 596 857 l 596 850 l 492 850 l 390 964 l 289 850 l 186 850 l 186 857 l 352 1042 l 428 1042 z "},"õ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 546 1028 l 631 1021 q 611 934 631 971 q 558 876 591 897 q 484 856 526 856 q 427 866 450 856 q 387 888 405 876 q 350 910 370 901 q 302 920 331 920 q 255 899 274 920 q 235 845 235 877 l 151 849 q 170 936 151 899 q 222 995 189 974 q 296 1017 256 1017 q 348 1007 326 1017 q 389 984 370 997 q 430 962 409 972 q 478 952 451 952 q 526 974 507 952 q 546 1028 546 996 z "},"ö":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 172 930 q 191 981 172 960 q 245 1002 210 1002 q 301 981 282 1002 q 320 930 320 960 q 301 880 320 901 q 245 859 282 859 q 191 880 210 859 q 172 930 172 901 m 464 928 q 483 980 464 959 q 538 1001 501 1001 q 593 980 574 1001 q 612 928 612 959 q 593 879 612 899 q 538 858 574 858 q 483 879 501 858 q 464 928 464 899 z "},"ù":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 325 1042 l 456 842 l 348 842 l 173 1042 l 325 1042 z "},"ú":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 315 842 l 447 1042 l 598 1042 l 416 842 l 315 842 z "},"û":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 422 1042 l 591 857 l 591 850 l 486 850 l 385 964 l 283 850 l 180 850 l 180 857 l 347 1042 l 422 1042 z "},"ü":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 166 930 q 185 981 166 960 q 240 1002 204 1002 q 296 981 277 1002 q 315 930 315 960 q 296 880 315 901 q 240 859 277 859 q 185 880 204 859 q 166 930 166 901 m 458 928 q 477 980 458 959 q 532 1001 496 1001 q 588 980 568 1001 q 607 928 607 959 q 588 879 607 899 q 532 858 568 858 q 477 879 496 858 q 458 928 458 899 z "},"ý":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 275 842 l 407 1042 l 558 1042 l 376 842 l 275 842 z "},"ÿ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 126 930 q 145 981 126 960 q 200 1002 164 1002 q 256 981 237 1002 q 275 930 275 960 q 256 880 275 901 q 200 859 237 859 q 145 880 164 859 q 126 930 126 901 m 418 928 q 437 980 418 959 q 492 1001 456 1001 q 548 980 528 1001 q 567 928 567 959 q 548 879 567 899 q 492 858 528 858 q 437 879 456 858 q 418 928 418 899 z "},"Ā":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 687 1196 l 687 1100 l 232 1100 l 232 1196 l 687 1196 z "},"ā":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 626 985 l 626 889 l 171 889 l 171 985 l 626 985 z "},"Ă":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 557 1225 l 659 1225 q 634 1131 659 1172 q 564 1067 610 1090 q 456 1044 519 1044 q 308 1094 362 1044 q 253 1225 253 1145 l 355 1225 q 378 1154 355 1185 q 456 1124 401 1124 q 534 1154 511 1124 q 557 1225 557 1185 z "},"ă":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 496 1014 l 597 1014 q 573 920 597 961 q 503 856 549 879 q 395 833 458 833 q 247 883 301 833 q 192 1014 192 934 l 294 1014 q 317 943 294 974 q 395 913 340 913 q 473 943 450 913 q 496 1014 496 974 z "},"Ą":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 812 39 l 863 0 q 807 -45 833 -22 q 764 -95 781 -68 q 747 -151 747 -121 q 759 -186 747 -173 q 800 -200 770 -200 q 840 -194 822 -200 q 867 -182 857 -187 l 877 -264 q 834 -284 860 -275 q 768 -294 808 -294 q 675 -261 713 -294 q 637 -165 637 -229 q 655 -92 637 -128 q 712 -23 673 -56 q 812 39 751 10 z "},"ą":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 608 39 l 658 0 q 602 -45 629 -22 q 559 -95 576 -68 q 542 -151 542 -121 q 554 -186 542 -173 q 595 -200 566 -200 q 635 -194 617 -200 q 663 -182 652 -187 l 672 -264 q 629 -284 655 -275 q 563 -294 603 -294 q 470 -261 508 -294 q 433 -165 433 -229 q 451 -92 433 -128 q 507 -23 469 -56 q 608 39 546 10 z "},"Ć":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 392 1075 l 524 1274 l 675 1274 l 493 1075 l 392 1075 z "},"ć":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 292 842 l 424 1042 l 575 1042 l 393 842 l 292 842 z "},"Ĉ":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 499 1274 l 667 1089 l 667 1082 l 563 1082 l 461 1197 l 360 1082 l 257 1082 l 257 1090 l 423 1274 l 499 1274 z "},"ĉ":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 399 1042 l 568 857 l 568 850 l 463 850 l 361 964 l 260 850 l 157 850 l 157 857 l 323 1042 l 399 1042 z "},"Ċ":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 387 1160 q 406 1211 387 1190 q 461 1232 425 1232 q 516 1211 497 1232 q 536 1160 536 1190 q 516 1110 536 1131 q 461 1089 497 1089 q 406 1110 425 1089 q 387 1160 387 1131 z "},"ċ":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 288 928 q 306 979 288 958 q 361 1000 325 1000 q 417 979 397 1000 q 436 928 436 958 q 417 877 436 898 q 361 857 397 857 q 306 877 325 857 q 288 928 288 898 z "},"Č":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 358 1274 l 460 1158 l 563 1274 l 671 1274 l 671 1267 l 499 1081 l 422 1081 l 252 1267 l 252 1274 l 358 1274 z "},"č":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 258 1041 l 361 926 l 463 1041 l 572 1041 l 572 1034 l 399 848 l 322 848 l 153 1034 l 153 1041 l 258 1041 z "},"Ď":{"ha":911,"x_min":115,"x_max":829,"o":"m 382 0 l 176 0 l 177 106 l 382 106 q 558 151 488 106 q 664 276 629 195 q 700 464 700 356 l 700 524 q 680 675 700 609 q 620 787 659 741 q 524 857 581 833 q 394 880 467 880 l 172 880 l 172 987 l 394 987 q 571 955 491 987 q 709 862 651 923 q 798 716 767 802 q 829 523 829 630 l 829 464 q 798 271 829 357 q 708 125 767 185 q 567 32 650 64 q 382 0 485 0 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 310 1259 l 412 1144 l 515 1259 l 623 1259 l 623 1253 l 451 1067 l 374 1067 l 204 1253 l 204 1259 l 310 1259 z "},"ď":{"ha":885,"x_min":64,"x_max":898,"o":"m 558 142 l 558 1042 l 684 1042 l 684 0 l 569 0 l 558 142 m 64 359 l 64 373 q 85 526 64 457 q 144 644 106 595 q 236 721 182 694 q 355 747 289 747 q 476 723 424 747 q 564 653 528 699 q 621 543 600 608 q 650 397 642 479 l 650 335 q 622 190 643 254 q 564 80 600 125 q 475 11 528 35 q 353 -14 423 -14 q 236 14 289 -14 q 144 92 182 42 q 85 211 106 142 q 64 359 64 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 213 208 q 297 114 260 134 q 385 93 334 93 q 487 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 213 525 q 191 373 191 428 m 898 1043 l 898 989 q 874 874 898 936 q 800 771 850 812 l 728 821 q 766 900 753 859 q 779 988 779 941 l 779 1043 l 898 1043 z "},"Ē":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 651 1204 l 651 1107 l 196 1107 l 196 1204 l 651 1204 z "},"ē":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 614 985 l 614 889 l 159 889 l 159 985 l 614 985 z "},"Ĕ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 521 1232 l 623 1232 q 598 1138 623 1179 q 528 1074 574 1097 q 420 1051 483 1051 q 272 1102 326 1051 q 217 1232 217 1152 l 319 1232 q 342 1162 319 1192 q 420 1131 365 1131 q 498 1162 475 1131 q 521 1232 521 1192 z "},"ĕ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 484 1014 l 586 1014 q 562 920 586 961 q 492 856 537 879 q 384 833 446 833 q 235 883 290 833 q 180 1014 180 934 l 282 1014 q 305 943 282 974 q 384 913 328 913 q 461 943 438 913 q 484 1014 484 974 z "},"Ė":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 346 1146 q 365 1197 346 1176 q 420 1218 383 1218 q 475 1197 456 1218 q 494 1146 494 1176 q 475 1096 494 1116 q 420 1075 456 1075 q 365 1096 383 1075 q 346 1146 346 1116 z "},"ė":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 309 928 q 328 979 309 958 q 383 1000 347 1000 q 438 979 419 1000 q 458 928 458 958 q 438 877 458 898 q 383 857 419 857 q 328 877 347 857 q 309 928 309 898 z "},"Ę":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 643 39 l 693 0 q 637 -45 664 -22 q 594 -95 611 -68 q 577 -151 577 -121 q 589 -186 577 -173 q 630 -200 601 -200 q 670 -194 652 -200 q 698 -182 688 -187 l 707 -264 q 664 -284 690 -275 q 598 -294 638 -294 q 506 -261 543 -294 q 468 -165 468 -229 q 486 -92 468 -128 q 543 -23 504 -56 q 643 39 581 10 z "},"ę":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 500 56 l 551 18 q 495 -27 522 -4 q 452 -77 469 -51 q 435 -133 435 -103 q 447 -169 435 -155 q 488 -182 458 -182 q 528 -176 510 -182 q 555 -164 545 -170 l 565 -247 q 522 -267 548 -257 q 456 -277 496 -277 q 363 -244 401 -277 q 326 -147 326 -211 q 343 -75 326 -111 q 400 -5 361 -39 q 500 56 439 28 z "},"Ě":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 317 1259 l 419 1144 l 522 1259 l 630 1259 l 630 1253 l 458 1067 l 380 1067 l 211 1253 l 211 1259 l 317 1259 z "},"ě":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 280 1041 l 382 926 l 485 1041 l 593 1041 l 593 1034 l 421 848 l 344 848 l 174 1034 l 174 1041 l 280 1041 z "},"Ĝ":{"ha":946,"x_min":83,"x_max":844,"o":"m 844 492 l 844 130 q 786 70 826 103 q 676 11 746 36 q 495 -14 606 -14 q 329 18 405 -14 q 198 110 254 50 q 113 258 143 171 q 83 456 83 345 l 83 532 q 109 730 83 643 q 186 877 135 817 q 311 969 237 938 q 480 1001 385 1001 q 670 962 593 1001 q 789 854 746 923 q 844 699 832 786 l 713 699 q 679 796 705 752 q 604 867 652 840 q 480 894 556 894 q 361 869 412 894 q 279 797 311 844 q 230 684 246 750 q 214 534 214 617 l 214 456 q 234 303 214 370 q 292 189 254 236 q 381 117 329 142 q 496 93 433 93 q 609 105 566 93 q 677 133 652 117 q 714 165 701 150 l 714 386 l 486 386 l 486 492 l 844 492 m 494 1274 l 662 1089 l 662 1082 l 557 1082 l 456 1197 l 355 1082 l 252 1082 l 252 1090 l 418 1274 l 494 1274 z "},"ĝ":{"ha":780,"x_min":66,"x_max":685,"o":"m 571 734 l 685 734 l 685 16 q 646 -150 685 -81 q 536 -254 606 -218 q 374 -290 466 -290 q 285 -278 336 -290 q 185 -238 234 -266 q 102 -162 136 -210 l 168 -87 q 265 -165 214 -143 q 365 -186 315 -186 q 468 -164 425 -186 q 535 -98 511 -142 q 559 9 559 -54 l 559 572 l 571 734 m 66 359 l 66 373 q 86 526 66 457 q 143 644 106 595 q 235 721 181 694 q 355 747 288 747 q 476 723 425 747 q 565 653 528 699 q 622 543 601 608 q 651 397 643 479 l 651 335 q 622 190 644 254 q 565 80 601 125 q 476 11 528 35 q 354 -14 424 -14 q 235 14 288 -14 q 144 92 182 42 q 86 211 106 142 q 66 359 66 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 214 208 q 297 114 260 134 q 385 93 334 93 q 488 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 583 484 q 528 582 552 554 q 469 625 504 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 214 525 q 191 373 191 428 m 415 1042 l 583 857 l 583 850 l 479 850 l 377 964 l 276 850 l 173 850 l 173 857 l 339 1042 l 415 1042 z "},"Ğ":{"ha":946,"x_min":83,"x_max":844,"o":"m 844 492 l 844 130 q 786 70 826 103 q 676 11 746 36 q 495 -14 606 -14 q 329 18 405 -14 q 198 110 254 50 q 113 258 143 171 q 83 456 83 345 l 83 532 q 109 730 83 643 q 186 877 135 817 q 311 969 237 938 q 480 1001 385 1001 q 670 962 593 1001 q 789 854 746 923 q 844 699 832 786 l 713 699 q 679 796 705 752 q 604 867 652 840 q 480 894 556 894 q 361 869 412 894 q 279 797 311 844 q 230 684 246 750 q 214 534 214 617 l 214 456 q 234 303 214 370 q 292 189 254 236 q 381 117 329 142 q 496 93 433 93 q 609 105 566 93 q 677 133 652 117 q 714 165 701 150 l 714 386 l 486 386 l 486 492 l 844 492 m 557 1246 l 659 1246 q 634 1153 659 1194 q 564 1088 610 1112 q 456 1065 519 1065 q 308 1116 362 1065 q 253 1246 253 1166 l 355 1246 q 378 1176 355 1206 q 456 1145 401 1145 q 534 1176 511 1145 q 557 1246 557 1206 z "},"ğ":{"ha":780,"x_min":66,"x_max":685,"o":"m 571 734 l 685 734 l 685 16 q 646 -150 685 -81 q 536 -254 606 -218 q 374 -290 466 -290 q 285 -278 336 -290 q 185 -238 234 -266 q 102 -162 136 -210 l 168 -87 q 265 -165 214 -143 q 365 -186 315 -186 q 468 -164 425 -186 q 535 -98 511 -142 q 559 9 559 -54 l 559 572 l 571 734 m 66 359 l 66 373 q 86 526 66 457 q 143 644 106 595 q 235 721 181 694 q 355 747 288 747 q 476 723 425 747 q 565 653 528 699 q 622 543 601 608 q 651 397 643 479 l 651 335 q 622 190 644 254 q 565 80 601 125 q 476 11 528 35 q 354 -14 424 -14 q 235 14 288 -14 q 144 92 182 42 q 86 211 106 142 q 66 359 66 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 214 208 q 297 114 260 134 q 385 93 334 93 q 488 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 583 484 q 528 582 552 554 q 469 625 504 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 214 525 q 191 373 191 428 m 478 1014 l 580 1014 q 555 920 580 961 q 486 856 531 879 q 378 833 440 833 q 229 883 283 833 q 174 1014 174 934 l 276 1014 q 299 943 276 974 q 378 913 322 913 q 455 943 432 913 q 478 1014 478 974 z "},"Ġ":{"ha":946,"x_min":83,"x_max":844,"o":"m 844 492 l 844 130 q 786 70 826 103 q 676 11 746 36 q 495 -14 606 -14 q 329 18 405 -14 q 198 110 254 50 q 113 258 143 171 q 83 456 83 345 l 83 532 q 109 730 83 643 q 186 877 135 817 q 311 969 237 938 q 480 1001 385 1001 q 670 962 593 1001 q 789 854 746 923 q 844 699 832 786 l 713 699 q 679 796 705 752 q 604 867 652 840 q 480 894 556 894 q 361 869 412 894 q 279 797 311 844 q 230 684 246 750 q 214 534 214 617 l 214 456 q 234 303 214 370 q 292 189 254 236 q 381 117 329 142 q 496 93 433 93 q 609 105 566 93 q 677 133 652 117 q 714 165 701 150 l 714 386 l 486 386 l 486 492 l 844 492 m 382 1160 q 400 1211 382 1190 q 456 1232 419 1232 q 511 1211 492 1232 q 530 1160 530 1190 q 511 1110 530 1131 q 456 1089 492 1089 q 400 1110 419 1089 q 382 1160 382 1131 z "},"ġ":{"ha":780,"x_min":66,"x_max":685,"o":"m 571 734 l 685 734 l 685 16 q 646 -150 685 -81 q 536 -254 606 -218 q 374 -290 466 -290 q 285 -278 336 -290 q 185 -238 234 -266 q 102 -162 136 -210 l 168 -87 q 265 -165 214 -143 q 365 -186 315 -186 q 468 -164 425 -186 q 535 -98 511 -142 q 559 9 559 -54 l 559 572 l 571 734 m 66 359 l 66 373 q 86 526 66 457 q 143 644 106 595 q 235 721 181 694 q 355 747 288 747 q 476 723 425 747 q 565 653 528 699 q 622 543 601 608 q 651 397 643 479 l 651 335 q 622 190 644 254 q 565 80 601 125 q 476 11 528 35 q 354 -14 424 -14 q 235 14 288 -14 q 144 92 182 42 q 86 211 106 142 q 66 359 66 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 214 208 q 297 114 260 134 q 385 93 334 93 q 488 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 583 484 q 528 582 552 554 q 469 625 504 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 214 525 q 191 373 191 428 m 303 928 q 322 979 303 958 q 377 1000 340 1000 q 432 979 413 1000 q 452 928 452 958 q 432 877 452 898 q 377 857 413 857 q 322 877 340 857 q 303 928 303 898 z "},"Ģ":{"ha":946,"x_min":83,"x_max":844,"o":"m 844 492 l 844 130 q 786 70 826 103 q 676 11 746 36 q 495 -14 606 -14 q 329 18 405 -14 q 198 110 254 50 q 113 258 143 171 q 83 456 83 345 l 83 532 q 109 730 83 643 q 186 877 135 817 q 311 969 237 938 q 480 1001 385 1001 q 670 962 593 1001 q 789 854 746 923 q 844 699 832 786 l 713 699 q 679 796 705 752 q 604 867 652 840 q 480 894 556 894 q 361 869 412 894 q 279 797 311 844 q 230 684 246 750 q 214 534 214 617 l 214 456 q 234 303 214 370 q 292 189 254 236 q 381 117 329 142 q 496 93 433 93 q 609 105 566 93 q 677 133 652 117 q 714 165 701 150 l 714 386 l 486 386 l 486 492 l 844 492 m 554 -84 l 554 -138 q 530 -253 554 -191 q 456 -356 506 -315 l 385 -307 q 422 -227 410 -268 q 435 -139 435 -186 l 435 -84 l 554 -84 z "},"ģ":{"ha":780,"x_min":66,"x_max":685,"o":"m 571 734 l 685 734 l 685 16 q 646 -150 685 -81 q 536 -254 606 -218 q 374 -290 466 -290 q 285 -278 336 -290 q 185 -238 234 -266 q 102 -162 136 -210 l 168 -87 q 265 -165 214 -143 q 365 -186 315 -186 q 468 -164 425 -186 q 535 -98 511 -142 q 559 9 559 -54 l 559 572 l 571 734 m 66 359 l 66 373 q 86 526 66 457 q 143 644 106 595 q 235 721 181 694 q 355 747 288 747 q 476 723 425 747 q 565 653 528 699 q 622 543 601 608 q 651 397 643 479 l 651 335 q 622 190 644 254 q 565 80 601 125 q 476 11 528 35 q 354 -14 424 -14 q 235 14 288 -14 q 144 92 182 42 q 86 211 106 142 q 66 359 66 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 214 208 q 297 114 260 134 q 385 93 334 93 q 488 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 583 484 q 528 582 552 554 q 469 625 504 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 214 525 q 191 373 191 428 m 311 850 l 311 938 q 326 1018 311 978 q 362 1090 340 1057 q 406 1141 385 1122 l 478 1085 q 446 1009 455 1044 q 437 932 437 974 l 437 850 l 311 850 z "},"Ĥ":{"ha":991,"x_min":115,"x_max":873,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 m 521 1260 l 689 1075 l 689 1068 l 585 1068 l 483 1183 l 382 1068 l 279 1068 l 279 1076 l 445 1260 l 521 1260 z "},"ĥ":{"ha":765,"x_min":96,"x_max":673,"o":"m 221 1042 l 221 0 l 96 0 l 96 1042 l 221 1042 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 378 1259 l 546 1074 l 546 1067 l 441 1067 l 340 1182 l 239 1067 l 136 1067 l 136 1075 l 302 1259 l 378 1259 z "},"Ĩ":{"ha":378,"x_min":-50,"x_max":430,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 345 1246 l 430 1239 q 410 1152 430 1190 q 358 1095 391 1115 q 283 1074 325 1074 q 227 1084 249 1074 q 186 1106 204 1094 q 150 1129 169 1119 q 102 1139 130 1139 q 54 1117 73 1139 q 35 1063 35 1095 l -50 1067 q -31 1155 -50 1117 q 22 1214 -12 1192 q 96 1235 55 1235 q 147 1225 125 1235 q 189 1203 169 1215 q 229 1180 208 1190 q 277 1171 250 1171 q 326 1193 306 1171 q 345 1246 345 1215 z "},"ĩ":{"ha":344,"x_min":-68,"x_max":412,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 327 1027 l 412 1019 q 392 932 412 970 q 339 875 372 895 q 265 854 307 854 q 208 864 231 854 q 168 887 186 874 q 131 909 151 899 q 83 919 112 919 q 36 897 55 919 q 16 844 16 876 l -68 848 q -49 935 -68 897 q 3 994 -30 972 q 77 1015 37 1015 q 129 1005 106 1015 q 170 983 151 996 q 211 961 190 970 q 259 951 232 951 q 307 973 288 951 q 327 1027 327 995 z "},"Ī":{"ha":378,"x_min":-35,"x_max":420,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 420 1204 l 420 1107 l -35 1107 l -35 1204 l 420 1204 z "},"ī":{"ha":344,"x_min":-53,"x_max":402,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 402 984 l 402 888 l -53 888 l -53 984 l 402 984 z "},"Ĭ":{"ha":378,"x_min":-14,"x_max":392,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 290 1232 l 392 1232 q 368 1138 392 1179 q 298 1074 343 1097 q 190 1051 252 1051 q 41 1102 96 1051 q -14 1232 -14 1152 l 88 1232 q 111 1162 88 1192 q 190 1131 134 1131 q 267 1162 244 1131 q 290 1232 290 1192 z "},"ĭ":{"ha":344,"x_min":-32,"x_max":374,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 272 1013 l 374 1013 q 349 919 374 960 q 279 854 325 878 q 172 831 234 831 q 23 882 77 831 q -32 1013 -32 932 l 70 1013 q 93 942 70 972 q 172 911 116 911 q 249 942 226 911 q 272 1013 272 972 z "},"Į":{"ha":378,"x_min":16,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 191 45 l 241 6 q 185 -39 212 -16 q 142 -89 159 -62 q 125 -144 125 -115 q 137 -180 125 -167 q 178 -194 149 -194 q 218 -188 200 -194 q 245 -176 235 -181 l 255 -258 q 212 -278 238 -269 q 146 -288 186 -288 q 53 -255 91 -288 q 16 -159 16 -222 q 34 -86 16 -122 q 90 -17 52 -50 q 191 45 129 16 z "},"į":{"ha":338,"x_min":-4,"x_max":245,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 96 928 q 115 980 96 959 q 170 1001 134 1001 q 225 980 206 1001 q 245 928 245 959 q 225 879 245 899 q 170 858 206 858 q 115 879 134 858 q 96 928 96 899 m 171 39 l 221 0 q 165 -45 192 -22 q 122 -95 139 -68 q 105 -151 105 -121 q 117 -186 105 -173 q 158 -200 129 -200 q 198 -194 180 -200 q 226 -182 216 -187 l 235 -264 q 192 -284 218 -275 q 126 -294 166 -294 q 34 -261 71 -294 q -4 -165 -4 -229 q 14 -92 -4 -128 q 71 -23 32 -56 q 171 39 109 10 z "},"İ":{"ha":378,"x_min":115,"x_max":264,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 115 1146 q 134 1197 115 1176 q 189 1218 153 1218 q 244 1197 225 1218 q 264 1146 264 1176 q 244 1096 264 1116 q 189 1075 225 1075 q 134 1096 153 1075 q 115 1146 115 1116 z "},"Ĳ":{"ha":1144,"x_min":124,"x_max":1037,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 907 288 l 907 987 l 1037 987 l 1037 288 q 997 123 1037 191 q 887 21 957 56 q 726 -14 817 -14 q 564 18 635 -14 q 454 113 494 49 q 414 273 414 176 l 545 273 q 568 171 545 211 q 632 112 591 131 q 726 93 673 93 q 818 115 777 93 q 883 181 859 137 q 907 288 907 224 z "},"ĳ":{"ha":670,"x_min":96,"x_max":572,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 96 928 q 115 980 96 959 q 170 1001 134 1001 q 225 980 206 1001 q 245 928 245 959 q 225 879 245 899 q 170 858 206 858 q 115 879 134 858 q 96 928 96 899 m 437 734 l 563 734 l 563 -87 q 542 -201 563 -155 q 478 -272 520 -248 q 371 -296 435 -296 q 331 -293 354 -296 q 293 -285 309 -290 l 294 -184 q 323 -188 307 -186 q 351 -190 339 -190 q 398 -180 379 -190 q 427 -147 417 -170 q 437 -87 437 -125 l 437 734 m 424 928 q 443 980 424 959 q 498 1001 462 1001 q 553 980 534 1001 q 572 928 572 959 q 553 879 572 899 q 498 858 534 858 q 443 879 462 858 q 424 928 424 899 z "},"Ĵ":{"ha":766,"x_min":36,"x_max":784,"o":"m 529 288 l 529 987 l 659 987 l 659 288 q 619 123 659 191 q 509 21 579 56 q 348 -14 439 -14 q 186 18 257 -14 q 76 113 116 49 q 36 273 36 176 l 167 273 q 190 171 167 211 q 254 112 213 131 q 348 93 295 93 q 440 115 399 93 q 505 181 481 137 q 529 288 529 224 m 616 1251 l 784 1066 l 784 1059 l 680 1059 l 578 1174 l 477 1059 l 374 1059 l 374 1067 l 540 1251 l 616 1251 z "},"ĵ":{"ha":350,"x_min":-52,"x_max":387,"o":"m 117 734 l 243 734 l 243 -60 q 217 -189 243 -136 q 142 -269 191 -242 q 24 -296 93 -296 q -14 -294 3 -296 q -52 -285 -32 -292 l -42 -184 q -8 -191 -32 -189 q 24 -193 15 -193 q 74 -177 54 -193 q 106 -132 95 -161 q 117 -60 117 -102 l 117 734 m 218 1014 l 387 829 l 387 822 l 282 822 l 180 937 l 79 822 l -24 822 l -24 829 l 142 1014 l 218 1014 z "},"Ķ":{"ha":871,"x_min":115,"x_max":871,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 842 987 l 431 527 l 201 288 l 179 427 l 353 618 l 684 987 l 842 987 m 715 0 l 350 481 l 428 585 l 871 0 l 715 0 m 507 -17 l 507 -71 q 483 -186 507 -124 q 408 -289 458 -248 l 337 -239 q 375 -160 362 -201 q 387 -72 387 -119 l 387 -17 l 507 -17 z "},"ķ":{"ha":704,"x_min":96,"x_max":703,"o":"m 222 1042 l 222 0 l 96 0 l 96 1042 l 222 1042 m 670 734 l 350 391 l 171 205 l 161 339 l 289 492 l 517 734 l 670 734 m 555 0 l 294 350 l 359 462 l 703 0 l 555 0 m 418 -30 l 418 -83 q 394 -199 418 -137 q 319 -302 370 -260 l 248 -252 q 286 -173 273 -214 q 298 -85 298 -132 l 298 -30 l 418 -30 z "},"Ĺ":{"ha":748,"x_min":110,"x_max":713,"o":"m 713 106 l 713 0 l 220 0 l 220 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 110 1050 l 241 1249 l 393 1249 l 211 1050 l 110 1050 z "},"ĺ":{"ha":338,"x_min":100,"x_max":382,"o":"m 232 1042 l 232 0 l 106 0 l 106 1042 l 232 1042 m 100 1118 l 231 1318 l 382 1318 l 201 1118 l 100 1118 z "},"Ļ":{"ha":748,"x_min":115,"x_max":713,"o":"m 713 106 l 713 0 l 220 0 l 220 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 479 -71 l 479 -125 q 455 -240 479 -178 q 381 -343 431 -302 l 310 -294 q 348 -214 335 -255 q 360 -126 360 -174 l 360 -71 l 479 -71 z "},"ļ":{"ha":338,"x_min":58,"x_max":232,"o":"m 232 1042 l 232 0 l 106 0 l 106 1042 l 232 1042 m 228 -71 l 228 -125 q 204 -240 228 -178 q 130 -343 180 -302 l 58 -294 q 96 -214 83 -255 q 109 -126 109 -174 l 109 -71 l 228 -71 z "},"Ľ":{"ha":748,"x_min":115,"x_max":713,"o":"m 713 106 l 713 0 l 220 0 l 220 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 551 988 l 551 935 q 527 819 551 881 q 453 716 503 758 l 382 766 q 419 845 407 804 q 432 933 432 886 l 432 988 l 551 988 z "},"ľ":{"ha":439,"x_min":106,"x_max":465,"o":"m 232 1042 l 232 0 l 106 0 l 106 1042 l 232 1042 m 465 1043 l 465 989 q 440 874 465 936 q 366 771 416 812 l 295 821 q 333 900 320 859 q 345 988 345 941 l 345 1043 l 465 1043 z "},"Ŀ":{"ha":748,"x_min":115,"x_max":713,"o":"m 713 106 l 713 0 l 220 0 l 220 106 l 713 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 397 540 q 416 591 397 570 q 471 612 435 612 q 527 591 507 612 q 546 540 546 570 q 527 489 546 510 q 471 469 507 469 q 416 489 435 469 q 397 540 397 510 z "},"ŀ":{"ha":487,"x_min":106,"x_max":457,"o":"m 232 1042 l 232 0 l 106 0 l 106 1042 l 232 1042 m 309 530 q 327 581 309 559 q 382 602 346 602 q 438 581 418 602 q 457 530 457 559 q 438 479 457 500 q 382 458 418 458 q 327 479 346 458 q 309 530 309 500 z "},"Ń":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 m 423 1053 l 555 1253 l 706 1253 l 524 1053 l 423 1053 z "},"ń":{"ha":767,"x_min":96,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 319 842 l 451 1042 l 602 1042 l 420 842 l 319 842 z "},"Ņ":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 m 547 -71 l 547 -125 q 523 -240 547 -178 q 449 -343 499 -302 l 378 -294 q 415 -214 403 -255 q 428 -126 428 -174 l 428 -71 l 547 -71 z "},"ņ":{"ha":767,"x_min":96,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 441 -71 l 441 -125 q 417 -240 441 -178 q 342 -343 393 -302 l 271 -294 q 309 -214 296 -255 q 321 -126 321 -174 l 321 -71 l 441 -71 z "},"Ň":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 m 389 1252 l 492 1137 l 594 1252 l 703 1252 l 703 1245 l 530 1059 l 453 1059 l 283 1245 l 283 1252 l 389 1252 z "},"ň":{"ha":767,"x_min":96,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 286 1041 l 388 926 l 490 1041 l 599 1041 l 599 1034 l 427 848 l 349 848 l 180 1034 l 180 1041 l 286 1041 z "},"ŉ":{"ha":767,"x_min":-47,"x_max":673,"o":"m 221 577 l 221 0 l 96 0 l 96 734 l 214 734 l 221 577 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 m 123 1045 l 123 991 q 99 876 123 938 q 24 773 75 814 l -47 823 q -9 902 -22 861 q 3 990 3 943 l 3 1045 l 123 1045 z "},"Ō":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 711 1198 l 711 1101 l 256 1101 l 256 1198 l 711 1198 z "},"ō":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 621 985 l 621 889 l 166 889 l 166 985 l 621 985 z "},"Ŏ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 581 1226 l 682 1226 q 658 1132 682 1173 q 588 1068 633 1091 q 480 1045 543 1045 q 331 1096 386 1045 q 277 1226 277 1146 l 378 1226 q 401 1156 378 1186 q 480 1125 425 1125 q 557 1156 534 1125 q 581 1226 581 1186 z "},"ŏ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 491 1014 l 593 1014 q 568 920 593 961 q 498 856 544 879 q 391 833 453 833 q 242 883 296 833 q 187 1014 187 934 l 289 1014 q 312 943 289 974 q 391 913 335 913 q 468 943 445 913 q 491 1014 491 974 z "},"Ő":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 500 1048 l 656 1253 l 797 1253 l 615 1048 l 500 1048 m 311 1048 l 426 1253 l 560 1253 l 412 1048 l 311 1048 z "},"ő":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 411 836 l 567 1041 l 707 1041 l 526 836 l 411 836 m 221 836 l 336 1041 l 471 1041 l 323 836 l 221 836 z "},"Ŕ":{"ha":856,"x_min":115,"x_max":831,"o":"m 115 987 l 441 987 q 630 954 553 987 q 747 853 707 920 q 787 691 787 787 q 760 567 787 623 q 681 472 732 511 q 559 414 630 433 l 522 400 l 215 400 l 214 507 l 446 507 q 563 531 516 507 q 633 598 610 556 q 657 691 657 640 q 635 791 657 748 q 565 857 612 833 q 441 880 517 880 l 245 880 l 245 0 l 115 0 l 115 987 m 692 0 l 452 448 l 588 448 l 831 8 l 831 0 l 692 0 m 345 1053 l 476 1253 l 627 1253 l 446 1053 l 345 1053 z "},"ŕ":{"ha":471,"x_min":96,"x_max":490,"o":"m 221 618 l 221 0 l 96 0 l 96 734 l 218 734 l 221 618 m 450 738 l 450 621 q 420 626 434 625 q 389 627 406 627 q 312 613 345 627 q 256 575 279 600 q 219 517 233 551 q 202 444 206 484 l 167 423 q 180 548 167 490 q 221 651 193 606 q 292 722 249 696 q 395 747 335 747 q 426 744 408 747 q 450 738 444 741 m 208 842 l 339 1042 l 490 1042 l 309 842 l 208 842 z "},"Ŗ":{"ha":856,"x_min":115,"x_max":831,"o":"m 115 987 l 441 987 q 630 954 553 987 q 747 853 707 920 q 787 691 787 787 q 760 567 787 623 q 681 472 732 511 q 559 414 630 433 l 522 400 l 215 400 l 214 507 l 446 507 q 563 531 516 507 q 633 598 610 556 q 657 691 657 640 q 635 791 657 748 q 565 857 612 833 q 441 880 517 880 l 245 880 l 245 0 l 115 0 l 115 987 m 692 0 l 452 448 l 588 448 l 831 8 l 831 0 l 692 0 m 473 -71 l 473 -125 q 449 -240 473 -178 q 375 -343 425 -302 l 304 -294 q 341 -214 329 -255 q 354 -126 354 -174 l 354 -71 l 473 -71 z "},"ŗ":{"ha":471,"x_min":56,"x_max":450,"o":"m 221 618 l 221 0 l 96 0 l 96 734 l 218 734 l 221 618 m 450 738 l 450 621 q 420 626 434 625 q 389 627 406 627 q 312 613 345 627 q 256 575 279 600 q 219 517 233 551 q 202 444 206 484 l 167 423 q 180 548 167 490 q 221 651 193 606 q 292 722 249 696 q 395 747 335 747 q 426 744 408 747 q 450 738 444 741 m 226 -71 l 226 -124 q 202 -239 226 -178 q 127 -342 178 -301 l 56 -293 q 94 -214 81 -254 q 106 -125 106 -173 l 106 -71 l 226 -71 z "},"Ř":{"ha":856,"x_min":115,"x_max":831,"o":"m 115 987 l 441 987 q 630 954 553 987 q 747 853 707 920 q 787 691 787 787 q 760 567 787 623 q 681 472 732 511 q 559 414 630 433 l 522 400 l 215 400 l 214 507 l 446 507 q 563 531 516 507 q 633 598 610 556 q 657 691 657 640 q 635 791 657 748 q 565 857 612 833 q 441 880 517 880 l 245 880 l 245 0 l 115 0 l 115 987 m 692 0 l 452 448 l 588 448 l 831 8 l 831 0 l 692 0 m 311 1252 l 413 1137 l 515 1252 l 624 1252 l 624 1245 l 452 1059 l 374 1059 l 205 1245 l 205 1252 l 311 1252 z "},"ř":{"ha":471,"x_min":68,"x_max":487,"o":"m 221 618 l 221 0 l 96 0 l 96 734 l 218 734 l 221 618 m 450 738 l 450 621 q 420 626 434 625 q 389 627 406 627 q 312 613 345 627 q 256 575 279 600 q 219 517 233 551 q 202 444 206 484 l 167 423 q 180 548 167 490 q 221 651 193 606 q 292 722 249 696 q 395 747 335 747 q 426 744 408 747 q 450 738 444 741 m 174 1041 l 276 926 l 378 1041 l 487 1041 l 487 1034 l 315 848 l 237 848 l 68 1034 l 68 1041 l 174 1041 z "},"Ś":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 m 353 1055 l 484 1254 l 635 1254 l 454 1055 l 353 1055 z "},"ś":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 m 312 842 l 444 1042 l 595 1042 l 413 842 l 312 842 z "},"Ŝ":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 m 460 1254 l 628 1069 l 628 1062 l 524 1062 l 422 1177 l 321 1062 l 218 1062 l 218 1069 l 384 1254 l 460 1254 z "},"ŝ":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 m 419 1042 l 587 857 l 587 850 l 483 850 l 381 964 l 280 850 l 177 850 l 177 857 l 343 1042 l 419 1042 z "},"Ş":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 m 385 -1 l 475 -1 l 467 -37 q 538 -69 506 -43 q 570 -154 570 -95 q 557 -212 570 -186 q 518 -257 544 -238 q 454 -286 492 -275 q 365 -296 416 -296 l 360 -223 q 417 -216 391 -223 q 457 -195 442 -210 q 473 -156 473 -180 q 461 -121 473 -134 q 426 -101 450 -108 q 363 -92 401 -95 l 385 -1 z "},"ş":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 m 340 -7 l 430 -7 l 422 -43 q 493 -75 461 -50 q 526 -160 526 -101 q 512 -218 526 -192 q 473 -263 499 -244 q 409 -292 448 -281 q 320 -302 371 -302 l 315 -229 q 372 -222 347 -229 q 413 -201 397 -216 q 428 -162 428 -186 q 416 -127 428 -140 q 381 -107 405 -114 q 319 -98 357 -101 l 340 -7 z "},"Ș":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 m 485 -79 l 485 -132 q 461 -248 485 -186 q 387 -351 437 -309 l 315 -301 q 353 -222 340 -262 q 366 -134 366 -181 l 366 -79 l 485 -79 z "},"ș":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 m 440 -85 l 440 -138 q 416 -254 440 -192 q 342 -357 392 -315 l 271 -307 q 308 -228 296 -269 q 321 -140 321 -187 l 321 -85 l 440 -85 z "},"Š":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 m 319 1253 l 421 1138 l 524 1253 l 632 1253 l 632 1246 l 460 1061 l 382 1061 l 213 1246 l 213 1253 l 319 1253 z "},"š":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 m 278 1041 l 380 926 l 483 1041 l 591 1041 l 591 1034 l 419 848 l 342 848 l 172 1034 l 172 1041 l 278 1041 z "},"Ț":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 m 475 -78 l 475 -132 q 451 -247 475 -185 q 377 -350 427 -309 l 306 -300 q 343 -221 331 -262 q 356 -133 356 -180 l 356 -78 l 475 -78 z "},"ț":{"ha":454,"x_min":6,"x_max":406,"o":"m 403 734 l 403 637 l 6 637 l 6 734 l 403 734 m 140 912 l 266 912 l 266 182 q 277 125 266 144 q 307 100 289 106 q 347 94 326 94 q 379 97 362 94 q 406 102 397 100 l 406 0 q 367 -9 391 -5 q 309 -14 343 -14 q 224 5 263 -14 q 163 66 186 23 q 140 182 140 109 l 140 912 m 366 -78 l 366 -132 q 342 -247 366 -185 q 268 -350 318 -309 l 197 -300 q 234 -221 222 -262 q 247 -133 247 -180 l 247 -78 l 366 -78 z "},"Ţ":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 m 375 0 l 465 0 l 457 -36 q 529 -68 496 -43 q 561 -153 561 -94 q 548 -211 561 -185 q 509 -256 534 -237 q 445 -285 483 -275 q 355 -295 406 -295 l 351 -222 q 407 -216 382 -222 q 448 -194 433 -209 q 463 -155 463 -179 q 452 -120 463 -133 q 416 -101 440 -107 q 354 -92 392 -94 l 375 0 z "},"ţ":{"ha":454,"x_min":6,"x_max":452,"o":"m 403 734 l 403 637 l 6 637 l 6 734 l 403 734 m 140 912 l 266 912 l 266 182 q 277 125 266 144 q 307 100 289 106 q 347 94 326 94 q 379 97 362 94 q 406 102 397 100 l 406 0 q 367 -9 391 -5 q 309 -14 343 -14 q 224 5 263 -14 q 163 66 186 23 q 140 182 140 109 l 140 912 m 266 0 l 356 0 l 348 -36 q 419 -68 387 -43 q 452 -153 452 -94 q 438 -211 452 -185 q 399 -256 425 -237 q 335 -285 374 -275 q 246 -295 297 -295 l 241 -222 q 298 -216 273 -222 q 339 -194 323 -209 q 354 -155 354 -179 q 342 -120 354 -133 q 307 -101 331 -107 q 245 -92 283 -94 l 266 0 z "},"Ť":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 m 312 1251 l 414 1136 l 517 1251 l 625 1251 l 625 1244 l 453 1059 l 376 1059 l 206 1244 l 206 1251 l 312 1251 z "},"ť":{"ha":481,"x_min":6,"x_max":507,"o":"m 403 734 l 403 637 l 6 637 l 6 734 l 403 734 m 140 912 l 266 912 l 266 182 q 277 125 266 144 q 307 100 289 106 q 347 94 326 94 q 379 97 362 94 q 406 102 397 100 l 406 0 q 367 -9 391 -5 q 309 -14 343 -14 q 224 5 263 -14 q 163 66 186 23 q 140 182 140 109 l 140 912 m 507 1124 l 507 1071 q 483 956 507 1017 q 409 852 459 894 l 338 902 q 375 981 363 941 q 388 1069 388 1022 l 388 1124 l 507 1124 z "},"Ũ":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 608 1239 l 693 1232 q 673 1145 693 1182 q 621 1087 654 1107 q 547 1067 588 1067 q 490 1077 512 1067 q 450 1099 467 1086 q 413 1121 432 1112 q 365 1131 393 1131 q 317 1109 336 1131 q 298 1056 298 1088 l 213 1060 q 232 1147 213 1109 q 285 1206 252 1185 q 359 1227 318 1227 q 410 1218 388 1227 q 452 1195 432 1208 q 492 1173 471 1183 q 541 1163 513 1163 q 589 1185 569 1163 q 608 1239 608 1207 z "},"ũ":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 541 1028 l 625 1021 q 606 934 625 971 q 553 876 586 897 q 479 856 520 856 q 422 866 444 856 q 382 888 399 876 q 345 910 364 901 q 297 920 326 920 q 249 899 269 920 q 230 845 230 877 l 145 849 q 164 936 145 899 q 217 995 184 974 q 291 1017 250 1017 q 342 1007 320 1017 q 384 984 364 997 q 425 962 404 972 q 473 952 446 952 q 521 974 501 952 q 541 1028 541 996 z "},"Ū":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 684 1196 l 684 1100 l 229 1100 l 229 1196 l 684 1196 z "},"ū":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 616 985 l 616 889 l 161 889 l 161 985 l 616 985 z "},"Ŭ":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 553 1225 l 655 1225 q 631 1131 655 1172 q 561 1067 606 1090 q 453 1044 515 1044 q 304 1094 359 1044 q 250 1225 250 1145 l 351 1225 q 374 1154 351 1185 q 453 1124 397 1124 q 530 1154 507 1124 q 553 1225 553 1185 z "},"ŭ":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 486 1014 l 587 1014 q 563 920 587 961 q 493 856 538 879 q 385 833 448 833 q 236 883 291 833 q 182 1014 182 934 l 283 1014 q 307 943 283 974 q 385 913 330 913 q 463 943 439 913 q 486 1014 486 974 z "},"Ů":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 307 1174 q 326 1245 307 1213 q 378 1296 345 1277 q 452 1315 411 1315 q 556 1274 514 1315 q 598 1174 598 1232 q 579 1103 598 1135 q 527 1054 559 1072 q 452 1036 494 1036 q 349 1075 391 1036 q 307 1174 307 1114 m 374 1174 q 396 1120 374 1144 q 452 1096 418 1096 q 509 1119 487 1096 q 531 1174 531 1143 q 509 1230 531 1206 q 452 1254 487 1254 q 396 1230 418 1254 q 374 1174 374 1206 z "},"ů":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 239 963 q 258 1034 239 1002 q 310 1085 277 1066 q 385 1104 343 1104 q 488 1063 446 1104 q 530 963 530 1021 q 511 892 530 924 q 459 843 492 861 q 385 825 426 825 q 281 864 323 825 q 239 963 239 903 m 306 963 q 328 909 306 933 q 385 885 350 885 q 441 908 419 885 q 463 963 463 932 q 441 1019 463 995 q 385 1043 419 1043 q 328 1019 350 1043 q 306 963 306 995 z "},"Ű":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 473 1046 l 629 1252 l 770 1252 l 588 1046 l 473 1046 m 283 1046 l 399 1252 l 533 1252 l 385 1046 l 283 1046 z "},"ű":{"ha":766,"x_min":93,"x_max":702,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 406 836 l 562 1041 l 702 1041 l 520 836 l 406 836 m 216 836 l 331 1041 l 465 1041 l 317 836 l 216 836 z "},"Ų":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 588 68 l 638 30 q 583 -15 609 8 q 539 -65 556 -39 q 522 -121 522 -91 q 534 -157 522 -143 q 575 -170 546 -170 q 615 -164 597 -170 q 643 -152 633 -157 l 652 -235 q 609 -255 635 -245 q 543 -264 583 -264 q 451 -232 488 -264 q 413 -135 413 -199 q 431 -62 413 -98 q 488 7 449 -26 q 588 68 526 40 z "},"ų":{"ha":766,"x_min":93,"x_max":678,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 614 39 l 664 0 q 608 -45 635 -22 q 565 -95 582 -68 q 548 -151 548 -121 q 560 -186 548 -173 q 601 -200 572 -200 q 641 -194 623 -200 q 669 -182 659 -187 l 678 -264 q 635 -284 661 -275 q 569 -294 609 -294 q 476 -261 514 -294 q 439 -165 439 -229 q 457 -92 439 -128 q 513 -23 475 -56 q 614 39 552 10 z "},"Ŵ":{"ha":1232,"x_min":41,"x_max":1202,"o":"m 374 298 l 570 987 l 665 987 l 610 720 l 399 0 l 305 0 l 374 298 m 172 987 l 328 312 l 374 0 l 281 0 l 41 987 l 172 987 m 919 313 l 1072 987 l 1202 987 l 964 0 l 870 0 l 919 313 m 680 987 l 870 298 l 939 0 l 845 0 l 642 720 l 586 987 l 680 987 m 665 1253 l 833 1067 l 833 1061 l 728 1061 l 627 1175 l 526 1061 l 422 1061 l 422 1068 l 589 1253 l 665 1253 z "},"ŵ":{"ha":1044,"x_min":29,"x_max":1011,"o":"m 281 130 l 470 734 l 553 734 l 536 614 l 345 0 l 264 0 l 281 130 m 155 734 l 315 123 l 327 0 l 242 0 l 29 734 l 155 734 m 733 128 l 886 734 l 1011 734 l 798 0 l 714 0 l 733 128 m 571 734 l 755 140 l 777 0 l 696 0 l 499 615 l 483 734 l 571 734 m 555 1042 l 724 857 l 724 850 l 619 850 l 517 964 l 416 850 l 313 850 l 313 857 l 479 1042 l 555 1042 z "},"Ŷ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 457 1252 l 625 1067 l 625 1060 l 521 1060 l 419 1175 l 318 1060 l 215 1060 l 215 1067 l 381 1252 l 457 1252 z "},"ŷ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 382 1042 l 551 857 l 551 850 l 446 850 l 345 964 l 243 850 l 140 850 l 140 857 l 307 1042 l 382 1042 z "},"Ÿ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 201 1140 q 220 1192 201 1171 q 275 1213 239 1213 q 330 1192 311 1213 q 349 1140 349 1171 q 330 1090 349 1111 q 275 1069 311 1069 q 220 1090 239 1069 q 201 1140 201 1111 m 493 1139 q 512 1190 493 1169 q 567 1211 530 1211 q 622 1190 603 1211 q 642 1139 642 1169 q 622 1089 642 1109 q 567 1068 603 1068 q 512 1089 530 1068 q 493 1139 493 1109 z "},"Ź":{"ha":832,"x_min":59,"x_max":777,"o":"m 777 106 l 777 0 l 109 0 l 109 106 l 777 106 m 755 892 l 140 0 l 59 0 l 59 98 l 674 987 l 755 987 l 755 892 m 700 987 l 700 880 l 68 880 l 68 987 l 700 987 m 349 1053 l 480 1253 l 631 1253 l 450 1053 l 349 1053 z "},"ź":{"ha":689,"x_min":60,"x_max":642,"o":"m 642 103 l 642 0 l 109 0 l 109 103 l 642 103 m 623 645 l 137 0 l 60 0 l 60 92 l 543 734 l 623 734 l 623 645 m 567 734 l 567 630 l 66 630 l 66 734 l 567 734 m 280 842 l 412 1042 l 563 1042 l 381 842 l 280 842 z "},"Ż":{"ha":832,"x_min":59,"x_max":777,"o":"m 777 106 l 777 0 l 109 0 l 109 106 l 777 106 m 755 892 l 140 0 l 59 0 l 59 98 l 674 987 l 755 987 l 755 892 m 700 987 l 700 880 l 68 880 l 68 987 l 700 987 m 344 1139 q 362 1190 344 1168 q 418 1211 381 1211 q 473 1190 454 1211 q 492 1139 492 1168 q 473 1088 492 1109 q 418 1067 454 1067 q 362 1088 381 1067 q 344 1139 344 1109 z "},"ż":{"ha":689,"x_min":60,"x_max":642,"o":"m 642 103 l 642 0 l 109 0 l 109 103 l 642 103 m 623 645 l 137 0 l 60 0 l 60 92 l 543 734 l 623 734 l 623 645 m 567 734 l 567 630 l 66 630 l 66 734 l 567 734 m 275 928 q 294 979 275 958 q 349 1000 313 1000 q 405 979 385 1000 q 424 928 424 958 q 405 877 424 898 q 349 857 385 857 q 294 877 313 857 q 275 928 275 898 z "},"Ž":{"ha":832,"x_min":59,"x_max":777,"o":"m 777 106 l 777 0 l 109 0 l 109 106 l 777 106 m 755 892 l 140 0 l 59 0 l 59 98 l 674 987 l 755 987 l 755 892 m 700 987 l 700 880 l 68 880 l 68 987 l 700 987 m 315 1252 l 417 1137 l 519 1252 l 628 1252 l 628 1245 l 456 1059 l 378 1059 l 209 1245 l 209 1252 l 315 1252 z "},"ž":{"ha":689,"x_min":60,"x_max":642,"o":"m 642 103 l 642 0 l 109 0 l 109 103 l 642 103 m 623 645 l 137 0 l 60 0 l 60 92 l 543 734 l 623 734 l 623 645 m 567 734 l 567 630 l 66 630 l 66 734 l 567 734 m 246 1041 l 349 926 l 451 1041 l 559 1041 l 559 1034 l 387 848 l 310 848 l 140 1034 l 140 1041 l 246 1041 z "},"Ǽ":{"ha":1298,"x_min":-10,"x_max":1275,"o":"m 658 886 l 144 0 l -10 0 l 587 987 l 668 987 l 658 886 m 756 358 l 756 239 l 252 239 l 252 358 l 756 358 m 1275 103 l 1275 0 l 778 0 l 778 103 l 1275 103 m 760 987 l 802 0 l 675 0 l 634 987 l 760 987 m 1178 566 l 1178 463 l 751 463 l 751 566 l 1178 566 m 1233 987 l 1233 884 l 736 884 l 736 987 l 1233 987 m 568 1061 l 699 1260 l 850 1260 l 669 1061 l 568 1061 z "},"ǽ":{"ha":1173,"x_min":54,"x_max":1126,"o":"m 508 124 l 508 488 q 491 572 508 537 q 442 626 475 607 q 363 644 410 644 q 275 627 313 644 q 218 580 238 609 q 197 515 197 551 l 73 528 q 94 615 73 575 q 153 685 115 655 q 244 731 191 715 q 363 747 298 747 q 503 718 443 747 q 596 631 563 689 q 630 487 630 574 l 630 148 l 508 124 m 536 431 l 536 336 l 359 336 q 260 318 300 336 q 199 269 220 299 q 179 203 179 239 q 194 145 179 171 q 240 103 210 119 q 319 88 271 88 q 394 102 355 88 q 464 138 432 116 q 516 184 496 160 q 537 230 536 209 l 602 132 q 544 65 584 99 q 443 8 505 31 q 294 -14 380 -14 q 163 13 217 -14 q 81 90 109 40 q 54 206 54 140 q 73 301 54 260 q 131 372 92 343 q 226 416 169 401 q 357 431 283 431 l 536 431 m 857 -14 q 709 13 773 -14 q 602 89 646 40 q 536 205 559 138 q 514 353 514 273 l 514 382 q 537 530 514 463 q 603 646 561 597 q 703 721 646 694 q 827 747 760 748 q 956 725 900 747 q 1050 659 1012 702 q 1107 555 1088 616 q 1126 418 1126 494 l 1126 338 l 581 338 l 581 434 l 1000 434 l 1000 455 q 983 549 1000 507 q 928 618 966 592 q 827 644 890 644 q 744 624 780 644 q 683 568 708 604 q 646 484 659 532 q 633 382 633 437 l 633 353 q 646 250 633 298 q 686 166 659 202 q 755 109 713 130 q 857 89 798 89 q 987 114 937 89 q 1070 161 1036 138 l 1114 69 q 1066 38 1099 58 q 981 2 1034 18 q 857 -14 929 -14 m 513 843 l 645 1042 l 796 1042 l 614 843 l 513 843 z "},"Ǿ":{"ha":956,"x_min":81,"x_max":888,"o":"m 888 1028 l 208 -63 l 111 -63 l 793 1028 l 888 1028 m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 348 7 409 -14 q 238 69 287 28 q 153 167 189 109 q 99 299 118 225 q 81 463 81 374 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 611 980 549 1001 q 721 919 672 959 q 804 820 770 878 q 857 688 838 762 q 875 525 875 614 m 745 463 l 745 526 q 734 654 745 597 q 700 755 722 711 q 645 829 677 800 q 570 874 612 859 q 477 890 528 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 222 334 210 391 q 258 232 235 276 q 314 157 281 187 q 389 112 347 127 q 479 97 430 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 416 1103 l 547 1302 l 699 1302 l 517 1103 l 416 1103 z "},"ǿ":{"ha":787,"x_min":62,"x_max":730,"o":"m 667 820 l 217 -92 l 134 -92 l 583 820 l 667 820 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 295 842 l 427 1041 l 578 1041 l 396 842 l 295 842 z "},"Ά":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 127 856 l 163 1084 l 281 1084 l 203 856 l 127 856 z "},"Έ":{"ha":857,"x_min":-79,"x_max":810,"o":"m 810 106 l 810 0 l 287 0 l 287 106 l 810 106 m 313 987 l 313 0 l 182 0 l 182 987 l 313 987 m 741 563 l 741 456 l 287 456 l 287 563 l 741 563 m 803 987 l 803 880 l 287 880 l 287 987 l 803 987 m -79 857 l -42 1084 l 76 1084 l -3 857 l -79 857 z "},"Ή":{"ha":1059,"x_min":-69,"x_max":941,"o":"m 827 563 l 827 456 l 293 456 l 293 563 l 827 563 m 313 987 l 313 0 l 182 0 l 182 987 l 313 987 m 941 987 l 941 0 l 811 0 l 811 987 l 941 987 m -69 858 l -33 1086 l 85 1086 l 7 858 l -69 858 z "},"Ί":{"ha":446,"x_min":-65,"x_max":323,"o":"m 323 987 l 323 0 l 192 0 l 192 987 l 323 987 m -65 858 l -28 1086 l 90 1086 l 11 858 l -65 858 z "},"Ό":{"ha":969,"x_min":-4,"x_max":888,"o":"m 888 525 l 888 463 q 861 263 888 351 q 781 113 833 175 q 655 19 728 52 q 492 -14 583 -14 q 332 19 405 -14 q 206 113 259 52 q 123 263 153 175 q 94 463 94 351 l 94 525 q 123 724 94 636 q 205 874 152 812 q 331 968 258 936 q 491 1001 404 1001 q 654 968 581 1001 q 780 874 727 936 q 860 724 832 812 q 888 525 888 636 m 759 463 l 759 526 q 741 682 759 614 q 688 796 723 750 q 604 866 654 842 q 491 890 554 890 q 381 866 430 890 q 297 796 332 842 q 243 682 262 750 q 224 526 224 614 l 224 463 q 243 306 224 374 q 297 191 262 237 q 382 121 333 144 q 492 97 431 97 q 606 121 556 97 q 689 191 655 144 q 741 306 724 237 q 759 463 759 374 m -4 856 l 33 1084 l 151 1084 l 72 856 l -4 856 z "},"Ύ":{"ha":902,"x_min":-94,"x_max":890,"o":"m 228 987 l 484 492 l 741 987 l 890 987 l 549 369 l 549 0 l 418 0 l 418 369 l 78 987 l 228 987 m -94 856 l -57 1084 l 61 1084 l -18 856 l -94 856 z "},"Ώ":{"ha":937,"x_min":-3,"x_max":846,"o":"m 714 492 l 714 571 q 697 711 714 650 q 648 812 680 771 q 570 874 615 853 q 467 895 524 895 q 366 874 411 895 q 289 812 321 853 q 240 711 257 771 q 223 571 223 650 l 223 492 q 238 338 223 406 q 279 223 252 271 q 344 148 307 176 q 427 111 382 119 l 427 15 q 293 67 354 24 q 186 177 231 110 q 116 325 141 243 q 91 492 91 406 l 91 570 q 118 745 91 666 q 195 881 145 824 q 314 970 245 939 q 467 1001 383 1001 q 622 970 552 1001 q 741 881 691 939 q 819 745 791 824 q 846 570 846 666 l 846 492 q 822 326 846 407 q 752 177 797 244 q 647 67 707 111 q 514 15 586 24 l 514 111 q 596 148 559 120 q 659 224 633 176 q 700 339 686 272 q 714 492 714 406 m 514 0 l 514 106 l 842 106 l 842 0 l 514 0 m 94 0 l 94 106 l 427 106 l 427 0 l 94 0 m -3 856 l 34 1084 l 152 1084 l 73 856 l -3 856 z "},"ΐ":{"ha":450,"x_min":-68,"x_max":464,"o":"m 132 734 l 258 734 l 258 187 q 270 131 258 150 q 300 105 281 112 q 339 99 318 99 q 372 102 355 99 q 398 107 389 105 l 399 5 q 360 -4 384 1 q 302 -9 336 -9 q 217 10 256 -9 q 155 72 178 28 q 132 188 132 115 l 132 734 m 148 941 l 180 1120 l 308 1120 l 240 941 l 148 941 m -68 916 q -50 967 -68 946 q 5 988 -31 988 q 61 967 41 988 q 80 916 80 946 q 61 866 80 886 q 5 845 41 845 q -50 866 -31 845 q -68 916 -68 886 m 315 914 q 334 966 315 945 q 389 987 353 987 q 445 966 426 987 q 464 914 464 945 q 445 864 464 885 q 389 844 426 844 q 334 864 353 844 q 315 914 315 885 z "},"Α":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 z "},"Β":{"ha":865,"x_min":115,"x_max":787,"o":"m 467 462 l 216 462 l 215 567 l 442 567 q 541 586 498 567 q 606 641 583 605 q 629 726 629 676 q 609 814 629 780 q 546 864 588 848 q 438 880 503 880 l 245 880 l 245 0 l 115 0 l 115 987 l 438 987 q 574 972 514 987 q 675 925 633 957 q 739 843 717 892 q 760 724 760 793 q 729 614 760 663 q 643 534 698 565 q 513 494 587 503 l 467 462 m 460 0 l 165 0 l 239 106 l 460 106 q 567 128 523 106 q 633 190 610 150 q 656 283 656 229 q 637 378 656 338 q 575 440 617 418 q 467 462 533 462 l 280 462 l 281 567 l 536 567 l 564 529 q 685 489 635 523 q 761 401 734 454 q 787 285 787 349 q 746 129 787 193 q 633 33 706 66 q 460 0 559 0 z "},"Ε":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 z "},"Ζ":{"ha":832,"x_min":59,"x_max":777,"o":"m 777 106 l 777 0 l 109 0 l 109 106 l 777 106 m 755 892 l 140 0 l 59 0 l 59 98 l 674 987 l 755 987 l 755 892 m 700 987 l 700 880 l 68 880 l 68 987 l 700 987 z "},"Η":{"ha":991,"x_min":115,"x_max":873,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 z "},"Ι":{"ha":378,"x_min":124,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 z "},"Κ":{"ha":871,"x_min":115,"x_max":871,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 842 987 l 431 527 l 201 288 l 179 427 l 353 618 l 684 987 l 842 987 m 715 0 l 350 481 l 428 585 l 871 0 l 715 0 z "},"Μ":{"ha":1213,"x_min":115,"x_max":1097,"o":"m 156 987 l 283 987 l 606 182 l 929 987 l 1057 987 l 655 0 l 556 0 l 156 987 m 115 987 l 227 987 l 245 385 l 245 0 l 115 0 l 115 987 m 985 987 l 1097 987 l 1097 0 l 967 0 l 967 385 l 985 987 z "},"Ν":{"ha":991,"x_min":115,"x_max":874,"o":"m 874 987 l 874 0 l 743 0 l 245 762 l 245 0 l 115 0 l 115 987 l 245 987 l 745 224 l 745 987 l 874 987 z "},"Ο":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 z "},"Ρ":{"ha":876,"x_min":115,"x_max":825,"o":"m 479 387 l 215 387 l 215 494 l 479 494 q 603 518 555 494 q 672 586 650 543 q 694 685 694 629 q 672 781 694 736 q 603 853 650 825 q 479 880 555 880 l 245 880 l 245 0 l 115 0 l 115 987 l 479 987 q 668 949 591 987 q 785 842 745 910 q 825 686 825 774 q 785 524 825 591 q 668 422 745 457 q 479 387 591 387 z "},"Τ":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 z "},"Υ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 z "},"Χ":{"ha":871,"x_min":39,"x_max":834,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 z "},"Ϊ":{"ha":378,"x_min":-29,"x_max":412,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m -29 1148 q -10 1200 -29 1179 q 45 1221 9 1221 q 100 1200 81 1221 q 119 1148 119 1179 q 100 1098 119 1119 q 45 1078 81 1078 q -10 1098 9 1078 q -29 1148 -29 1119 m 263 1147 q 282 1198 263 1177 q 337 1219 300 1219 q 392 1198 373 1219 q 412 1147 412 1177 q 392 1097 412 1118 q 337 1076 373 1076 q 282 1097 300 1076 q 263 1147 263 1118 z "},"Ϋ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 201 1140 q 220 1192 201 1171 q 275 1213 239 1213 q 330 1192 311 1213 q 349 1140 349 1171 q 330 1090 349 1111 q 275 1069 311 1069 q 220 1090 239 1069 q 201 1140 201 1111 m 493 1139 q 512 1190 493 1169 q 567 1211 530 1211 q 622 1190 603 1211 q 642 1139 642 1169 q 622 1089 642 1109 q 567 1068 603 1068 q 512 1089 530 1068 q 493 1139 493 1109 z "},"ά":{"ha":785,"x_min":68,"x_max":776,"o":"m 68 340 l 68 354 q 87 513 68 441 q 142 637 106 585 q 232 719 178 690 q 355 747 286 747 q 450 732 408 747 q 525 686 492 716 q 581 613 557 656 q 618 515 604 570 q 638 394 632 460 l 638 338 q 610 192 631 256 q 555 81 590 127 q 471 10 521 35 q 353 -14 420 -14 q 232 12 286 -14 q 142 85 179 38 q 87 198 106 133 q 68 340 68 262 m 194 354 l 194 340 q 205 242 194 288 q 238 162 216 197 q 297 108 261 127 q 385 89 334 89 q 469 109 434 89 q 529 164 505 130 q 569 244 553 199 q 595 337 585 289 l 595 382 q 572 478 587 431 q 532 563 557 525 q 471 622 507 600 q 386 644 435 644 q 298 621 334 644 q 239 558 262 598 q 205 466 216 518 q 194 354 194 413 m 576 734 l 683 734 l 683 200 q 687 149 683 169 q 699 118 691 130 q 716 103 707 107 q 737 98 726 98 q 750 100 744 98 q 760 102 755 101 l 776 9 q 734 -10 755 -6 q 692 -14 714 -14 q 635 -2 661 -14 q 593 35 610 9 q 566 101 575 60 q 557 200 557 142 l 557 574 l 576 734 m 378 852 l 414 1080 l 532 1080 l 454 852 l 378 852 z "},"έ":{"ha":749,"x_min":68,"x_max":681,"o":"m 356 398 l 505 398 l 505 325 l 366 325 q 272 312 310 325 q 214 274 233 300 q 194 206 194 248 q 206 161 194 182 q 241 123 218 140 q 298 98 264 107 q 374 88 332 88 q 470 106 429 88 q 533 154 511 125 q 556 217 556 184 l 681 217 q 654 114 681 157 q 584 42 628 70 q 485 0 540 14 q 374 -14 431 -14 q 252 1 308 -14 q 155 45 196 16 q 91 114 113 73 q 68 207 68 155 q 87 289 68 253 q 143 349 106 324 q 234 386 180 373 q 356 398 288 398 m 505 351 l 356 351 q 243 365 294 351 q 156 405 192 379 q 100 463 119 430 q 81 534 81 496 q 101 626 81 586 q 161 692 122 665 q 254 733 199 719 q 374 747 308 747 q 488 732 435 747 q 582 688 541 717 q 646 620 623 660 q 669 530 669 580 l 544 530 q 521 588 544 562 q 460 630 498 614 q 374 645 422 645 q 279 629 317 645 q 224 588 242 613 q 206 534 206 562 q 215 490 206 510 q 243 455 224 470 q 293 433 262 441 q 366 425 323 425 l 505 425 l 505 351 m 328 851 l 364 1079 l 482 1079 l 404 851 l 328 851 z "},"ή":{"ha":787,"x_min":99,"x_max":684,"o":"m 224 577 l 224 0 l 99 0 l 99 734 l 212 734 l 224 577 m 199 391 l 146 389 q 165 533 146 467 q 223 646 185 598 q 314 721 260 694 q 436 747 368 747 q 539 734 493 747 q 617 688 585 720 q 667 603 650 656 q 684 471 684 550 l 684 -281 l 559 -281 l 559 469 q 548 553 559 519 q 517 607 538 587 q 467 635 496 627 q 399 644 437 644 q 307 624 345 644 q 245 569 269 604 q 210 488 221 534 q 199 391 199 442 m 346 852 l 382 1080 l 500 1080 l 422 852 l 346 852 z "},"ί":{"ha":450,"x_min":132,"x_max":399,"o":"m 132 734 l 258 734 l 258 187 q 270 131 258 150 q 300 105 281 112 q 339 99 318 99 q 372 102 355 99 q 398 107 389 105 l 399 5 q 360 -4 384 1 q 302 -9 336 -9 q 217 10 256 -9 q 155 72 178 28 q 132 188 132 115 l 132 734 m 153 838 l 190 1065 l 308 1065 l 229 838 l 153 838 z "},"ΰ":{"ha":758,"x_min":98,"x_max":688,"o":"m 98 734 l 223 734 l 223 289 q 233 196 223 235 q 262 134 243 158 q 306 100 281 111 q 360 89 331 89 q 448 114 410 89 q 511 182 486 140 q 549 277 536 225 q 562 381 562 329 q 537 562 561 473 q 479 734 513 650 l 611 734 q 649 639 631 692 q 677 522 667 586 q 688 382 688 458 q 669 232 688 304 q 610 105 650 161 q 509 18 570 50 q 366 -14 449 -14 q 255 4 304 -14 q 170 59 205 22 q 116 153 135 96 q 98 290 98 211 l 98 734 m 317 941 l 349 1120 l 477 1120 l 409 941 l 317 941 m 100 916 q 119 967 100 946 q 174 988 138 988 q 230 967 210 988 q 249 916 249 946 q 230 866 249 886 q 174 845 210 845 q 119 866 138 845 q 100 916 100 886 m 484 914 q 503 966 484 945 q 558 987 522 987 q 614 966 595 987 q 633 914 633 945 q 614 864 633 885 q 558 844 595 844 q 503 864 522 844 q 484 914 484 885 z "},"κ":{"ha":773,"x_min":105,"x_max":738,"o":"m 231 734 l 231 0 l 105 0 l 105 734 l 231 734 m 713 734 l 351 313 l 189 313 l 170 423 l 293 423 l 562 734 l 713 734 m 579 0 l 287 332 l 368 423 l 738 0 l 579 0 z "},"ο":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"μ":{"ha":787,"x_min":105,"x_max":682,"o":"m 557 734 l 682 734 l 682 0 l 569 0 l 557 170 l 557 734 m 579 341 l 626 342 q 612 200 626 265 q 569 87 598 135 q 494 12 540 39 q 385 -14 449 -14 q 293 -1 334 -14 q 224 41 253 12 q 176 116 195 70 l 151 312 l 230 312 q 241 198 230 242 q 274 130 253 154 q 321 98 294 106 q 380 89 349 89 q 479 107 440 89 q 540 160 518 126 q 570 240 562 194 q 579 341 579 286 m 105 734 l 230 734 l 230 -282 l 105 -282 l 105 734 z "},"ν":{"ha":673,"x_min":22,"x_max":648,"o":"m 319 113 l 519 734 l 648 734 l 384 0 l 300 0 l 319 113 m 151 734 l 358 110 l 372 0 l 288 0 l 22 734 l 151 734 z "},"χ":{"ha":770,"x_min":61,"x_max":774,"o":"m 710 734 l 215 -282 l 81 -282 l 583 734 l 710 734 m 132 744 q 214 726 181 744 q 270 680 248 708 q 307 621 292 652 q 333 563 321 589 l 614 -80 q 642 -132 627 -109 q 673 -169 656 -155 q 711 -182 690 -182 q 742 -181 722 -182 q 774 -178 763 -180 l 741 -286 q 722 -293 734 -291 q 700 -296 709 -296 q 632 -284 661 -296 q 581 -249 603 -272 q 541 -192 559 -226 q 503 -113 522 -157 l 230 513 q 200 573 217 545 q 161 619 184 602 q 108 637 139 637 q 85 635 100 637 q 62 633 71 634 l 61 734 q 94 741 73 738 q 132 744 115 744 z "},"ϊ":{"ha":450,"x_min":-19,"x_max":422,"o":"m 132 734 l 258 734 l 258 187 q 270 131 258 150 q 300 105 281 112 q 339 99 318 99 q 372 102 355 99 q 398 107 389 105 l 399 5 q 360 -4 384 1 q 302 -9 336 -9 q 217 10 256 -9 q 155 72 178 28 q 132 188 132 115 l 132 734 m -19 916 q 0 967 -19 946 q 55 988 19 988 q 111 967 92 988 q 130 916 130 946 q 111 866 130 886 q 55 845 92 845 q 0 866 19 845 q -19 916 -19 886 m 273 914 q 292 966 273 945 q 347 987 311 987 q 402 966 383 987 q 422 914 422 945 q 402 864 422 885 q 347 844 383 844 q 292 864 311 844 q 273 914 273 885 z "},"ϋ":{"ha":758,"x_min":98,"x_max":688,"o":"m 98 734 l 223 734 l 223 289 q 233 196 223 235 q 262 134 243 158 q 306 100 281 111 q 360 89 331 89 q 448 114 410 89 q 511 182 486 140 q 549 277 536 225 q 562 381 562 329 q 537 562 561 473 q 479 734 513 650 l 611 734 q 649 639 631 692 q 677 522 667 586 q 688 382 688 458 q 669 232 688 304 q 610 105 650 161 q 509 18 570 50 q 366 -14 449 -14 q 255 4 304 -14 q 170 59 205 22 q 116 153 135 96 q 98 290 98 211 l 98 734 m 150 916 q 169 967 150 946 q 224 988 188 988 q 279 967 260 988 q 298 916 298 946 q 279 866 298 886 q 224 845 260 845 q 169 866 188 845 q 150 916 150 886 m 442 914 q 461 966 442 945 q 516 987 479 987 q 571 966 552 987 q 591 914 591 945 q 571 864 591 885 q 516 844 552 844 q 461 864 479 844 q 442 914 442 885 z "},"ό":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 344 852 l 380 1080 l 498 1080 l 420 852 l 344 852 z "},"ύ":{"ha":758,"x_min":98,"x_max":688,"o":"m 98 734 l 223 734 l 223 289 q 233 196 223 235 q 262 134 243 158 q 306 100 281 111 q 360 89 331 89 q 448 114 410 89 q 511 182 486 140 q 549 277 536 225 q 562 381 562 329 q 537 562 561 473 q 479 734 513 650 l 611 734 q 649 639 631 692 q 677 522 667 586 q 688 382 688 458 q 669 232 688 304 q 610 105 650 161 q 509 18 570 50 q 366 -14 449 -14 q 255 4 304 -14 q 170 59 205 22 q 116 153 135 96 q 98 290 98 211 l 98 734 m 322 838 l 359 1065 l 477 1065 l 398 838 l 322 838 z "},"ώ":{"ha":1144,"x_min":83,"x_max":1059,"o":"m 836 734 l 967 734 q 1013 638 991 691 q 1046 521 1034 585 q 1059 380 1059 457 q 1045 231 1059 302 q 999 105 1030 160 q 916 18 967 50 q 791 -14 864 -14 q 687 8 732 -14 q 610 73 642 30 q 562 178 578 115 q 546 321 546 240 l 546 522 l 634 522 l 634 319 q 645 213 634 256 q 677 141 656 169 q 725 101 697 114 q 784 89 752 89 q 853 112 825 89 q 899 175 882 135 q 925 268 917 216 q 933 380 933 321 q 904 561 931 473 q 836 734 876 650 m 175 734 l 307 734 q 238 561 266 650 q 209 380 211 473 q 214 290 209 333 q 230 210 219 246 q 258 146 241 174 q 300 104 275 119 q 357 89 325 89 q 417 101 390 89 q 465 141 445 114 q 497 213 486 169 q 508 319 508 256 l 508 522 l 596 522 l 596 321 q 580 178 596 240 q 532 73 564 115 q 455 8 500 30 q 351 -14 410 -14 q 248 6 292 -14 q 172 64 203 27 q 121 152 140 102 q 92 260 101 201 q 83 380 83 318 q 96 521 83 457 q 130 638 109 585 q 175 734 151 691 m 529 836 l 566 1063 l 684 1063 l 605 836 l 529 836 z "},"Ё":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 201 1148 q 220 1200 201 1179 q 275 1221 239 1221 q 331 1200 312 1221 q 350 1148 350 1179 q 331 1098 350 1119 q 275 1078 312 1078 q 220 1098 239 1078 q 201 1148 201 1119 m 494 1147 q 512 1198 494 1177 q 568 1219 531 1219 q 623 1198 604 1219 q 642 1147 642 1177 q 623 1097 642 1118 q 568 1076 604 1076 q 512 1097 531 1076 q 494 1147 494 1118 z "},"Ѓ":{"ha":772,"x_min":121,"x_max":727,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 m 355 1061 l 486 1260 l 637 1260 l 456 1061 l 355 1061 z "},"Ѕ":{"ha":825,"x_min":55,"x_max":772,"o":"m 641 250 q 630 311 641 284 q 594 359 620 338 q 522 401 568 381 q 406 441 476 420 q 274 489 333 463 q 173 551 215 516 q 109 630 131 585 q 86 732 86 675 q 110 839 86 790 q 178 924 134 888 q 284 981 222 960 q 422 1001 346 1001 q 611 959 533 1001 q 729 848 688 916 q 770 703 770 780 l 640 703 q 616 801 640 758 q 544 869 592 844 q 422 894 496 894 q 307 873 352 894 q 239 816 261 852 q 217 734 217 780 q 230 677 217 703 q 272 630 243 652 q 343 590 300 608 q 448 555 387 572 q 593 502 532 531 q 694 436 654 473 q 753 354 734 400 q 772 251 772 309 q 748 142 772 191 q 678 58 724 93 q 569 5 633 24 q 428 -14 506 -14 q 293 5 359 -14 q 173 62 227 24 q 87 156 119 100 q 55 286 55 212 l 185 286 q 205 199 185 235 q 259 139 224 163 q 337 104 293 115 q 428 93 380 93 q 544 112 496 93 q 616 166 591 131 q 641 250 641 201 z "},"І":{"ha":378,"x_min":124,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 z "},"Ї":{"ha":378,"x_min":-29,"x_max":412,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m -29 1148 q -10 1200 -29 1179 q 45 1221 9 1221 q 100 1200 81 1221 q 119 1148 119 1179 q 100 1098 119 1119 q 45 1078 81 1078 q -10 1098 9 1078 q -29 1148 -29 1119 m 263 1147 q 282 1198 263 1177 q 337 1219 300 1219 q 392 1198 373 1219 q 412 1147 412 1177 q 392 1097 412 1118 q 337 1076 373 1076 q 282 1097 300 1076 q 263 1147 263 1118 z "},"Ј":{"ha":766,"x_min":36,"x_max":659,"o":"m 529 288 l 529 987 l 659 987 l 659 288 q 619 123 659 191 q 509 21 579 56 q 348 -14 439 -14 q 186 18 257 -14 q 76 113 116 49 q 36 273 36 176 l 167 273 q 190 171 167 211 q 254 112 213 131 q 348 93 295 93 q 440 115 399 93 q 505 181 481 137 q 529 288 529 224 z "},"К":{"ha":892,"x_min":121,"x_max":888,"o":"m 252 987 l 252 0 l 121 0 l 121 987 l 252 987 m 860 987 l 431 444 l 199 444 l 179 553 l 353 553 l 698 987 l 860 987 m 728 0 l 357 461 l 431 576 l 888 0 l 728 0 z "},"Ќ":{"ha":871,"x_min":115,"x_max":871,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 842 987 l 431 527 l 201 288 l 179 427 l 353 618 l 684 987 l 842 987 m 715 0 l 350 481 l 428 585 l 871 0 l 715 0 m 341 1049 l 473 1249 l 624 1249 l 442 1049 l 341 1049 z "},"Ў":{"ha":873,"x_min":52,"x_max":832,"o":"m 420 328 l 682 987 l 832 987 l 483 165 q 450 98 468 130 q 405 41 431 66 q 339 1 378 16 q 243 -14 300 -14 q 204 -13 227 -14 q 175 -9 182 -11 l 179 96 q 208 93 186 94 q 240 92 230 92 q 301 108 279 92 q 337 148 323 123 q 363 197 351 172 l 420 328 m 199 987 l 473 372 l 506 251 l 396 243 l 52 987 l 199 987 m 539 1232 l 641 1232 q 616 1138 641 1179 q 547 1074 592 1097 q 439 1051 501 1051 q 290 1102 345 1051 q 235 1232 235 1152 l 337 1232 q 360 1162 337 1192 q 439 1131 383 1131 q 516 1162 493 1131 q 539 1232 539 1192 z "},"А":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 z "},"В":{"ha":865,"x_min":115,"x_max":787,"o":"m 467 462 l 216 462 l 215 567 l 442 567 q 541 586 498 567 q 606 641 583 605 q 629 726 629 676 q 609 814 629 780 q 546 864 588 848 q 438 880 503 880 l 245 880 l 245 0 l 115 0 l 115 987 l 438 987 q 574 972 514 987 q 675 925 633 957 q 739 843 717 892 q 760 724 760 793 q 729 614 760 663 q 643 534 698 565 q 513 494 587 503 l 467 462 m 460 0 l 165 0 l 239 106 l 460 106 q 567 128 523 106 q 633 190 610 150 q 656 283 656 229 q 637 378 656 338 q 575 440 617 418 q 467 462 533 462 l 280 462 l 281 567 l 536 567 l 564 529 q 685 489 635 523 q 761 401 734 454 q 787 285 787 349 q 746 129 787 193 q 633 33 706 66 q 460 0 559 0 z "},"Г":{"ha":772,"x_min":121,"x_max":727,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 z "},"Е":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 z "},"Й":{"ha":991,"x_min":121,"x_max":868,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 m 598 1232 l 700 1232 q 675 1138 700 1179 q 606 1074 651 1097 q 498 1051 560 1051 q 349 1102 404 1051 q 294 1232 294 1152 l 396 1232 q 419 1162 396 1192 q 498 1131 442 1131 q 575 1162 552 1131 q 598 1232 598 1192 z "},"М":{"ha":1213,"x_min":115,"x_max":1097,"o":"m 156 987 l 283 987 l 606 182 l 929 987 l 1057 987 l 655 0 l 556 0 l 156 987 m 115 987 l 227 987 l 245 385 l 245 0 l 115 0 l 115 987 m 985 987 l 1097 987 l 1097 0 l 967 0 l 967 385 l 985 987 z "},"Н":{"ha":991,"x_min":115,"x_max":873,"o":"m 760 563 l 760 456 l 225 456 l 225 563 l 760 563 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 873 987 l 873 0 l 743 0 l 743 987 l 873 987 z "},"О":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 z "},"П":{"ha":991,"x_min":121,"x_max":869,"o":"m 869 987 l 869 0 l 739 0 l 739 880 l 252 880 l 252 0 l 121 0 l 121 987 l 869 987 z "},"Р":{"ha":876,"x_min":115,"x_max":825,"o":"m 479 387 l 215 387 l 215 494 l 479 494 q 603 518 555 494 q 672 586 650 543 q 694 685 694 629 q 672 781 694 736 q 603 853 650 825 q 479 880 555 880 l 245 880 l 245 0 l 115 0 l 115 987 l 479 987 q 668 949 591 987 q 785 842 745 910 q 825 686 825 774 q 785 524 825 591 q 668 422 745 457 q 479 387 591 387 z "},"С":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 z "},"Т":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 z "},"Х":{"ha":871,"x_min":39,"x_max":834,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 z "},"а":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 z "},"е":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 z "},"й":{"ha":802,"x_min":106,"x_max":696,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 m 501 1000 l 603 1000 q 578 906 603 947 q 509 842 554 865 q 401 819 463 819 q 252 869 307 819 q 197 1000 197 920 l 299 1000 q 322 929 299 960 q 401 899 345 899 q 478 929 455 899 q 501 1000 501 960 z "},"о":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 z "},"р":{"ha":780,"x_min":95,"x_max":715,"o":"m 221 593 l 221 -282 l 95 -282 l 95 734 l 210 734 l 221 593 m 715 373 l 715 359 q 696 211 715 279 q 641 92 677 142 q 552 14 605 42 q 431 -14 499 -14 q 307 9 361 -14 q 216 77 254 33 q 157 182 179 121 q 127 321 135 244 l 127 397 q 157 543 135 479 q 217 653 180 608 q 307 723 254 699 q 429 747 359 747 q 551 721 498 747 q 642 644 605 694 q 697 526 678 595 q 715 373 715 457 m 589 359 l 589 373 q 578 476 589 428 q 542 562 566 525 q 481 620 518 599 q 392 642 444 642 q 310 625 345 642 q 250 582 275 609 q 211 519 226 554 q 188 447 195 484 l 188 271 q 226 182 201 224 q 291 115 250 140 q 393 90 332 90 q 481 111 444 90 q 542 170 518 132 q 578 255 566 207 q 589 359 589 304 z "},"с":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 z "},"у":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 z "},"х":{"ha":689,"x_min":28,"x_max":659,"o":"m 180 734 l 341 467 l 504 734 l 651 734 l 411 372 l 659 0 l 513 0 l 344 275 l 174 0 l 28 0 l 275 372 l 36 734 l 180 734 z "},"ё":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 165 930 q 184 981 165 960 q 239 1002 203 1002 q 294 981 275 1002 q 313 930 313 960 q 294 880 313 901 q 239 859 275 859 q 184 880 203 859 q 165 930 165 901 m 457 928 q 476 980 457 959 q 531 1001 494 1001 q 586 980 567 1001 q 606 928 606 959 q 586 879 606 899 q 531 858 567 858 q 476 879 494 858 q 457 928 457 899 z "},"ѓ":{"ha":583,"x_min":105,"x_max":570,"o":"m 570 734 l 570 630 l 231 630 l 231 0 l 105 0 l 105 734 l 570 734 m 223 828 l 355 1027 l 506 1027 l 324 828 l 223 828 z "},"ѕ":{"ha":717,"x_min":64,"x_max":648,"o":"m 523 195 q 511 245 523 222 q 463 288 499 269 q 354 321 427 307 q 244 352 293 334 q 160 395 195 370 q 108 454 126 420 q 90 533 90 488 q 109 615 90 576 q 164 684 128 654 q 250 730 199 713 q 361 747 300 747 q 512 716 450 747 q 608 633 574 685 q 641 518 641 581 l 515 518 q 497 577 515 549 q 445 625 479 606 q 361 644 411 644 q 277 628 309 644 q 230 588 245 612 q 216 536 216 564 q 223 500 216 516 q 248 471 230 484 q 300 446 267 458 q 385 423 333 435 q 533 374 475 403 q 620 304 591 346 q 648 204 648 263 q 628 116 648 156 q 571 47 608 76 q 481 2 533 18 q 365 -14 429 -14 q 201 21 268 -14 q 99 111 134 56 q 64 227 64 165 l 191 227 q 220 145 193 175 q 287 102 248 115 q 365 90 326 90 q 451 103 416 90 q 505 140 486 117 q 523 195 523 164 z "},"і":{"ha":338,"x_min":96,"x_max":245,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 96 928 q 115 980 96 959 q 170 1001 134 1001 q 225 980 206 1001 q 245 928 245 959 q 225 879 245 899 q 170 858 206 858 q 115 879 134 858 q 96 928 96 899 z "},"ї":{"ha":344,"x_min":-47,"x_max":393,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m -47 928 q -28 980 -47 959 q 26 1001 -9 1001 q 82 980 63 1001 q 101 928 101 959 q 82 879 101 899 q 26 858 63 858 q -28 879 -9 858 q -47 928 -47 899 m 245 927 q 263 979 245 958 q 319 1000 282 1000 q 374 979 355 1000 q 393 927 393 958 q 374 877 393 898 q 319 857 355 857 q 263 877 282 857 q 245 927 245 898 z "},"ј":{"ha":332,"x_min":-45,"x_max":235,"o":"m 99 734 l 225 734 l 225 -87 q 204 -201 225 -155 q 140 -272 182 -248 q 33 -296 98 -296 q -6 -293 16 -296 q -45 -285 -29 -290 l -44 -184 q -15 -188 -31 -186 q 14 -190 1 -190 q 60 -180 41 -190 q 89 -147 79 -170 q 99 -87 99 -125 l 99 734 m 86 928 q 105 980 86 959 q 160 1001 124 1001 q 216 980 197 1001 q 235 928 235 959 q 216 879 235 899 q 160 858 197 858 q 105 879 124 858 q 86 928 86 899 z "},"ќ":{"ha":751,"x_min":106,"x_max":738,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 713 734 l 366 313 l 190 313 l 171 423 l 315 423 l 561 734 l 713 734 m 578 0 l 309 332 l 389 423 l 738 0 l 578 0 m 298 827 l 429 1027 l 581 1027 l 399 827 l 298 827 z "},"ў":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 446 1014 l 547 1014 q 523 920 547 961 q 453 856 498 879 q 345 833 408 833 q 196 883 251 833 q 142 1014 142 934 l 243 1014 q 267 943 243 974 q 345 913 290 913 q 422 943 399 913 q 446 1014 446 974 z "},"Ẁ":{"ha":1232,"x_min":41,"x_max":1202,"o":"m 374 298 l 570 987 l 665 987 l 610 720 l 399 0 l 305 0 l 374 298 m 172 987 l 328 312 l 374 0 l 281 0 l 41 987 l 172 987 m 919 313 l 1072 987 l 1202 987 l 964 0 l 870 0 l 919 313 m 680 987 l 870 298 l 939 0 l 845 0 l 642 720 l 586 987 l 680 987 m 567 1253 l 698 1053 l 590 1053 l 415 1253 l 567 1253 z "},"ẁ":{"ha":1044,"x_min":29,"x_max":1011,"o":"m 281 130 l 470 734 l 553 734 l 536 614 l 345 0 l 264 0 l 281 130 m 155 734 l 315 123 l 327 0 l 242 0 l 29 734 l 155 734 m 733 128 l 886 734 l 1011 734 l 798 0 l 714 0 l 733 128 m 571 734 l 755 140 l 777 0 l 696 0 l 499 615 l 483 734 l 571 734 m 458 1042 l 589 842 l 481 842 l 306 1042 l 458 1042 z "},"Ẃ":{"ha":1232,"x_min":41,"x_max":1202,"o":"m 374 298 l 570 987 l 665 987 l 610 720 l 399 0 l 305 0 l 374 298 m 172 987 l 328 312 l 374 0 l 281 0 l 41 987 l 172 987 m 919 313 l 1072 987 l 1202 987 l 964 0 l 870 0 l 919 313 m 680 987 l 870 298 l 939 0 l 845 0 l 642 720 l 586 987 l 680 987 m 557 1053 l 689 1253 l 840 1253 l 659 1053 l 557 1053 z "},"ẃ":{"ha":1044,"x_min":29,"x_max":1011,"o":"m 281 130 l 470 734 l 553 734 l 536 614 l 345 0 l 264 0 l 281 130 m 155 734 l 315 123 l 327 0 l 242 0 l 29 734 l 155 734 m 733 128 l 886 734 l 1011 734 l 798 0 l 714 0 l 733 128 m 571 734 l 755 140 l 777 0 l 696 0 l 499 615 l 483 734 l 571 734 m 448 842 l 580 1042 l 731 1042 l 549 842 l 448 842 z "},"Ẅ":{"ha":1232,"x_min":41,"x_max":1202,"o":"m 374 298 l 570 987 l 665 987 l 610 720 l 399 0 l 305 0 l 374 298 m 172 987 l 328 312 l 374 0 l 281 0 l 41 987 l 172 987 m 919 313 l 1072 987 l 1202 987 l 964 0 l 870 0 l 919 313 m 680 987 l 870 298 l 939 0 l 845 0 l 642 720 l 586 987 l 680 987 m 408 1141 q 427 1192 408 1171 q 482 1213 446 1213 q 538 1192 519 1213 q 557 1141 557 1171 q 538 1091 557 1112 q 482 1070 519 1070 q 427 1091 446 1070 q 408 1141 408 1112 m 701 1139 q 719 1191 701 1170 q 774 1212 738 1212 q 830 1191 810 1212 q 849 1139 849 1170 q 830 1089 849 1110 q 774 1069 810 1069 q 719 1089 738 1069 q 701 1139 701 1110 z "},"ẅ":{"ha":1044,"x_min":29,"x_max":1011,"o":"m 281 130 l 470 734 l 553 734 l 536 614 l 345 0 l 264 0 l 281 130 m 155 734 l 315 123 l 327 0 l 242 0 l 29 734 l 155 734 m 733 128 l 886 734 l 1011 734 l 798 0 l 714 0 l 733 128 m 571 734 l 755 140 l 777 0 l 696 0 l 499 615 l 483 734 l 571 734 m 299 930 q 318 981 299 960 q 373 1002 337 1002 q 429 981 410 1002 q 448 930 448 960 q 429 880 448 901 q 373 859 410 859 q 318 880 337 859 q 299 930 299 901 m 591 928 q 610 980 591 959 q 665 1001 629 1001 q 721 980 701 1001 q 740 928 740 959 q 721 879 740 899 q 665 858 701 858 q 610 879 629 858 q 591 928 591 899 z "},"Ỳ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 359 1252 l 490 1053 l 382 1053 l 208 1252 l 359 1252 z "},"ỳ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 285 1042 l 416 842 l 308 842 l 133 1042 l 285 1042 z "},"′":{"ha":243,"x_min":71,"x_max":172,"o":"m 172 1042 l 172 967 l 158 718 l 71 718 l 71 956 l 71 1042 l 172 1042 z "},"″":{"ha":445,"x_min":93,"x_max":372,"o":"m 189 1042 l 189 949 l 168 707 l 93 707 l 93 943 l 93 1042 l 189 1042 m 372 1042 l 372 949 l 351 707 l 276 707 l 276 948 l 276 1042 l 372 1042 z "},"‼":{"ha":716,"x_min":109,"x_max":616,"o":"m 245 987 l 236 279 l 123 279 l 113 987 l 245 987 m 109 63 q 128 115 109 94 q 183 136 146 136 q 238 115 219 136 q 258 63 258 94 q 238 13 258 34 q 183 -8 219 -8 q 128 13 146 -8 q 109 63 109 34 m 603 987 l 594 279 l 481 279 l 471 987 l 603 987 m 467 63 q 486 115 467 94 q 541 136 505 136 q 596 115 577 136 q 616 63 616 94 q 596 13 616 34 q 541 -8 577 -8 q 486 13 505 -8 q 467 63 467 34 z "},"ǰ":{"ha":350,"x_min":-52,"x_max":391,"o":"m 117 734 l 243 734 l 243 -60 q 217 -189 243 -136 q 142 -269 191 -242 q 24 -296 93 -296 q -14 -294 3 -296 q -52 -285 -32 -292 l -42 -184 q -8 -191 -32 -189 q 24 -193 15 -193 q 74 -177 54 -193 q 106 -132 95 -161 q 117 -60 117 -102 l 117 734 m 77 1013 l 180 898 l 282 1013 l 391 1013 l 391 1006 l 218 821 l 141 821 l -28 1006 l -28 1013 l 77 1013 z "},"ʼ":{"ha":278,"x_min":33,"x_max":222,"o":"m 222 1042 l 222 955 q 209 869 222 914 q 168 782 195 824 q 104 709 142 741 l 33 759 q 81 851 64 804 q 98 953 98 898 l 98 1042 l 222 1042 z "},"Ḿ":{"ha":1213,"x_min":115,"x_max":1097,"o":"m 156 987 l 283 987 l 606 182 l 929 987 l 1057 987 l 655 0 l 556 0 l 156 987 m 115 987 l 227 987 l 245 385 l 245 0 l 115 0 l 115 987 m 985 987 l 1097 987 l 1097 0 l 967 0 l 967 385 l 985 987 m 534 1053 l 666 1253 l 817 1253 l 635 1053 l 534 1053 z "},"ḿ":{"ha":1218,"x_min":94,"x_max":1124,"o":"m 220 588 l 220 0 l 94 0 l 94 734 l 214 734 l 220 588 m 195 395 l 136 397 q 156 536 137 472 q 212 648 175 600 q 305 721 250 695 q 434 747 361 747 q 529 733 486 747 q 604 687 572 718 q 654 607 636 656 q 671 489 671 558 l 671 0 l 546 0 l 546 483 q 527 575 546 541 q 472 626 507 610 q 389 642 437 642 q 296 622 334 642 q 237 568 259 602 q 204 489 214 533 q 195 395 195 444 m 670 464 l 586 438 q 606 554 587 498 q 662 653 625 610 q 753 722 699 696 q 878 747 808 747 q 982 732 937 747 q 1060 684 1028 716 q 1107 602 1091 652 q 1124 482 1124 551 l 1124 0 l 998 0 l 998 484 q 978 579 998 545 q 924 628 959 614 q 841 642 889 642 q 768 627 800 642 q 714 588 736 613 q 681 532 692 564 q 670 464 670 500 m 549 842 l 680 1042 l 831 1042 l 650 842 l 549 842 z "},"Ḁ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 347 -164 q 381 -83 347 -115 q 465 -51 416 -51 q 545 -83 511 -51 q 579 -164 579 -115 q 545 -244 579 -214 q 465 -275 511 -275 q 381 -244 416 -275 q 347 -164 347 -214 m 406 -164 q 423 -204 406 -187 q 465 -220 440 -220 q 504 -204 488 -220 q 521 -164 521 -188 q 504 -122 521 -139 q 465 -105 488 -105 q 423 -122 440 -105 q 406 -164 406 -139 z "},"ḁ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 222 -164 q 257 -83 222 -115 q 340 -51 292 -51 q 420 -83 387 -51 q 454 -164 454 -115 q 420 -244 454 -214 q 340 -275 387 -275 q 257 -244 292 -275 q 222 -164 222 -214 m 281 -164 q 298 -204 281 -187 q 340 -220 315 -220 q 379 -204 363 -220 q 396 -164 396 -188 q 379 -122 396 -139 q 340 -105 363 -105 q 298 -122 315 -105 q 281 -164 281 -139 z "},"Ѐ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 360 1260 l 491 1061 l 383 1061 l 208 1260 l 360 1260 z "},"Ѝ":{"ha":991,"x_min":121,"x_max":868,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 m 437 1260 l 568 1061 l 460 1061 l 286 1260 l 437 1260 z "},"ѐ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 323 1042 l 454 842 l 347 842 l 172 1042 l 323 1042 z "},"ѝ":{"ha":802,"x_min":106,"x_max":696,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 m 340 1027 l 471 828 l 363 828 l 189 1027 l 340 1027 z "},"Ѱ":{"ha":961,"x_min":61,"x_max":891,"o":"m 760 987 l 891 987 l 891 631 q 838 420 891 507 q 692 289 785 334 q 480 243 599 243 l 460 243 q 301 269 374 243 q 174 344 228 294 q 91 466 121 393 q 61 631 61 538 l 61 987 l 191 987 l 191 631 q 211 511 191 564 q 267 423 231 459 q 353 369 303 387 q 461 351 402 351 l 481 351 q 627 383 564 351 q 725 478 690 416 q 760 631 760 541 l 760 987 m 536 987 l 536 0 l 406 0 l 406 987 l 536 987 z "},"ѱ":{"ha":972,"x_min":65,"x_max":913,"o":"m 65 734 l 191 734 l 191 403 q 212 257 191 317 q 273 160 234 197 q 364 106 312 123 q 477 89 416 89 q 624 115 564 89 q 720 184 684 140 q 772 280 755 227 q 788 385 788 332 q 762 564 786 476 q 702 734 738 651 l 834 734 q 873 640 855 692 q 902 524 891 587 q 913 385 913 460 q 891 234 913 306 q 818 106 868 162 q 685 18 768 50 q 484 -14 603 -14 q 311 10 388 -14 q 178 85 233 35 q 94 216 123 136 q 65 404 65 295 l 65 734 m 415 734 l 541 734 l 541 -321 l 415 -321 l 415 734 z "},"Ѷ":{"ha":876,"x_min":15,"x_max":844,"o":"m 439 254 l 614 802 q 663 917 636 873 q 727 980 690 960 q 813 1000 763 1000 l 844 1000 l 844 884 l 836 884 q 795 875 812 884 q 764 845 778 866 q 736 787 750 824 l 473 0 l 372 0 l 439 254 m 157 987 l 393 254 l 459 0 l 358 0 l 15 987 l 157 987 m 387 1018 l 273 1018 l 66 1198 l 218 1198 l 387 1018 m 564 1018 l 463 1018 l 296 1198 l 436 1198 l 564 1018 z "},"ѷ":{"ha":697,"x_min":-3,"x_max":703,"o":"m 355 214 l 462 583 q 507 678 481 642 q 565 731 533 714 q 630 747 596 747 q 668 745 650 747 q 703 730 686 742 l 688 630 q 677 634 685 632 q 659 635 669 635 q 632 628 646 635 q 606 607 618 621 q 587 573 595 593 l 385 0 l 302 0 l 355 214 m 160 734 l 323 214 l 373 0 l 290 0 l 32 734 l 160 734 m 318 817 l 203 817 l -3 998 l 149 998 l 318 817 m 495 817 l 393 817 l 227 998 l 367 998 l 495 817 z "},"ѹ":{"ha":1449,"x_min":62,"x_max":1432,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 1094 76 l 1298 734 l 1432 734 l 1138 -113 q 1111 -172 1128 -140 q 1069 -232 1095 -203 q 1007 -278 1043 -260 q 920 -296 970 -296 q 882 -292 905 -296 q 850 -286 859 -288 l 849 -184 q 866 -185 854 -184 q 883 -186 878 -186 q 956 -175 926 -186 q 1006 -138 985 -164 q 1042 -66 1027 -112 l 1094 76 m 944 734 l 1135 164 l 1167 32 l 1077 -14 l 807 734 l 944 734 z "},"Ѹ":{"ha":1613,"x_min":81,"x_max":1596,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 1257 76 l 1461 734 l 1596 734 l 1301 -113 q 1275 -172 1291 -140 q 1232 -232 1258 -203 q 1170 -278 1206 -260 q 1084 -296 1134 -296 q 1046 -292 1069 -296 q 1013 -286 1023 -288 l 1013 -184 q 1030 -185 1018 -184 q 1046 -186 1042 -186 q 1119 -175 1089 -186 q 1170 -138 1149 -164 q 1205 -66 1190 -112 l 1257 76 m 1107 734 l 1298 164 l 1331 32 l 1240 -14 l 970 734 l 1107 734 z "},"Ҙ":{"ha":825,"x_min":54,"x_max":767,"o":"m 417 474 l 300 474 l 300 557 l 412 557 q 533 578 487 557 q 600 637 579 600 q 621 723 621 674 q 598 809 621 770 q 527 871 575 848 q 403 895 479 895 q 300 873 346 895 q 227 814 254 852 q 199 728 199 777 l 68 728 q 95 841 68 791 q 168 927 121 892 q 274 982 214 963 q 403 1001 335 1001 q 547 983 482 1001 q 657 930 611 965 q 728 842 703 895 q 752 721 752 790 q 728 625 752 670 q 661 547 705 581 q 555 493 616 513 q 417 474 493 474 m 300 532 l 417 532 q 566 515 500 532 q 675 465 631 498 q 744 385 720 433 q 767 275 767 337 q 740 153 767 206 q 665 62 713 99 q 549 5 616 24 q 403 -14 482 -14 q 277 3 339 -14 q 165 55 215 20 q 84 144 115 90 q 54 274 54 198 l 185 274 q 213 183 185 224 q 289 117 240 142 q 403 92 338 92 q 529 116 477 92 q 609 180 581 139 q 636 273 636 221 q 622 352 636 318 q 579 407 607 385 q 509 439 551 429 q 412 450 467 450 l 300 450 l 300 532 m 475 54 l 475 -294 l 349 -294 l 349 54 l 475 54 z "},"ҙ":{"ha":705,"x_min":60,"x_max":638,"o":"m 370 351 l 235 351 l 235 428 l 359 428 q 442 441 412 428 q 486 478 473 454 q 498 534 498 502 q 484 588 498 562 q 437 629 469 613 q 352 645 406 645 q 273 630 309 645 q 217 588 238 614 q 197 530 197 562 l 71 530 q 110 645 71 597 q 212 720 148 694 q 352 747 276 747 q 466 733 416 747 q 552 692 517 719 q 606 626 587 665 q 625 534 625 586 q 607 463 625 496 q 556 405 589 430 q 476 365 523 379 q 370 351 429 351 m 235 398 l 370 398 q 486 386 435 398 q 570 349 536 373 q 621 289 604 324 q 638 207 638 253 q 617 114 638 155 q 559 45 597 73 q 468 1 521 16 q 352 -14 416 -14 q 214 11 281 -14 q 103 86 146 35 q 60 217 60 138 l 185 217 q 206 154 185 184 q 265 106 227 124 q 352 87 302 87 q 440 104 405 87 q 493 147 475 120 q 511 206 511 174 q 495 273 511 248 q 445 310 479 298 q 359 321 412 321 l 235 321 l 235 398 m 415 55 l 415 -293 l 290 -293 l 290 55 l 415 55 z "},"Ҫ":{"ha":904,"x_min":81,"x_max":841,"o":"m 711 314 l 841 314 q 787 146 831 220 q 665 30 744 73 q 467 -14 585 -14 q 309 19 380 -14 q 187 112 238 52 q 109 256 136 172 q 81 444 81 340 l 81 543 q 109 731 81 646 q 188 876 136 815 q 313 968 240 936 q 478 1001 387 1001 q 667 959 590 1001 q 788 843 745 917 q 841 671 831 768 l 711 671 q 675 790 701 740 q 602 867 650 840 q 478 894 555 894 q 362 869 412 894 q 279 798 313 844 q 229 687 245 751 q 212 544 212 623 l 212 444 q 227 308 212 372 q 273 196 242 244 q 353 120 304 148 q 467 93 401 93 q 600 119 550 93 q 674 195 649 146 q 711 314 700 245 m 525 54 l 525 -294 l 399 -294 l 399 54 l 525 54 z "},"ҫ":{"ha":727,"x_min":63,"x_max":682,"o":"m 389 90 q 472 108 434 90 q 534 158 510 126 q 562 232 559 191 l 682 232 q 638 111 678 167 q 532 21 597 55 q 389 -14 467 -14 q 245 16 307 -14 q 143 96 184 45 q 83 213 103 146 q 63 353 63 279 l 63 381 q 83 521 63 455 q 143 638 103 587 q 245 718 184 689 q 389 747 307 747 q 540 712 475 747 q 641 617 604 677 q 682 481 678 557 l 562 481 q 537 564 559 527 q 477 622 515 600 q 389 644 439 644 q 293 622 332 644 q 231 561 254 599 q 198 476 208 522 q 189 381 189 429 l 189 353 q 198 258 189 304 q 230 173 208 211 q 292 112 253 135 q 389 90 331 90 m 425 54 l 425 -294 l 300 -294 l 300 54 l 425 54 z "},"Ү":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 z "},"ү":{"ha":696,"x_min":32,"x_max":673,"o":"m 415 90 l 415 -283 l 290 -283 l 290 90 l 415 90 m 349 170 l 544 734 l 673 734 l 401 0 l 317 0 l 349 170 m 160 734 l 361 170 l 389 0 l 305 0 l 32 734 l 160 734 z "},"Ӏ":{"ha":378,"x_min":124,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 z "},"Ӂ":{"ha":1261,"x_min":18,"x_max":1252,"o":"m 397 451 l 45 987 l 198 987 l 460 559 l 646 559 l 625 451 l 397 451 m 468 461 l 181 0 l 18 0 l 385 574 l 468 461 m 703 987 l 703 0 l 573 0 l 573 987 l 703 987 m 1226 987 l 872 451 l 651 451 l 631 559 l 810 559 l 1072 987 l 1226 987 m 1089 0 l 803 461 l 886 574 l 1252 0 l 1089 0 m 734 1232 l 836 1232 q 811 1138 836 1179 q 741 1074 787 1097 q 633 1051 696 1051 q 485 1102 539 1051 q 430 1232 430 1152 l 532 1232 q 555 1162 532 1192 q 633 1131 578 1131 q 711 1162 688 1131 q 734 1232 734 1192 z "},"ӂ":{"ha":1064,"x_min":15,"x_max":1044,"o":"m 318 319 l 40 734 l 191 734 l 381 430 l 528 430 l 509 319 l 318 319 m 387 332 l 174 0 l 15 0 l 307 423 l 387 332 m 592 734 l 592 0 l 467 0 l 467 734 l 592 734 m 1020 734 l 742 319 l 551 319 l 531 430 l 678 430 l 868 734 l 1020 734 m 886 0 l 672 332 l 753 423 l 1044 0 l 886 0 m 630 1000 l 732 1000 q 707 906 732 947 q 637 842 683 865 q 530 819 592 819 q 381 869 435 819 q 326 1000 326 920 l 428 1000 q 451 929 428 960 q 530 899 474 899 q 607 929 584 899 q 630 1000 630 960 z "},"ӏ":{"ha":378,"x_min":124,"x_max":255,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 z "},"Ӑ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 557 1225 l 659 1225 q 634 1131 659 1172 q 564 1067 610 1090 q 456 1044 519 1044 q 308 1094 362 1044 q 253 1225 253 1145 l 355 1225 q 378 1154 355 1185 q 456 1124 401 1124 q 534 1154 511 1124 q 557 1225 557 1185 z "},"ӑ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 496 1014 l 597 1014 q 573 920 597 961 q 503 856 549 879 q 395 833 458 833 q 247 883 301 833 q 192 1014 192 934 l 294 1014 q 317 943 294 974 q 395 913 340 913 q 473 943 450 913 q 496 1014 496 974 z "},"Ӓ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 237 1141 q 256 1192 237 1171 q 311 1213 275 1213 q 367 1192 348 1213 q 386 1141 386 1171 q 367 1091 386 1112 q 311 1070 348 1070 q 256 1091 275 1070 q 237 1141 237 1112 m 530 1139 q 548 1191 530 1170 q 604 1212 567 1212 q 659 1191 640 1212 q 678 1139 678 1170 q 659 1089 678 1110 q 604 1069 640 1069 q 548 1089 567 1069 q 530 1139 530 1110 z "},"ӓ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 176 930 q 195 981 176 960 q 250 1002 214 1002 q 306 981 287 1002 q 325 930 325 960 q 306 880 325 901 q 250 859 287 859 q 195 880 214 859 q 176 930 176 901 m 469 928 q 487 980 469 959 q 543 1001 506 1001 q 598 980 578 1001 q 617 928 617 959 q 598 879 617 899 q 543 858 578 858 q 487 879 506 858 q 469 928 469 899 z "},"Ӕ":{"ha":1298,"x_min":-10,"x_max":1275,"o":"m 658 886 l 144 0 l -10 0 l 587 987 l 668 987 l 658 886 m 756 358 l 756 239 l 252 239 l 252 358 l 756 358 m 1275 103 l 1275 0 l 778 0 l 778 103 l 1275 103 m 760 987 l 802 0 l 675 0 l 634 987 l 760 987 m 1178 566 l 1178 463 l 751 463 l 751 566 l 1178 566 m 1233 987 l 1233 884 l 736 884 l 736 987 l 1233 987 z "},"ӕ":{"ha":1173,"x_min":54,"x_max":1126,"o":"m 508 124 l 508 488 q 491 572 508 537 q 442 626 475 607 q 363 644 410 644 q 275 627 313 644 q 218 580 238 609 q 197 515 197 551 l 73 528 q 94 615 73 575 q 153 685 115 655 q 244 731 191 715 q 363 747 298 747 q 503 718 443 747 q 596 631 563 689 q 630 487 630 574 l 630 148 l 508 124 m 536 431 l 536 336 l 359 336 q 260 318 300 336 q 199 269 220 299 q 179 203 179 239 q 194 145 179 171 q 240 103 210 119 q 319 88 271 88 q 394 102 355 88 q 464 138 432 116 q 516 184 496 160 q 537 230 536 209 l 602 132 q 544 65 584 99 q 443 8 505 31 q 294 -14 380 -14 q 163 13 217 -14 q 81 90 109 40 q 54 206 54 140 q 73 301 54 260 q 131 372 92 343 q 226 416 169 401 q 357 431 283 431 l 536 431 m 857 -14 q 709 13 773 -14 q 602 89 646 40 q 536 205 559 138 q 514 353 514 273 l 514 382 q 537 530 514 463 q 603 646 561 597 q 703 721 646 694 q 827 747 760 748 q 956 725 900 747 q 1050 659 1012 702 q 1107 555 1088 616 q 1126 418 1126 494 l 1126 338 l 581 338 l 581 434 l 1000 434 l 1000 455 q 983 549 1000 507 q 928 618 966 592 q 827 644 890 644 q 744 624 780 644 q 683 568 708 604 q 646 484 659 532 q 633 382 633 437 l 633 353 q 646 250 633 298 q 686 166 659 202 q 755 109 713 130 q 857 89 798 89 q 987 114 937 89 q 1070 161 1036 138 l 1114 69 q 1066 38 1099 58 q 981 2 1034 18 q 857 -14 929 -14 z "},"Ӗ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 521 1232 l 623 1232 q 598 1138 623 1179 q 528 1074 574 1097 q 420 1051 483 1051 q 272 1102 326 1051 q 217 1232 217 1152 l 319 1232 q 342 1162 319 1192 q 420 1131 365 1131 q 498 1162 475 1131 q 521 1232 521 1192 z "},"ӗ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 484 1014 l 586 1014 q 562 920 586 961 q 492 856 537 879 q 384 833 446 833 q 235 883 290 833 q 180 1014 180 934 l 282 1014 q 305 943 282 974 q 384 913 328 913 q 461 943 438 913 q 484 1014 484 974 z "},"Ӛ":{"ha":960,"x_min":64,"x_max":880,"o":"m 435 1001 q 626 966 543 1001 q 765 868 709 931 q 851 717 822 804 q 880 525 880 630 l 880 461 q 849 269 880 356 q 761 118 817 181 q 631 20 705 55 q 473 -14 557 -14 q 296 18 372 -14 q 168 108 219 49 q 90 250 116 167 q 64 436 64 333 l 64 520 l 800 520 l 800 419 l 195 419 l 195 396 q 209 278 195 333 q 256 182 224 223 q 342 118 289 141 q 473 94 395 94 q 591 123 539 94 q 678 202 642 151 q 732 319 713 252 q 750 461 750 385 l 750 525 q 732 668 750 602 q 676 785 714 734 q 578 864 638 836 q 435 892 519 892 q 287 873 347 892 q 187 836 227 854 l 155 932 q 208 960 172 943 q 300 988 243 976 q 435 1001 357 1001 m 212 1117 q 231 1168 212 1147 q 286 1190 250 1190 q 342 1168 323 1190 q 361 1117 361 1147 q 342 1067 361 1088 q 286 1046 323 1046 q 231 1067 250 1046 q 212 1117 212 1088 m 505 1116 q 523 1167 505 1146 q 578 1188 542 1188 q 634 1167 614 1188 q 653 1116 653 1146 q 634 1066 653 1086 q 578 1045 614 1045 q 523 1066 542 1045 q 505 1116 505 1086 z "},"ә":{"ha":732,"x_min":67,"x_max":680,"o":"m 347 749 q 485 722 423 749 q 589 645 546 694 q 656 529 633 596 q 680 382 680 462 l 680 352 q 654 205 680 272 q 585 89 629 138 q 484 13 541 40 q 366 -13 428 -14 q 234 11 290 -13 q 141 79 178 35 q 85 182 104 123 q 67 314 67 242 l 67 397 l 605 397 l 605 294 l 193 294 l 193 277 q 211 185 193 228 q 268 116 229 142 q 366 90 307 90 q 441 110 407 90 q 500 166 475 130 q 539 250 526 202 q 553 352 553 298 l 553 382 q 540 484 553 436 q 501 568 527 532 q 437 625 475 604 q 347 646 398 646 q 222 624 273 646 q 138 572 172 603 l 88 658 q 185 720 122 690 q 347 749 248 749 z "},"ӛ":{"ha":732,"x_min":67,"x_max":680,"o":"m 347 749 q 485 722 423 749 q 589 645 546 694 q 656 529 633 596 q 680 382 680 462 l 680 352 q 654 205 680 272 q 585 89 629 138 q 484 13 541 40 q 366 -13 428 -14 q 234 11 290 -13 q 141 79 178 35 q 85 182 104 123 q 67 314 67 242 l 67 397 l 605 397 l 605 294 l 193 294 l 193 277 q 211 185 193 228 q 268 116 229 142 q 366 90 307 90 q 441 110 407 90 q 500 166 475 130 q 539 250 526 202 q 553 352 553 298 l 553 382 q 540 484 553 436 q 501 568 527 532 q 437 625 475 604 q 347 646 398 646 q 222 624 273 646 q 138 572 172 603 l 88 658 q 185 720 122 690 q 347 749 248 749 m 161 930 q 180 982 161 961 q 235 1003 199 1003 q 290 982 271 1003 q 309 930 309 961 q 290 881 309 901 q 235 860 271 860 q 180 881 199 860 q 161 930 161 901 m 453 929 q 472 981 453 960 q 527 1002 490 1002 q 582 981 563 1002 q 602 929 602 960 q 582 879 602 900 q 527 859 563 859 q 472 879 490 859 q 453 929 453 900 z "},"Ӝ":{"ha":1261,"x_min":18,"x_max":1252,"o":"m 397 451 l 45 987 l 198 987 l 460 559 l 646 559 l 625 451 l 397 451 m 468 461 l 181 0 l 18 0 l 385 574 l 468 461 m 703 987 l 703 0 l 573 0 l 573 987 l 703 987 m 1226 987 l 872 451 l 651 451 l 631 559 l 810 559 l 1072 987 l 1226 987 m 1089 0 l 803 461 l 886 574 l 1252 0 l 1089 0 m 414 1148 q 433 1200 414 1179 q 488 1221 452 1221 q 544 1200 525 1221 q 563 1148 563 1179 q 544 1098 563 1119 q 488 1078 525 1078 q 433 1098 452 1078 q 414 1148 414 1119 m 707 1147 q 725 1198 707 1177 q 781 1219 744 1219 q 836 1198 817 1219 q 855 1147 855 1177 q 836 1097 855 1118 q 781 1076 817 1076 q 725 1097 744 1076 q 707 1147 707 1118 z "},"ӝ":{"ha":1064,"x_min":15,"x_max":1044,"o":"m 318 319 l 40 734 l 191 734 l 381 430 l 528 430 l 509 319 l 318 319 m 387 332 l 174 0 l 15 0 l 307 423 l 387 332 m 592 734 l 592 0 l 467 0 l 467 734 l 592 734 m 1020 734 l 742 319 l 551 319 l 531 430 l 678 430 l 868 734 l 1020 734 m 886 0 l 672 332 l 753 423 l 1044 0 l 886 0 m 311 916 q 330 967 311 946 q 385 988 349 988 q 440 967 421 988 q 459 916 459 946 q 440 866 459 886 q 385 845 421 845 q 330 866 349 845 q 311 916 311 886 m 603 914 q 622 966 603 945 q 677 987 640 987 q 732 966 713 987 q 751 914 751 945 q 732 864 751 885 q 677 844 713 844 q 622 864 640 844 q 603 914 603 885 z "},"Ӟ":{"ha":825,"x_min":54,"x_max":767,"o":"m 417 474 l 300 474 l 300 557 l 412 557 q 533 578 487 557 q 600 637 579 600 q 621 723 621 674 q 598 809 621 770 q 527 871 575 848 q 403 895 479 895 q 300 873 346 895 q 227 814 254 852 q 199 728 199 777 l 68 728 q 95 841 68 791 q 168 927 121 892 q 274 982 214 963 q 403 1001 335 1001 q 547 983 482 1001 q 657 930 611 965 q 728 842 703 895 q 752 721 752 790 q 728 625 752 670 q 661 547 705 581 q 555 493 616 513 q 417 474 493 474 m 300 532 l 417 532 q 566 515 500 532 q 675 465 631 498 q 744 385 720 433 q 767 275 767 337 q 740 153 767 206 q 665 62 713 99 q 549 5 616 24 q 403 -14 482 -14 q 277 3 339 -14 q 165 55 215 20 q 84 144 115 90 q 54 274 54 198 l 185 274 q 213 183 185 224 q 289 117 240 142 q 403 92 338 92 q 529 116 477 92 q 609 180 581 139 q 636 273 636 221 q 622 352 636 318 q 579 407 607 385 q 509 439 551 429 q 412 450 467 450 l 300 450 l 300 532 m 193 1162 q 212 1214 193 1193 q 267 1235 231 1235 q 322 1214 303 1235 q 341 1162 341 1193 q 322 1113 341 1133 q 267 1092 303 1092 q 212 1113 231 1092 q 193 1162 193 1133 m 485 1161 q 504 1213 485 1192 q 559 1234 522 1234 q 614 1213 595 1234 q 633 1161 633 1192 q 614 1111 633 1132 q 559 1090 595 1090 q 504 1111 522 1090 q 485 1161 485 1132 z "},"ӟ":{"ha":705,"x_min":60,"x_max":638,"o":"m 370 351 l 235 351 l 235 428 l 359 428 q 442 441 412 428 q 486 478 473 454 q 498 534 498 502 q 484 588 498 562 q 437 629 469 613 q 352 645 406 645 q 273 630 309 645 q 217 588 238 614 q 197 530 197 562 l 71 530 q 110 645 71 597 q 212 720 148 694 q 352 747 276 747 q 466 733 416 747 q 552 692 517 719 q 606 626 587 665 q 625 534 625 586 q 607 463 625 496 q 556 405 589 430 q 476 365 523 379 q 370 351 429 351 m 235 398 l 370 398 q 486 386 435 398 q 570 349 536 373 q 621 289 604 324 q 638 207 638 253 q 617 114 638 155 q 559 45 597 73 q 468 1 521 16 q 352 -14 416 -14 q 214 11 281 -14 q 103 86 146 35 q 60 217 60 138 l 185 217 q 206 154 185 184 q 265 106 227 124 q 352 87 302 87 q 440 104 405 87 q 493 147 475 120 q 511 206 511 174 q 495 273 511 248 q 445 310 479 298 q 359 321 412 321 l 235 321 l 235 398 m 133 929 q 152 981 133 960 q 207 1002 171 1002 q 262 981 243 1002 q 281 929 281 960 q 262 879 281 900 q 207 859 243 859 q 152 879 171 859 q 133 929 133 900 m 425 928 q 444 979 425 958 q 499 1000 463 1000 q 554 979 535 1000 q 574 928 574 958 q 554 878 574 899 q 499 857 535 857 q 444 878 463 857 q 425 928 425 899 z "},"Ӣ":{"ha":991,"x_min":121,"x_max":868,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 m 728 1204 l 728 1107 l 273 1107 l 273 1204 l 728 1204 z "},"ӣ":{"ha":802,"x_min":106,"x_max":696,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 m 631 971 l 631 875 l 176 875 l 176 971 l 631 971 z "},"Ӥ":{"ha":991,"x_min":121,"x_max":868,"o":"m 251 227 l 737 987 l 868 987 l 868 0 l 737 0 l 737 762 l 251 0 l 121 0 l 121 987 l 251 987 l 251 227 m 279 1148 q 298 1200 279 1179 q 353 1221 317 1221 q 408 1200 389 1221 q 427 1148 427 1179 q 408 1098 427 1119 q 353 1078 389 1078 q 298 1098 317 1078 q 279 1148 279 1119 m 571 1147 q 590 1198 571 1177 q 645 1219 608 1219 q 700 1198 681 1219 q 720 1147 720 1177 q 700 1097 720 1118 q 645 1076 681 1076 q 590 1097 608 1076 q 571 1147 571 1118 z "},"ӥ":{"ha":802,"x_min":106,"x_max":696,"o":"m 231 199 l 570 734 l 696 734 l 696 0 l 570 0 l 570 535 l 231 0 l 106 0 l 106 734 l 231 734 l 231 199 m 182 916 q 201 967 182 946 q 256 988 220 988 q 311 967 292 988 q 330 916 330 946 q 311 866 330 886 q 256 845 292 845 q 201 866 220 845 q 182 916 182 886 m 474 914 q 493 966 474 945 q 548 987 511 987 q 603 966 584 987 q 623 914 623 945 q 603 864 623 885 q 548 844 584 844 q 493 864 511 844 q 474 914 474 885 z "},"Ӧ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 261 1142 q 280 1194 261 1173 q 335 1215 299 1215 q 391 1194 372 1215 q 410 1142 410 1173 q 391 1092 410 1113 q 335 1072 372 1072 q 280 1092 299 1072 q 261 1142 261 1113 m 553 1141 q 572 1192 553 1171 q 627 1213 591 1213 q 683 1192 663 1213 q 702 1141 702 1171 q 683 1091 702 1112 q 627 1070 663 1070 q 572 1091 591 1070 q 553 1141 553 1112 z "},"ӧ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 172 930 q 191 981 172 960 q 245 1002 210 1002 q 301 981 282 1002 q 320 930 320 960 q 301 880 320 901 q 245 859 282 859 q 191 880 210 859 q 172 930 172 901 m 464 928 q 483 980 464 959 q 538 1001 501 1001 q 593 980 574 1001 q 612 928 612 959 q 593 879 612 899 q 538 858 574 858 q 483 879 501 858 q 464 928 464 899 z "},"Ө":{"ha":945,"x_min":70,"x_max":864,"o":"m 467 1001 q 600 980 538 1001 q 710 919 662 959 q 793 820 759 878 q 846 688 828 762 q 864 525 864 614 l 864 463 q 836 263 864 351 q 756 113 808 175 q 631 19 704 52 q 468 -14 558 -14 q 337 7 398 -14 q 227 69 276 28 q 142 167 178 109 q 89 299 107 225 q 70 463 70 374 l 70 525 q 99 724 70 636 q 180 874 127 812 q 306 968 233 936 q 467 1001 379 1001 m 467 890 q 366 870 412 890 q 285 812 319 850 q 229 716 251 773 q 201 586 208 660 q 200 563 201 575 q 199 539 199 551 l 734 539 q 734 562 734 551 q 732 585 734 574 q 706 716 726 659 q 651 811 686 772 q 571 870 617 850 q 467 890 524 890 m 468 97 q 573 117 526 97 q 653 176 620 137 q 707 274 687 216 q 732 407 727 332 q 733 421 733 414 q 734 436 734 429 l 200 436 q 201 415 201 425 q 203 395 202 405 q 231 267 210 323 q 288 174 253 212 q 368 116 322 136 q 468 97 414 97 z "},"ө":{"ha":789,"x_min":62,"x_max":730,"o":"m 395 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 m 395 644 q 313 627 349 644 q 252 579 277 610 q 211 508 227 549 q 191 422 196 468 l 602 422 q 581 508 597 468 q 540 579 566 549 q 478 627 514 610 q 395 644 441 644 m 397 90 q 480 107 444 90 q 542 156 516 125 q 583 230 568 188 q 602 319 598 271 l 190 319 q 209 230 194 271 q 250 156 224 188 q 313 107 276 125 q 397 90 349 90 z "},"Ӫ":{"ha":945,"x_min":70,"x_max":864,"o":"m 467 1001 q 600 980 538 1001 q 710 919 662 959 q 793 820 759 878 q 846 688 828 762 q 864 525 864 614 l 864 463 q 836 263 864 351 q 756 113 808 175 q 631 19 704 52 q 468 -14 558 -14 q 337 7 398 -14 q 227 69 276 28 q 142 167 178 109 q 89 299 107 225 q 70 463 70 374 l 70 525 q 99 724 70 636 q 180 874 127 812 q 306 968 233 936 q 467 1001 379 1001 m 467 890 q 366 870 412 890 q 285 812 319 850 q 229 716 251 773 q 201 586 208 660 q 200 563 201 575 q 199 539 199 551 l 734 539 q 734 562 734 551 q 732 585 734 574 q 706 716 726 659 q 651 811 686 772 q 571 870 617 850 q 467 890 524 890 m 468 97 q 573 117 526 97 q 653 176 620 137 q 707 274 687 216 q 732 407 727 332 q 733 421 733 414 q 734 436 734 429 l 200 436 q 201 415 201 425 q 203 395 202 405 q 231 267 210 323 q 288 174 253 212 q 368 116 322 136 q 468 97 414 97 m 269 1145 q 288 1196 269 1175 q 343 1217 307 1217 q 399 1196 380 1217 q 418 1145 418 1175 q 399 1095 418 1116 q 343 1074 380 1074 q 288 1095 307 1074 q 269 1145 269 1116 m 562 1143 q 580 1195 562 1174 q 635 1216 599 1216 q 691 1195 671 1216 q 710 1143 710 1174 q 691 1094 710 1114 q 635 1073 671 1073 q 580 1094 599 1073 q 562 1143 562 1114 z "},"ӫ":{"ha":789,"x_min":62,"x_max":730,"o":"m 395 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 m 395 644 q 313 627 349 644 q 252 579 277 610 q 211 508 227 549 q 191 422 196 468 l 602 422 q 581 508 597 468 q 540 579 566 549 q 478 627 514 610 q 395 644 441 644 m 397 90 q 480 107 444 90 q 542 156 516 125 q 583 230 568 188 q 602 319 598 271 l 190 319 q 209 230 194 271 q 250 156 224 188 q 313 107 276 125 q 397 90 349 90 m 161 931 q 180 983 161 962 q 235 1004 199 1004 q 290 983 271 1004 q 309 931 309 962 q 290 881 309 902 q 235 861 271 861 q 180 881 199 861 q 161 931 161 902 m 453 930 q 472 981 453 960 q 527 1002 490 1002 q 582 981 563 1002 q 602 930 602 960 q 582 880 602 901 q 527 859 563 859 q 472 880 490 859 q 453 930 453 901 z "},"Ӭ":{"ha":937,"x_min":100,"x_max":860,"o":"m 746 546 l 746 439 l 341 439 l 341 546 l 746 546 m 100 314 l 231 314 q 267 195 241 244 q 342 119 292 145 q 475 93 391 93 q 589 120 541 93 q 668 196 637 148 q 714 308 699 244 q 730 444 730 372 l 730 543 q 719 660 730 606 q 686 757 708 714 q 632 831 665 800 q 558 878 600 861 q 463 894 515 894 q 339 867 387 894 q 266 790 292 840 q 231 671 241 740 l 100 671 q 154 843 111 768 q 274 959 197 917 q 463 1001 351 1001 q 628 968 555 1001 q 753 876 701 936 q 832 730 805 815 q 860 542 860 646 l 860 444 q 832 256 860 340 q 754 112 805 172 q 632 19 703 52 q 475 -14 562 -14 q 277 30 356 -14 q 154 146 197 73 q 100 314 111 220 m 251 1163 q 270 1215 251 1194 q 325 1236 289 1236 q 380 1215 361 1236 q 399 1163 399 1194 q 380 1113 399 1134 q 325 1093 361 1093 q 270 1113 289 1093 q 251 1163 251 1134 m 543 1162 q 562 1213 543 1192 q 617 1234 581 1234 q 672 1213 653 1234 q 692 1162 692 1192 q 672 1112 692 1133 q 617 1091 653 1091 q 562 1112 581 1091 q 543 1162 543 1133 z "},"ӭ":{"ha":747,"x_min":68,"x_max":673,"o":"m 353 644 q 274 626 311 644 q 212 575 236 608 q 188 501 188 543 l 68 501 q 109 623 68 567 q 214 713 149 679 q 353 747 279 747 q 490 718 430 747 q 590 638 549 689 q 652 521 631 587 q 673 381 673 455 l 673 353 q 652 213 673 279 q 590 95 631 146 q 489 15 549 44 q 353 -14 430 -14 q 207 21 271 -14 q 105 116 142 56 q 68 252 68 176 l 188 252 q 210 169 188 206 q 269 111 232 132 q 353 89 307 89 q 441 112 404 89 q 502 173 478 135 q 537 258 526 211 q 548 353 548 305 l 548 381 q 537 476 548 429 q 502 561 526 523 q 442 622 479 599 q 353 644 405 644 m 609 425 l 609 323 l 271 323 l 271 425 l 609 425 m 153 930 q 172 981 153 960 q 227 1002 191 1002 q 282 981 263 1002 q 301 930 301 960 q 282 880 301 901 q 227 859 263 859 q 172 880 191 859 q 153 930 153 901 m 445 928 q 464 980 445 959 q 519 1001 482 1001 q 574 980 555 1001 q 593 928 593 959 q 574 879 593 899 q 519 858 555 858 q 464 879 482 858 q 445 928 445 899 z "},"Ӯ":{"ha":873,"x_min":52,"x_max":832,"o":"m 420 328 l 682 987 l 832 987 l 483 165 q 450 98 468 130 q 405 41 431 66 q 339 1 378 16 q 243 -14 300 -14 q 204 -13 227 -14 q 175 -9 182 -11 l 179 96 q 208 93 186 94 q 240 92 230 92 q 301 108 279 92 q 337 148 323 123 q 363 197 351 172 l 420 328 m 199 987 l 473 372 l 506 251 l 396 243 l 52 987 l 199 987 m 669 1204 l 669 1107 l 214 1107 l 214 1204 l 669 1204 z "},"ӯ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 576 985 l 576 889 l 121 889 l 121 985 l 576 985 z "},"Ӱ":{"ha":873,"x_min":52,"x_max":832,"o":"m 420 328 l 682 987 l 832 987 l 483 165 q 450 98 468 130 q 405 41 431 66 q 339 1 378 16 q 243 -14 300 -14 q 204 -13 227 -14 q 175 -9 182 -11 l 179 96 q 208 93 186 94 q 240 92 230 92 q 301 108 279 92 q 337 148 323 123 q 363 197 351 172 l 420 328 m 199 987 l 473 372 l 506 251 l 396 243 l 52 987 l 199 987 m 220 1148 q 239 1200 220 1179 q 294 1221 258 1221 q 349 1200 330 1221 q 368 1148 368 1179 q 349 1098 368 1119 q 294 1078 330 1078 q 239 1098 258 1078 q 220 1148 220 1119 m 512 1147 q 531 1198 512 1177 q 586 1219 549 1219 q 641 1198 622 1219 q 661 1147 661 1177 q 641 1097 661 1118 q 586 1076 622 1076 q 531 1097 549 1076 q 512 1147 512 1118 z "},"ӱ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 126 930 q 145 981 126 960 q 200 1002 164 1002 q 256 981 237 1002 q 275 930 275 960 q 256 880 275 901 q 200 859 237 859 q 145 880 164 859 q 126 930 126 901 m 418 928 q 437 980 418 959 q 492 1001 456 1001 q 548 980 528 1001 q 567 928 567 959 q 548 879 567 899 q 492 858 528 858 q 437 879 456 858 q 418 928 418 899 z "},"Ӳ":{"ha":873,"x_min":52,"x_max":832,"o":"m 420 328 l 682 987 l 832 987 l 483 165 q 450 98 468 130 q 405 41 431 66 q 339 1 378 16 q 243 -14 300 -14 q 204 -13 227 -14 q 175 -9 182 -11 l 179 96 q 208 93 186 94 q 240 92 230 92 q 301 108 279 92 q 337 148 323 123 q 363 197 351 172 l 420 328 m 199 987 l 473 372 l 506 251 l 396 243 l 52 987 l 199 987 m 459 1054 l 615 1259 l 755 1259 l 574 1054 l 459 1054 m 269 1054 l 385 1259 l 519 1259 l 371 1054 l 269 1054 z "},"ӳ":{"ha":657,"x_min":15,"x_max":662,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 366 836 l 522 1041 l 662 1041 l 480 836 l 366 836 m 176 836 l 291 1041 l 425 1041 l 277 836 l 176 836 z "},"Ӵ":{"ha":951,"x_min":102,"x_max":831,"o":"m 102 987 l 233 987 l 233 679 q 256 559 233 602 q 323 498 278 515 q 437 480 369 480 q 516 484 477 480 q 591 493 554 487 q 663 508 627 499 q 733 527 699 517 l 733 420 q 667 401 700 410 q 599 386 634 392 q 525 376 564 380 q 437 373 485 373 q 257 403 332 373 q 142 500 182 433 q 102 679 102 568 l 102 987 m 700 987 l 831 987 l 831 0 l 700 0 l 700 987 m 248 1148 q 267 1200 248 1179 q 322 1221 286 1221 q 378 1200 359 1221 q 397 1148 397 1179 q 378 1098 397 1119 q 322 1078 359 1078 q 267 1098 286 1078 q 248 1148 248 1119 m 541 1147 q 559 1198 541 1177 q 614 1219 578 1219 q 670 1198 650 1219 q 689 1147 689 1177 q 670 1097 689 1118 q 614 1076 650 1076 q 559 1097 578 1076 q 541 1147 541 1118 z "},"ӵ":{"ha":755,"x_min":71,"x_max":649,"o":"m 649 734 l 649 0 l 524 0 l 524 734 l 649 734 m 606 397 l 606 294 q 529 268 568 279 q 447 251 490 257 q 354 244 404 244 q 203 274 267 244 q 105 366 140 304 q 71 521 71 427 l 71 735 l 196 735 l 196 521 q 214 422 196 460 q 268 366 233 384 q 354 348 303 348 q 446 354 403 348 q 529 372 489 361 q 606 397 568 382 m 137 916 q 156 967 137 946 q 211 988 175 988 q 267 967 248 988 q 286 916 286 946 q 267 866 286 886 q 211 845 248 845 q 156 866 175 845 q 137 916 137 886 m 429 914 q 448 966 429 945 q 503 987 467 987 q 558 966 539 987 q 578 914 578 945 q 558 864 578 885 q 503 844 539 844 q 448 864 467 844 q 429 914 429 885 z "},"Ӹ":{"ha":1201,"x_min":121,"x_max":1075,"o":"m 220 585 l 490 585 q 673 549 598 585 q 786 448 747 513 q 825 295 825 382 q 803 176 825 230 q 739 82 781 122 q 633 21 696 43 q 490 0 571 0 l 121 0 l 121 987 l 252 987 l 252 106 l 490 106 q 607 133 562 106 q 673 203 652 160 q 694 296 694 247 q 673 387 694 346 q 607 453 652 429 q 490 478 562 478 l 220 478 l 220 585 m 1075 987 l 1075 0 l 944 0 l 944 987 l 1075 987 m 385 1148 q 404 1200 385 1179 q 459 1221 423 1221 q 515 1200 496 1221 q 534 1148 534 1179 q 515 1098 534 1119 q 459 1078 496 1078 q 404 1098 423 1078 q 385 1148 385 1119 m 677 1147 q 696 1198 677 1177 q 751 1219 715 1219 q 807 1198 787 1219 q 826 1147 826 1177 q 807 1097 826 1118 q 751 1076 787 1076 q 696 1097 715 1076 q 677 1147 677 1118 z "},"ӹ":{"ha":1078,"x_min":107,"x_max":954,"o":"m 199 481 l 419 481 q 569 451 508 481 q 662 366 630 420 q 693 243 693 312 q 675 148 693 193 q 623 71 658 104 q 537 19 588 37 q 419 0 486 0 l 107 0 l 107 734 l 233 734 l 233 103 l 419 103 q 506 123 473 103 q 553 174 538 142 q 567 239 567 205 q 553 304 567 272 q 506 357 538 336 q 419 378 473 378 l 199 378 l 199 481 m 954 734 l 954 0 l 829 0 l 829 734 l 954 734 m 316 916 q 335 967 316 946 q 390 988 354 988 q 446 967 427 988 q 465 916 465 946 q 446 866 465 886 q 390 845 427 845 q 335 866 354 845 q 316 916 316 886 m 608 914 q 627 966 608 945 q 682 987 646 987 q 738 966 718 987 q 757 914 757 945 q 738 864 757 885 q 682 844 718 844 q 627 864 646 844 q 608 914 608 885 z "},"ԁ":{"ha":783,"x_min":64,"x_max":684,"o":"m 558 142 l 558 1042 l 684 1042 l 684 0 l 569 0 l 558 142 m 64 359 l 64 373 q 85 526 64 457 q 144 644 106 595 q 236 721 182 694 q 355 747 289 747 q 476 723 424 747 q 564 653 528 699 q 621 543 600 608 q 650 397 642 479 l 650 335 q 622 190 643 254 q 564 80 600 125 q 475 11 528 35 q 353 -14 423 -14 q 236 14 289 -14 q 144 92 182 42 q 85 211 106 142 q 64 359 64 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 213 208 q 297 114 260 134 q 385 93 334 93 q 487 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 213 525 q 191 373 191 428 z "},"Ạ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 387 -167 q 406 -115 387 -136 q 461 -94 425 -94 q 516 -115 497 -94 q 536 -167 536 -136 q 516 -217 536 -196 q 461 -237 497 -237 q 406 -217 425 -237 q 387 -167 387 -196 z "},"ạ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 262 -167 q 281 -115 262 -136 q 336 -94 300 -94 q 392 -115 372 -94 q 411 -167 411 -136 q 392 -217 411 -196 q 336 -237 372 -237 q 281 -217 300 -237 q 262 -167 262 -196 z "},"Ả":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 503 1064 l 413 1064 l 412 1167 q 469 1174 447 1169 q 500 1190 490 1179 q 511 1218 511 1200 q 502 1242 511 1232 q 477 1258 493 1252 q 441 1267 462 1265 q 398 1270 421 1270 l 403 1342 q 491 1333 453 1342 q 556 1308 530 1324 q 595 1267 582 1291 q 608 1215 608 1244 q 576 1140 608 1164 q 504 1112 543 1117 l 503 1064 z "},"ả":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 442 853 l 352 853 l 351 956 q 408 963 386 958 q 439 979 429 968 q 450 1007 450 989 q 441 1031 450 1021 q 416 1047 432 1041 q 380 1057 401 1054 q 337 1059 360 1059 l 342 1131 q 430 1122 392 1131 q 495 1097 469 1114 q 534 1056 521 1080 q 547 1004 547 1033 q 515 929 547 953 q 443 901 482 906 l 442 853 z "},"Ấ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 207 1053 l 404 1231 l 507 1231 l 705 1053 l 571 1053 l 456 1160 l 340 1053 l 207 1053 m 654 1173 l 750 1348 l 886 1348 l 749 1173 l 654 1173 z "},"ấ":{"ha":755,"x_min":74,"x_max":825,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 146 842 l 343 1020 l 446 1020 l 644 842 l 510 842 l 395 949 l 279 842 l 146 842 m 593 962 l 689 1137 l 825 1137 l 688 962 l 593 962 z "},"Ầ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 505 1228 l 703 1050 l 569 1050 l 454 1158 l 339 1050 l 205 1050 l 402 1228 l 505 1228 m 159 1345 l 256 1171 l 160 1171 l 24 1345 l 159 1345 z "},"ầ":{"ha":755,"x_min":-37,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 444 1017 l 642 839 l 508 839 l 393 947 l 278 839 l 144 839 l 341 1017 l 444 1017 m 98 1135 l 195 960 l 99 960 l -37 1135 l 98 1135 z "},"Ẩ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 518 1220 l 704 1042 l 588 1042 l 454 1168 l 321 1042 l 206 1042 l 391 1220 l 518 1220 m 725 1135 l 647 1135 l 646 1225 q 694 1231 676 1227 q 722 1243 713 1235 q 730 1267 730 1252 q 718 1294 730 1284 q 683 1308 705 1303 q 635 1312 661 1312 l 639 1375 q 715 1368 682 1375 q 771 1345 748 1360 q 805 1311 793 1331 q 817 1265 817 1291 q 788 1201 817 1221 q 726 1177 760 1181 l 725 1135 z "},"ẩ":{"ha":755,"x_min":74,"x_max":755,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 457 1009 l 643 831 l 527 831 l 393 957 l 260 831 l 145 831 l 330 1009 l 457 1009 m 664 924 l 586 924 l 585 1014 q 633 1020 615 1016 q 661 1033 652 1024 q 669 1056 669 1041 q 656 1083 669 1073 q 622 1097 644 1093 q 574 1101 600 1101 l 578 1164 q 654 1157 621 1164 q 710 1134 687 1149 q 744 1100 732 1120 q 755 1055 755 1080 q 727 990 755 1010 q 665 966 699 970 l 664 924 z "},"Ẫ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 499 1192 l 704 1027 l 588 1027 l 454 1134 l 321 1027 l 206 1027 l 410 1192 l 499 1192 m 579 1363 l 631 1348 q 617 1297 631 1321 q 578 1257 602 1272 q 523 1242 553 1242 q 469 1254 489 1242 q 430 1278 448 1266 q 385 1291 412 1291 q 346 1275 363 1291 q 328 1240 328 1259 l 276 1253 q 291 1304 276 1280 q 330 1345 305 1329 q 385 1361 355 1361 q 434 1349 413 1361 q 476 1325 455 1337 q 523 1314 496 1314 q 562 1329 544 1314 q 579 1363 579 1344 z "},"ẫ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 438 981 l 643 816 l 527 816 l 393 923 l 260 816 l 145 816 l 349 981 l 438 981 m 518 1152 l 570 1137 q 556 1086 570 1110 q 517 1046 541 1061 q 462 1031 492 1031 q 408 1043 428 1031 q 369 1067 387 1055 q 323 1080 351 1080 q 285 1064 302 1080 q 267 1029 267 1048 l 215 1042 q 230 1094 215 1069 q 269 1134 244 1118 q 323 1150 294 1150 q 373 1138 352 1150 q 415 1115 394 1126 q 462 1103 435 1103 q 500 1118 483 1103 q 518 1152 518 1133 z "},"Ậ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 494 1253 l 662 1067 l 662 1061 l 557 1061 l 456 1175 l 355 1061 l 252 1061 l 252 1068 l 418 1253 l 494 1253 m 387 -167 q 406 -115 387 -136 q 461 -94 425 -94 q 516 -115 497 -94 q 536 -167 536 -136 q 516 -217 536 -196 q 461 -237 497 -237 q 406 -217 425 -237 q 387 -167 387 -196 z "},"ậ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 433 1042 l 601 857 l 601 850 l 496 850 l 395 964 l 294 850 l 191 850 l 191 857 l 357 1042 l 433 1042 m 262 -167 q 281 -115 262 -136 q 336 -94 300 -94 q 392 -115 372 -94 q 411 -167 411 -136 q 392 -217 411 -196 q 336 -237 372 -237 q 281 -217 300 -237 q 262 -167 262 -196 z "},"Ắ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 554 1192 l 658 1192 q 633 1118 658 1150 q 562 1068 608 1086 q 453 1050 516 1050 q 343 1068 389 1050 q 272 1118 297 1086 q 247 1192 247 1150 l 350 1192 q 373 1137 350 1160 q 453 1114 396 1114 q 531 1137 507 1114 q 554 1192 554 1160 m 413 1205 l 490 1340 l 593 1340 l 482 1205 l 413 1205 z "},"ắ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 493 981 l 597 981 q 572 907 597 939 q 501 857 547 876 q 392 839 455 839 q 282 857 328 839 q 211 907 236 876 q 186 981 186 939 l 289 981 q 312 926 289 949 q 392 903 335 903 q 470 926 446 903 q 493 981 493 949 m 352 994 l 429 1129 l 532 1129 l 421 994 l 352 994 z "},"Ằ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 554 1192 l 658 1192 q 633 1118 658 1150 q 562 1068 608 1086 q 453 1050 516 1050 q 343 1068 389 1050 q 272 1118 297 1086 q 247 1192 247 1150 l 350 1192 q 373 1137 350 1160 q 453 1114 396 1114 q 531 1137 507 1114 q 554 1192 554 1160 m 431 1205 l 320 1340 l 424 1340 l 500 1205 l 431 1205 z "},"ằ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 493 981 l 597 981 q 572 907 597 939 q 501 857 547 876 q 392 839 455 839 q 282 857 328 839 q 211 907 236 876 q 186 981 186 939 l 289 981 q 312 926 289 949 q 392 903 335 903 q 470 926 446 903 q 493 981 493 949 m 370 994 l 259 1129 l 363 1129 l 439 994 l 370 994 z "},"Ẳ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 547 1203 l 646 1203 q 622 1130 646 1162 q 554 1080 598 1098 q 448 1062 510 1062 q 342 1080 387 1062 q 274 1130 298 1098 q 250 1203 250 1162 l 349 1203 q 372 1148 349 1172 q 448 1125 395 1125 q 524 1148 501 1125 q 547 1203 547 1172 m 497 1215 l 410 1215 l 410 1299 q 464 1305 443 1301 q 494 1317 484 1309 q 505 1338 505 1324 q 496 1357 505 1349 q 473 1369 488 1364 q 438 1376 458 1374 q 395 1378 418 1378 l 400 1434 q 486 1427 449 1434 q 548 1407 524 1419 q 586 1376 573 1394 q 599 1336 599 1358 q 584 1293 599 1310 q 547 1269 570 1277 q 498 1257 524 1261 l 497 1215 z "},"ẳ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 486 992 l 585 992 q 561 919 585 951 q 493 869 537 887 q 387 851 449 851 q 281 869 326 851 q 213 919 237 887 q 189 992 189 951 l 288 992 q 311 938 288 961 q 387 914 334 914 q 463 938 440 914 q 486 992 486 961 m 436 1004 l 349 1004 l 349 1088 q 402 1094 382 1090 q 433 1106 423 1098 q 444 1127 444 1114 q 435 1146 444 1138 q 412 1158 427 1154 q 377 1165 397 1163 q 334 1167 357 1167 l 339 1223 q 425 1216 388 1223 q 487 1196 463 1208 q 525 1165 512 1183 q 538 1125 538 1147 q 523 1082 538 1099 q 486 1058 509 1066 q 437 1046 463 1050 l 436 1004 z "},"Ẵ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 550 1207 l 652 1207 q 627 1132 652 1165 q 558 1081 603 1099 q 451 1063 513 1063 q 345 1081 389 1063 q 275 1132 300 1099 q 251 1207 251 1165 l 352 1207 q 374 1152 352 1176 q 451 1127 397 1127 q 528 1152 505 1127 q 550 1207 550 1176 m 589 1404 l 646 1388 q 631 1327 646 1355 q 591 1283 616 1299 q 533 1266 566 1266 q 474 1279 496 1266 q 433 1305 452 1292 q 383 1318 413 1318 q 344 1300 360 1318 q 328 1257 328 1283 l 271 1272 q 285 1332 271 1304 q 325 1378 299 1360 q 383 1395 350 1395 q 437 1382 414 1395 q 482 1357 460 1369 q 533 1344 504 1344 q 572 1361 555 1344 q 589 1404 589 1379 z "},"ẵ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 489 996 l 591 996 q 566 921 591 954 q 497 870 542 888 q 390 852 452 852 q 283 870 328 852 q 214 921 239 888 q 190 996 190 954 l 291 996 q 313 941 291 965 q 390 916 336 916 q 467 941 444 916 q 489 996 489 965 m 528 1193 l 585 1177 q 570 1116 585 1144 q 530 1072 555 1088 q 472 1055 505 1055 q 413 1068 435 1055 q 372 1094 391 1081 q 322 1107 352 1107 q 283 1089 299 1107 q 267 1046 267 1072 l 210 1061 q 224 1121 210 1093 q 263 1167 238 1149 q 322 1184 289 1184 q 376 1171 353 1184 q 421 1146 399 1158 q 472 1133 443 1133 q 511 1151 494 1133 q 528 1193 528 1168 z "},"Ặ":{"ha":906,"x_min":20,"x_max":888,"o":"m 480 900 l 153 0 l 20 0 l 396 987 l 482 987 l 480 900 m 754 0 l 427 900 l 425 987 l 511 987 l 888 0 l 754 0 m 737 366 l 737 258 l 182 258 l 182 366 l 737 366 m 557 1225 l 659 1225 q 634 1131 659 1172 q 564 1067 610 1090 q 456 1044 519 1044 q 308 1094 362 1044 q 253 1225 253 1145 l 355 1225 q 378 1154 355 1185 q 456 1124 401 1124 q 534 1154 511 1124 q 557 1225 557 1185 m 387 -167 q 406 -115 387 -136 q 461 -94 425 -94 q 516 -115 497 -94 q 536 -167 536 -136 q 516 -217 536 -196 q 461 -237 497 -237 q 406 -217 425 -237 q 387 -167 387 -196 z "},"ặ":{"ha":755,"x_min":74,"x_max":680,"o":"m 528 125 l 528 503 q 511 579 528 547 q 459 629 494 611 q 374 646 425 646 q 291 630 326 646 q 235 587 255 614 q 215 530 215 561 l 90 530 q 110 608 90 570 q 169 679 130 647 q 261 729 207 710 q 381 747 315 747 q 523 720 461 747 q 619 638 584 693 q 654 502 654 584 l 654 160 q 660 82 654 123 q 680 11 667 41 l 680 0 l 549 0 q 534 58 539 22 q 528 125 528 94 m 550 445 l 551 357 l 425 357 q 329 348 371 357 q 258 323 287 340 q 215 280 230 306 q 200 221 200 255 q 216 158 200 186 q 263 113 231 130 q 340 96 294 96 q 442 121 398 96 q 512 180 486 145 q 541 249 538 216 l 594 189 q 568 125 589 160 q 512 59 547 91 q 430 7 477 28 q 322 -14 382 -14 q 192 16 248 -14 q 105 94 136 45 q 74 204 74 143 q 97 308 74 263 q 163 384 120 353 q 268 429 207 414 q 404 445 329 445 l 550 445 m 496 1014 l 597 1014 q 573 920 597 961 q 503 856 549 879 q 395 833 458 833 q 247 883 301 833 q 192 1014 192 934 l 294 1014 q 317 943 294 974 q 395 913 340 913 q 473 943 450 913 q 496 1014 496 974 m 262 -167 q 281 -115 262 -136 q 336 -94 300 -94 q 392 -115 372 -94 q 411 -167 411 -136 q 392 -217 411 -196 q 336 -237 372 -237 q 281 -217 300 -237 q 262 -167 262 -196 z "},"Ẹ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 342 -160 q 360 -109 342 -130 q 416 -87 379 -87 q 471 -109 452 -87 q 490 -160 490 -130 q 471 -210 490 -189 q 416 -231 452 -231 q 360 -210 379 -231 q 342 -160 342 -189 z "},"ẹ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 307 -167 q 326 -115 307 -136 q 381 -94 345 -94 q 436 -115 417 -94 q 456 -167 456 -136 q 436 -217 456 -196 q 381 -237 417 -237 q 326 -217 345 -237 q 307 -167 307 -196 z "},"Ẻ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 467 1072 l 377 1072 l 376 1175 q 433 1182 411 1177 q 465 1197 454 1187 q 475 1225 475 1208 q 466 1250 475 1240 q 441 1266 457 1259 q 406 1275 426 1272 q 362 1278 385 1278 l 367 1350 q 455 1341 417 1350 q 520 1315 494 1332 q 559 1275 546 1298 q 572 1223 572 1251 q 540 1148 572 1171 q 468 1119 507 1124 l 467 1072 z "},"ẻ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 431 853 l 340 853 l 340 956 q 396 963 374 958 q 428 979 418 968 q 438 1007 438 989 q 429 1031 438 1021 q 405 1047 420 1041 q 369 1057 389 1054 q 326 1059 349 1059 l 330 1131 q 419 1122 380 1131 q 483 1097 457 1114 q 523 1056 509 1080 q 536 1004 536 1033 q 503 929 536 953 q 431 901 471 906 l 431 853 z "},"Ẽ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 576 1246 l 661 1239 q 641 1152 661 1190 q 588 1095 621 1115 q 514 1074 555 1074 q 457 1084 479 1074 q 417 1106 435 1094 q 380 1129 399 1119 q 332 1139 361 1139 q 284 1117 304 1139 q 265 1063 265 1095 l 180 1067 q 200 1155 180 1117 q 252 1214 219 1192 q 326 1235 286 1235 q 377 1225 355 1235 q 419 1203 399 1215 q 460 1180 439 1190 q 508 1171 481 1171 q 556 1193 536 1171 q 576 1246 576 1215 z "},"ẽ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 539 1028 l 624 1021 q 604 934 624 971 q 552 876 585 897 q 477 856 519 856 q 420 866 443 856 q 380 888 398 876 q 343 910 363 901 q 296 920 324 920 q 248 899 267 920 q 229 845 229 877 l 144 849 q 163 936 144 899 q 216 995 182 974 q 290 1017 249 1017 q 341 1007 319 1017 q 382 984 363 997 q 423 962 402 972 q 471 952 444 952 q 519 974 500 952 q 539 1028 539 996 z "},"Ế":{"ha":789,"x_min":115,"x_max":850,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 171 1061 l 368 1238 l 471 1238 l 669 1061 l 535 1061 l 420 1168 l 304 1061 l 171 1061 m 618 1181 l 714 1356 l 850 1356 l 713 1181 l 618 1181 z "},"ế":{"ha":736,"x_min":63,"x_max":813,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 134 842 l 332 1020 l 435 1020 l 632 842 l 498 842 l 383 949 l 268 842 l 134 842 m 582 962 l 677 1137 l 813 1137 l 677 962 l 582 962 z "},"Ề":{"ha":789,"x_min":-12,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 469 1236 l 667 1057 l 533 1057 l 418 1165 l 303 1057 l 170 1057 l 366 1236 l 469 1236 m 123 1353 l 220 1178 l 124 1178 l -12 1353 l 123 1353 z "},"ề":{"ha":736,"x_min":-49,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 433 1017 l 631 839 l 496 839 l 381 947 l 267 839 l 133 839 l 330 1017 l 433 1017 m 87 1135 l 183 960 l 87 960 l -49 1135 l 87 1135 z "},"Ể":{"ha":789,"x_min":115,"x_max":781,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 482 1227 l 668 1049 l 552 1049 l 418 1175 l 286 1049 l 170 1049 l 355 1227 l 482 1227 m 689 1143 l 611 1143 l 610 1232 q 659 1238 640 1234 q 686 1251 677 1242 q 694 1274 694 1259 q 682 1301 694 1291 q 647 1315 669 1311 q 599 1320 625 1320 l 603 1383 q 679 1375 646 1383 q 735 1353 712 1367 q 769 1318 758 1338 q 781 1273 781 1298 q 752 1209 781 1229 q 690 1184 724 1189 l 689 1143 z "},"ể":{"ha":736,"x_min":63,"x_max":744,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 446 1009 l 631 831 l 515 831 l 382 957 l 249 831 l 134 831 l 318 1009 l 446 1009 m 652 924 l 574 924 l 574 1014 q 622 1020 604 1016 q 649 1033 640 1024 q 658 1056 658 1041 q 645 1083 658 1073 q 610 1097 632 1093 q 562 1101 589 1101 l 566 1164 q 643 1157 610 1164 q 698 1134 675 1149 q 732 1100 721 1120 q 744 1055 744 1080 q 716 990 744 1010 q 653 966 688 970 l 652 924 z "},"Ễ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 463 1200 l 668 1034 l 552 1034 l 418 1141 l 286 1034 l 170 1034 l 374 1200 l 463 1200 m 543 1371 l 595 1356 q 581 1304 595 1329 q 542 1264 566 1280 q 487 1249 517 1249 q 433 1261 453 1249 q 394 1286 412 1274 q 349 1298 376 1298 q 310 1282 328 1298 q 292 1247 292 1266 l 240 1260 q 255 1312 240 1287 q 294 1353 269 1337 q 349 1369 319 1369 q 398 1357 377 1369 q 440 1333 419 1345 q 487 1321 460 1321 q 526 1336 508 1321 q 543 1371 543 1352 z "},"ễ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 427 981 l 631 816 l 515 816 l 382 923 l 249 816 l 134 816 l 338 981 l 427 981 m 507 1152 l 559 1137 q 544 1086 559 1110 q 505 1046 530 1061 q 450 1031 481 1031 q 396 1043 416 1031 q 358 1067 376 1055 q 312 1080 340 1080 q 273 1064 291 1080 q 256 1029 256 1048 l 203 1042 q 218 1094 203 1069 q 257 1134 233 1118 q 312 1150 282 1150 q 361 1138 340 1150 q 403 1115 382 1126 q 450 1103 424 1103 q 489 1118 471 1103 q 507 1152 507 1133 z "},"Ệ":{"ha":789,"x_min":115,"x_max":742,"o":"m 742 106 l 742 0 l 219 0 l 219 106 l 742 106 m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 673 563 l 673 456 l 219 456 l 219 563 l 673 563 m 735 987 l 735 880 l 219 880 l 219 987 l 735 987 m 458 1260 l 626 1075 l 626 1068 l 522 1068 l 420 1183 l 319 1068 l 216 1068 l 216 1076 l 382 1260 l 458 1260 m 342 -160 q 360 -109 342 -130 q 416 -87 379 -87 q 471 -109 452 -87 q 490 -160 490 -130 q 471 -210 490 -189 q 416 -231 452 -231 q 360 -210 379 -231 q 342 -160 342 -189 z "},"ệ":{"ha":736,"x_min":63,"x_max":686,"o":"m 400 -14 q 261 13 323 -14 q 155 86 199 39 q 87 199 111 134 q 63 341 63 264 l 63 370 q 90 529 63 459 q 161 648 116 600 q 264 722 207 697 q 384 747 322 747 q 520 720 463 747 q 614 645 577 693 q 668 531 650 596 q 686 388 686 465 l 686 332 l 138 332 l 138 434 l 560 434 l 560 444 q 540 538 557 492 q 486 614 523 585 q 384 644 448 644 q 305 626 341 644 q 243 573 269 608 q 203 487 218 538 q 189 370 189 436 l 189 341 q 204 243 189 289 q 247 163 218 197 q 315 109 275 128 q 407 89 355 89 q 519 116 473 89 q 600 189 566 143 l 676 128 q 616 60 652 92 q 526 7 579 27 q 400 -14 473 -14 m 421 1042 l 589 857 l 589 850 l 485 850 l 383 964 l 282 850 l 179 850 l 179 857 l 345 1042 l 421 1042 m 307 -167 q 326 -115 307 -136 q 381 -94 345 -94 q 436 -115 417 -94 q 456 -167 456 -136 q 436 -217 456 -196 q 381 -237 417 -237 q 326 -217 345 -237 q 307 -167 307 -196 z "},"Ỉ":{"ha":378,"x_min":124,"x_max":342,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 237 1072 l 146 1072 l 146 1175 q 202 1182 180 1177 q 234 1197 224 1187 q 244 1225 244 1208 q 235 1250 244 1240 q 211 1266 227 1259 q 175 1275 195 1272 q 132 1278 155 1278 l 136 1350 q 225 1341 186 1350 q 289 1315 263 1332 q 329 1275 315 1298 q 342 1223 342 1251 q 309 1148 342 1171 q 237 1119 277 1124 l 237 1072 z "},"ỉ":{"ha":344,"x_min":106,"x_max":323,"o":"m 231 734 l 231 0 l 106 0 l 106 734 l 231 734 m 218 852 l 128 852 l 127 955 q 184 962 162 957 q 216 978 205 967 q 226 1006 226 988 q 217 1030 226 1020 q 193 1046 208 1040 q 157 1055 177 1053 q 113 1058 136 1058 l 118 1130 q 207 1121 168 1130 q 271 1095 245 1112 q 310 1055 297 1078 q 323 1003 323 1031 q 291 928 323 951 q 219 899 258 905 l 218 852 z "},"Ị":{"ha":378,"x_min":111,"x_max":260,"o":"m 255 987 l 255 0 l 124 0 l 124 987 l 255 987 m 111 -161 q 130 -109 111 -130 q 185 -88 149 -88 q 240 -109 221 -88 q 260 -161 260 -130 q 240 -211 260 -190 q 185 -231 221 -231 q 130 -211 149 -231 q 111 -161 111 -190 z "},"ị":{"ha":338,"x_min":91,"x_max":245,"o":"m 232 734 l 232 0 l 106 0 l 106 734 l 232 734 m 96 928 q 115 980 96 959 q 170 1001 134 1001 q 225 980 206 1001 q 245 928 245 959 q 225 879 245 899 q 170 858 206 858 q 115 879 134 858 q 96 928 96 899 m 91 -160 q 110 -109 91 -130 q 165 -87 128 -87 q 220 -109 201 -87 q 239 -160 239 -130 q 220 -210 239 -189 q 165 -231 201 -231 q 110 -210 128 -231 q 91 -160 91 -189 z "},"Ọ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 401 -167 q 420 -115 401 -136 q 475 -94 439 -94 q 531 -115 511 -94 q 550 -167 550 -136 q 531 -217 550 -196 q 475 -237 511 -237 q 420 -217 439 -237 q 401 -167 401 -196 z "},"ọ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 318 -168 q 337 -116 318 -137 q 392 -95 355 -95 q 447 -116 428 -95 q 467 -168 467 -137 q 447 -217 467 -197 q 392 -238 428 -238 q 337 -217 355 -238 q 318 -168 318 -197 z "},"Ỏ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 527 1065 l 437 1065 l 436 1168 q 492 1176 471 1171 q 524 1191 514 1181 q 534 1219 534 1202 q 526 1243 534 1234 q 501 1260 517 1253 q 465 1269 486 1266 q 422 1272 445 1272 l 427 1343 q 515 1335 477 1343 q 579 1309 553 1326 q 619 1269 606 1292 q 632 1217 632 1245 q 600 1142 632 1165 q 528 1113 567 1118 l 527 1065 z "},"ỏ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 437 853 l 347 853 l 347 956 q 403 963 381 958 q 435 979 425 968 q 445 1007 445 989 q 436 1031 445 1021 q 412 1047 427 1041 q 376 1057 396 1054 q 332 1059 355 1059 l 337 1131 q 426 1122 387 1131 q 490 1097 464 1114 q 529 1056 516 1080 q 543 1004 543 1033 q 510 929 543 953 q 438 901 477 906 l 437 853 z "},"Ố":{"ha":956,"x_min":81,"x_max":909,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 231 1055 l 428 1232 l 531 1232 l 728 1055 l 595 1055 l 479 1162 l 364 1055 l 231 1055 m 678 1175 l 774 1350 l 909 1350 l 773 1175 l 678 1175 z "},"ố":{"ha":792,"x_min":62,"x_max":820,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 141 842 l 338 1020 l 441 1020 l 639 842 l 505 842 l 390 949 l 275 842 l 141 842 m 589 962 l 684 1137 l 820 1137 l 684 962 l 589 962 z "},"Ồ":{"ha":956,"x_min":47,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 529 1230 l 727 1051 l 593 1051 l 477 1159 l 363 1051 l 229 1051 l 426 1230 l 529 1230 m 183 1347 l 279 1172 l 184 1172 l 47 1347 l 183 1347 z "},"ồ":{"ha":792,"x_min":-42,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 439 1017 l 637 839 l 503 839 l 388 947 l 273 839 l 140 839 l 336 1017 l 439 1017 m 94 1135 l 190 960 l 94 960 l -42 1135 l 94 1135 z "},"Ổ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 542 1221 l 728 1043 l 612 1043 l 478 1169 l 345 1043 l 230 1043 l 414 1221 l 542 1221 m 749 1137 l 671 1137 l 670 1226 q 718 1232 700 1228 q 745 1245 736 1236 q 754 1268 754 1253 q 741 1295 754 1285 q 707 1309 728 1305 q 659 1314 685 1314 l 663 1377 q 739 1369 706 1377 q 794 1347 772 1361 q 829 1312 817 1332 q 840 1267 840 1292 q 812 1203 840 1223 q 749 1178 784 1183 l 749 1137 z "},"ổ":{"ha":792,"x_min":62,"x_max":751,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 452 1009 l 638 831 l 522 831 l 389 957 l 256 831 l 140 831 l 325 1009 l 452 1009 m 659 924 l 581 924 l 581 1014 q 629 1020 610 1016 q 656 1033 647 1024 q 665 1056 665 1041 q 652 1083 665 1073 q 617 1097 639 1093 q 569 1101 595 1101 l 573 1164 q 649 1157 616 1164 q 705 1134 682 1149 q 739 1100 728 1120 q 751 1055 751 1080 q 723 990 751 1010 q 660 966 694 970 l 659 924 z "},"Ỗ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 523 1194 l 728 1028 l 612 1028 l 478 1135 l 345 1028 l 230 1028 l 434 1194 l 523 1194 m 603 1364 l 655 1350 q 641 1298 655 1322 q 602 1258 626 1274 q 547 1243 577 1243 q 492 1255 513 1243 q 454 1280 472 1267 q 408 1292 436 1292 q 370 1276 387 1292 q 352 1241 352 1260 l 300 1254 q 314 1306 300 1281 q 354 1347 329 1331 q 408 1362 378 1362 q 458 1351 437 1362 q 499 1327 479 1339 q 547 1315 520 1315 q 585 1330 568 1315 q 603 1364 603 1345 z "},"ỗ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 433 981 l 638 816 l 522 816 l 389 923 l 256 816 l 140 816 l 345 981 l 433 981 m 513 1152 l 566 1137 q 551 1086 566 1110 q 512 1046 536 1061 q 457 1031 488 1031 q 403 1043 423 1031 q 365 1067 382 1055 q 319 1080 347 1080 q 280 1064 298 1080 q 262 1029 262 1048 l 210 1042 q 225 1094 210 1069 q 264 1134 239 1118 q 319 1150 289 1150 q 368 1138 347 1150 q 410 1115 389 1126 q 457 1103 431 1103 q 496 1118 478 1103 q 513 1152 513 1133 z "},"Ộ":{"ha":956,"x_min":81,"x_max":875,"o":"m 875 525 l 875 463 q 847 263 875 351 q 767 113 819 175 q 642 19 715 52 q 479 -14 569 -14 q 318 19 391 -14 q 192 113 245 52 q 110 263 139 175 q 81 463 81 351 l 81 525 q 110 724 81 636 q 191 874 138 812 q 317 968 244 936 q 477 1001 390 1001 q 641 968 568 1001 q 766 874 713 936 q 847 724 819 812 q 875 525 875 636 m 745 463 l 745 526 q 727 682 745 614 q 675 796 709 750 q 590 866 640 842 q 477 890 541 890 q 367 866 416 890 q 283 796 318 842 q 229 682 248 750 q 210 526 210 614 l 210 463 q 229 306 210 374 q 284 191 248 237 q 369 121 319 144 q 479 97 418 97 q 592 121 543 97 q 676 191 642 144 q 728 306 710 237 q 745 463 745 374 m 517 1254 l 686 1069 l 686 1062 l 581 1062 l 479 1177 l 378 1062 l 275 1062 l 275 1069 l 441 1254 l 517 1254 m 401 -167 q 420 -115 401 -136 q 475 -94 439 -94 q 531 -115 511 -94 q 550 -167 550 -136 q 531 -217 550 -196 q 475 -237 511 -237 q 420 -217 439 -237 q 401 -167 401 -196 z "},"ộ":{"ha":792,"x_min":62,"x_max":730,"o":"m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 641 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 641 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 428 1042 l 596 857 l 596 850 l 492 850 l 390 964 l 289 850 l 186 850 l 186 857 l 352 1042 l 428 1042 m 318 -168 q 337 -116 318 -137 q 392 -95 355 -95 q 447 -116 428 -95 q 467 -168 467 -137 q 447 -217 467 -197 q 392 -238 428 -238 q 337 -217 355 -238 q 318 -168 318 -197 z "},"Ớ":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 m 408 1049 l 539 1249 l 690 1249 l 509 1049 l 408 1049 z "},"ớ":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 326 842 l 457 1042 l 608 1042 l 427 842 l 326 842 z "},"Ờ":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 m 417 1249 l 548 1049 l 440 1049 l 265 1249 l 417 1249 z "},"ờ":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 335 1042 l 466 842 l 358 842 l 183 1042 l 335 1042 z "},"Ở":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 m 524 1060 l 434 1060 l 433 1163 q 490 1170 468 1165 q 522 1186 511 1175 q 532 1214 532 1196 q 523 1238 532 1228 q 498 1254 514 1248 q 463 1263 483 1261 q 419 1266 442 1266 l 424 1338 q 512 1329 474 1338 q 577 1303 551 1320 q 616 1263 603 1286 q 629 1211 629 1240 q 597 1136 629 1160 q 525 1107 564 1113 l 524 1060 z "},"ở":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 442 853 l 352 853 l 351 956 q 408 963 386 958 q 439 979 429 968 q 450 1007 450 989 q 441 1031 450 1021 q 416 1047 432 1041 q 380 1057 401 1054 q 337 1059 360 1059 l 342 1131 q 430 1122 392 1131 q 495 1097 469 1114 q 534 1056 521 1080 q 547 1004 547 1033 q 515 929 547 953 q 443 901 482 906 l 442 853 z "},"Ỡ":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 m 633 1235 l 718 1227 q 698 1141 718 1178 q 645 1083 678 1103 q 571 1063 612 1063 q 514 1073 536 1063 q 474 1095 492 1082 q 437 1117 456 1107 q 389 1127 418 1127 q 341 1105 361 1127 q 322 1052 322 1084 l 237 1056 q 257 1143 237 1105 q 309 1202 276 1181 q 383 1223 342 1223 q 434 1214 412 1223 q 476 1191 456 1204 q 517 1169 496 1179 q 565 1159 538 1159 q 613 1181 593 1159 q 633 1235 633 1203 z "},"ỡ":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 551 1028 l 635 1021 q 616 934 635 971 q 563 876 596 897 q 489 856 530 856 q 432 866 454 856 q 392 888 410 876 q 355 910 374 901 q 307 920 336 920 q 259 899 279 920 q 240 845 240 877 l 155 849 q 175 936 155 899 q 227 995 194 974 q 301 1017 260 1017 q 352 1007 330 1017 q 394 984 374 997 q 435 962 414 972 q 483 952 456 952 q 531 974 511 952 q 551 1028 551 996 z "},"Ợ":{"ha":954,"x_min":69,"x_max":975,"o":"m 861 1080 l 975 1080 q 946 930 975 992 q 860 837 918 869 q 717 804 803 804 l 717 896 q 802 918 770 896 q 847 981 833 939 q 861 1080 861 1022 m 863 525 l 863 463 q 836 263 863 351 q 755 113 808 175 q 630 19 703 52 q 467 -14 557 -14 q 336 7 397 -14 q 226 69 275 28 q 142 167 177 109 q 88 299 106 225 q 69 463 69 374 l 69 525 q 98 724 69 636 q 180 874 127 812 q 306 968 233 936 q 466 1001 378 1001 q 600 980 538 1001 q 710 919 661 959 q 793 820 758 878 q 845 688 827 762 q 863 525 863 614 m 734 463 l 734 526 q 722 654 734 597 q 688 755 711 711 q 633 829 666 800 q 559 874 601 859 q 466 890 517 890 q 356 866 406 890 q 272 796 307 842 q 218 682 237 750 q 199 526 199 614 l 199 463 q 211 334 199 391 q 247 232 223 276 q 303 157 270 187 q 377 112 336 127 q 467 97 419 97 q 581 121 531 97 q 664 191 630 144 q 716 306 699 237 q 734 463 734 374 m 391 -167 q 410 -115 391 -136 q 465 -94 429 -94 q 520 -115 501 -94 q 540 -167 540 -136 q 520 -217 540 -196 q 465 -237 501 -237 q 410 -217 429 -237 q 391 -167 391 -196 z "},"ợ":{"ha":794,"x_min":62,"x_max":821,"o":"m 720 814 l 821 814 q 800 686 821 740 q 732 603 780 632 q 604 574 685 574 l 604 652 q 679 673 654 652 q 712 730 704 693 q 720 814 720 766 m 62 359 l 62 374 q 85 522 62 454 q 152 641 109 590 q 257 719 195 691 q 395 747 319 747 q 535 719 473 747 q 640 641 597 691 q 707 522 684 590 q 730 374 730 454 l 730 359 q 707 212 730 279 q 640 93 684 144 q 535 15 597 43 q 397 -14 474 -14 q 258 15 319 -14 q 152 93 196 43 q 85 212 109 144 q 62 359 62 279 m 188 374 l 188 359 q 201 255 188 304 q 240 170 214 207 q 305 111 266 132 q 397 90 345 90 q 487 111 448 90 q 552 170 526 132 q 591 255 578 207 q 604 359 604 304 l 604 374 q 591 477 604 429 q 552 563 578 526 q 487 623 526 601 q 395 644 448 644 q 305 623 344 644 q 240 563 266 601 q 201 477 214 526 q 188 374 188 429 m 317 -174 q 335 -122 317 -143 q 391 -101 354 -101 q 446 -122 427 -101 q 465 -174 465 -143 q 446 -223 465 -203 q 391 -244 427 -244 q 335 -223 354 -244 q 317 -174 317 -203 z "},"Ụ":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 374 -167 q 392 -115 374 -136 q 448 -94 411 -94 q 503 -115 484 -94 q 522 -167 522 -136 q 503 -217 522 -196 q 448 -237 484 -237 q 392 -217 411 -237 q 374 -167 374 -196 z "},"ụ":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 267 -167 q 286 -115 267 -136 q 341 -94 304 -94 q 396 -115 377 -94 q 416 -167 416 -136 q 396 -217 416 -196 q 341 -237 377 -237 q 286 -217 304 -237 q 267 -167 267 -196 z "},"Ủ":{"ha":901,"x_min":95,"x_max":810,"o":"m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 500 1064 l 410 1064 l 409 1167 q 465 1174 444 1169 q 497 1190 487 1179 q 507 1218 507 1200 q 498 1242 507 1232 q 474 1258 490 1252 q 438 1267 458 1265 q 395 1270 418 1270 l 399 1342 q 488 1333 450 1342 q 552 1308 526 1324 q 592 1267 578 1291 q 605 1215 605 1244 q 572 1140 605 1164 q 500 1112 540 1117 l 500 1064 z "},"ủ":{"ha":766,"x_min":93,"x_max":671,"o":"m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 432 853 l 342 853 l 341 956 q 397 963 376 958 q 429 979 419 968 q 439 1007 439 989 q 431 1031 439 1021 q 406 1047 422 1041 q 370 1057 391 1054 q 327 1059 350 1059 l 332 1131 q 420 1122 382 1131 q 485 1097 458 1114 q 524 1056 511 1080 q 537 1004 537 1033 q 505 929 537 953 q 433 901 472 906 l 432 853 z "},"Ứ":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 401 1061 l 533 1260 l 684 1260 l 503 1061 l 401 1061 z "},"ứ":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 324 828 l 456 1027 l 607 1027 l 425 828 l 324 828 z "},"Ừ":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 411 1260 l 542 1061 l 434 1061 l 259 1260 l 411 1260 z "},"ừ":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 334 1027 l 465 828 l 357 828 l 182 1027 l 334 1027 z "},"Ử":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 518 1072 l 428 1072 l 427 1175 q 484 1182 462 1177 q 515 1197 505 1187 q 526 1225 526 1208 q 517 1250 526 1240 q 492 1266 508 1259 q 456 1275 477 1272 q 413 1278 436 1278 l 418 1350 q 506 1341 468 1350 q 571 1315 545 1332 q 610 1275 597 1298 q 623 1223 623 1251 q 591 1148 623 1171 q 519 1119 558 1124 l 518 1072 z "},"ử":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 441 839 l 351 839 l 350 942 q 406 949 385 944 q 438 965 428 954 q 448 993 448 975 q 439 1017 448 1007 q 415 1033 431 1027 q 379 1042 399 1040 q 336 1045 359 1045 l 340 1117 q 429 1108 391 1117 q 493 1082 467 1099 q 533 1042 519 1065 q 546 990 546 1019 q 513 915 546 939 q 441 886 481 892 l 441 839 z "},"Ữ":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 627 1246 l 711 1239 q 692 1152 711 1190 q 639 1095 672 1115 q 565 1074 606 1074 q 508 1084 530 1074 q 468 1106 486 1094 q 431 1129 450 1119 q 383 1139 412 1139 q 335 1117 355 1139 q 316 1063 316 1095 l 231 1067 q 251 1155 231 1117 q 303 1214 270 1192 q 377 1235 336 1235 q 428 1225 406 1235 q 470 1203 450 1215 q 511 1180 490 1190 q 559 1171 532 1171 q 607 1193 587 1171 q 627 1246 627 1215 z "},"ữ":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 549 1014 l 634 1006 q 614 920 634 957 q 562 862 595 882 q 488 842 529 842 q 431 851 453 842 q 391 874 408 861 q 354 896 373 886 q 306 906 334 906 q 258 884 277 906 q 239 831 239 863 l 154 835 q 173 922 154 884 q 226 981 193 960 q 300 1002 259 1002 q 351 992 329 1002 q 393 970 373 983 q 433 948 412 958 q 481 938 454 938 q 530 960 510 938 q 549 1014 549 982 z "},"Ự":{"ha":966,"x_min":95,"x_max":1061,"o":"m 954 1043 l 1061 1043 q 1033 882 1061 947 q 943 784 1005 817 q 779 751 881 751 l 779 842 q 886 865 848 842 q 939 932 924 888 q 954 1043 954 977 m 680 987 l 810 987 l 810 319 q 760 134 810 208 q 629 23 711 60 q 452 -14 547 -14 q 270 23 351 -14 q 142 134 189 60 q 95 319 95 208 l 95 987 l 224 987 l 224 319 q 253 192 224 242 q 333 117 281 142 q 452 93 384 93 q 571 117 520 93 q 651 192 623 142 q 680 319 680 242 l 680 987 m 391 -173 q 410 -121 391 -142 q 465 -100 429 -100 q 520 -121 501 -100 q 540 -173 540 -142 q 520 -223 540 -202 q 465 -243 501 -243 q 410 -223 429 -243 q 391 -173 391 -202 z "},"ự":{"ha":859,"x_min":93,"x_max":879,"o":"m 783 793 l 879 793 q 860 669 879 719 q 792 593 840 618 q 656 568 744 568 l 656 646 q 744 661 718 646 q 777 709 770 676 q 783 793 783 741 m 545 170 l 545 734 l 671 734 l 671 0 l 551 0 l 545 170 m 568 324 l 621 326 q 605 190 621 252 q 556 83 590 128 q 467 12 522 37 q 334 -14 412 -14 q 236 2 280 -14 q 159 50 191 18 q 110 135 127 83 q 93 260 93 187 l 93 734 l 218 734 l 218 259 q 230 177 218 210 q 260 126 241 145 q 303 100 279 108 q 353 93 328 93 q 480 124 433 93 q 548 207 527 155 q 568 324 568 260 m 304 -167 q 322 -115 304 -136 q 378 -94 341 -94 q 433 -115 414 -94 q 452 -167 452 -136 q 433 -217 452 -196 q 378 -237 414 -237 q 322 -217 341 -237 q 304 -167 304 -196 z "},"Ỵ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 339 -166 q 358 -115 339 -136 q 413 -94 376 -94 q 468 -115 449 -94 q 488 -166 488 -136 q 468 -216 488 -195 q 413 -237 449 -237 q 358 -216 376 -237 q 339 -166 339 -195 z "},"ỵ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 405 -274 q 424 -222 405 -243 q 479 -201 442 -201 q 534 -222 515 -201 q 553 -274 553 -243 q 534 -324 553 -303 q 479 -345 515 -345 q 424 -324 442 -345 q 405 -274 405 -303 z "},"Ỷ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 467 1063 l 376 1063 l 376 1166 q 432 1174 410 1168 q 464 1189 454 1179 q 474 1217 474 1200 q 465 1241 474 1232 q 441 1258 456 1251 q 405 1267 425 1264 q 361 1270 385 1270 l 366 1341 q 455 1333 416 1341 q 519 1307 493 1324 q 558 1266 545 1290 q 572 1215 572 1243 q 539 1140 572 1163 q 467 1111 507 1116 l 467 1063 z "},"ỷ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 392 853 l 302 853 l 301 956 q 357 963 336 958 q 389 979 379 968 q 399 1007 399 989 q 391 1031 399 1021 q 366 1047 382 1041 q 330 1057 351 1054 q 287 1059 310 1059 l 292 1131 q 380 1122 342 1131 q 445 1097 418 1114 q 484 1056 471 1080 q 497 1004 497 1033 q 465 929 497 953 q 393 901 432 906 l 392 853 z "},"Ỹ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 575 1238 l 660 1231 q 640 1144 660 1181 q 588 1086 621 1107 q 513 1066 555 1066 q 456 1076 479 1066 q 416 1098 434 1086 q 379 1121 399 1111 q 332 1131 360 1131 q 284 1109 303 1131 q 264 1055 264 1087 l 180 1059 q 199 1146 180 1109 q 252 1205 218 1184 q 326 1227 285 1227 q 377 1217 355 1227 q 418 1195 399 1207 q 459 1172 438 1182 q 507 1162 480 1162 q 555 1184 536 1162 q 575 1238 575 1206 z "},"ỹ":{"ha":657,"x_min":15,"x_max":640,"o":"m 302 76 l 506 734 l 640 734 l 346 -113 q 319 -172 336 -140 q 277 -232 302 -203 q 215 -278 251 -260 q 128 -296 178 -296 q 90 -292 113 -296 q 58 -286 67 -288 l 57 -184 q 74 -185 62 -184 q 91 -186 86 -186 q 163 -175 134 -186 q 214 -138 193 -164 q 250 -66 235 -112 l 302 76 m 152 734 l 342 164 l 375 32 l 285 -14 l 15 734 l 152 734 m 500 1028 l 585 1021 q 566 934 585 971 q 513 876 546 897 q 439 856 480 856 q 382 866 404 856 q 342 888 359 876 q 305 910 324 901 q 257 920 286 920 q 209 899 229 920 q 190 845 190 877 l 105 849 q 124 936 105 899 q 177 995 144 974 q 251 1017 210 1017 q 302 1007 280 1017 q 344 984 324 997 q 385 962 363 972 q 433 952 406 952 q 481 974 461 952 q 500 1028 500 996 z "},"₫":{"ha":804,"x_min":64,"x_max":812,"o":"m 558 142 l 558 1042 l 684 1042 l 684 0 l 569 0 l 558 142 m 64 359 l 64 373 q 85 526 64 457 q 144 644 106 595 q 236 721 182 694 q 355 747 289 747 q 476 723 424 747 q 564 653 528 699 q 621 543 600 608 q 650 397 642 479 l 650 335 q 622 190 643 254 q 564 80 600 125 q 475 11 528 35 q 353 -14 423 -14 q 236 14 289 -14 q 144 92 182 42 q 85 211 106 142 q 64 359 64 279 m 191 373 l 191 359 q 202 256 191 304 q 237 171 213 208 q 297 114 260 134 q 385 93 334 93 q 487 119 447 93 q 552 189 528 146 q 590 283 576 233 l 590 447 q 567 519 582 484 q 527 582 551 554 q 468 625 503 609 q 386 642 433 642 q 297 620 334 642 q 237 562 260 599 q 202 476 213 525 q 191 373 191 428 m 812 939 l 812 836 l 380 836 l 380 939 l 812 939 m 732 -106 l 732 -210 l 111 -210 l 111 -106 l 732 -106 z "},"Ҭ":{"ha":829,"x_min":34,"x_max":797,"o":"m 479 987 l 479 0 l 351 0 l 351 987 l 479 987 m 797 987 l 797 880 l 34 880 l 34 987 l 797 987 m 587 104 l 587 -243 l 461 -243 l 461 104 l 587 104 z "},"ҭ":{"ha":668,"x_min":27,"x_max":641,"o":"m 395 734 l 395 0 l 269 0 l 269 734 l 395 734 m 641 734 l 641 632 l 27 632 l 27 734 l 641 734 m 505 104 l 505 -243 l 379 -243 l 379 104 l 505 104 z "},"Ӌ":{"ha":951,"x_min":102,"x_max":831,"o":"m 102 987 l 233 987 l 233 679 q 256 559 233 602 q 323 498 278 515 q 437 480 369 480 q 516 484 477 480 q 591 493 554 487 q 663 508 627 499 q 733 527 699 517 l 733 420 q 667 401 700 410 q 599 386 634 392 q 525 376 564 380 q 437 373 485 373 q 257 403 332 373 q 142 500 182 433 q 102 679 102 568 l 102 987 m 700 987 l 831 987 l 831 0 l 700 0 l 700 987 m 715 104 l 715 -243 l 590 -243 l 590 104 l 715 104 z "},"ӌ":{"ha":755,"x_min":71,"x_max":649,"o":"m 649 734 l 649 0 l 524 0 l 524 734 l 649 734 m 606 397 l 606 294 q 529 268 568 279 q 447 251 490 257 q 354 244 404 244 q 203 274 267 244 q 105 366 140 304 q 71 521 71 427 l 71 735 l 196 735 l 196 521 q 214 422 196 460 q 268 366 233 384 q 354 348 303 348 q 446 354 403 348 q 529 372 489 361 q 606 397 568 382 m 536 104 l 536 -243 l 411 -243 l 411 104 l 536 104 z "},"Ӷ":{"ha":772,"x_min":121,"x_max":727,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 m 359 104 l 359 -243 l 233 -243 l 233 104 l 359 104 z "},"ӷ":{"ha":583,"x_min":105,"x_max":570,"o":"m 570 734 l 570 630 l 231 630 l 231 0 l 105 0 l 105 734 l 570 734 m 340 104 l 340 -243 l 215 -243 l 215 104 l 340 104 z "},"Ҿ":{"ha":1074,"x_min":43,"x_max":997,"o":"m 43 733 l 146 733 q 163 647 146 684 q 218 589 181 610 q 314 568 256 568 l 314 473 q 164 505 225 473 q 73 596 104 537 q 43 733 43 654 m 679 -16 q 500 16 578 -16 q 368 104 422 47 q 287 238 315 161 q 260 409 260 316 l 260 578 q 288 748 260 671 q 367 883 317 826 q 485 970 418 939 q 629 1000 551 1001 q 788 969 720 1000 q 904 878 857 937 q 974 736 950 819 q 997 549 997 652 l 997 473 l 339 473 l 339 567 l 866 567 l 866 589 q 853 707 866 652 q 813 804 841 762 q 740 868 785 845 q 629 892 694 892 q 527 867 572 892 q 452 800 483 843 q 406 700 422 756 q 390 578 390 643 l 390 409 q 406 286 390 343 q 457 185 422 229 q 547 117 492 142 q 679 92 602 92 q 819 111 763 92 q 913 149 876 130 l 945 52 q 895 25 929 41 q 808 -3 861 9 q 679 -16 754 -16 m 721 57 l 721 -291 l 595 -291 l 595 57 l 721 57 z "},"ҿ":{"ha":823,"x_min":-24,"x_max":762,"o":"m -24 581 l 77 581 q 111 475 77 515 q 218 435 144 435 l 218 343 q 85 372 139 343 q 4 454 31 401 q -24 581 -24 508 m 476 -14 q 337 13 399 -14 q 231 86 275 39 q 163 199 186 134 q 139 341 139 264 l 139 370 q 165 529 139 459 q 237 648 192 600 q 340 722 283 697 q 460 747 398 747 q 596 720 539 747 q 690 645 653 693 q 745 531 727 596 q 762 388 762 465 l 762 332 l 214 332 l 214 434 l 636 434 l 636 444 q 624 516 634 480 q 594 581 614 551 q 541 627 574 610 q 460 644 508 644 q 381 626 417 644 q 319 573 345 608 q 279 487 294 538 q 265 370 265 436 l 265 341 q 280 243 265 289 q 322 163 294 197 q 391 109 351 128 q 483 89 431 89 q 595 116 549 89 q 676 189 642 143 l 753 128 q 692 60 729 92 q 602 7 655 27 q 476 -14 549 -14 m 543 59 l 543 -289 l 418 -289 l 418 59 l 543 59 z "},"һ":{"ha":765,"x_min":96,"x_max":673,"o":"m 221 1042 l 221 0 l 96 0 l 96 1042 l 221 1042 m 191 395 l 139 397 q 161 536 140 472 q 222 648 183 600 q 316 721 262 695 q 437 747 371 747 q 535 733 492 747 q 609 686 578 718 q 656 604 640 654 q 673 481 673 553 l 673 0 l 547 0 l 547 482 q 530 575 547 540 q 480 626 513 610 q 400 642 448 642 q 315 622 353 642 q 249 568 277 602 q 207 489 222 533 q 191 395 191 444 z "},"Ҍ":{"ha":871,"x_min":-30,"x_max":814,"o":"m 210 585 l 479 585 q 663 549 588 585 q 776 448 737 513 q 814 295 814 382 q 793 176 814 230 q 728 82 771 122 q 623 21 686 43 q 479 0 561 0 l 111 0 l 111 987 l 241 987 l 241 106 l 479 106 q 597 133 552 106 q 663 203 642 160 q 684 296 684 247 q 663 387 684 346 q 597 453 642 429 q 479 478 552 478 l 210 478 l 210 585 m 402 851 l 402 748 l -30 748 l -30 851 l 402 851 z "},"Ѣ":{"ha":871,"x_min":-30,"x_max":814,"o":"m 210 585 l 479 585 q 663 549 588 585 q 776 448 737 513 q 814 295 814 382 q 793 176 814 230 q 728 82 771 122 q 623 21 686 43 q 479 0 561 0 l 111 0 l 111 987 l 241 987 l 241 106 l 479 106 q 597 133 552 106 q 663 203 642 160 q 684 296 684 247 q 663 387 684 346 q 597 453 642 429 q 479 478 552 478 l 210 478 l 210 585 m 402 851 l 402 748 l -30 748 l -30 851 l 402 851 z "},"Ғ":{"ha":772,"x_min":2,"x_max":727,"o":"m 727 987 l 727 880 l 251 880 l 251 0 l 121 0 l 121 987 l 727 987 m 434 566 l 434 463 l 2 463 l 2 566 l 434 566 z "},"ғ":{"ha":583,"x_min":-2,"x_max":570,"o":"m 570 734 l 570 630 l 231 630 l 231 0 l 105 0 l 105 734 l 570 734 m 430 427 l 430 324 l -2 324 l -2 427 l 430 427 z "},"Ҟ":{"ha":906,"x_min":7,"x_max":902,"o":"m 265 987 l 265 0 l 134 0 l 134 987 l 265 987 m 873 987 l 445 444 l 213 444 l 193 553 l 367 553 l 711 987 l 873 987 m 742 0 l 371 461 l 444 576 l 902 0 l 742 0 m 439 834 l 439 731 l 7 731 l 7 834 l 439 834 z "},"ҟ":{"ha":722,"x_min":-31,"x_max":722,"o":"m 239 1042 l 239 0 l 113 0 l 113 1042 l 239 1042 m 687 734 l 385 340 l 194 340 l 179 444 l 324 444 l 538 734 l 687 734 m 573 0 l 321 349 l 387 460 l 722 0 l 573 0 m 401 928 l 401 825 l -31 825 l -31 928 l 401 928 z "},"Ұ":{"ha":834,"x_min":10,"x_max":822,"o":"m 160 987 l 416 492 l 673 987 l 822 987 l 481 369 l 481 0 l 351 0 l 351 369 l 10 987 l 160 987 m 635 456 l 635 353 l 203 353 l 203 456 l 635 456 z "},"ұ":{"ha":696,"x_min":32,"x_max":673,"o":"m 415 90 l 415 -283 l 290 -283 l 290 90 l 415 90 m 349 170 l 544 734 l 673 734 l 401 0 l 317 0 l 349 170 m 160 734 l 361 170 l 389 0 l 305 0 l 32 734 l 160 734 m 572 95 l 572 -8 l 140 -8 l 140 95 l 572 95 z "},"Ӿ":{"ha":871,"x_min":39,"x_max":834,"o":"m 199 987 l 437 609 l 674 987 l 827 987 l 515 498 l 834 0 l 680 0 l 437 386 l 193 0 l 39 0 l 359 498 l 47 987 l 199 987 m 655 557 l 655 454 l 223 454 l 223 557 l 655 557 z "},"ӿ":{"ha":689,"x_min":28,"x_max":659,"o":"m 180 734 l 341 467 l 504 734 l 651 734 l 411 372 l 659 0 l 513 0 l 344 275 l 174 0 l 28 0 l 275 372 l 36 734 l 180 734 m 562 429 l 562 326 l 130 326 l 130 429 l 562 429 z "},"ԑ":{"ha":749,"x_min":68,"x_max":681,"o":"m 356 398 l 505 398 l 505 325 l 366 325 q 272 312 310 325 q 214 274 233 300 q 194 206 194 248 q 206 161 194 182 q 241 123 218 140 q 298 98 264 107 q 374 88 332 88 q 470 106 429 88 q 533 154 511 125 q 556 217 556 184 l 681 217 q 654 114 681 157 q 584 42 628 70 q 485 0 540 14 q 374 -14 431 -14 q 252 1 308 -14 q 155 45 196 16 q 91 114 113 73 q 68 207 68 155 q 87 289 68 253 q 143 349 106 324 q 234 386 180 373 q 356 398 288 398 m 505 351 l 356 351 q 243 365 294 351 q 156 405 192 379 q 100 463 119 430 q 81 534 81 496 q 101 626 81 586 q 161 692 122 665 q 254 733 199 719 q 374 747 308 747 q 488 732 435 747 q 582 688 541 717 q 646 620 623 660 q 669 530 669 580 l 544 530 q 521 588 544 562 q 460 630 498 614 q 374 645 422 645 q 279 629 317 645 q 224 588 242 613 q 206 534 206 562 q 215 490 206 510 q 243 455 224 470 q 293 433 262 441 q 366 425 323 425 l 505 425 l 505 351 z "},"₣":{"ha":768,"x_min":12,"x_max":726,"o":"m 245 987 l 245 0 l 115 0 l 115 987 l 245 987 m 659 543 l 659 436 l 217 436 l 217 543 l 659 543 m 726 987 l 726 880 l 217 880 l 217 987 l 726 987 m 444 282 l 444 179 l 12 179 l 12 282 l 444 282 z "},"―":{"ha":1084,"x_min":98,"x_max":1004,"o":"m 1004 545 l 1004 441 l 98 441 l 98 545 l 1004 545 z "},"Ὅ":{"ha":1003,"x_min":-266,"x_max":922,"o":"m 922 525 l 922 463 q 895 263 922 351 q 814 113 867 175 q 689 19 762 52 q 526 -14 616 -14 q 366 19 439 -14 q 240 113 293 52 q 157 263 186 175 q 128 463 128 351 l 128 525 q 157 724 128 636 q 239 874 186 812 q 365 968 292 936 q 525 1001 437 1001 q 688 968 615 1001 q 813 874 761 936 q 894 724 866 812 q 922 525 922 636 m 793 463 l 793 526 q 775 682 793 614 q 722 796 757 750 q 638 866 688 842 q 525 890 588 890 q 415 866 464 890 q 331 796 366 842 q 277 682 296 750 q 258 526 258 614 l 258 463 q 277 306 258 374 q 331 191 296 237 q 416 121 367 144 q 526 97 465 97 q 640 121 590 97 q 723 191 689 144 q 775 306 758 237 q 793 463 793 374 m -69 783 l -69 795 l 9 1013 l 142 1013 l 142 999 l -9 783 l -69 783 m -266 956 l -266 1013 l -153 1013 l -153 960 q -138 876 -153 911 q -96 810 -124 840 l -145 770 q -235 849 -203 801 q -266 956 -266 898 z "}}'),familyName:"Roboto",ascender:1289,descender:-339,underlinePosition:-102,underlineThickness:68,boundingBox:{yMin:-376,xMin:-1024,yMax:1467,xMax:1596},resolution:1e3,original_font_information:{format:0,copyright:"Copyright 2011 The Roboto Project Authors (https://github.com/googlefonts/roboto-classic)",fontFamily:"Roboto",fontSubfamily:"Regular",uniqueID:"3.009;GOOG;Roboto-Regular",fullName:"Roboto Regular",version:"Version 3.009; 2024",postScriptName:"Roboto-Regular",trademark:"Roboto is a trademark of Google.",manufacturer:"Google",designer:"Christian Robertson",manufacturerURL:"Google.com",designerURL:"Google.com",licence:"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org",licenceURL:"https://openfontlicense.org",unknown1:"Roboto",unknown2:"Weight",unknown3:"Width",unknown4:"Italic",unknown5:"Thin",unknown6:"ExtraLight",unknown7:"Light",unknown8:"Regular",unknown9:"Medium",unknown10:"SemiBold",unknown11:"Bold",unknown12:"ExtraBold",unknown13:"Black",unknown14:"Condensed Thin",unknown15:"Condensed ExtraLight",unknown16:"Condensed Light",unknown17:"Condensed Regular",unknown18:"Condensed Medium",unknown19:"Condensed SemiBold",unknown20:"Condensed Bold",unknown21:"Condensed ExtraBold",unknown22:"Condensed Black",unknown23:"Condensed",unknown24:"Normal",unknown25:"Roman",unknown26:"Roboto-Thin",unknown27:"Roboto-ExtraLight",unknown28:"Roboto-Light",unknown29:"Roboto-Regular",unknown30:"Roboto-Medium",unknown31:"Roboto-SemiBold",unknown32:"Roboto-Bold",unknown33:"Roboto-ExtraBold",unknown34:"Roboto-Black",unknown35:"Roboto-CondensedThin",unknown36:"Roboto-CondensedExtraLight",unknown37:"Roboto-CondensedLight",unknown38:"Roboto-CondensedRegular",unknown39:"Roboto-CondensedMedium",unknown40:"Roboto-CondensedSemiBold",unknown41:"Roboto-CondensedBold",unknown42:"Roboto-CondensedExtraBold",unknown43:"Roboto-CondensedBlack"},cssFontWeight:"normal",cssFontStyle:"normal"};class Sn extends yn{constructor(q,t=8){const l=_n;var e=(new zn).parse(Tn);super(new vn(q,{font:e,size:t,depth:.2,curveSegments:12}).center(),new fn(l))}}const En=10,Nn=18,Cn=4,Mn=t.SRGBColorSpace;class In extends t.Loader{constructor(q){super(q),this.defaultDPI=90,this.defaultUnit="px"}load(q,l,e,n){const i=this,o=new t.FileLoader(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(q,(function(t){try{l(i.parse(t))}catch(e){n?n(e):console.error(e),i.manager.itemError(q)}}),e,n)}parse(q){const l=this;function e(q,t,l,e,i,o,s,a){if(0==t||0==l)return void q.lineTo(a.x,a.y);e=e*Math.PI/180,t=Math.abs(t),l=Math.abs(l);const r=(s.x-a.x)/2,m=(s.y-a.y)/2,h=Math.cos(e)*r+Math.sin(e)*m,c=-Math.sin(e)*r+Math.cos(e)*m;let d=t*t,x=l*l;const u=h*h,p=c*c,g=u/d+p/x;if(g>1){const q=Math.sqrt(g);d=(t*=q)*t,x=(l*=q)*l}const _=d*p+x*u,y=(d*x-_)/_;let f=Math.sqrt(Math.max(0,y));i===o&&(f=-f);const w=f*t*c/l,z=-f*l*h/t,k=Math.cos(e)*w-Math.sin(e)*z+(s.x+a.x)/2,b=Math.sin(e)*w+Math.cos(e)*z+(s.y+a.y)/2,v=n(1,0,(h-w)/t,(c-z)/l),T=n((h-w)/t,(c-z)/l,(-h-w)/t,(-c-z)/l)%(2*Math.PI);q.currentPath.absellipse(k,b,t,l,v,v+T,0===o,e)}function n(q,t,l,e){const n=q*l+t*e,i=Math.sqrt(q*q+t*t)*Math.sqrt(l*l+e*e);let o=Math.acos(Math.max(-1,Math.min(1,n/i)));return q*e-t*l<0&&(o=-o),o}function i(q,t){t=Object.assign({},t);let l={};if(q.hasAttribute("class")){const t=q.getAttribute("class").split(/\s/).filter(Boolean).map((q=>q.trim()));for(let q=0;q<t.length;q++)l=Object.assign(l,p["."+t[q]])}function e(e,n,i){void 0===i&&(i=function(q){return q.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),q}),q.hasAttribute(e)&&(t[n]=i(q.getAttribute(e))),l[e]&&(t[n]=i(l[e])),q.style&&""!==q.style[e]&&(t[n]=i(q.style[e]))}function n(q){return Math.max(0,Math.min(1,m(q)))}function i(q){return Math.max(0,m(q))}return q.hasAttribute("id")&&(l=Object.assign(l,p["#"+q.getAttribute("id")])),e("fill","fill"),e("fill-opacity","fillOpacity",n),e("fill-rule","fillRule"),e("opacity","opacity",n),e("stroke","stroke"),e("stroke-opacity","strokeOpacity",n),e("stroke-width","strokeWidth",i),e("stroke-linejoin","strokeLineJoin"),e("stroke-linecap","strokeLineCap"),e("stroke-miterlimit","strokeMiterLimit",i),e("visibility","visibility"),t}function o(q,t){return q-(t-q)}function s(q,t,l){if("string"!=typeof q)throw new TypeError("Invalid input: "+typeof q);const e={WHITESPACE:/[ \t\r\n]/,DIGIT:/[\d]/,SIGN:/[-+]/,POINT:/\./,COMMA:/,/,EXP:/e/i,FLAGS:/[01]/};let n=0,i=!0,o="",s="";const a=[];function r(q,t,l){const e=new SyntaxError('Unexpected character "'+q+'" at index '+t+".");throw e.partial=l,e}function m(){""!==o&&(""===s?a.push(Number(o)):a.push(Number(o)*Math.pow(10,Number(s)))),o="",s=""}let h;const c=q.length;for(let d=0;d<c;d++)if(h=q[d],Array.isArray(t)&&t.includes(a.length%l)&&e.FLAGS.test(h))n=1,o=h,m();else{if(0===n){if(e.WHITESPACE.test(h))continue;if(e.DIGIT.test(h)||e.SIGN.test(h)){n=1,o=h;continue}if(e.POINT.test(h)){n=2,o=h;continue}e.COMMA.test(h)&&(i&&r(h,d,a),i=!0)}if(1===n){if(e.DIGIT.test(h)){o+=h;continue}if(e.POINT.test(h)){o+=h,n=2;continue}if(e.EXP.test(h)){n=3;continue}e.SIGN.test(h)&&1===o.length&&e.SIGN.test(o[0])&&r(h,d,a)}if(2===n){if(e.DIGIT.test(h)){o+=h;continue}if(e.EXP.test(h)){n=3;continue}e.POINT.test(h)&&"."===o[o.length-1]&&r(h,d,a)}if(3===n){if(e.DIGIT.test(h)){s+=h;continue}if(e.SIGN.test(h)){if(""===s){s+=h;continue}1===s.length&&e.SIGN.test(s)&&r(h,d,a)}}e.WHITESPACE.test(h)?(m(),n=0,i=!1):e.COMMA.test(h)?(m(),n=0,i=!0):e.SIGN.test(h)?(m(),n=1,o=h):e.POINT.test(h)?(m(),n=2,o=h):r(h,d,a)}return m(),a}const a=["mm","cm","in","pt","pc","px"],r={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:12,pc:1,px:-1},px:{px:1}};function m(q){let t,e="px";if("string"==typeof q||q instanceof String)for(let l=0,n=a.length;l<n;l++){const t=a[l];if(q.endsWith(t)){e=t,q=q.substring(0,q.length-t.length);break}}return"px"===e&&"px"!==l.defaultUnit?t=r.in[l.defaultUnit]/l.defaultDPI:(t=r[e][l.defaultUnit],t<0&&(t=r[e].in*l.defaultDPI)),t*parseFloat(q)}function h(q){const t=q.elements;return t[0]*t[4]-t[1]*t[3]<0}function c(q){const t=q.elements,l=t[0]*t[3]+t[1]*t[4];if(0===l)return!1;const e=d(q),n=x(q);return Math.abs(l/(e*n))>Number.EPSILON}function d(q){const t=q.elements;return Math.sqrt(t[0]*t[0]+t[1]*t[1])}function x(q){const t=q.elements;return Math.sqrt(t[3]*t[3]+t[4]*t[4])}const u=[],p={},g=[],_=new t.Matrix3,y=new t.Matrix3,f=new t.Matrix3,w=new t.Matrix3,z=new t.Vector2,k=new t.Vector3,b=new t.Matrix3,v=(new DOMParser).parseFromString(q,"image/svg+xml");!function q(l,n){if(1!==l.nodeType)return;const a=function(q){if(!(q.hasAttribute("transform")||"use"===q.nodeName&&(q.hasAttribute("x")||q.hasAttribute("y"))))return null;const l=function(q){const l=new t.Matrix3,e=_;if("use"===q.nodeName&&(q.hasAttribute("x")||q.hasAttribute("y"))){const t=m(q.getAttribute("x")),e=m(q.getAttribute("y"));l.translate(t,e)}if(q.hasAttribute("transform")){const t=q.getAttribute("transform").split(")");for(let q=t.length-1;q>=0;q--){const n=t[q].trim();if(""===n)continue;const i=n.indexOf("("),o=n.length;if(i>0&&i<o){const q=n.slice(0,i),t=s(n.slice(i+1));switch(e.identity(),q){case"translate":if(t.length>=1){const q=t[0];let l=0;t.length>=2&&(l=t[1]),e.translate(q,l)}break;case"rotate":if(t.length>=1){let q=0,l=0,n=0;q=t[0]*Math.PI/180,t.length>=3&&(l=t[1],n=t[2]),y.makeTranslation(-l,-n),f.makeRotation(q),w.multiplyMatrices(f,y),y.makeTranslation(l,n),e.multiplyMatrices(y,w)}break;case"scale":if(t.length>=1){const q=t[0];let l=q;t.length>=2&&(l=t[1]),e.scale(q,l)}break;case"skewX":1===t.length&&e.set(1,Math.tan(t[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":1===t.length&&e.set(1,0,0,Math.tan(t[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":6===t.length&&e.set(t[0],t[2],t[4],t[1],t[3],t[5],0,0,1)}}l.premultiply(e)}}return l}(q);g.length>0&&l.premultiply(g[g.length-1]);return b.copy(l),g.push(l),l}(l);let r=!1,v=null;switch(l.nodeName){case"svg":case"g":n=i(l,n);break;case"style":!function(q){if(!q.sheet||!q.sheet.cssRules||!q.sheet.cssRules.length)return;for(let t=0;t<q.sheet.cssRules.length;t++){const l=q.sheet.cssRules[t];if(1!==l.type)continue;const e=l.selectorText.split(/,/gm).filter(Boolean).map((q=>q.trim()));for(let q=0;q<e.length;q++){const t=Object.fromEntries(Object.entries(l.style).filter((([,q])=>""!==q)));p[e[q]]=Object.assign(p[e[q]]||{},t)}}}(l);break;case"path":n=i(l,n),l.hasAttribute("d")&&(v=function(q){const l=new t.ShapePath,n=new t.Vector2,i=new t.Vector2,a=new t.Vector2;let r=!0,m=!1;const h=q.getAttribute("d");if(""===h||"none"===h)return null;const c=h.match(/[a-df-z][^a-df-z]*/gi);for(let t=0,d=c.length;t<d;t++){const q=c[t],h=q.charAt(0),d=q.slice(1).trim();let x;switch(!0===r&&(m=!0,r=!1),h){case"M":x=s(d);for(let q=0,t=x.length;q<t;q+=2)n.x=x[q+0],n.y=x[q+1],i.x=n.x,i.y=n.y,0===q?l.moveTo(n.x,n.y):l.lineTo(n.x,n.y),0===q&&a.copy(n);break;case"H":x=s(d);for(let q=0,t=x.length;q<t;q++)n.x=x[q],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"V":x=s(d);for(let q=0,t=x.length;q<t;q++)n.y=x[q],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"L":x=s(d);for(let q=0,t=x.length;q<t;q+=2)n.x=x[q+0],n.y=x[q+1],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"C":x=s(d);for(let q=0,t=x.length;q<t;q+=6)l.bezierCurveTo(x[q+0],x[q+1],x[q+2],x[q+3],x[q+4],x[q+5]),i.x=x[q+2],i.y=x[q+3],n.x=x[q+4],n.y=x[q+5],0===q&&!0===m&&a.copy(n);break;case"S":x=s(d);for(let q=0,t=x.length;q<t;q+=4)l.bezierCurveTo(o(n.x,i.x),o(n.y,i.y),x[q+0],x[q+1],x[q+2],x[q+3]),i.x=x[q+0],i.y=x[q+1],n.x=x[q+2],n.y=x[q+3],0===q&&!0===m&&a.copy(n);break;case"Q":x=s(d);for(let q=0,t=x.length;q<t;q+=4)l.quadraticCurveTo(x[q+0],x[q+1],x[q+2],x[q+3]),i.x=x[q+0],i.y=x[q+1],n.x=x[q+2],n.y=x[q+3],0===q&&!0===m&&a.copy(n);break;case"T":x=s(d);for(let q=0,t=x.length;q<t;q+=2){const t=o(n.x,i.x),e=o(n.y,i.y);l.quadraticCurveTo(t,e,x[q+0],x[q+1]),i.x=t,i.y=e,n.x=x[q+0],n.y=x[q+1],0===q&&!0===m&&a.copy(n)}break;case"A":x=s(d,[3,4],7);for(let q=0,t=x.length;q<t;q+=7){if(x[q+5]==n.x&&x[q+6]==n.y)continue;const t=n.clone();n.x=x[q+5],n.y=x[q+6],i.x=n.x,i.y=n.y,e(l,x[q],x[q+1],x[q+2],x[q+3],x[q+4],t,n),0===q&&!0===m&&a.copy(n)}break;case"m":x=s(d);for(let q=0,t=x.length;q<t;q+=2)n.x+=x[q+0],n.y+=x[q+1],i.x=n.x,i.y=n.y,0===q?l.moveTo(n.x,n.y):l.lineTo(n.x,n.y),0===q&&a.copy(n);break;case"h":x=s(d);for(let q=0,t=x.length;q<t;q++)n.x+=x[q],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"v":x=s(d);for(let q=0,t=x.length;q<t;q++)n.y+=x[q],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"l":x=s(d);for(let q=0,t=x.length;q<t;q+=2)n.x+=x[q+0],n.y+=x[q+1],i.x=n.x,i.y=n.y,l.lineTo(n.x,n.y),0===q&&!0===m&&a.copy(n);break;case"c":x=s(d);for(let q=0,t=x.length;q<t;q+=6)l.bezierCurveTo(n.x+x[q+0],n.y+x[q+1],n.x+x[q+2],n.y+x[q+3],n.x+x[q+4],n.y+x[q+5]),i.x=n.x+x[q+2],i.y=n.y+x[q+3],n.x+=x[q+4],n.y+=x[q+5],0===q&&!0===m&&a.copy(n);break;case"s":x=s(d);for(let q=0,t=x.length;q<t;q+=4)l.bezierCurveTo(o(n.x,i.x),o(n.y,i.y),n.x+x[q+0],n.y+x[q+1],n.x+x[q+2],n.y+x[q+3]),i.x=n.x+x[q+0],i.y=n.y+x[q+1],n.x+=x[q+2],n.y+=x[q+3],0===q&&!0===m&&a.copy(n);break;case"q":x=s(d);for(let q=0,t=x.length;q<t;q+=4)l.quadraticCurveTo(n.x+x[q+0],n.y+x[q+1],n.x+x[q+2],n.y+x[q+3]),i.x=n.x+x[q+0],i.y=n.y+x[q+1],n.x+=x[q+2],n.y+=x[q+3],0===q&&!0===m&&a.copy(n);break;case"t":x=s(d);for(let q=0,t=x.length;q<t;q+=2){const t=o(n.x,i.x),e=o(n.y,i.y);l.quadraticCurveTo(t,e,n.x+x[q+0],n.y+x[q+1]),i.x=t,i.y=e,n.x=n.x+x[q+0],n.y=n.y+x[q+1],0===q&&!0===m&&a.copy(n)}break;case"a":x=s(d,[3,4],7);for(let q=0,t=x.length;q<t;q+=7){if(0==x[q+5]&&0==x[q+6])continue;const t=n.clone();n.x+=x[q+5],n.y+=x[q+6],i.x=n.x,i.y=n.y,e(l,x[q],x[q+1],x[q+2],x[q+3],x[q+4],t,n),0===q&&!0===m&&a.copy(n)}break;case"Z":case"z":l.currentPath.autoClose=!0,l.currentPath.curves.length>0&&(n.copy(a),l.currentPath.currentPoint.copy(n),r=!0);break;default:console.warn(q)}m=!1}return l}(l));break;case"rect":n=i(l,n),v=function(q){const l=m(q.getAttribute("x")||0),e=m(q.getAttribute("y")||0),n=m(q.getAttribute("rx")||q.getAttribute("ry")||0),i=m(q.getAttribute("ry")||q.getAttribute("rx")||0),o=m(q.getAttribute("width")),s=m(q.getAttribute("height")),a=.448084975506,r=new t.ShapePath;r.moveTo(l+n,e),r.lineTo(l+o-n,e),(0!==n||0!==i)&&r.bezierCurveTo(l+o-n*a,e,l+o,e+i*a,l+o,e+i);r.lineTo(l+o,e+s-i),(0!==n||0!==i)&&r.bezierCurveTo(l+o,e+s-i*a,l+o-n*a,e+s,l+o-n,e+s);r.lineTo(l+n,e+s),(0!==n||0!==i)&&r.bezierCurveTo(l+n*a,e+s,l,e+s-i*a,l,e+s-i);r.lineTo(l,e+i),(0!==n||0!==i)&&r.bezierCurveTo(l,e+i*a,l+n*a,e,l+n,e);return r}(l);break;case"polygon":n=i(l,n),v=function(q){function l(q,t,l){const e=m(t),o=m(l);0===i?n.moveTo(e,o):n.lineTo(e,o),i++}const e=/([+-]?\d*\.?\d+(?:e[+-]?\d+)?)(?:,|\s)([+-]?\d*\.?\d+(?:e[+-]?\d+)?)/g,n=new t.ShapePath;let i=0;return q.getAttribute("points").replace(e,l),n.currentPath.autoClose=!0,n}(l);break;case"polyline":n=i(l,n),v=function(q){function l(q,t,l){const e=m(t),o=m(l);0===i?n.moveTo(e,o):n.lineTo(e,o),i++}const e=/([+-]?\d*\.?\d+(?:e[+-]?\d+)?)(?:,|\s)([+-]?\d*\.?\d+(?:e[+-]?\d+)?)/g,n=new t.ShapePath;let i=0;return q.getAttribute("points").replace(e,l),n.currentPath.autoClose=!1,n}(l);break;case"circle":n=i(l,n),v=function(q){const l=m(q.getAttribute("cx")||0),e=m(q.getAttribute("cy")||0),n=m(q.getAttribute("r")||0),i=new t.Path;i.absarc(l,e,n,0,2*Math.PI);const o=new t.ShapePath;return o.subPaths.push(i),o}(l);break;case"ellipse":n=i(l,n),v=function(q){const l=m(q.getAttribute("cx")||0),e=m(q.getAttribute("cy")||0),n=m(q.getAttribute("rx")||0),i=m(q.getAttribute("ry")||0),o=new t.Path;o.absellipse(l,e,n,i,0,2*Math.PI);const s=new t.ShapePath;return s.subPaths.push(o),s}(l);break;case"line":n=i(l,n),v=function(q){const l=m(q.getAttribute("x1")||0),e=m(q.getAttribute("y1")||0),n=m(q.getAttribute("x2")||0),i=m(q.getAttribute("y2")||0),o=new t.ShapePath;return o.moveTo(l,e),o.lineTo(n,i),o.currentPath.autoClose=!1,o}(l);break;case"defs":r=!0;break;case"use":n=i(l,n);const a=(l.getAttributeNS("http://www.w3.org/1999/xlink","href")||"").substring(1),h=l.viewportElement.getElementById(a);h?q(h,n):console.warn("SVGLoader: 'use node' references non-existent node id: "+a)}v&&(void 0!==n.fill&&"none"!==n.fill&&v.color.setStyle(n.fill,Mn),function(q,l){function e(q){k.set(q.x,q.y,1).applyMatrix3(l),q.set(k.x,k.y)}function n(q){const e=q.xRadius,n=q.yRadius,i=Math.cos(q.aRotation),o=Math.sin(q.aRotation),s=new t.Vector3(e*i,e*o,0),a=new t.Vector3(-n*o,n*i,0),r=s.applyMatrix3(l),m=a.applyMatrix3(l),c=_.set(r.x,m.x,0,r.y,m.y,0,0,0,1),d=y.copy(c).invert(),x=f.copy(d).transpose().multiply(d).elements,u=function(q,t,l){let e,n,i,o,s;const a=q+l,r=q-l,m=Math.sqrt(r*r+4*t*t);a>0?(e=.5*(a+m),s=1/e,n=q*s*l-t*s*t):a<0?n=.5*(a-m):(e=.5*m,n=-.5*m);i=r>0?r+m:r-m;Math.abs(i)>2*Math.abs(t)?(s=-2*t/i,o=1/Math.sqrt(1+s*s),i=s*o):0===Math.abs(t)?(i=1,o=0):(s=-.5*i/t,i=1/Math.sqrt(1+s*s),o=s*i);r>0&&(s=i,i=-o,o=s);return{rt1:e,rt2:n,cs:i,sn:o}}(x[0],x[1],x[4]),p=Math.sqrt(u.rt1),g=Math.sqrt(u.rt2);q.xRadius=1/p,q.yRadius=1/g,q.aRotation=Math.atan2(u.sn,u.cs);if(!((q.aEndAngle-q.aStartAngle)%(2*Math.PI)<Number.EPSILON)){const e=y.set(p,0,0,0,g,0,0,0,1),n=f.set(u.cs,u.sn,0,-u.sn,u.cs,0,0,0,1),i=e.multiply(n).multiply(c),o=q=>{const{x:l,y:e}=new t.Vector3(Math.cos(q),Math.sin(q),0).applyMatrix3(i);return Math.atan2(e,l)};q.aStartAngle=o(q.aStartAngle),q.aEndAngle=o(q.aEndAngle),h(l)&&(q.aClockwise=!q.aClockwise)}}function i(q){const t=d(l),e=x(l);q.xRadius*=t,q.yRadius*=e;const n=t>Number.EPSILON?Math.atan2(l.elements[1],l.elements[0]):Math.atan2(-l.elements[3],l.elements[4]);q.aRotation+=n,h(l)&&(q.aStartAngle*=-1,q.aEndAngle*=-1,q.aClockwise=!q.aClockwise)}const o=q.subPaths;for(let t=0,s=o.length;t<s;t++){const q=o[t].curves;for(let t=0;t<q.length;t++){const o=q[t];o.isLineCurve?(e(o.v1),e(o.v2)):o.isCubicBezierCurve?(e(o.v0),e(o.v1),e(o.v2),e(o.v3)):o.isQuadraticBezierCurve?(e(o.v0),e(o.v1),e(o.v2)):o.isEllipseCurve&&(z.set(o.aX,o.aY),e(z),o.aX=z.x,o.aY=z.y,c(l)?n(o):i(o))}}}(v,b),u.push(v),v.userData={node:l,style:n});const T=l.childNodes;for(let t=0;t<T.length;t++){const l=T[t];r&&"style"!==l.nodeName&&"defs"!==l.nodeName||q(l,n)}a&&(g.pop(),g.length>0?b.copy(g[g.length-1]):b.identity())}(v.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4});return{paths:u,xml:v.documentElement}}static createShapes(q){const l=999999999,e=0,n=1,i=2,o=3,s=4,a=5,r=6,m={loc:e,t:0};function h(q,t,l,n){const o=q.x,s=t.x,a=l.x,r=n.x,h=q.y,d=t.y,x=l.y,u=n.y,p=(r-a)*(h-x)-(u-x)*(o-a),g=(u-x)*(s-o)-(r-a)*(d-h),_=p/g,y=((s-o)*(h-x)-(d-h)*(o-a))/g;if(0===g&&0!==p||_<=0||_>=1||y<0||y>1)return null;if(0===p&&0===g){for(let a=0;a<2;a++){if(c(0===a?l:n,q,t),m.loc==e){const q=0===a?l:n;return{x:q.x,y:q.y,t:m.t}}if(m.loc==i){return{x:+(o+m.t*(s-o)).toPrecision(10),y:+(h+m.t*(d-h)).toPrecision(10),t:m.t}}}return null}for(let i=0;i<2;i++)if(c(0===i?l:n,q,t),m.loc==e){const q=0===i?l:n;return{x:q.x,y:q.y,t:m.t}}return{x:+(o+_*(s-o)).toPrecision(10),y:+(h+_*(d-h)).toPrecision(10),t:_}}function c(q,t,l){const h=l.x-t.x,c=l.y-t.y,d=q.x-t.x,x=q.y-t.y,u=h*x-d*c;if(q.x===t.x&&q.y===t.y)return m.loc=e,void(m.t=0);if(q.x===l.x&&q.y===l.y)return m.loc=n,void(m.t=1);if(u<-Number.EPSILON)return void(m.loc=o);if(u>Number.EPSILON)return void(m.loc=s);if(h*d<0||c*x<0)return void(m.loc=a);if(Math.sqrt(h*h+c*c)<Math.sqrt(d*d+x*x))return void(m.loc=r);let p;p=0!==h?d/h:x/c,m.loc=i,m.t=p}function d(q,l,e){const n=new t.Vector2;l.getCenter(n);const i=[];return e.forEach((l=>{if(l.boundingBox.containsPoint(n)){(function(q,l){const e=[],n=[];for(let i=1;i<q.length;i++){const o=q[i-1],s=q[i];for(let q=1;q<l.length;q++){const i=h(o,s,l[q-1],l[q]);null!==i&&void 0===e.find((q=>q.t<=i.t+Number.EPSILON&&q.t>=i.t-Number.EPSILON))&&(e.push(i),n.push(new t.Vector2(i.x,i.y)))}}return n})(q,l.points).forEach((q=>{i.push({identifier:l.identifier,isCW:l.isCW,point:q})}))}})),i.sort(((q,t)=>q.point.x-t.point.x)),i}let x=l,u=-999999999,p=q.subPaths.map((q=>{const e=q.getPoints();let n=-999999999,i=l,o=-999999999,s=l;for(let t=0;t<e.length;t++){const q=e[t];q.y>n&&(n=q.y),q.y<i&&(i=q.y),q.x>o&&(o=q.x),q.x<s&&(s=q.x)}return u<=o&&(u=o+1),x>=s&&(x=s-1),{curves:q.curves,points:e,isCW:t.ShapeUtils.isClockWise(e),identifier:-1,boundingBox:new t.Box2(new t.Vector2(s,i),new t.Vector2(o,n))}}));p=p.filter((q=>q.points.length>1));for(let t=0;t<p.length;t++)p[t].identifier=t;const g=p.map((l=>function(q,l,e,n,i){null!=i&&""!==i||(i="nonzero");const o=new t.Vector2;q.boundingBox.getCenter(o);const s=d([new t.Vector2(e,o.y),new t.Vector2(n,o.y)],q.boundingBox,l);s.sort(((q,t)=>q.point.x-t.point.x));const a=[],r=[];s.forEach((t=>{t.identifier===q.identifier?a.push(t):r.push(t)}));const m=a[0].point.x,h=[];let c=0;for(;c<r.length&&r[c].point.x<m;)h.length>0&&h[h.length-1]===r[c].identifier?h.pop():h.push(r[c].identifier),c++;if(h.push(q.identifier),"evenodd"===i){const t=h.length%2==0,l=h[h.length-2];return{identifier:q.identifier,isHole:t,for:l}}if("nonzero"===i){let t=!0,e=null,n=null;for(let q=0;q<h.length;q++){const i=h[q];t?(n=l[i].isCW,t=!1,e=i):n!==l[i].isCW&&(n=l[i].isCW,t=!0)}return{identifier:q.identifier,isHole:t,for:e}}console.warn('fill-rule: "'+i+'" is currently not implemented.')}(l,p,x,u,q.userData?q.userData.style.fillRule:void 0))),_=[];return p.forEach((q=>{if(!g[q.identifier].isHole){const l=new t.Shape;l.curves=q.curves;g.filter((t=>t.isHole&&t.for===q.identifier)).forEach((q=>{const e=p[q.identifier],n=new t.Path;n.curves=e.curves,l.holes.push(n)})),_.push(l)}})),_}static getStrokeStyle(q,t,l,e,n){return{strokeColor:t=void 0!==t?t:"#000",strokeWidth:q=void 0!==q?q:1,strokeLineJoin:l=void 0!==l?l:"miter",strokeLineCap:e=void 0!==e?e:"butt",strokeMiterLimit:n=void 0!==n?n:4}}static pointsToStroke(q,l,e,n){const i=[],o=[],s=[];if(0===In.pointsToStrokeWithBuffers(q,l,e,n,i,o,s))return null;const a=new t.BufferGeometry;return a.setAttribute("position",new t.Float32BufferAttribute(i,3)),a.setAttribute("normal",new t.Float32BufferAttribute(o,3)),a.setAttribute("uv",new t.Float32BufferAttribute(s,2)),a}static pointsToStrokeWithBuffers(q,l,e,n,i,o,s,a){const r=new t.Vector2,m=new t.Vector2,h=new t.Vector2,c=new t.Vector2,d=new t.Vector2,x=new t.Vector2,u=new t.Vector2,p=new t.Vector2,g=new t.Vector2,_=new t.Vector2,y=new t.Vector2,f=new t.Vector2,w=new t.Vector2,z=new t.Vector2,k=new t.Vector2,b=new t.Vector2,v=new t.Vector2;e=void 0!==e?e:12,n=void 0!==n?n:.001,a=void 0!==a?a:0;const T=(q=function(q){let t=!1;for(let e=1,i=q.length-1;e<i;e++)if(q[e].distanceTo(q[e+1])<n){t=!0;break}if(!t)return q;const l=[];l.push(q[0]);for(let e=1,i=q.length-1;e<i;e++)q[e].distanceTo(q[e+1])>=n&&l.push(q[e]);return l.push(q[q.length-1]),l}(q)).length;if(T<2)return 0;const S=q[0].equals(q[T-1]);let E,N,C=q[0];const M=l.strokeWidth/2,I=1/(T-1);let L,A,P,D,B=0,R=!1,O=0,F=3*a,j=2*a;V(q[0],q[1],r).multiplyScalar(M),p.copy(q[0]).sub(r),g.copy(q[0]).add(r),_.copy(p),y.copy(g);for(let t=1;t<T;t++){E=q[t],N=t===T-1?S?q[1]:void 0:q[t+1];const e=r;if(V(C,E,e),h.copy(e).multiplyScalar(M),f.copy(E).sub(h),w.copy(E).add(h),L=B+I,A=!1,void 0!==N){V(E,N,m),h.copy(m).multiplyScalar(M),z.copy(E).sub(h),k.copy(E).add(h),P=!0,h.subVectors(N,C),e.dot(h)<0&&(P=!1),1===t&&(R=P),h.subVectors(N,E),h.normalize();const q=Math.abs(e.dot(h));if(q>Number.EPSILON){const t=M/q;h.multiplyScalar(-t),c.subVectors(E,C),d.copy(c).setLength(t).add(h),b.copy(d).negate();const e=d.length(),n=c.length();c.divideScalar(n),x.subVectors(N,E);const i=x.length();switch(x.divideScalar(i),c.dot(b)<n&&x.dot(b)<i&&(A=!0),v.copy(d).add(E),b.add(E),D=!1,A?P?(k.copy(b),w.copy(b)):(z.copy(b),f.copy(b)):W(),l.strokeLineJoin){case"bevel":Z(P,A,L);break;case"round":H(P,A),P?G(E,f,z,L,0):G(E,k,w,L,1);break;default:const q=M*l.strokeMiterLimit/e;if(q<1){if("miter-clip"!==l.strokeLineJoin){Z(P,A,L);break}H(P,A),P?(x.subVectors(v,f).multiplyScalar(q).add(f),u.subVectors(v,z).multiplyScalar(q).add(z),U(f,L,0),U(x,L,0),U(E,L,.5),U(E,L,.5),U(x,L,0),U(u,L,0),U(E,L,.5),U(u,L,0),U(z,L,0)):(x.subVectors(v,w).multiplyScalar(q).add(w),u.subVectors(v,k).multiplyScalar(q).add(k),U(w,L,1),U(x,L,1),U(E,L,.5),U(E,L,.5),U(x,L,1),U(u,L,1),U(E,L,.5),U(u,L,1),U(k,L,1))}else A?(P?(U(g,B,1),U(p,B,0),U(v,L,0),U(g,B,1),U(v,L,0),U(b,L,1)):(U(g,B,1),U(p,B,0),U(v,L,1),U(p,B,0),U(b,L,0),U(v,L,1)),P?z.copy(v):k.copy(v)):P?(U(f,L,0),U(v,L,0),U(E,L,.5),U(E,L,.5),U(v,L,0),U(z,L,0)):(U(w,L,1),U(v,L,1),U(E,L,.5),U(E,L,.5),U(v,L,1),U(k,L,1)),D=!0}}else W()}else W();S||t!==T-1||X(q[0],_,y,P,!0,B),B=L,C=E,p.copy(z),g.copy(k)}if(S){if(A&&i){let q=v,t=b;R!==P&&(q=b,t=v),P?(D||R)&&(t.toArray(i,0),t.toArray(i,9),D&&q.toArray(i,3)):!D&&R||(t.toArray(i,3),t.toArray(i,9),D&&q.toArray(i,0))}}else X(E,f,w,P,!1,L);return O;function V(q,t,l){return l.subVectors(t,q),l.set(-l.y,l.x).normalize()}function U(q,t,l){i&&(i[F]=q.x,i[F+1]=q.y,i[F+2]=0,o&&(o[F]=0,o[F+1]=0,o[F+2]=1),F+=3,s&&(s[j]=t,s[j+1]=l,j+=2)),O+=3}function G(q,t,l,n,i){r.copy(t).sub(q).normalize(),m.copy(l).sub(q).normalize();let o=Math.PI;const s=r.dot(m);Math.abs(s)<1&&(o=Math.abs(Math.acos(s))),o/=e,h.copy(t);for(let a=0,r=e-1;a<r;a++)c.copy(h).rotateAround(q,o),U(h,n,i),U(c,n,i),U(q,n,.5),h.copy(c);U(c,n,i),U(l,n,i),U(q,n,.5)}function W(){U(g,B,1),U(p,B,0),U(f,L,0),U(g,B,1),U(f,L,0),U(w,L,1)}function Z(q,t,l){t?q?(U(g,B,1),U(p,B,0),U(f,L,0),U(g,B,1),U(f,L,0),U(b,L,1),U(f,l,0),U(z,l,0),U(b,l,.5)):(U(g,B,1),U(p,B,0),U(w,L,1),U(p,B,0),U(b,L,0),U(w,L,1),U(w,l,1),U(b,l,0),U(k,l,1)):q?(U(f,l,0),U(z,l,0),U(E,l,.5)):(U(w,l,1),U(k,l,0),U(E,l,.5))}function H(q,t){t&&(q?(U(g,B,1),U(p,B,0),U(f,L,0),U(g,B,1),U(f,L,0),U(b,L,1),U(f,B,0),U(E,L,.5),U(b,L,1),U(E,L,.5),U(z,B,0),U(b,L,1)):(U(g,B,1),U(p,B,0),U(w,L,1),U(p,B,0),U(b,L,0),U(w,L,1),U(w,B,1),U(b,L,0),U(E,L,.5),U(E,L,.5),U(b,L,0),U(k,B,1)))}function X(q,t,e,n,o,a){switch(l.strokeLineCap){case"round":o?G(q,e,t,a,.5):G(q,t,e,a,.5);break;case"square":if(o)r.subVectors(t,q),m.set(r.y,-r.x),h.addVectors(r,m).add(q),c.subVectors(m,r).add(q),n?(h.toArray(i,3),c.toArray(i,0),c.toArray(i,9)):(h.toArray(i,3),1===s[7]?c.toArray(i,9):h.toArray(i,9),c.toArray(i,0));else{r.subVectors(e,q),m.set(r.y,-r.x),h.addVectors(r,m).add(q),c.subVectors(m,r).add(q);const t=i.length;n?(h.toArray(i,t-3),c.toArray(i,t-6),c.toArray(i,t-12)):(c.toArray(i,t-6),h.toArray(i,t-3),c.toArray(i,t-12))}}}}}function Ln(q){let l,e,n,i=-1,o=0;for(let t=0;t<q.length;++t){const s=q[t];if(void 0===l&&(l=s.array.constructor),l!==s.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===e&&(e=s.itemSize),e!==s.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===n&&(n=s.normalized),n!==s.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(-1===i&&(i=s.gpuType),i!==s.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;o+=s.count*e}const s=new l(o),a=new t.BufferAttribute(s,e,n);let r=0;for(let t=0;t<q.length;++t){const l=q[t];if(l.isInterleavedBufferAttribute){const q=r/e;for(let t=0,n=l.count;t<n;t++)for(let i=0;i<e;i++){const e=l.getComponent(t,i);a.setComponent(t+q,i,e)}}else s.set(l.array,r);r+=l.count*e}return void 0!==i&&(a.gpuType=i),a}class An extends yn{static getGeometries(q,l){let n=(new In).parse(q);console.log("SVG data:",n);let i=[];n.paths.forEach((q=>{const t=q.userData.style.fill;if(void 0!==t&&"none"!==t){In.createShapes(q).forEach((q=>{let t=new e.ShapeGeometry(q);null!==t.index&&(t=t.toNonIndexed()),i.push(t)}))}const l=q.userData.style.stroke;void 0!==l&&"none"!==l&&q.subPaths.forEach((t=>{let l=In.pointsToStroke(t.getPoints(),q.userData.style);l&&(null!==l.index&&(l=l.toNonIndexed()),i.push(l))}))}));const o=function(q,l=!1){const e=null!==q[0].index,n=new Set(Object.keys(q[0].attributes)),i=new Set(Object.keys(q[0].morphAttributes)),o={},s={},a=q[0].morphTargetsRelative,r=new t.BufferGeometry;let m=0;for(let t=0;t<q.length;++t){const h=q[t];let c=0;if(e!==(null!==h.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const q in h.attributes){if(!n.has(q))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+'. All geometries must have compatible attributes; make sure "'+q+'" attribute exists among all geometries, or in none of them.'),null;void 0===o[q]&&(o[q]=[]),o[q].push(h.attributes[q]),c++}if(c!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const q in h.morphAttributes){if(!i.has(q))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===s[q]&&(s[q]=[]),s[q].push(h.morphAttributes[q])}if(l){let q;if(e)q=h.index.count;else{if(void 0===h.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+t+". The geometry must have either an index or a position attribute"),null;q=h.attributes.position.count}r.addGroup(m,q,t),m+=q}}if(e){let t=0;const l=[];for(let e=0;e<q.length;++e){const n=q[e].index;for(let q=0;q<n.count;++q)l.push(n.getX(q)+t);t+=q[e].attributes.position.count}r.setIndex(l)}for(const t in o){const q=Ln(o[t]);if(!q)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+t+" attribute."),null;r.setAttribute(t,q)}for(const t in s){const q=s[t][0].length;if(0===q)break;r.morphAttributes=r.morphAttributes||{},r.morphAttributes[t]=[];for(let l=0;l<q;++l){const q=[];for(let n=0;n<s[t].length;++n)q.push(s[t][n][l]);const e=Ln(q);if(!e)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+t+" morphAttribute."),null;r.morphAttributes[t].push(e)}}return r}(i,!1);o.applyMatrix4((new e.Matrix4).makeRotationX(Math.PI)),o.computeBoundingBox();const s=o.boundingBox,a=Math.max(s.max.x-s.min.x,s.max.y-s.min.y);console.log("Icon bounding box maxDimension:",a);const r=l/a;o.computeBoundingSphere();const m=o.boundingSphere;return console.log("Icon bounding sphere:",m),o.scale(r,r,1),o.center(),o}constructor(q,t=Nn){const l=_n;super(An.getGeometries(q,t),new fn(l)),console.log("IconShape size:",this.getSize())}}class Pn extends e.MeshPhongMaterial{constructor(q){super({color:q,opacity:.5,transparent:!0,shininess:60,specular:6710886,emissive:4473924,emissiveIntensity:.6})}}const Dn={steps:2,depth:5,bevelEnabled:!0,bevelThickness:.025,bevelSize:.075,bevelOffset:0,bevelSegments:1},Bn=[new e.Color(16007990),new e.Color(15277667),new e.Color(10233776),new e.Color(6765239),new e.Color(4149685),new e.Color(2201331),new e.Color(240116),new e.Color(48340),new e.Color(38536),new e.Color(5025616),new e.Color(9159498),new e.Color(13491257),new e.Color(16771899),new e.Color(16761095),new e.Color(16750592),new e.Color(16733986),new e.Color(7951688),new e.Color(10395294),new e.Color(6323595)];class Rn extends yn{constructor(q,t,l){if(!(q instanceof e.Shape))throw new TypeError("shape must be an instance of THREE.Shape");const n=void 0!==l?l:Bn[Math.floor(Math.random()*Bn.length)],i=void 0!==t?t:Math.floor(10*Math.random())+1,o={...Dn,depth:i};super(new e.ExtrudeGeometry(q,o),new Pn(n))}}const On=1,Fn=10,jn=8.5,Vn=6,Un=14;class Gn extends yn{constructor(q){const t=Fn,l=jn,n=Vn,i=Un,o=On/2,s=gn,a=pn;var r=new e.Shape;q[0].y==q[1].y&&q[0].x<q[1].x&&(r.moveTo(q[0].x,q[0].y+o),r.lineTo(q[0].x,q[0].y-o)),q[0].y==q[1].y&&q[0].x>q[1].x&&(r.moveTo(q[0].x,q[0].y-o),r.lineTo(q[0].x,q[0].y+o)),q[0].x==q[1].x&&q[0].y<q[1].y&&(r.moveTo(q[0].x-o,q[0].y),r.lineTo(q[0].x+o,q[0].y)),q[0].x==q[1].x&&q[0].y>q[1].y&&(r.moveTo(q[0].x+o,q[0].y),r.lineTo(q[0].x-o,q[0].y));for(var m=1;m<q.length-1;m++)q[m-1].y==q[m].y&&(q[m-1].x<q[m].x?q[m].y<q[m+1].y?(r.lineTo(q[m].x+o-t,q[m].y-o),r.quadraticCurveTo(q[m].x+o,q[m].y-o,q[m].x+o,q[m].y-o+t)):(r.lineTo(q[m].x-o-l,q[m].y-o),r.quadraticCurveTo(q[m].x-o,q[m].y-o,q[m].x-o,q[m].y-o-l)):q[m].y<q[m+1].y?(r.lineTo(q[m].x+o+l,q[m].y+o),r.quadraticCurveTo(q[m].x+o,q[m].y+o,q[m].x+o,q[m].y+o+l)):(r.lineTo(q[m].x-o+t,q[m].y+o),r.quadraticCurveTo(q[m].x-o,q[m].y-o,q[m].x-o,q[m].y+o-t))),q[m-1].x==q[m].x&&(q[m-1].y<q[m].y?q[m].x<q[m+1].x?(r.lineTo(q[m].x+o,q[m].y-o-l),r.quadraticCurveTo(q[m].x+o,q[m].y-o,q[m].x+o+l,q[m].y-o)):(r.lineTo(q[m].x+o,q[m].y+o-t),r.quadraticCurveTo(q[m].x+o,q[m].y+o,q[m].x+o-t,q[m].y+o)):q[m].x<q[m+1].x?(r.lineTo(q[m].x-o,q[m].y-o+t),r.quadraticCurveTo(q[m].x-o,q[m].y-o,q[m].x-o+t,q[m].y-o)):(r.lineTo(q[m].x-o,q[m].y+o+l),r.quadraticCurveTo(q[m].x-o,q[m].y+o,q[m].x-o-l,q[m].y+o)));q[q.length-2].y==q[q.length-1].y&&q[q.length-2].x<q[q.length-1].x&&(r.lineTo(q[q.length-1].x-i,q[q.length-1].y-o),r.lineTo(q[q.length-1].x-i,q[q.length-1].y-n),r.lineTo(q[q.length-1].x,q[q.length-1].y),r.lineTo(q[q.length-1].x-i,q[q.length-1].y+n),r.lineTo(q[q.length-1].x-i,q[q.length-1].y+o)),q[q.length-2].y==q[q.length-1].y&&q[q.length-2].x>q[q.length-1].x&&(r.lineTo(q[q.length-1].x+i,q[q.length-1].y+o),r.lineTo(q[q.length-1].x+i,q[q.length-1].y+n),r.lineTo(q[q.length-1].x,q[q.length-1].y),r.lineTo(q[q.length-1].x+i,q[q.length-1].y-n),r.lineTo(q[q.length-1].x+i,q[q.length-1].y-o)),q[q.length-2].x==q[q.length-1].x&&q[q.length-2].y<q[q.length-1].y&&(r.lineTo(q[q.length-1].x+o,q[q.length-1].y-i),r.lineTo(q[q.length-1].x+n,q[q.length-1].y-i),r.lineTo(q[q.length-1].x,q[q.length-1].y),r.lineTo(q[q.length-1].x-n,q[q.length-1].y-i),r.lineTo(q[q.length-1].x-o,q[q.length-1].y-i)),q[q.length-2].x==q[q.length-1].x&&q[q.length-2].y>q[q.length-1].y&&(r.lineTo(q[q.length-1].x-o,q[q.length-1].y+32*i/35),r.lineTo(q[q.length-1].x-n,q[q.length-1].y+32*i/35),r.lineTo(q[q.length-1].x,q[q.length-1].y),r.lineTo(q[q.length-1].x+n,q[q.length-1].y+32*i/35),r.lineTo(q[q.length-1].x+o,q[q.length-1].y+32*i/35));for(m=q.length-2;m>0;m--)q[m+1].y==q[m].y&&(q[m+1].x<q[m].x?q[m].y<q[m-1].y?(r.lineTo(q[m].x+o-l,q[m].y-o),r.quadraticCurveTo(q[m].x+o,q[m].y-o,q[m].x+o,q[m].y-o+l)):(r.lineTo(q[m].x-o-l,q[m].y-o),r.quadraticCurveTo(q[m].x-o,q[m].y-o,q[m].x-o,q[m].y-o-l)):q[m].y<q[m-1].y?(r.lineTo(q[m].x+o+l,q[m].y+o),r.quadraticCurveTo(q[m].x+o,q[m].y+o,q[m].x+o,q[m].y+o+l)):(r.lineTo(q[m].x-o+t,q[m].y+o),r.quadraticCurveTo(q[m].x-o,q[m].y+o,q[m].x-o,q[m].y+o-t))),q[m+1].x==q[m].x&&(q[m+1].y<q[m].y?q[m].x<q[m-1].x?(r.lineTo(q[m].x+o,q[m].y-o-l),r.quadraticCurveTo(q[m].x+o,q[m].y-o,q[m].x+o+l,q[m].y-o)):(r.lineTo(q[m].x+o,q[m].y+o-t),r.quadraticCurveTo(q[m].x+o,q[m].y+o,q[m].x+o-t,q[m].y+o)):q[m].x<q[m-1].x?(r.lineTo(q[m].x-o,q[m].y-o+t),r.quadraticCurveTo(q[m].x-o,q[m].y-o,q[m].x-o+t,q[m].y-o)):(r.lineTo(q[m].x-o,q[m].y+o+l),r.quadraticCurveTo(q[m].x-o,q[m].y+o,q[m].x-o-l,q[m].y+o)));q[0].y==q[1].y&&q[0].x<q[1].x&&r.lineTo(q[0].x,q[0].y+o),q[0].y==q[1].y&&q[0].x>q[1].x&&r.lineTo(q[0].x,q[0].y-o),q[0].x==q[1].x&&q[0].y<q[1].y&&r.lineTo(q[0].x-o,q[0].y),q[0].x==q[1].x&&q[0].y>q[1].y&&r.lineTo(q[0].x+o,q[0].y),super(new e.ExtrudeGeometry(r,a),new fn(s))}}class Wn extends e.Mesh{constructor(q,t=new Gn,l=null,e=null,n={x:0,y:0},i={x:2,y:2},o=[{x:0,y:1},{x:2,y:1}],s={}){super(t.geometry,t.material),this.elementId=q,this.sourceElement=l,this.targetElement=e,this.shape=t,this.points=[n,...o,i],this.properties=s}setDiagram(q){this.diagram=q}static determinePoints(q,t,l,e){let n=[];return q.x!==t.x&&q.y!==t.y&&((l.startsWith("W")||l.startsWith("E"))&&n.push({x:t.x,y:q.y}),(l.startsWith("N")||l.startsWith("S"))&&n.push({x:q.x,y:t.y})),[q,...n,t]}}class Zn extends e.Mesh{constructor(q,t=new wn,l={x:0,y:0}){super(t.geometry,t.material),this.elementId=q,this.type=t.constructor.name,this.parameters={},this.shape=t,this.position.set(l.x,l.y,0),this.width=this.getSize().x,this.height=this.getSize().y,this.texts=[],this.icons=[],this.valueBars=[]}setDiagram(q){this.diagram=q}getSize(){const q=new e.Vector3;return this.shape.geometry.computeBoundingBox(),this.shape.geometry.boundingBox.getSize(q),q}positionAt(q){return void 0!==q.z?this.position.set(q.x,q.y,q.z):this.position.set(q.x,q.y,0),this.texts.forEach((t=>{const l=t.positionOffset;void 0!==q.z?t.element.position.set(q.x+l.x,q.y+l.y,q.z+l.z):t.element.position.set(q.x+l.x,q.y+l.y,l.z)})),this.icons.forEach((t=>{const l=t.positionOffset;void 0!==q.z?t.element.position.set(q.x+l.x,q.y+l.y,q.z+l.z):t.element.position.set(q.x+l.x,q.y+l.y,l.z)})),this.valueBars.forEach((t=>{const l=t.positionOffset;void 0!==q.z?t.element.position.set(q.x+l.x,q.y+l.y,q.z+l.z):t.element.position.set(q.x+l.x,q.y+l.y,l.z)})),this}setPosition(q,t,l){const n=new e.Vector3(q,t,l);return this.positionAt(n),this}getPosition(){return this.position}positionRightOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=this.getSize().x;return this.setPosition(t.position.x+l/2+un+e/2,t.position.y,0),this}positionLeftOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=this.getSize().x;return this.setPosition(t.position.x-l/2-un-e/2,t.position.y,0),this}positionUpOf(q){const t=this.diagram.getElementById(q),l=t.getSize().y,e=this.getSize().y;return this.setPosition(t.position.x,t.position.y+l/2+un+e/2,0),this}positionDownOf(q){const t=this.diagram.getElementById(q),l=t.getSize().y,e=this.getSize().y;return this.setPosition(t.position.x,t.position.y-l/2-un-e/2,0),this}positionUpLeftOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=t.getSize().y,n=this.getSize().x,i=this.getSize().y;return this.setPosition(t.position.x-l/2-un-n/2,t.position.y+e/2+un+i/2,0),this}positionDownLeftOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=t.getSize().y,n=this.getSize().x,i=this.getSize().y;return this.setPosition(t.position.x-l/2-un-n/2,t.position.y-e/2-un-i/2,0),this}positionUpRightOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=t.getSize().y,n=this.getSize().x,i=this.getSize().y;return this.setPosition(t.position.x+l/2+un+n/2,t.position.y+e/2+un+i/2,0),this}positionDownRightOf(q){const t=this.diagram.getElementById(q),l=t.getSize().x,e=t.getSize().y,n=this.getSize().x,i=this.getSize().y;return this.setPosition(t.position.x+l/2+un+n/2,t.position.y-e/2-un-i/2,0),this}getNorthPoint(){return new e.Vector2(this.position.x,this.position.y+this.getSize().y/2)}getSouthPoint(){return new e.Vector2(this.position.x,this.position.y-this.getSize().y/2)}getEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/2,this.position.y)}getWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/2,this.position.y)}getNorthEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/2,this.position.y+this.getSize().y/2)}getNorthWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/2,this.position.y+this.getSize().y/2)}getSouthEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/2,this.position.y-this.getSize().y/2)}getSouthWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/2,this.position.y-this.getSize().y/2)}getNorthNorthEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/4,this.position.y+this.getSize().y/2)}getNorthNorthWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/4,this.position.y+this.getSize().y/2)}getNorthEastEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/2,this.position.y+this.getSize().y/4)}getNorthWestWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/2,this.position.y+this.getSize().y/4)}getSouthSouthEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/4,this.position.y-this.getSize().y/2)}getSouthSouthWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/4,this.position.y-this.getSize().y/2)}getSouthEastEastPoint(){return new e.Vector2(this.position.x+this.getSize().x/2,this.position.y-this.getSize().y/4)}getSouthWestWestPoint(){return new e.Vector2(this.position.x-this.getSize().x/2,this.position.y-this.getSize().y/4)}getPointPosition(q){switch(q){case"N":case"north":return this.getNorthPoint();case"S":case"south":return this.getSouthPoint();case"E":case"east":return this.getEastPoint();case"W":case"west":return this.getWestPoint();case"NE":case"northeast":return this.getNorthEastPoint();case"NW":case"northwest":return this.getNorthWestPoint();case"SE":case"southeast":return this.getSouthEastPoint();case"SW":case"southwest":return this.getSouthWestPoint();case"NNE":case"northnortheast":return this.getNorthNorthEastPoint();case"NNW":case"northnorthwest":return this.getNorthNorthWestPoint();case"NEE":case"northeast":return this.getNorthEastEastPoint();case"NWW":case"northwest":return this.getNorthWestWestPoint();case"SSE":case"southsoutheast":return this.getSouthSouthEastPoint();case"SSW":case"southsouthwest":return this.getSouthSouthWestPoint();case"SEE":case"southeast":return this.getSouthEastEastPoint();case"SWW":case"southwest":return this.getSouthWestWestPoint();default:throw new Error(`Unknown position: ${q}`)}}addText(q){const t=new Zn(this.elementId+"_text",new Sn(q));return this.diagram.addElement(t).positionAt(this.position),this.texts.push({element:t,positionOffset:new e.Vector3(0,0,0)}),this}addWrappedText(q){if(!q)return console.warn("addWrappedText: text is null or undefined"),this;let t,l=q.replace(/\s+/g,"\n"),n=new Zn(this.elementId+"_text",new Sn(l));for(;;){let q=l.split("\n"),e=1/0,i=-1;for(let t=0;t<q.length-1;t++){let l=q[t].length+q[t+1].length;l<e&&(e=l,i=t)}if(-1===i)break;if(q[i]=q[i]+" "+q[i+1],q.splice(i+1,1),l=q.join("\n"),t=new Zn(this.elementId+"_text",new Sn(l)),!(t.getSize().x<=.9*this.getSize().x))break;n=t}return this.diagram.addElement(n).positionAt({x:this.position.x,y:this.position.y,z:3}),this.texts.push({element:n,positionOffset:new e.Vector3(0,0,3)}),this}getTopIconPlaceholder(){return new e.Vector2(this.position.x,this.position.y+this.getSize().y/2-En/2-Cn)}getBottomIconPlaceholder(){return new e.Vector2(this.position.x,this.position.y-this.getSize().y/2+En/2+Cn)}getLeftIconPlaceholder(){return new e.Vector2(this.position.x-this.getSize().x/2+En/2+Cn,this.position.y)}getRightIconPlaceholder(){return new e.Vector2(this.position.x+this.getSize().x/2-En/2-Cn,this.position.y)}getTopLeftIconPlaceholder(){return new e.Vector2(this.position.x-this.getSize().x/2+En/2+Cn,this.position.y+this.getSize().y/2-En/2-Cn)}getTopRightIconPlaceholder(){return new e.Vector2(this.position.x+this.getSize().x/2-En/2-Cn,this.position.y+this.getSize().y/2-En/2-Cn)}getBottomLeftIconPlaceholder(){return new e.Vector2(this.position.x-this.getSize().x/2+En/2+Cn,this.position.y-this.getSize().y/2+En/2+Cn)}getBottomRightIconPlaceholder(){return new e.Vector2(this.position.x+this.getSize().x/2-En/2-Cn,this.position.y-this.getSize().y/2+En/2+Cn)}getCenterIconPlaceholder(){return new e.Vector2(this.position.x,this.position.y)}getIconPlaceholder(q){switch(q){case"top":return this.getTopIconPlaceholder();case"bottom":return this.getBottomIconPlaceholder();case"left":return this.getLeftIconPlaceholder();case"right":return this.getRightIconPlaceholder();case"top-left":return this.getTopLeftIconPlaceholder();case"top-right":return this.getTopRightIconPlaceholder();case"bottom-left":return this.getBottomLeftIconPlaceholder();case"bottom-right":return this.getBottomRightIconPlaceholder();case"center":return this.getCenterIconPlaceholder();default:throw new Error(`Unknown icon position: ${q}`)}}addIcon(q,t="center",l=Nn){let n;"string"==typeof t&&(n=this.getIconPlaceholder(t));const i=new Zn(this.elementId+"_icon_placeholder",new An(q,l));return this.diagram.addElement(i).positionAt(n),this.icons.push({element:i,positionOffset:new e.Vector3(n.x-this.position.x,n.y-this.position.y,0)}),this}addValueBar(q){if(q<0)return console.warn("valueBar: Value must be positive"),this;if(this.parameters.value=q,console.log("valueBar added:",this),"ANALYZE"!==this.diagram.mode)return console.warn("valueBar: Diagram mode is not ANALYZE"),this;const t=new Zn(this.elementId+"_bar",new Rn(this.shape.getOuterShape(),q));return this.diagram.addElement(t).positionAt(this.position),this.valueBars.push({element:t,positionOffset:new e.Vector3(0,0,0)}),this}connectFrom(q,t,l){if(!this.diagram)throw new Error("Diagram is not set for this element.");const e=this.diagram.getElementById(q);if(!e)throw new Error(`Element with ID ${q} not found.`);const n=e.getPointPosition(t),i=this.getPointPosition(l),o=Wn.determinePoints(n,i,t,l);return this.diagram.addConnector(new Wn(`connector-${e.elementId}-${this.elementId}`,new Gn(o))),this}}const Hn=100,Xn=80,Yn=10,$n=1,Kn=18,Qn=1,Jn=48,qi=1;class ti extends yn{constructor(q=Qn){const t=Kn,l=gn,n=pn;function i(q,t){var l=.552284749831*t;q.moveTo(0,0-t),q.bezierCurveTo(0+l,0-t,0+t,0-l,0+t,0),q.bezierCurveTo(0+t,0+l,0+l,0+t,0,0+t),q.bezierCurveTo(0-l,0+t,0-t,0+l,0-t,0),q.bezierCurveTo(0-t,0-l,0-l,0-t,0,0-t)}var o=new e.Shape;i(o,t);const s=o.clone();var a=new e.Path;i(a,t-q),o.holes.push(a),super(new e.ExtrudeGeometry(o,n),new fn(l)),this.outerShape=s}getOuterShape(){return this.outerShape}}class li extends yn{constructor(){const q=Hn,t=Xn,l=$n,n=Yn,i=Yn-l,o=gn,s=pn;function a(q,t,l,e){var n=0-t/2,i=0-l/2;q.moveTo(n+e,i),q.lineTo(n+t-e,i),q.quadraticCurveTo(n+t,i,n+t,i+e),q.lineTo(n+t,i+l-e),q.quadraticCurveTo(n+t,i+l,n+t-e,i+l),q.lineTo(n+e,i+l),q.quadraticCurveTo(n,i+l,n,i+l-e),q.lineTo(n,i+e),q.quadraticCurveTo(n,i,n+e,i)}var r=new e.Shape;a(r,q,t,n);const m=r.clone();var h=new e.Path;a(h,q-2*l,t-2*l,i),r.holes.push(h),super(new e.ExtrudeGeometry(r,s),new fn(o)),this.outerShape=m}getOuterShape(){return this.outerShape}}class ei extends yn{constructor(){const q=Jn,t=qi,l=gn,n=pn;function i(q,t,l){q.moveTo(0-t/2,0),q.lineTo(0,0-t/2),q.lineTo(0+l/2,0),q.lineTo(0,0+t/2),q.lineTo(0-l/2,0)}var o=new e.Shape;i(o,q,q);const s=o.clone();var a=new e.Path;i(a,q-t*Math.sqrt(2)*2,q-t*Math.sqrt(2)*2),o.holes.push(a),super(new e.ExtrudeGeometry(o,n),new fn(l)),this.outerShape=s}getOuterShape(){return this.outerShape}}var ni,ii,oi,si={exports:{}};ni||(ni=1,ii=si,oi=oi||function(){var q=[];return{getAll:function(){return q},removeAll:function(){q=[]},add:function(t){q.push(t)},remove:function(t){var l=q.indexOf(t);-1!==l&&q.splice(l,1)},update:function(t,l){if(0===q.length)return!1;var e=0;for(t=void 0!==t?t:oi.now();e<q.length;)q[e].update(t)||l?e++:q.splice(e,1);return!0}}}(),"undefined"==typeof window&&"undefined"!=typeof process?oi.now=function(){var q=process.hrtime();return 1e3*q[0]+q[1]/1e6}:"undefined"!=typeof window&&void 0!==window.performance&&void 0!==window.performance.now?oi.now=window.performance.now.bind(window.performance):void 0!==Date.now?oi.now=Date.now:oi.now=function(){return(new Date).getTime()},oi.Tween=function(q){var t,l=q,e={},n={},i={},o=1e3,s=0,a=!1,r=!1,m=0,h=null,c=oi.Easing.Linear.None,d=oi.Interpolation.Linear,x=[],u=null,p=!1,g=null,_=null,y=null;this.to=function(q,t){return n=q,void 0!==t&&(o=t),this},this.start=function(q){for(var t in oi.add(this),r=!0,p=!1,h=void 0!==q?q:oi.now(),h+=m,n){if(n[t]instanceof Array){if(0===n[t].length)continue;n[t]=[l[t]].concat(n[t])}void 0!==l[t]&&(e[t]=l[t],e[t]instanceof Array==0&&(e[t]*=1),i[t]=e[t]||0)}return this},this.stop=function(){return r?(oi.remove(this),r=!1,null!==y&&y.call(l,l),this.stopChainedTweens(),this):this},this.end=function(){return this.update(h+o),this},this.stopChainedTweens=function(){for(var q=0,t=x.length;q<t;q++)x[q].stop()},this.delay=function(q){return m=q,this},this.repeat=function(q){return s=q,this},this.repeatDelay=function(q){return t=q,this},this.yoyo=function(q){return a=q,this},this.easing=function(q){return c=q,this},this.interpolation=function(q){return d=q,this},this.chain=function(){return x=arguments,this},this.onStart=function(q){return u=q,this},this.onUpdate=function(q){return g=q,this},this.onComplete=function(q){return _=q,this},this.onStop=function(q){return y=q,this},this.update=function(q){var r,y,f;if(q<h)return!0;for(r in!1===p&&(null!==u&&u.call(l,l),p=!0),f=c(y=(y=(q-h)/o)>1?1:y),n)if(void 0!==e[r]){var w=e[r]||0,z=n[r];z instanceof Array?l[r]=d(z,f):("string"==typeof z&&(z="+"===z.charAt(0)||"-"===z.charAt(0)?w+parseFloat(z):parseFloat(z)),"number"==typeof z&&(l[r]=w+(z-w)*f))}if(null!==g&&g.call(l,f),1===y){if(s>0){for(r in isFinite(s)&&s--,i){if("string"==typeof n[r]&&(i[r]=i[r]+parseFloat(n[r])),a){var k=i[r];i[r]=n[r],n[r]=k}e[r]=i[r]}return h=void 0!==t?q+t:q+m,!0}null!==_&&_.call(l,l);for(var b=0,v=x.length;b<v;b++)x[b].start(h+o);return!1}return!0}},oi.Easing={Linear:{None:function(q){return q}},Quadratic:{In:function(q){return q*q},Out:function(q){return q*(2-q)},InOut:function(q){return(q*=2)<1?.5*q*q:-.5*(--q*(q-2)-1)}},Cubic:{In:function(q){return q*q*q},Out:function(q){return--q*q*q+1},InOut:function(q){return(q*=2)<1?.5*q*q*q:.5*((q-=2)*q*q+2)}},Quartic:{In:function(q){return q*q*q*q},Out:function(q){return 1- --q*q*q*q},InOut:function(q){return(q*=2)<1?.5*q*q*q*q:-.5*((q-=2)*q*q*q-2)}},Quintic:{In:function(q){return q*q*q*q*q},Out:function(q){return--q*q*q*q*q+1},InOut:function(q){return(q*=2)<1?.5*q*q*q*q*q:.5*((q-=2)*q*q*q*q+2)}},Sinusoidal:{In:function(q){return 1-Math.cos(q*Math.PI/2)},Out:function(q){return Math.sin(q*Math.PI/2)},InOut:function(q){return.5*(1-Math.cos(Math.PI*q))}},Exponential:{In:function(q){return 0===q?0:Math.pow(1024,q-1)},Out:function(q){return 1===q?1:1-Math.pow(2,-10*q)},InOut:function(q){return 0===q?0:1===q?1:(q*=2)<1?.5*Math.pow(1024,q-1):.5*(2-Math.pow(2,-10*(q-1)))}},Circular:{In:function(q){return 1-Math.sqrt(1-q*q)},Out:function(q){return Math.sqrt(1- --q*q)},InOut:function(q){return(q*=2)<1?-.5*(Math.sqrt(1-q*q)-1):.5*(Math.sqrt(1-(q-=2)*q)+1)}},Elastic:{In:function(q){return 0===q?0:1===q?1:-Math.pow(2,10*(q-1))*Math.sin(5*(q-1.1)*Math.PI)},Out:function(q){return 0===q?0:1===q?1:Math.pow(2,-10*q)*Math.sin(5*(q-.1)*Math.PI)+1},InOut:function(q){return 0===q?0:1===q?1:(q*=2)<1?-.5*Math.pow(2,10*(q-1))*Math.sin(5*(q-1.1)*Math.PI):.5*Math.pow(2,-10*(q-1))*Math.sin(5*(q-1.1)*Math.PI)+1}},Back:{In:function(q){var t=1.70158;return q*q*((t+1)*q-t)},Out:function(q){var t=1.70158;return--q*q*((t+1)*q+t)+1},InOut:function(q){var t=2.5949095;return(q*=2)<1?q*q*((t+1)*q-t)*.5:.5*((q-=2)*q*((t+1)*q+t)+2)}},Bounce:{In:function(q){return 1-oi.Easing.Bounce.Out(1-q)},Out:function(q){return q<1/2.75?7.5625*q*q:q<2/2.75?7.5625*(q-=1.5/2.75)*q+.75:q<2.5/2.75?7.5625*(q-=2.25/2.75)*q+.9375:7.5625*(q-=2.625/2.75)*q+.984375},InOut:function(q){return q<.5?.5*oi.Easing.Bounce.In(2*q):.5*oi.Easing.Bounce.Out(2*q-1)+.5}}},oi.Interpolation={Linear:function(q,t){var l=q.length-1,e=l*t,n=Math.floor(e),i=oi.Interpolation.Utils.Linear;return t<0?i(q[0],q[1],e):t>1?i(q[l],q[l-1],l-e):i(q[n],q[n+1>l?l:n+1],e-n)},Bezier:function(q,t){for(var l=0,e=q.length-1,n=Math.pow,i=oi.Interpolation.Utils.Bernstein,o=0;o<=e;o++)l+=n(1-t,e-o)*n(t,o)*q[o]*i(e,o);return l},CatmullRom:function(q,t){var l=q.length-1,e=l*t,n=Math.floor(e),i=oi.Interpolation.Utils.CatmullRom;return q[0]===q[l]?(t<0&&(n=Math.floor(e=l*(1+t))),i(q[(n-1+l)%l],q[n],q[(n+1)%l],q[(n+2)%l],e-n)):t<0?q[0]-(i(q[0],q[0],q[1],q[1],-e)-q[0]):t>1?q[l]-(i(q[l],q[l],q[l-1],q[l-1],e-l)-q[l]):i(q[n?n-1:0],q[n],q[l<n+1?l:n+1],q[l<n+2?l:n+2],e-n)},Utils:{Linear:function(q,t,l){return(t-q)*l+q},Bernstein:function(q,t){var l=oi.Interpolation.Utils.Factorial;return l(q)/l(t)/l(q-t)},Factorial:function(){var q=[1];return function(t){var l=1;if(q[t])return q[t];for(var e=t;e>1;e--)l*=e;return q[t]=l,l}}(),CatmullRom:function(q,t,l,e,n){var i=.5*(l-q),o=.5*(e-t),s=n*n;return(2*t-2*l+i+o)*(n*s)+(-3*t+3*l-2*i-o)*s+i*n+t}}},ii.exports=oi);class ai extends xn{constructor(q){super(q)}static get Dimensions(){return{DISTANCE_BETWEEN_ELEMENTS:un,START_EVENT_LINE_WIDTH:1,END_EVENT_LINE_WIDTH:2.4,ICON_SIZE_SMALL:10,ICON_SIZE_MEDIUM:18,ICON_SIZE_LARGE:30}}addStartEvent(q){return this.addElement(new Zn(q,new ti))}addMessageStartEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="5.2652082mm"\n   height="3.5983334mm"\n   viewBox="0 0 5.2652084 3.5983335"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="message-start.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="23.559698"\n     inkscape:cy="12.21453"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="svg1" />\n  <defs\n     id="defs1" />\n  <path\n     d="M 0.13229166,0.13229167 V 3.4660416 H 5.1329166 V 0.13229166 Z m 0,0 L 2.6326041,1.5610416 5.1329166,0.13229167"\n     style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n     id="path4" />\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addTimerStartEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="6.3499999mm"\n   height="6.3499999mm"\n   viewBox="0 0 6.3500001 6.3500001"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="timer.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="-3.2166378"\n     inkscape:cy="17.169891"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-129.24896,-55.430208)">\n    <g\n       id="g1">\n      <circle\n         cx="132.42397"\n         cy="58.605209"\n         r="2.9104166"\n         style="fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round"\n         id="circle8" />\n      <path\n         d="m 132.42396,58.605208 0.59531,-1.984375 m -0.59531,1.984375 1.38906,0.396875"\n         style="fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round"\n         id="path8" />\n      <path\n         d="m 132.42396,58.605208 m 0,1.984375 v 0.595312"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path9" />\n      <path\n         d="m 132.42396,58.605208 m -0.99219,1.718519 -0.29766,0.515556"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path10" />\n      <path\n         d="m 132.42396,58.605208 m -1.71852,0.992188 -0.51555,0.297656"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path11" />\n      <path\n         d="m 132.42396,58.605208 m -1.98437,0 h -0.59532"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path12" />\n      <path\n         d="m 132.42396,58.605208 m -1.71852,-0.992187 -0.51555,-0.297657"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path13" />\n      <path\n         d="m 132.42396,58.605208 m -0.99218,-1.718519 -0.29766,-0.515556"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path14" />\n      <path\n         d="m 132.42396,58.605208 m 0,-1.984375 v -0.595312"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path15" />\n      <path\n         d="m 132.42396,58.605208 m 0.99219,-1.718519 0.29766,-0.515556"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path16" />\n      <path\n         d="m 132.42396,58.605208 m 1.71852,-0.992187 0.51555,-0.297657"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path17" />\n      <path\n         d="m 132.42396,58.605208 m 1.98437,0 h 0.59532"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path18" />\n      <path\n         d="m 132.42396,58.605208 m 1.71852,0.992188 0.51555,0.297656"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path19" />\n      <path\n         d="m 132.42396,58.605208 m 0.99218,1.718519 0.29766,0.515556"\n         style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n         id="path20" />\n    </g>\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addConditionalStartEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="4.1010432mm"\n   height="5.0270829mm"\n   viewBox="0 0 4.1010433 5.0270831"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="conditional.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="8.1336326"\n     inkscape:cx="2.3359796"\n     inkscape:cy="13.216727"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-156.23646,-112.58021)">\n    <path\n       d="m 156.36875,112.7125 h 3.83646 v 4.7625 h -3.83646 z m 0.52917,0.79375 h 2.77813 M 156.89792,114.3 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path22" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addSignalStartEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="5.0270643mm"\n   height="4.5508189mm"\n   viewBox="0 0 5.0270645 4.550819"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="signal-start.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="8.1336326"\n     inkscape:cx="3.31955"\n     inkscape:cy="27.72439"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-122.5021,-95.038348)">\n    <path\n       d="m 125.01563,95.170625 2.38125,4.28625 h -4.7625 z"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path40" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addIntermediateEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="16.267265"\n     inkscape:cx="12.663468"\n     inkscape:cy="14.35398"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(207.23489,-211.8651)">\n    <circle\n       cx="-203.0677"\n       cy="216.03229"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle50" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateMessageCatchEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-receive.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="21.386294"\n     inkscape:cy="10.301934"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-75.075519,-224.82968)">\n    <circle\n       cx="79.242706"\n       cy="228.99687"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle53" />\n    <path\n       d="m 76.718582,227.23474 v 3.33375 h 5.000625 v -3.33375 z m 0,0 2.500312,1.42875 2.500313,-1.42875"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path53" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateMessageThrowEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-send.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="16"\n     inkscape:cx="-5.25"\n     inkscape:cy="14.84375"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="path56" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-232.76718,-160.00678)">\n    <circle\n       cx="236.93437"\n       cy="164.17397"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle56" />\n    <g\n       id="path56">\n      <path\n         style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke:none"\n         d="m 234.41024,162.41183 v 3.33375 h 5.00063 v -3.33375 z m 0,0 2.50032,1.42875"\n         id="path1"\n         sodipodi:nodetypes="ccccccc" />\n      <g\n         id="g4"\n         transform="translate(201.87036,-55.570754)">\n        <path\n           d="m 32.666222,218.20322 v 2.97242 h 4.736145 v -2.97242 l -2.302701,1.31413 a 0.13230472,0.13230472 0 0 1 -0.130742,0 z"\n           style="baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;fill-opacity:1;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1"\n           id="path4" />\n        <path\n           d="m 33.033125,218.10761 1.999878,1.14257 2.001945,-1.14257 z"\n           style="baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;fill-opacity:1;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1"\n           id="path3" />\n      </g>\n    </g>\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateTimerEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-timer.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="25.298421"\n     inkscape:cy="14.561806"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(28.111983,-209.21927)">\n    <circle\n       cx="-23.944796"\n       cy="213.38646"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle59" />\n    <circle\n       cx="-23.944796"\n       cy="213.38646"\n       r="2.9104166"\n       style="fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle60" />\n    <path\n       d="m -23.944795,213.38646 0.595312,-1.98438 m -0.595312,1.98438 1.389062,0.39687"\n       style="fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round"\n       id="path60" />\n    <path\n       d="m -23.944795,213.38646 m 0,1.98437 v 0.59532"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path61" />\n    <path\n       d="m -23.944795,213.38646 m -0.992187,1.71852 -0.297657,0.51555"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path62" />\n    <path\n       d="m -23.944795,213.38646 m -1.718519,0.99218 -0.515556,0.29766"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path63" />\n    <path\n       d="m -23.944795,213.38646 m -1.984375,0 h -0.595312"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path64" />\n    <path\n       d="m -23.944795,213.38646 m -1.718519,-0.99219 -0.515556,-0.29766"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path65" />\n    <path\n       d="m -23.944795,213.38646 m -0.992187,-1.71852 -0.297657,-0.51555"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path66" />\n    <path\n       d="m -23.944795,213.38646 m 0,-1.98437 v -0.59532"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path67" />\n    <path\n       d="m -23.944795,213.38646 m 0.992187,-1.71852 0.297657,-0.51555"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path68" />\n    <path\n       d="m -23.944795,213.38646 m 1.718519,-0.99218 0.515556,-0.29766"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path69" />\n    <path\n       d="m -23.944795,213.38646 m 1.984375,0 h 0.595312"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path70" />\n    <path\n       d="m -23.944795,213.38646 m 1.718519,0.99219 0.515556,0.29766"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path71" />\n    <path\n       d="m -23.944795,213.38646 m 0.992187,1.71852 0.297657,0.51555"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path72" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateEscalationEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-escalation.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="-12.779615"\n     inkscape:cy="20.386529"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-371.14427,-181.43802)">\n    <circle\n       cx="375.31146"\n       cy="185.60521"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle75" />\n    <path\n       d="m 375.31146,182.74771 2.11667,5.29167 -2.11667,-1.85209 -2.11667,1.85209 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path75" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateConditionalEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-conditional.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="17.561104"\n     inkscape:cy="19.864912"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-91.215099,-208.95468)">\n    <circle\n       cx="95.382286"\n       cy="213.12187"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle78" />\n    <path\n       d="m 93.397914,210.60833 h 3.836458 v 4.7625 h -3.836458 z m 0.529167,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path78" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateLinkCatchEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-link-catch.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="-16.343997"\n     inkscape:cy="17.778444"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-235.14843,-194.93177)">\n    <circle\n       cx="239.31561"\n       cy="199.09895"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle81" />\n    <path\n       d="m 239.98237,196.84153 v 1.17409 h -3.57188 v 1.78594 h 3.57188 v 1.17409 l 2.60449,-2.06706 z"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path81" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateLinkThrowEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-link-throw.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="32.687996"\n     inkscape:cy="14.127126"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(119.65781,-208.95468)">\n    <circle\n       cx="-115.49062"\n       cy="213.12187"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle84" />\n    <path\n       d="m -114.82387,210.86444 v 1.17409 h -3.57188 v 1.78594 h 3.57188 v 1.17409 l 2.60449,-2.06706 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path84" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateCompensationEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-compensation.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="55.46527"\n     inkscape:cy="20.212657"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(69.65157,-208.95468)">\n    <circle\n       cx="-65.484383"\n       cy="213.12187"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle87" />\n    <path\n       d="m -68.151379,213.12187 2.38125,-1.71979 v 3.43958 z m 2.460625,-0.10583 2.301875,-1.61396 v 3.43958 l -2.301875,-1.61396 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path87" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateSignalCatchEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-signal-catch.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="40.164504"\n     inkscape:cy="13.083891"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-0.19843645,-215.30468)">\n    <circle\n       cx="4.365624"\n       cy="219.47186"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle90" />\n    <path\n       d="m 4.3656239,216.61437 2.38125,4.28625 h -4.7625 z"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path90" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addIntermediateSignalThrowEvent(q){return this.addElement(new Zn(q,new ti)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="8.3343754mm"\n   height="8.3343754mm"\n   viewBox="0 0 8.3343756 8.3343756"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="intermediate-signal-throw.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="8.1336326"\n     inkscape:cx="32.334876"\n     inkscape:cy="-6.7005731"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-53.115108,-210.80677)">\n    <circle\n       cx="57.282295"\n       cy="214.97395"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle93" />\n    <path\n       d="m 57.282297,212.11646 2.38125,4.28625 h -4.7625 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path93" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH)))}addMessageEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.49375mm"\n   height="13.49375mm"\n   viewBox="0 0 13.49375 13.49375"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="message-end.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="32.53453"\n     inkscape:cx="25.972405"\n     inkscape:cy="22.453067"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-28.310416,-212.98958)">\n    <g\n       id="g4">\n      <path\n         d="m 32.666222,218.20322 v 2.97242 h 4.736145 v -2.97242 l -2.302701,1.31413 a 0.13230472,0.13230472 0 0 1 -0.130742,0 z"\n         style="baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1;fill-opacity:1"\n         id="path4" />\n      <path\n         d="m 33.033125,218.10761 1.999878,1.14257 2.001945,-1.14257 z"\n         style="baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1;fill-opacity:1"\n         id="path3" />\n    </g>\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addEscalationEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="4.4978838mm"\n   height="5.5561948mm"\n   viewBox="0 0 4.4978839 5.5561949"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="escalation.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="11.040892"\n     inkscape:cy="10.910488"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-152.92918,-91.334188)">\n    <path\n       d="m 155.17812,91.466457 2.11667,5.291667 -2.11667,-1.852084 -2.11667,1.852084 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path31" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addErrorEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="5.5032949mm"\n   height="5.2628441mm"\n   viewBox="0 0 5.5032951 5.2628442"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="error.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="40.859995"\n     inkscape:cy="8.737084"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(24.288738,-155.33712)">\n    <path\n       d="m -24.156455,160.46768 0.02474,-0.007 1.941829,-2.54284 2.028561,2.37229 1.243621,-4.82082 -1.553289,3.08242 -1.931353,-2.53613 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path34" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addCompensateEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="5.0270739mm"\n   height="3.7041385mm"\n   viewBox="0 0 5.027074 3.7041386"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="compensation.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="8.1336326"\n     inkscape:cx="34.547909"\n     inkscape:cy="4.3645935"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-29.347596,-154.91356)">\n    <path\n       d="m 29.479878,156.76563 2.38125,-1.71979 v 3.43958 z m 2.460625,-0.10583 2.301875,-1.61396 v 3.43958 l -2.301875,-1.61396 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path37" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addSignalEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="5.0270643mm"\n   height="4.5508189mm"\n   viewBox="0 0 5.0270645 4.550819"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="signal-end.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="11.502694"\n     inkscape:cx="11.562509"\n     inkscape:cy="10.128063"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-93.92709,-150.86543)">\n    <path\n       d="m 96.440622,150.99771 2.38125,4.28625 h -4.7625 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path43" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addTerminateEndEvent(q){return this.addElement(new Zn(q,new ti(ai.Dimensions.END_EVENT_LINE_WIDTH))).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="6.3499966mm"\n   height="6.3499966mm"\n   viewBox="0 0 6.3499967 6.3499967"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (86a8ad7, 2024-10-11)"\n   sodipodi:docname="terminate.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#505050"\n     bordercolor="#eeeeee"\n     borderopacity="1"\n     inkscape:showpageshadow="0"\n     inkscape:pageopacity="0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#505050"\n     inkscape:document-units="mm"\n     inkscape:zoom="16.267265"\n     inkscape:cx="0.67620462"\n     inkscape:cy="9.6820208"\n     inkscape:window-width="2560"\n     inkscape:window-height="1009"\n     inkscape:window-x="-8"\n     inkscape:window-y="-8"\n     inkscape:window-maximized="1"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-148.82811,-151.73855)">\n    <circle\n       cx="152.00311"\n       cy="154.91354"\n       r="2.6458333"\n       style="fill:#22242a;stroke:#22242a;stroke-width:1.05833px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle47" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addTask(q){return this.addElement(new Zn(q,new li))}addManualTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   version="1.1"\n   id="svg2"\n   viewBox="0 0 2000 2000"\n   height="2000"\n   width="2000">\n  <defs\n     id="defs4" />\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     transform="translate(0,947.63784)"\n     id="layer1">\n    <path\n       id="path4135"\n       transform="translate(0,-947.63784)"\n       d="M 919.37891 382.98828 C 897.07985 382.99534 876.42602 391.24619 858.8125 402.60352 L 858.7832 402.62109 L 858.75586 402.64062 C 764.06211 463.96011 439.8885 688.93075 368.62891 737.8418 L 368.62695 737.84375 L 368.625 737.84375 C 304.25376 782.03986 260.89214 848.74751 235.96289 927.7793 L 235.95898 927.79492 L 235.95508 927.80859 C 210.0027 1010.3241 213.33304 1100.2119 213.58398 1175.4941 L 213.58594 1175.5137 L 213.58594 1175.5332 C 213.84074 1232.2188 215.19212 1281.6884 229.89453 1341.6816 C 229.89553 1341.6866 229.89744 1341.692 229.89844 1341.6973 C 251.2713 1429.4993 292.66639 1493.0333 351.12891 1531.9824 C 409.58875 1570.9297 481.74302 1584.75 562.70312 1585 C 854.98652 1586.0972 1147.4442 1586.4897 1439.8848 1585 L 1439.9102 1585 L 1439.9355 1585 C 1472.1442 1584.7888 1502.8949 1571.2476 1522.0703 1547.3223 C 1541.2443 1523.3988 1549.087 1492.4573 1549.5 1458.5117 C 1549.7909 1435.7437 1546.5893 1414.2247 1539.1934 1395 L 1571.5684 1395 C 1603.0995 1395 1632.0021 1386.016 1652.7207 1367.084 C 1673.4323 1348.1584 1684.0251 1322.4631 1689.5293 1295.4043 L 1689.5293 1295.3965 C 1697.2116 1257.7567 1693.5837 1220.59 1678.6133 1189.4004 C 1711.5589 1186.7389 1740.6465 1174.2976 1759.3535 1151.4941 C 1780.3767 1125.8673 1786.5009 1093.2887 1786.6094 1058.7734 C 1786.7238 1022.74 1777.9802 988.35302 1757.7969 961.00781 C 1737.6137 933.6626 1704.0255 915.05176 1666.2305 914.99805 L 1666.2207 914.99805 L 1666.209 914.99805 C 1652.4498 914.98657 1640.0493 915.00635 1624.4277 914.99805 C 1631.9444 896.25389 1635.2488 875.17154 1635.1797 852.99219 L 1635.1797 852.93555 L 1635.1797 852.87891 C 1634.9519 817.10655 1625.9288 782.92541 1605.6445 755.75195 C 1585.3606 728.57897 1551.8364 709.9987 1514.0586 709.99805 C 1289.6388 709.11253 1067.8072 712.155 879.15625 711.20117 C 888.98683 701.31624 898.53379 691.67619 909.02734 681.24023 C 941.50862 648.93721 972.72655 618.49752 988.85352 597.62891 C 1027.4086 548.00648 1033.1613 480.77723 1000.7031 431.32422 C 983.59029 405.18088 958.49595 387.49228 931.55273 383.81055 C 928.18377 383.35019 924.8448 383.0899 921.54102 383.01172 L 921.54102 383.01367 C 920.81831 382.99657 920.09823 382.98805 919.37891 382.98828 z M 919.92578 453.01562 C 920.69385 453.02416 921.41106 453.07733 922.07422 453.16797 C 927.37949 453.89292 933.05983 455.78817 942.14453 469.67383 L 942.16211 469.69922 L 942.17773 469.72461 C 954.86945 489.05096 954.30896 528.02989 933.55469 554.7168 L 933.51953 554.76172 L 933.48438 554.80664 C 925.93786 564.57639 892.03049 599.42252 859.66602 631.60938 C 827.30154 663.79624 796.53208 693.50491 781.30859 712.05078 C 766.75168 729.78466 772.09283 744.6981 776.04102 754.0332 C 779.9892 763.3683 784.5057 774.26988 804.63867 779.05273 C 810.66655 780.48469 810.99854 780.07253 812.92773 780.20508 C 814.85693 780.33763 816.85106 780.42902 819.19531 780.51367 C 823.88381 780.68297 829.88273 780.81106 837.28906 780.91992 C 1063.754 782.29908 1287.7116 779.67931 1513.998 780 L 1514.0293 780 L 1514.0605 780 C 1531.2724 780 1540.6175 785.65704 1549.5527 797.62695 C 1558.482 809.58885 1565.0212 829.44025 1565.1816 853.2793 C 1565.2476 878.00948 1559.325 893.09925 1552.125 901.41211 C 1544.925 909.72493 1535.2797 914.9327 1514.6504 915 L 1030 915 L 1030 985 L 1514.7422 985 L 1514.791 985 C 1581.2694 985.0062 1616.3318 984.95843 1666.1543 985 C 1683.4616 985.02951 1692.6831 990.66165 1701.4785 1002.5781 C 1710.2778 1014.4998 1716.688 1034.4049 1716.6113 1058.5527 L 1716.6113 1058.5547 C 1716.5303 1084.3774 1711.2652 1099.7505 1705.2363 1107.0996 C 1699.2075 1114.4487 1690.5982 1119.8316 1665.7539 1120.002 C 1657.3241 1120.0598 1596.946 1120.0156 1571.8906 1120.0449 C 1571.4936 1120.0399 1571.105 1120.0032 1570.707 1120.002 C 1390.4805 1119.1514 1210.2524 1120 1030.0254 1120 L 1030 1120 L 1029.9746 1190 L 1030 1190 C 1030.043 1190 1412.5167 1190.2386 1571.3301 1190.0469 C 1591.0301 1190.326 1602.841 1198.2575 1612.2637 1213.6484 C 1621.8272 1229.2694 1626.5869 1253.7579 1620.9434 1281.4043 L 1620.9434 1281.418 L 1620.9434 1281.4316 C 1617.207 1299.8121 1611.5308 1309.9046 1605.5078 1315.4082 C 1599.4848 1320.9118 1591.1733 1325 1571.5742 1325 C 1391.0507 1324.9139 1210.5297 1324.5478 1030.0059 1325 L 1029.9141 1325 L 1030.0059 1395 L 1030.0977 1395 L 1439.4043 1395 L 1439.4199 1395 C 1454.127 1395.0958 1460.6667 1399.0084 1467.3809 1407.9766 C 1474.0951 1416.9447 1479.8203 1433.619 1479.5117 1457.6289 L 1479.5117 1457.6426 L 1479.5117 1457.6543 C 1479.2276 1481.0659 1473.56 1495.9259 1467.4551 1503.543 C 1461.3503 1511.16 1455.0501 1514.8999 1439.4824 1515.002 C 1147.359 1516.4898 855.12644 1516.0987 562.97266 1515.002 L 562.95898 1515.002 L 562.94727 1515.002 C 489.89431 1514.7789 432.49137 1502.0704 389.94727 1473.7266 C 347.39676 1445.3826 316.33958 1400.8581 297.9082 1325.1289 L 297.90039 1325.0996 L 297.89453 1325.0703 C 285.02432 1272.5777 283.83532 1231.06 283.58398 1175.2598 L 283.58398 1175.2188 C 283.32833 1098.6482 281.8595 1015.1692 302.73047 948.81055 C 324.12233 881.00932 358.71817 829.5583 408.24219 795.55469 L 408.24609 795.55273 C 480.37064 746.04796 806.47508 519.89392 896.74609 461.43359 L 896.75 461.43164 C 905.22608 455.9669 912.24926 453.64295 917.46875 453.12891 C 918.3388 453.04322 919.15772 453.00709 919.92578 453.01562 z "\n       style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addUserTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   version="1.1"\n   id="svg2"\n   viewBox="0 0 2000 2000"\n   height="2000"\n   width="2000">\n  <defs\n     id="defs4" />\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     style="display:inline"\n     id="layer9">\n    <path\n       id="path8979-3"\n       d="M 991.75,365 C 814.47261,365 687.65259,501.28069 687.29688,656.51367 l 0,0.0449 0,0.043 c 0.0112,46.94485 12.71406,96.48986 32.56054,141.17774 14.33025,32.26709 32.14702,61.93151 53.85742,85.69531 C 644.68593,927.61788 493.52222,1000.2699 417.11719,1143.5293 L 413,1151.25 l 0,463.75 1157.5,0 0,-463.75 -4.1172,-7.7207 c -75.3061,-141.1989 -223.1988,-213.74978 -350.9805,-258.07618 62.3794,-63.43263 80.7808,-145.30578 80.8008,-228.85156 l 0,-0.043 0,-0.0449 C 1295.8474,501.2807 1169.0274,365 991.75,365 Z M 870.70898,530.29883 c 8.19443,0.0206 17.19117,0.29432 27.10938,0.8789 79.02308,4.65771 105.61894,18.88222 126.06254,32.37305 20.4435,13.49083 34.8553,26.33317 88.8828,27.9082 l 0.016,0 0.018,0 c 42.1017,-1.5748 62.3491,-9.0811 76.8691,-17.58398 5.8837,-3.44545 10.8241,-7.02722 15.8867,-10.44727 13.3814,28.68227 20.5671,60.38893 20.6485,93.20313 -0.028,93.43999 -16.0919,158.87652 -101.7676,212.42383 l 8.3809,63.16992 c 17.8327,5.41537 36.2658,11.35733 54.9746,17.87305 2.6128,10.90011 5.6316,25.19633 7.6621,40.39453 2.1271,15.92241 2.9637,32.48881 1.6523,44.92771 -1.3114,12.4389 -5.1734,19.1539 -5.8515,19.8321 -43.5469,43.5468 -120.8464,68.9433 -199.252,68.9433 -78.40557,0 -155.70507,-25.3965 -199.25195,-68.9433 -0.67811,-0.6782 -4.54017,-7.3932 -5.85157,-19.8321 -1.31139,-12.4389 -0.47481,-29.0053 1.65235,-44.92771 2.04162,-15.28211 5.08445,-29.66261 7.70703,-40.58399 18.52194,-6.44112 36.76978,-12.32071 54.42969,-17.68359 l 4.99609,-67.6875 c -4.068,-5.21708 -8.21297,-8.67324 -13.16016,-12.38477 -19.12128,-14.34532 -42.30994,-45.90379 -58.68945,-82.78515 -16.37367,-36.86821 -26.51791,-79.00946 -26.5332,-112.74414 0.10174,-40.44431 10.98577,-79.211 30.97656,-112.69727 3.57689,-1.33139 7.34871,-2.73853 11.58789,-4.13281 14.90781,-4.90324 35.33655,-9.58342 70.8457,-9.49414 z M 719.36133,979.85547 c -0.0629,0.45883 -0.13379,0.90664 -0.19531,1.36719 -2.58689,19.36354 -4.10696,40.44054 -1.88282,61.53714 2.22414,21.0966 7.79068,43.8102 25.96875,61.9882 62.04773,62.0478 155.95092,89.4473 248.74805,89.4473 92.7971,0 186.7003,-27.3995 248.748,-89.4473 18.1781,-18.178 23.7447,-40.8916 25.9688,-61.9882 2.2241,-21.0967 0.7041,-42.1736 -1.8828,-61.53714 -0.051,-0.38161 -0.1102,-0.75238 -0.1621,-1.13282 94.3337,41.36896 185.5148,100.61546 235.8281,189.07426 l 0,375.8359 -167.5,0 0,-265 -70,0 0,265 -544,0 0,-265 -70,0 0,265 -166,0 0,-375.8359 c 50.40811,-88.6256 141.83798,-147.9292 236.36133,-189.30863 z"\n       style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2.29999995;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addScriptTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   version="1.1"\n   id="svg2"\n   viewBox="0 0 2000 2000"\n   height="2000"\n   width="2000">\n  <defs\n     id="defs4" />\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     style="display:inline"\n     transform="translate(0,947.63784)"\n     id="layer1" />\n  <g\n     style="display:inline"\n     id="layer3">\n    <path\n       id="path7110"\n       d="M 759.41016 378 L 751.14844 382.9043 L 748.44922 384.50781 C 631.65776 453.72038 551.2844 517.18548 498.22852 579.16016 C 445.09916 641.22062 419.412 703.70808 418.68164 763.94727 C 417.22817 883.82775 505.65392 973.66586 584.10742 1054.0137 C 662.50124 1134.3003 732.43001 1210.0155 739.01172 1272.6777 C 742.36637 1304.6164 734.81689 1336.6966 699.99219 1380.6211 C 665.314 1424.3609 602.37552 1476.7493 501.75195 1535.4062 L 353.19336 1622 L 1270.0469 1622 L 1280.8965 1615.6875 L 1280.9082 1615.6777 C 1387.5436 1553.5161 1459.3849 1496.0867 1505.1621 1438.3477 C 1551.0758 1380.4366 1569.7557 1319.8482 1563.7812 1262.9688 C 1551.9436 1150.2668 1460.136 1068.1422 1382.9531 989.0957 C 1305.7103 909.98783 1243.1007 835.37489 1243.9531 765.07227 C 1244.3835 729.58122 1258.0249 689.98786 1301.1719 639.58789 C 1344.245 589.27401 1416.8675 530.40674 1528.2031 464.42969 L 1528.2031 464.42773 L 1674.0449 378 L 759.41016 378 z M 785.25195 470.91797 L 1349.8945 470.91797 C 1300.1653 507.99629 1260.8461 543.81554 1230.5879 579.16016 C 1177.4586 641.22061 1151.7714 703.70807 1151.041 763.94727 C 1149.5876 883.82876 1238.0176 973.66632 1316.4707 1054.0137 C 1394.8641 1134.2998 1464.7873 1210.0143 1471.3691 1272.6777 C 1474.7238 1304.6165 1467.1762 1336.6966 1432.3516 1380.6211 C 1398.9553 1422.7439 1338.8961 1473.0068 1244.5625 1529.082 L 678.47266 1529.082 C 717.74278 1498.4553 748.94092 1468.4466 772.80273 1438.3496 C 818.71647 1380.4385 837.39619 1319.8501 831.42188 1262.9707 C 819.58425 1150.2687 727.77664 1068.1442 650.59375 989.09766 C 573.35098 909.9898 510.74334 835.37687 511.5957 765.07422 C 512.02602 729.58325 525.66558 689.98982 568.8125 639.58984 C 610.43918 590.96566 680.08673 534.2435 785.25195 470.91797 z M 653.13086 629.39258 L 653.13086 672.3125 L 1094.5293 672.3125 L 1094.5293 629.39258 L 653.13086 629.39258 z M 636.72852 860.56836 L 636.72852 903.48633 L 1093.1133 903.48633 L 1093.1133 860.56836 L 636.72852 860.56836 z M 843.52344 1091.7383 L 843.52344 1134.6562 L 1285.5117 1134.6562 L 1285.5117 1091.7383 L 843.52344 1091.7383 z M 906.7207 1322.9121 L 906.7207 1365.8301 L 1364.707 1365.8301 L 1364.707 1322.9121 L 906.7207 1322.9121 z "\n       style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addBusinessRuleTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   width="2000"\n   height="2000"\n   viewBox="0 0 2000 2000"\n   id="svg2"\n   version="1.1"\n   inkscape:version="0.91 r"\n   sodipodi:docname="business-rule.svg">\n  <defs\n     id="defs4" />\n  <sodipodi:namedview\n     id="base"\n     pagecolor="#ffffff"\n     bordercolor="#666666"\n     borderopacity="1.0"\n     inkscape:pageopacity="0.0"\n     inkscape:pageshadow="2"\n     inkscape:zoom="0.45254834"\n     inkscape:cx="811.70031"\n     inkscape:cy="1077.9584"\n     inkscape:document-units="px"\n     inkscape:current-layer="layer1"\n     showgrid="true"\n     units="px"\n     showguides="false"\n     inkscape:window-width="1920"\n     inkscape:window-height="1028"\n     inkscape:window-x="0"\n     inkscape:window-y="0"\n     inkscape:window-maximized="1">\n    <inkscape:grid\n       type="xygrid"\n       id="grid4008"\n       empspacing="20"\n       dotted="false" />\n  </sodipodi:namedview>\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title />\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     inkscape:label="Ebene 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(0,947.63784)">\n    <path\n       style="opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none"\n       id="path4135"\n       d="m 212.27677,-529.63785 0,382.36913 1574.78513,0 0,-382.36913 z"\n       inkscape:connector-curvature="0"\n       sodipodi:nodetypes="ccccc" />\n    <path\n       style="opacity:1;fill:none;fill-opacity:0.28037385;stroke:#000000;stroke-width:70;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none"\n       d="m 213.10529,52.362159 0,-581.999999 1573.78941,0 0,581.999999 0,582.000001 -1186.8947,0 0,-790.394 0,790.394 -386.89471,0 0,-401.56446 1573.78941,0 -1573.78941,0 z"\n       id="rect4139"\n       inkscape:connector-curvature="0"\n       sodipodi:nodetypes="ccccccccccscc" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addServiceTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   width="2000"\n   height="2000"\n   viewBox="0 0 2000 2000"\n   id="svg2"\n   version="1.1">\n  <defs\n     id="defs4" />\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     id="layer6"\n     style="display:inline">\n    <path\n       id="path4170"\n       d="M 825.74609 438.17383 C 825.69979 475.1723 825.7563 512.17163 825.85156 549.16992 C 794.29829 558.09661 765.46524 570.55412 738.23633 585.81445 L 658.6543 507.18945 L 509.84766 656.85742 L 589.42383 735.46875 C 574.05216 763.02029 562.04871 792.29945 553.67188 822.71094 L 440.94727 822.91602 L 440.94727 1033.7051 L 554.84961 1033.2949 C 565.26551 1074.5933 587.93422 1111.7201 610.51172 1144.918 L 610.51172 963.09375 L 510.94727 963.45117 L 510.94727 892.78906 L 610.01562 892.60938 L 615.57617 864.4375 C 623.68569 823.35291 639.74603 784.18805 662.82031 749.14453 L 678.60547 725.17188 L 609.00195 656.41016 L 659.0957 606.02539 L 728.82617 674.91797 L 752.55664 659.08203 C 788.8205 635.15649 828.48451 619.11851 868.03711 610.76562 L 895.99609 604.96094 L 895.74609 508.17578 L 967.71289 508.17578 L 967.15625 604.45703 L 995.58398 604.45703 L 1155.9902 604.45703 C 1138.2768 583.31338 1064.8698 555.79938 1037.4824 548.13281 L 1038.1172 438.17578 C 959.71716 438.17378 898.25174 438.18016 825.74609 438.17383 z M 1024.9043 639.83203 L 1025.1914 750.82422 C 993.63698 759.75091 964.80383 772.20673 937.57422 787.46875 L 857.99023 708.84375 L 709.18359 858.51172 L 788.76172 937.12305 C 773.38937 964.67608 761.38462 993.9543 753.00781 1024.3672 L 640.28516 1024.5703 L 640.28516 1235.3594 L 754.18555 1234.9512 C 763.15098 1266.2082 775.57969 1294.751 790.81055 1321.6973 L 709.31641 1402.873 L 859.78125 1550.752 L 940.98242 1469.9277 C 968.79672 1485.3724 998.3629 1497.3637 1029.0156 1505.709 L 1029.0684 1620.4219 C 1101.4601 1621.0557 1178.5354 1620.7292 1240.4043 1620.7227 L 1240.4043 1504.6523 C 1271.9821 1495.7485 1300.9053 1483.2014 1328.1406 1467.9473 L 1409.2754 1547.9434 L 1558.1797 1398.4629 L 1476.875 1318.3398 C 1492.282 1290.7142 1504.2874 1261.3861 1512.6738 1230.9414 L 1623.0527 1230.2598 L 1623.0527 1019.6738 L 1511.4355 1020.3535 C 1502.4631 989.06652 1490.2142 960.71674 1474.7812 933.5918 L 1551.9023 856.27344 L 1401.5215 708.14258 L 1324.5 785.42773 C 1296.7997 770.10877 1267.3537 758.14537 1236.8203 749.78906 L 1237.4531 639.83203 L 1024.9043 639.83203 z M 1095.084 709.83203 L 1167.0508 709.83203 L 1166.4961 806.11523 L 1194.9219 811.69336 C 1236.1943 819.79239 1275.7525 835.83275 1310.9375 858.76562 L 1334.7617 874.29492 L 1401.9785 806.84961 L 1452.5957 856.71094 L 1385.2852 924.19336 L 1401.4805 948.09961 C 1425.2452 983.9725 1441.0088 1022.7495 1449.9082 1062.6797 L 1455.7637 1090.6914 L 1553.0449 1090.0996 L 1553.0449 1160.6895 L 1456.3066 1161.2852 L 1450.75 1189.2969 C 1442.5902 1230.4276 1426.5649 1269.591 1403.4512 1304.6953 L 1387.6484 1328.7012 L 1458.9062 1398.9238 L 1408.8203 1449.2031 L 1337.5547 1378.9375 L 1313.8652 1394.6758 C 1277.59 1418.3823 1238.2406 1434.7985 1198.541 1442.8867 L 1170.3965 1448.5078 L 1170.3965 1550.7227 C 1151.1555 1550.7694 1130.1656 1550.7393 1099.0273 1550.6953 L 1098.9824 1449.2461 L 1070.7109 1443.7246 C 1029.3808 1435.6538 989.8877 1419.6871 954.76367 1396.6582 L 931.00977 1381.084 L 859.46875 1452.2949 L 808.84375 1402.5371 L 880.48438 1331.1758 L 864.13672 1307.1719 C 840.34989 1271.3777 824.61382 1232.5596 815.69922 1192.6758 L 809.84961 1164.75 L 710.28516 1165.1055 L 710.28516 1094.4453 L 809.35352 1094.2637 L 814.91406 1066.0957 C 823.02364 1025.0108 839.08423 985.84383 862.1582 950.80078 L 877.94336 926.82617 L 808.33789 858.06445 L 858.43164 807.67969 L 928.16406 876.57227 L 951.89453 860.73828 C 988.20439 836.96856 1026.7354 821.19689 1067.375 812.42383 L 1095.3359 806.61914 L 1095.084 709.83203 z M 1132.25 967.03516 C 1045.6031 967.03516 974.61133 1038.0288 974.61133 1124.6758 C 974.61133 1211.3228 1045.6031 1282.3125 1132.25 1282.3125 C 1218.8969 1282.3125 1289.8887 1211.3228 1289.8887 1124.6758 C 1289.8887 1038.0288 1218.8969 967.03516 1132.25 967.03516 z M 1132.25 1037.0352 C 1181.0662 1037.0352 1219.8887 1075.8597 1219.8887 1124.6758 C 1219.8887 1173.4919 1181.0662 1212.3125 1132.25 1212.3125 C 1083.4338 1212.3125 1044.6133 1173.4919 1044.6133 1124.6758 C 1044.6133 1075.8597 1083.4338 1037.0352 1132.25 1037.0352 z "\n       style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate" />\n  </g>\n  <g\n     id="layer1"\n     transform="translate(0,949.63784)"\n     style="display:inline">\n    <g\n       id="g4137"\n       transform="matrix(1.1161206,0,0,1.1161228,91.593841,25.188891)" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addSendTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   width="2000"\n   height="2000"\n   viewBox="0 0 2000 2000"\n   id="svg2"\n   version="1.1"\n   inkscape:version="0.91 r"\n   sodipodi:docname="send.svg">\n  <defs\n     id="defs4" />\n  <sodipodi:namedview\n     id="base"\n     pagecolor="#ffffff"\n     bordercolor="#666666"\n     borderopacity="1.0"\n     inkscape:pageopacity="0.0"\n     inkscape:pageshadow="2"\n     inkscape:zoom="0.22627417"\n     inkscape:cx="1062.5989"\n     inkscape:cy="892.16496"\n     inkscape:document-units="px"\n     inkscape:current-layer="layer4"\n     showgrid="true"\n     units="px"\n     showguides="false"\n     inkscape:window-width="1920"\n     inkscape:window-height="1028"\n     inkscape:window-x="0"\n     inkscape:window-y="0"\n     inkscape:window-maximized="1"\n     inkscape:snap-grids="true"\n     inkscape:snap-object-midpoints="false">\n    <inkscape:grid\n       type="xygrid"\n       id="grid4008"\n       empspacing="20"\n       dotted="false" />\n  </sodipodi:namedview>\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     inkscape:groupmode="layer"\n     id="layer4"\n     inkscape:label="Ebene 1"\n     style="display:inline">\n    <path\n       style="color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"\n       d="M 198 484 L 1000 938 L 1802 484 L 198 484 z M 200 652 L 200 1548 L 1804 1548 L 1804 652 L 1000 1100 L 200 652 z "\n       id="path6822" />\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addReceiveTask(q){return this.addElement(new Zn(q,new li)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg\n   xmlns:dc="http://purl.org/dc/elements/1.1/"\n   xmlns:cc="http://creativecommons.org/ns#"\n   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n   xmlns:svg="http://www.w3.org/2000/svg"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   version="1.1"\n   id="svg2"\n   viewBox="0 0 2000 2000"\n   height="2000"\n   width="2000"\n   inkscape:version="0.91 r"\n   sodipodi:docname="receive.svg">\n  <sodipodi:namedview\n     pagecolor="#ffffff"\n     bordercolor="#666666"\n     borderopacity="1"\n     objecttolerance="10"\n     gridtolerance="10"\n     guidetolerance="10"\n     inkscape:pageopacity="0"\n     inkscape:pageshadow="2"\n     inkscape:window-width="1630"\n     inkscape:window-height="947"\n     id="namedview8"\n     showgrid="false"\n     inkscape:zoom="0.472"\n     inkscape:cx="864.05386"\n     inkscape:cy="948.4855"\n     inkscape:window-x="50"\n     inkscape:window-y="50"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer2" />\n  <defs\n     id="defs4" />\n  <metadata\n     id="metadata7">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about="">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />\n        <dc:title></dc:title>\n        <cc:license\n           rdf:resource="https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE" />\n        <dc:creator>\n          <cc:Agent>\n            <dc:title>Jörg Dotzki</dc:title>\n          </cc:Agent>\n        </dc:creator>\n        <dc:subject>\n          <rdf:Bag>\n            <rdf:li>BPMN</rdf:li>\n            <rdf:li>bpmn-io</rdf:li>\n            <rdf:li>bpmn.io</rdf:li>\n            <rdf:li>Font</rdf:li>\n          </rdf:Bag>\n        </dc:subject>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     style="display:inline"\n     id="layer2">\n    <g\n       id="g4251">\n      <path\n         id="path6159"\n         style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:70;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate"\n         d="m 189,465 0,1070 1622,0 0,-1070 -1622,0 z M 356.88086,535 1643.1191,535 1000,958.10547 356.88086,535 Z M 259,554.39648 1000,1041.8945 1741,554.39648 1741,1465 l -1482,0 0,-910.60352 z" />\n    </g>\n  </g>\n</svg>\n',"top-left",ai.Dimensions.ICON_SIZE_SMALL)}addGateway(q){return this.addExclusiveGateway(q)}addInclusiveGateway(q){return this.addElement(new Zn(q,new ei)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.758311mm"\n   height="13.758311mm"\n   viewBox="0 0 13.758311 13.758311"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"\n   sodipodi:docname="inclusive.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#ffffff"\n     bordercolor="#000000"\n     borderopacity="0.25"\n     inkscape:showpageshadow="2"\n     inkscape:pageopacity="0.0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#d1d1d1"\n     inkscape:document-units="mm"\n     inkscape:zoom="8.8470394"\n     inkscape:cx="30.349136"\n     inkscape:cy="27.636364"\n     inkscape:window-width="1104"\n     inkscape:window-height="784"\n     inkscape:window-x="0"\n     inkscape:window-y="38"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-101.73231,-141.68439)">\n    <path\n       style="display:inline;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;stroke-width:0;stroke-dasharray:none;stroke:none"\n       d="m 25,10.75 c -7.855252,0 -14.25,6.394748 -14.25,14.25 0,7.855252 6.394748,14.25 14.25,14.25 7.855252,0 14.25,-6.394748 14.25,-14.25 0,-7.855252 -6.394748,-14.25 -14.25,-14.25 z m 0,2.5 c 6.504152,0 11.75,5.245848 11.75,11.75 0,6.504152 -5.245848,11.75 -11.75,11.75 -6.504152,0 -11.75,-5.245848 -11.75,-11.75 0,-6.504152 5.245848,-11.75 11.75,-11.75 z"\n       id="path2"\n       transform="matrix(0.26458333,0,0,0.26458333,101.99688,141.94896)" />\n    <rect\n       x="102.52605"\n       y="142.47813"\n       rx="1.0583333"\n       width="12.170834"\n       height="12.170834"\n       class="djs-outline"\n       style="fill:none;stroke-width:0.264583"\n       id="rect105" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addExclusiveGateway(q){return this.addElement(new Zn(q,new ei)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.758311mm"\n   height="13.758311mm"\n   viewBox="0 0 13.758311 13.758311"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"\n   sodipodi:docname="exclusive.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#ffffff"\n     bordercolor="#000000"\n     borderopacity="0.25"\n     inkscape:showpageshadow="2"\n     inkscape:pageopacity="0.0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#d1d1d1"\n     inkscape:document-units="mm"\n     inkscape:zoom="4.1672912"\n     inkscape:cx="41.63376"\n     inkscape:cy="36.714497"\n     inkscape:window-width="1104"\n     inkscape:window-height="719"\n     inkscape:window-x="0"\n     inkscape:window-y="38"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-101.7323,-141.68439)">\n    <path\n       style="display:inline;fill:#22242a;stroke-linecap:round;stroke-linejoin:round"\n       d="M 16,15 23.428571,24.714286 16,34.428571 h 3.428571 l 5.714286,-7.464228 5.714286,7.464228 h 3.428571 L 26.857143,24.714286 34.285714,15 H 30.857143 L 25.142857,22.464229 19.428571,15 Z"\n       id="path1"\n       transform="matrix(0.26458333,0,0,0.26458333,101.99687,141.94896)" />\n    <rect\n       x="102.52604"\n       y="142.47813"\n       rx="1.0583333"\n       width="12.170834"\n       height="12.170834"\n       class="djs-outline"\n       style="fill:none;stroke-width:0.264583"\n       id="rect108" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addParallelGateway(q){return this.addElement(new Zn(q,new ei)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.758311mm"\n   height="13.758311mm"\n   viewBox="0 0 13.758311 13.758311"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"\n   sodipodi:docname="parallel.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#ffffff"\n     bordercolor="#000000"\n     borderopacity="0.25"\n     inkscape:showpageshadow="2"\n     inkscape:pageopacity="0.0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#d1d1d1"\n     inkscape:document-units="mm"\n     inkscape:zoom="2.5054948"\n     inkscape:cx="-2.1951752"\n     inkscape:cy="20.155699"\n     inkscape:window-width="1104"\n     inkscape:window-height="788"\n     inkscape:window-x="0"\n     inkscape:window-y="38"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-101.7323,-141.68439)">\n    <path\n       d="m 108.08229,144.59479 v 3.30729 h -3.3073 v 1.32292 h 3.3073 v 3.30729 h 1.32291 V 149.225 h 3.30729 v -1.32292 h -3.30729 v -3.30729 z"\n       style="fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="path109" />\n    <rect\n       x="102.52604"\n       y="142.47813"\n       rx="1.0583333"\n       width="12.170834"\n       height="12.170834"\n       class="djs-outline"\n       style="fill:none;stroke-width:0.264583"\n       id="rect111" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addEventBasedGateway(q){return this.addElement(new Zn(q,new ei)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.758311mm"\n   height="13.758311mm"\n   viewBox="0 0 13.758311 13.758311"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"\n   sodipodi:docname="event-based.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#ffffff"\n     bordercolor="#000000"\n     borderopacity="0.25"\n     inkscape:showpageshadow="2"\n     inkscape:pageopacity="0.0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#d1d1d1"\n     inkscape:document-units="mm"\n     inkscape:zoom="4.3759929"\n     inkscape:cx="21.36658"\n     inkscape:cy="26.16549"\n     inkscape:window-width="1104"\n     inkscape:window-height="786"\n     inkscape:window-x="0"\n     inkscape:window-y="38"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-1969.426,-2186.3844)">\n    <circle\n       cx="1976.3052"\n       cy="2193.2637"\n       r="3.96875"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle112" />\n    <circle\n       cx="1976.3052"\n       cy="2193.2637"\n       r="3.175"\n       style="fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round"\n       id="circle113" />\n    <path\n       d="m 1974.4531,2192.4698 1.9483,-1.2988 1.9483,1.2988 -0.6494,2.5978 h -2.5978 z"\n       style="fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round"\n       id="path113" />\n    <rect\n       x="1970.2197"\n       y="2187.1782"\n       rx="1.0583333"\n       width="12.170834"\n       height="12.170834"\n       class="djs-outline"\n       style="fill:none;stroke-width:0.264583"\n       id="rect114" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_LARGE)}addComplexGateway(q){return this.addElement(new Zn(q,new ei)).addIcon('<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n\n<svg\n   width="13.758311mm"\n   height="13.758311mm"\n   viewBox="0 0 13.758311 13.758311"\n   version="1.1"\n   id="svg1"\n   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"\n   sodipodi:docname="complex.svg"\n   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n   xmlns="http://www.w3.org/2000/svg"\n   xmlns:svg="http://www.w3.org/2000/svg">\n  <sodipodi:namedview\n     id="namedview1"\n     pagecolor="#ffffff"\n     bordercolor="#000000"\n     borderopacity="0.25"\n     inkscape:showpageshadow="2"\n     inkscape:pageopacity="0.0"\n     inkscape:pagecheckerboard="0"\n     inkscape:deskcolor="#d1d1d1"\n     inkscape:document-units="mm"\n     inkscape:zoom="4.8390424"\n     inkscape:cx="39.987251"\n     inkscape:cy="19.218679"\n     inkscape:window-width="1104"\n     inkscape:window-height="827"\n     inkscape:window-x="0"\n     inkscape:window-y="38"\n     inkscape:window-maximized="0"\n     inkscape:current-layer="layer1" />\n  <defs\n     id="defs1" />\n  <g\n     inkscape:label="Layer 1"\n     inkscape:groupmode="layer"\n     id="layer1"\n     transform="translate(-101.73231,-141.68439)">\n    <g\n       id="path115"\n       style="fill:#22242a;fill-opacity:1;stroke:none;stroke-width:0;stroke-dasharray:none"\n       transform="matrix(0.26458333,0,0,0.26458333,-13.62604,-21.563537)">\n      <path\n         style="fill:#22242a;fill-opacity:1;stroke:none;stroke-width:0;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none"\n         d="m 460,631 v 7.11679 l -5.01825,-5.01825 -3.10219,3.10219 5.01825,5.01825 h -7.11679 v 4.37956 h 7.11679 l -5.01825,5.01825 3.10219,3.10219 L 460,648.70073 v 7.11679 h 4.37956 v -7.11679 l 5.01825,5.01825 3.10219,-3.10219 -5.01825,-5.01825 h 7.11679 v -4.37956 h -7.11679 l 5.01825,-5.01825 -3.10219,-3.10219 -5.01825,5.01825 V 631 Z"\n         id="path211" />\n    </g>\n    <rect\n       x="102.52604"\n       y="142.47813"\n       rx="1.0583333"\n       width="12.170834"\n       height="12.170834"\n       class="djs-outline"\n       style="fill:none;stroke-width:0.264583"\n       id="rect117" />\n  </g>\n</svg>\n',"center",ai.Dimensions.ICON_SIZE_MEDIUM)}addFlowConnector(q,t){return this.addConnector(new Wn(q,new Gn(t)))}import(q){if(!q)return void console.error("No file provided for import.");const t=new FileReader;t.onload=t=>{if(q.name.endsWith(".bpmn")){const q=(new DOMParser).parseFromString(t.target.result,"text/xml");console.log(q),this.buildDiagram(q)}else console.warn("File format not supported.")},t.readAsText(q)}buildDiagram(q){const t="http://www.omg.org/spec/BPMN/20100524/MODEL",l="http://www.omg.org/spec/BPMN/20100524/DI",n="http://www.omg.org/spec/DD/20100524/DC",i=q.getElementsByTagNameNS(t,"startEvent");for(let e=0;e<i.length;e++){const q=i[e].getAttribute("id");console.log("startEventId:",q);const l=i[e].getElementsByTagNameNS(t,"name");console.log("name:",l);const n=i[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const o=i[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",o);for(let t=0;t<o.length;t++)console.log("outgoing:",o[t].textContent);i[e].getElementsByTagNameNS(t,"messageEventDefinition").length>0?this.addMessageStartEvent(q):i[e].getElementsByTagNameNS(t,"timerEventDefinition").length>0?this.addTimerStartEvent(q):i[e].getElementsByTagNameNS(t,"conditionalEventDefinition").length>0?this.addConditionalStartEvent(q):i[e].getElementsByTagNameNS(t,"signalEventDefinition").length>0?this.addSignalStartEvent(q):this.addStartEvent(q)}const o=q.getElementsByTagNameNS(t,"endEvent");for(let e=0;e<o.length;e++){const q=o[e].getAttribute("id");console.log("endEventId:",q);const l=o[e].getElementsByTagNameNS(t,"name");console.log("name:",l);const n=o[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=o[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);o[e].getElementsByTagNameNS(t,"messageEventDefinition").length>0?this.addMessageEndEvent(q):o[e].getElementsByTagNameNS(t,"escalationEventDefinition").length>0?this.addEscalationEndEvent(q):o[e].getElementsByTagNameNS(t,"errorEventDefinition").length>0?this.addErrorEndEvent(q):o[e].getElementsByTagNameNS(t,"compensateEventDefinition").length>0?this.addCompensateEndEvent(q):o[e].getElementsByTagNameNS(t,"signalEventDefinition").length>0?this.addSignalEndEvent(q):o[e].getElementsByTagNameNS(t,"terminateEventDefinition").length>0?this.addTerminateEndEvent(q):this.addEndEvent(q)}const s=q.getElementsByTagNameNS(t,"intermediateCatchEvent");for(let e=0;e<s.length;e++){const q=s[e].getAttribute("id");console.log("intermediateCatchEventId:",q);const l=s[e].getElementsByTagNameNS(t,"name");console.log("name:",l);const n=s[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=s[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);s[e].getElementsByTagNameNS(t,"messageEventDefinition").length>0?this.addIntermediateMessageCatchEvent(q):s[e].getElementsByTagNameNS(t,"timerEventDefinition").length>0?this.addIntermediateTimerEvent(q):s[e].getElementsByTagNameNS(t,"conditionalEventDefinition").length>0?this.addIntermediateConditionalEvent(q):s[e].getElementsByTagNameNS(t,"linkEventDefinition").length>0?this.addIntermediateLinkCatchEvent(q):s[e].getElementsByTagNameNS(t,"signalEventDefinition").length>0?this.addIntermediateSignalCatchEvent(q):this.addIntermediateEvent(q)}const a=q.getElementsByTagNameNS(t,"intermediateThrowEvent");for(let e=0;e<a.length;e++){const q=a[e].getAttribute("id");console.log("intermediateThrowEventId:",q);const l=a[e].getElementsByTagNameNS(t,"name");console.log("name:",l);const n=a[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=a[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);a[e].getElementsByTagNameNS(t,"messageEventDefinition").length>0?this.addIntermediateMessageThrowEvent(q):a[e].getElementsByTagNameNS(t,"escalationEventDefinition").length>0?this.addIntermediateEscalationEvent(q):a[e].getElementsByTagNameNS(t,"linkEventDefinition").length>0?this.addIntermediateLinkThrowEvent(q):a[e].getElementsByTagNameNS(t,"compensateEventDefinition").length>0?this.addIntermediateCompensationEvent(q):a[e].getElementsByTagNameNS(t,"signalEventDefinition").length>0?this.addIntermediateSignalThrowEvent(q):this.addIntermediateEvent(q)}const r=q.getElementsByTagNameNS(t,"task");for(let e=0;e<r.length;e++){const q=r[e].getAttribute("id");console.log("taskId:",q);const l=r[e].getAttribute("name");console.log("name:",l);const n=r[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=r[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addTask(q).addWrappedText(l)}const m=q.getElementsByTagNameNS(t,"manualTask");for(let e=0;e<m.length;e++){const q=m[e].getAttribute("id");console.log("manualTaskId:",q);const l=m[e].getAttribute("name");console.log("name:",l);const n=m[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=m[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addManualTask(q).addWrappedText(l)}const h=q.getElementsByTagNameNS(t,"userTask");for(let e=0;e<h.length;e++){const q=h[e].getAttribute("id");console.log("userTaskId:",q);const l=h[e].getAttribute("name");console.log("name:",l);const n=h[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=h[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addUserTask(q).addWrappedText(l)}const c=q.getElementsByTagNameNS(t,"scriptTask");for(let e=0;e<c.length;e++){const q=c[e].getAttribute("id");console.log("scriptTaskId:",q);const l=c[e].getAttribute("name");console.log("name:",l);const n=c[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=c[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addScriptTask(q).addWrappedText(l)}const d=q.getElementsByTagNameNS(t,"businessRuleTask");for(let e=0;e<d.length;e++){const q=d[e].getAttribute("id");console.log("businessRuleTaskId:",q);const l=d[e].getAttribute("name");console.log("name:",l);const n=d[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=d[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addBusinessRuleTask(q).addWrappedText(l)}const x=q.getElementsByTagNameNS(t,"serviceTask");for(let e=0;e<x.length;e++){const q=x[e].getAttribute("id");console.log("serviceTaskId:",q);const l=x[e].getAttribute("name");console.log("name:",l);const n=x[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=x[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addServiceTask(q).addWrappedText(l)}const u=q.getElementsByTagNameNS(t,"sendTask");for(let e=0;e<u.length;e++){const q=u[e].getAttribute("id");console.log("sendTaskId:",q);const l=u[e].getAttribute("name");console.log("name:",l);const n=u[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=u[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addSendTask(q).addWrappedText(l)}const p=q.getElementsByTagNameNS(t,"receiveTask");for(let e=0;e<p.length;e++){const q=p[e].getAttribute("id");console.log("receiveTaskId:",q);const l=p[e].getAttribute("name");console.log("name:",l);const n=p[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=p[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addReceiveTask(q).addWrappedText(l)}const g=q.getElementsByTagNameNS(t,"inclusiveGateway");for(let e=0;e<g.length;e++){const q=g[e].getAttribute("id");console.log("gatewayId:",q);const l=g[e].getAttribute("name");console.log("name:",l);const n=g[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=g[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addInclusiveGateway(q)}const _=q.getElementsByTagNameNS(t,"exclusiveGateway");for(let e=0;e<_.length;e++){const q=_[e].getAttribute("id");console.log("gatewayId:",q);const l=_[e].getAttribute("name");console.log("name:",l);const n=_[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=_[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addExclusiveGateway(q)}const y=q.getElementsByTagNameNS(t,"parallelGateway");for(let e=0;e<y.length;e++){const q=y[e].getAttribute("id");console.log("gatewayId:",q);const l=y[e].getAttribute("name");console.log("name:",l);const n=y[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=y[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addParallelGateway(q)}const f=q.getElementsByTagNameNS(t,"eventBasedGateway");for(let e=0;e<f.length;e++){const q=f[e].getAttribute("id");console.log("gatewayId:",q);const l=f[e].getAttribute("name");console.log("name:",l);const n=f[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=f[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addEventBasedGateway(q)}const w=q.getElementsByTagNameNS(t,"complexGateway");for(let e=0;e<w.length;e++){const q=w[e].getAttribute("id");console.log("gatewayId:",q);const l=w[e].getAttribute("name");console.log("name:",l);const n=w[e].getElementsByTagNameNS(t,"incoming");console.log("incoming:",n);for(let t=0;t<n.length;t++)console.log("incoming:",n[t].textContent);const i=w[e].getElementsByTagNameNS(t,"outgoing");console.log("outgoing:",i);for(let t=0;t<i.length;t++)console.log("outgoing:",i[t].textContent);this.addComplexGateway(q)}const z=q.getElementsByTagNameNS(t,"sequenceFlow");for(let e=0;e<z.length;e++){const q=z[e].getAttribute("id");console.log("sequenceFlowId:",q);const t=z[e].getAttribute("name");console.log("name:",t);const l=z[e].getAttribute("sourceRef");console.log("sourceRef:",l);const n=z[e].getAttribute("targetRef");console.log("targetRef:",n)}const k=q.getElementsByTagNameNS(l,"BPMNShape");for(let v=0;v<k.length;v++){const t=k[v],i=t.getAttribute("id"),o=t.getAttribute("bpmnElement"),s=t.getElementsByTagNameNS(n,"Bounds")[0];if(s){const a=parseFloat(s.getAttribute("x")),r=-1*parseFloat(s.getAttribute("y")),m=parseFloat(s.getAttribute("width")),h=parseFloat(s.getAttribute("height"));console.log(`BPMNShape: ${i}, ${o}, x: ${a}, y: ${r}, width: ${m}, height: ${h}`);const c=new e.Vector3(a+m/2,r-h/2,0),d=this.getElementById(o);let x,u,p,g;d?d.positionAt(c):console.warn(`Element with id ${o} not found.`);const _=t.getElementsByTagNameNS(l,"BPMNLabel");if(_.length>0){const t=_[0].getElementsByTagNameNS(n,"Bounds")[0];if(t){x=parseFloat(t.getAttribute("x")),u=-1*parseFloat(t.getAttribute("y")),p=parseFloat(t.getAttribute("width")),g=parseFloat(t.getAttribute("height")),console.log(`Label position (Shape): x: ${x}, y: ${u}, width: ${p}, height: ${g}`);const l=q.getElementById(o).getAttribute("name");if(console.log(`bpmnElementName: ${l}`),l){const q=new e.Vector3(x+p/2,u-g/2,0);this.addElement(new Zn("t1",new Sn(l))).positionAt(q)}}}}}const b=q.getElementsByTagNameNS(l,"BPMNEdge");for(let v=0;v<b.length;v++){const q=b[v],t=q.getAttribute("id"),i=q.getAttribute("bpmnElement"),o=Array.from(z).find((q=>q.getAttribute("id")===i)),s=o?o.getAttribute("name"):null,a=q.getElementsByTagNameNS("http://www.omg.org/spec/DD/20100524/DI","waypoint"),r=[];for(let l=0;l<a.length;l++){const q=a[l],t=parseFloat(q.getAttribute("x")),n=-1*parseFloat(q.getAttribute("y"));r.push(new e.Vector2(t,n)),console.log(`BPMNEdge: ${i}, x: ${t}, y: ${n}`)}let m,h,c,d;console.log("connectorPoints:",r),this.addConnector(this.addFlowConnector(t,r));const x=q.getElementsByTagNameNS(l,"BPMNLabel");if(x.length>0){const q=x[0].getElementsByTagNameNS(n,"Bounds")[0];q&&(m=parseFloat(q.getAttribute("x")),h=-1*parseFloat(q.getAttribute("y")),c=parseFloat(q.getAttribute("width")),d=parseFloat(q.getAttribute("height")),console.log(`Label position: x: ${m}, y: ${h}, width: ${c}, height: ${d}`))}if(s){const q=new e.Vector3(m+c/2,h-d/2,0);this.addElement(new Zn("t1",new Sn(s))).positionAt(q)}}this.arrange()}}q.BpmnDiagram=ai,Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})}));
//# sourceMappingURL=bpmn-diagram.umd.js.map
