{"version":3,"file":"bpmn-diagram.es.js","sources":["../node_modules/@tweenjs/tween.js/dist/tween.esm.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","../node_modules/three/examples/jsm/controls/MapControls.js","../node_modules/three/src/nodes/core/constants.js","../node_modules/three/src/math/MathUtils.js","../node_modules/three/src/constants.js","../node_modules/three/src/math/Matrix3.js","../node_modules/three/src/math/ColorManagement.js","../node_modules/three/src/math/Color.js","../node_modules/three/src/math/Quaternion.js","../node_modules/three/src/math/Vector3.js","../node_modules/three/src/math/Matrix4.js","../node_modules/three/src/math/Vector2.js","../node_modules/three/src/math/Vector4.js","../node_modules/three/src/nodes/core/NodeUtils.js","../node_modules/three/src/core/EventDispatcher.js","../node_modules/three/src/nodes/core/Node.js","../node_modules/three/src/nodes/utils/ArrayElementNode.js","../node_modules/three/src/nodes/utils/ConvertNode.js","../node_modules/three/src/nodes/core/TempNode.js","../node_modules/three/src/nodes/utils/JoinNode.js","../node_modules/three/src/nodes/utils/SplitNode.js","../node_modules/three/src/nodes/utils/SetNode.js","../node_modules/three/src/nodes/utils/FlipNode.js","../node_modules/three/src/nodes/core/InputNode.js","../node_modules/three/src/nodes/core/ConstNode.js","../node_modules/three/src/nodes/tsl/TSLCore.js","../node_modules/three/src/nodes/core/UniformGroupNode.js","../node_modules/three/src/nodes/core/UniformNode.js","../node_modules/three/src/nodes/core/PropertyNode.js","../node_modules/three/src/nodes/core/AssignNode.js","../node_modules/three/src/nodes/code/FunctionCallNode.js","../node_modules/three/src/nodes/math/OperatorNode.js","../node_modules/three/src/nodes/math/MathNode.js","../node_modules/three/src/nodes/math/ConditionalNode.js","../node_modules/three/src/nodes/core/ContextNode.js","../node_modules/three/src/nodes/core/VarNode.js","../node_modules/three/src/nodes/core/VaryingNode.js","../node_modules/three/src/nodes/display/ColorSpaceFunctions.js","../node_modules/three/src/nodes/display/ColorSpaceNode.js","../node_modules/three/src/nodes/accessors/ReferenceBaseNode.js","../node_modules/three/src/nodes/accessors/RendererReferenceNode.js","../node_modules/three/src/nodes/display/ToneMappingNode.js","../node_modules/three/src/core/BufferAttribute.js","../node_modules/three/src/core/InterleavedBufferAttribute.js","../node_modules/three/src/core/InterleavedBuffer.js","../node_modules/three/src/nodes/accessors/BufferAttributeNode.js","../node_modules/three/src/nodes/gpgpu/ComputeNode.js","../node_modules/three/src/nodes/core/CacheNode.js","../node_modules/three/src/nodes/core/BypassNode.js","../node_modules/three/src/nodes/utils/RemapNode.js","../node_modules/three/src/nodes/code/ExpressionNode.js","../node_modules/three/src/nodes/utils/Discard.js","../node_modules/three/src/nodes/display/RenderOutputNode.js","../lib/diagrams/Diagram.js","../lib/diagrams/DiagramConstants.js","../lib/shapes/Shape.js","../lib/materials/DiagramEditMaterial.js","../lib/shapes/basic/BoxShape.js","../node_modules/three/examples/jsm/loaders/FontLoader.js","../node_modules/three/examples/jsm/geometries/TextGeometry.js","../lib/shapes/text/TextShape.js","../lib/shapes/icon/IconConstants.js","../node_modules/three/examples/jsm/loaders/SVGLoader.js","../node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","../lib/shapes/icon/IconShape.js","../lib/materials/BarMaterial.js","../lib/shapes/bar/ValueBarConstants.js","../lib/shapes/bar/ValueBarShape.js","../lib/shapes/connector/ConnectorConstants.js","../lib/shapes/connector/RoundedCornerOrthogonalConnectorShape.js","../lib/connectors/Connector.js","../lib/elements/Element.js","../lib/shapes/basic/BasicShapeConstants.js","../lib/shapes/basic/CircleShape.js","../lib/shapes/basic/RoundedRectangleShape.js","../lib/shapes/basic/DiamondShape.js","../lib/shapes/icon/bpmn/activities/manual.svg?raw","../lib/shapes/icon/bpmn/activities/user.svg?raw","../lib/shapes/icon/bpmn/activities/script.svg?raw","../lib/shapes/icon/bpmn/activities/business-rule.svg?raw","../lib/shapes/icon/bpmn/activities/service.svg?raw","../lib/shapes/icon/bpmn/activities/send.svg?raw","../lib/shapes/icon/bpmn/activities/receive.svg?raw","../lib/shapes/icon/bpmn/gateways/inclusive.svg?raw","../lib/shapes/icon/bpmn/gateways/exclusive.svg?raw","../lib/shapes/icon/bpmn/gateways/parallel.svg?raw","../lib/shapes/icon/bpmn/gateways/event-based.svg?raw","../lib/shapes/icon/bpmn/gateways/complex.svg?raw","../lib/shapes/icon/bpmn/events/compensation.svg?raw","../lib/shapes/icon/bpmn/events/conditional.svg?raw","../lib/shapes/icon/bpmn/events/error.svg?raw","../lib/shapes/icon/bpmn/events/escalation.svg?raw","../lib/shapes/icon/bpmn/events/intermediate.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-compensation.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-conditional.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-escalation.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-link-catch.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-link-throw.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-receive.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-send.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-signal-catch.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-signal-throw.svg?raw","../lib/shapes/icon/bpmn/events/intermediate-timer.svg?raw","../lib/shapes/icon/bpmn/events/message-end.svg?raw","../lib/shapes/icon/bpmn/events/message-start.svg?raw","../lib/shapes/icon/bpmn/events/signal-end.svg?raw","../lib/shapes/icon/bpmn/events/signal-start.svg?raw","../lib/shapes/icon/bpmn/events/terminate.svg?raw","../lib/shapes/icon/bpmn/events/timer.svg?raw","../node_modules/tween.js/src/Tween.js","../lib/notations/BpmnDiagram.js"],"sourcesContent":["/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = Object.freeze({\n    Linear: Object.freeze({\n        None: function (amount) {\n            return amount;\n        },\n        In: function (amount) {\n            return amount;\n        },\n        Out: function (amount) {\n            return amount;\n        },\n        InOut: function (amount) {\n            return amount;\n        },\n    }),\n    Quadratic: Object.freeze({\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    }),\n    Cubic: Object.freeze({\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    }),\n    Quartic: Object.freeze({\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    }),\n    Quintic: Object.freeze({\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    }),\n    Sinusoidal: Object.freeze({\n        In: function (amount) {\n            return 1 - Math.sin(((1.0 - amount) * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.sin(Math.PI * (0.5 - amount)));\n        },\n    }),\n    Exponential: Object.freeze({\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    }),\n    Circular: Object.freeze({\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    }),\n    Elastic: Object.freeze({\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    }),\n    Back: Object.freeze({\n        In: function (amount) {\n            var s = 1.70158;\n            return amount === 1 ? 1 : amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return amount === 0 ? 0 : --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    }),\n    Bounce: Object.freeze({\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    }),\n    generatePow: function (power) {\n        if (power === void 0) { power = 4; }\n        power = power < Number.EPSILON ? Number.EPSILON : power;\n        power = power > 10000 ? 10000 : power;\n        return {\n            In: function (amount) {\n                return Math.pow(amount, power);\n            },\n            Out: function (amount) {\n                return 1 - Math.pow((1 - amount), power);\n            },\n            InOut: function (amount) {\n                if (amount < 0.5) {\n                    return Math.pow((amount * 2), power) / 2;\n                }\n                return (1 - Math.pow((2 - amount * 2), power)) / 2 + 0.5;\n            },\n        };\n    },\n});\n\nvar now = function () { return performance.now(); };\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n        this.add.apply(this, tweens);\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) { return _this._tweens[tweenId]; });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function () {\n        var _a;\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        for (var _b = 0, tweens_1 = tweens; _b < tweens_1.length; _b++) {\n            var tween = tweens_1[_b];\n            // Remove from any other group first, a tween can only be in one group at a time.\n            // @ts-expect-error library internal access\n            (_a = tween._group) === null || _a === void 0 ? void 0 : _a.remove(tween);\n            // @ts-expect-error library internal access\n            tween._group = this;\n            this._tweens[tween.getId()] = tween;\n            this._tweensAddedDuringUpdate[tween.getId()] = tween;\n        }\n    };\n    Group.prototype.remove = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        for (var _a = 0, tweens_2 = tweens; _a < tweens_2.length; _a++) {\n            var tween = tweens_2[_a];\n            // @ts-expect-error library internal access\n            tween._group = undefined;\n            delete this._tweens[tween.getId()];\n            delete this._tweensAddedDuringUpdate[tween.getId()];\n        }\n    };\n    /** Return true if all tweens in the group are not paused or playing. */\n    Group.prototype.allStopped = function () {\n        return this.getAll().every(function (tween) { return !tween.isPlaying(); });\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now(); }\n        if (preserve === void 0) { preserve = true; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0)\n            return;\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve)\n                    this.remove(tween);\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(object, group) {\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._isDynamic = false;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        // eslint-disable-next-line\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._onEveryStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._propertiesAreSetUp = false;\n        this._goToEnd = false;\n        this._object = object;\n        if (typeof group === 'object') {\n            this._group = group;\n            group.add(this);\n        }\n        // Use \"true\" to restore old behavior (will be removed in future release).\n        else if (group === true) {\n            this._group = mainGroup;\n            mainGroup.add(this);\n        }\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.getDuration = function () {\n        return this._duration;\n    };\n    Tween.prototype.to = function (target, duration) {\n        if (duration === void 0) { duration = 1000; }\n        if (this._isPlaying)\n            throw new Error('Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.');\n        this._valuesEnd = target;\n        this._propertiesAreSetUp = false;\n        this._duration = duration < 0 ? 0 : duration;\n        return this;\n    };\n    Tween.prototype.duration = function (duration) {\n        if (duration === void 0) { duration = 1000; }\n        this._duration = duration < 0 ? 0 : duration;\n        return this;\n    };\n    Tween.prototype.dynamic = function (dynamic) {\n        if (dynamic === void 0) { dynamic = false; }\n        this._isDynamic = dynamic;\n        return this;\n    };\n    Tween.prototype.start = function (time, overrideStartingValues) {\n        if (time === void 0) { time = now(); }\n        if (overrideStartingValues === void 0) { overrideStartingValues = false; }\n        if (this._isPlaying) {\n            return this;\n        }\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._onEveryStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time;\n        this._startTime += this._delayTime;\n        if (!this._propertiesAreSetUp || overrideStartingValues) {\n            this._propertiesAreSetUp = true;\n            // If dynamic is not enabled, clone the end values instead of using the passed-in end values.\n            if (!this._isDynamic) {\n                var tmp = {};\n                for (var prop in this._valuesEnd)\n                    tmp[prop] = this._valuesEnd[prop];\n                this._valuesEnd = tmp;\n            }\n            this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat, overrideStartingValues);\n        }\n        return this;\n    };\n    Tween.prototype.startFromCurrentValues = function (time) {\n        return this.start(time, true);\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat, overrideStartingValues) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // Handle an array of relative values.\n                // Creates a local copy of the Array with the start value at the front\n                var temp = [startValue];\n                for (var i = 0, l = endValues.length; i < l; i += 1) {\n                    var value = this._handleRelativeValue(startValue, endValues[i]);\n                    if (isNaN(value)) {\n                        isInterpolationList = false;\n                        console.warn('Found invalid interpolation list. Skipping.');\n                        break;\n                    }\n                    temp.push(value);\n                }\n                if (isInterpolationList) {\n                    // if (_valuesStart[property] === undefined) { // handle end values only the first time. NOT NEEDED? setupProperties is now guarded by _propertiesAreSetUp.\n                    _valuesEnd[property] = temp;\n                    // }\n                }\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                var nestedObject = startValue;\n                for (var prop in nestedObject) {\n                    _valuesStart[property][prop] = nestedObject[prop];\n                }\n                // TODO? repeat nested values? And yoyo? And array values?\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {};\n                var endValues = _valuesEnd[property];\n                // If dynamic is not enabled, clone the end values instead of using the passed-in end values.\n                if (!this._isDynamic) {\n                    var tmp = {};\n                    for (var prop in endValues)\n                        tmp[prop] = endValues[prop];\n                    _valuesEnd[property] = endValues = tmp;\n                }\n                this._setupProperties(nestedObject, _valuesStart[property], endValues, _valuesStartRepeat[property], overrideStartingValues);\n            }\n            else {\n                // Save the starting value, but only once unless override is requested.\n                if (typeof _valuesStart[property] === 'undefined' || overrideStartingValues) {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(this._startTime + this._duration);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        if (!group) {\n            console.warn('tween.group() without args has been removed, use group.add(tween) instead.');\n            return this;\n        }\n        group.add(this);\n        return this;\n    };\n    /**\n     * Removes the tween from whichever group it is in.\n     */\n    Tween.prototype.remove = function () {\n        var _a;\n        (_a = this._group) === null || _a === void 0 ? void 0 : _a.remove(this);\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        if (amount === void 0) { amount = 0; }\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        if (times === void 0) { times = 0; }\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        if (yoyo === void 0) { yoyo = false; }\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        if (easingFunction === void 0) { easingFunction = Easing.Linear.None; }\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        if (interpolationFunction === void 0) { interpolationFunction = Interpolation.Linear; }\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    // eslint-disable-next-line\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onEveryStart = function (callback) {\n        this._onEveryStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     *\n     * @param autoStart - When true, calling update will implicitly call start()\n     * as well. Note, if you stop() or end() the tween, but are still calling\n     * update(), it will start again!\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        var _this = this;\n        var _a;\n        if (time === void 0) { time = now(); }\n        if (autoStart === void 0) { autoStart = Tween.autoStartOnUpdate; }\n        if (this._isPaused)\n            return true;\n        var property;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (autoStart)\n                this.start(time, true);\n            else\n                return false;\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        if (this._onEveryStartCallbackFired === false) {\n            if (this._onEveryStartCallback) {\n                this._onEveryStartCallback(this._object);\n            }\n            this._onEveryStartCallbackFired = true;\n        }\n        var elapsedTime = time - this._startTime;\n        var durationAndDelay = this._duration + ((_a = this._repeatDelayTime) !== null && _a !== void 0 ? _a : this._delayTime);\n        var totalTime = this._duration + this._repeat * durationAndDelay;\n        var calculateElapsedPortion = function () {\n            if (_this._duration === 0)\n                return 1;\n            if (elapsedTime > totalTime) {\n                return 1;\n            }\n            var timesRepeated = Math.trunc(elapsedTime / durationAndDelay);\n            var timeIntoCurrentRepeat = elapsedTime - timesRepeated * durationAndDelay;\n            // TODO use %?\n            // const timeIntoCurrentRepeat = elapsedTime % durationAndDelay\n            var portion = Math.min(timeIntoCurrentRepeat / _this._duration, 1);\n            if (portion === 0 && elapsedTime === _this._duration) {\n                return 1;\n            }\n            return portion;\n        };\n        var elapsed = calculateElapsedPortion();\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (this._duration === 0 || elapsedTime >= this._duration) {\n            if (this._repeat > 0) {\n                var completeCount = Math.min(Math.trunc((elapsedTime - this._duration) / durationAndDelay) + 1, this._repeat);\n                if (isFinite(this._repeat)) {\n                    this._repeat -= completeCount;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                this._startTime += durationAndDelay * completeCount;\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                this._onEveryStartCallbackFired = false;\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration, false);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        return parseFloat(end);\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    Tween.autoStartOnUpdate = false;\n    return Tween;\n}());\n\nvar VERSION = '25.0.0';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\n/**\n * @deprecated The global TWEEN Group will be removed in a following major\n * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n * group.\n *\n * Old code:\n *\n * ```js\n * import * as TWEEN from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new TWEEN.Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   TWEEN.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n *\n * New code:\n *\n * ```js\n * import {Tween, Group} from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * const group = new Group()\n * group.add(tween)\n * group.add(tween2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   group.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n */\nvar getAll = TWEEN.getAll.bind(TWEEN);\n/**\n * @deprecated The global TWEEN Group will be removed in a following major\n * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n * group.\n *\n * Old code:\n *\n * ```js\n * import * as TWEEN from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new TWEEN.Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   TWEEN.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n *\n * New code:\n *\n * ```js\n * import {Tween, Group} from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * const group = new Group()\n * group.add(tween)\n * group.add(tween2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   group.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n */\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\n/**\n * @deprecated The global TWEEN Group will be removed in a following major\n * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n * group.\n *\n * Old code:\n *\n * ```js\n * import * as TWEEN from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new TWEEN.Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   TWEEN.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n *\n * New code:\n *\n * ```js\n * import {Tween, Group} from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * const group = new Group()\n * group.add(tween)\n * group.add(tween2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   group.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n */\nvar add = TWEEN.add.bind(TWEEN);\n/**\n * @deprecated The global TWEEN Group will be removed in a following major\n * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n * group.\n *\n * Old code:\n *\n * ```js\n * import * as TWEEN from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new TWEEN.Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   TWEEN.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n *\n * New code:\n *\n * ```js\n * import {Tween, Group} from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * const group = new Group()\n * group.add(tween)\n * group.add(tween2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   group.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n */\nvar remove = TWEEN.remove.bind(TWEEN);\n/**\n * @deprecated The global TWEEN Group will be removed in a following major\n * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n * group.\n *\n * Old code:\n *\n * ```js\n * import * as TWEEN from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new TWEEN.Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   TWEEN.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n *\n * New code:\n *\n * ```js\n * import {Tween, Group} from '@tweenjs/tween.js'\n *\n * //...\n *\n * const tween = new Tween(obj)\n * const tween2 = new TWEEN.Tween(obj2)\n *\n * //...\n *\n * const group = new Group()\n * group.add(tween)\n * group.add(tween2)\n *\n * //...\n *\n * requestAnimationFrame(function loop(time) {\n *   group.update(time)\n *   requestAnimationFrame(loop)\n * })\n * ```\n */\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    /**\n     * @deprecated The global TWEEN Group will be removed in a following major\n     * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n     * group.\n     *\n     * Old code:\n     *\n     * ```js\n     * import * as TWEEN from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new TWEEN.Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   TWEEN.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     *\n     * New code:\n     *\n     * ```js\n     * import {Tween, Group} from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * const group = new Group()\n     * group.add(tween)\n     * group.add(tween2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   group.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     */\n    getAll: getAll,\n    /**\n     * @deprecated The global TWEEN Group will be removed in a following major\n     * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n     * group.\n     *\n     * Old code:\n     *\n     * ```js\n     * import * as TWEEN from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new TWEEN.Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   TWEEN.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     *\n     * New code:\n     *\n     * ```js\n     * import {Tween, Group} from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * const group = new Group()\n     * group.add(tween)\n     * group.add(tween2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   group.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     */\n    removeAll: removeAll,\n    /**\n     * @deprecated The global TWEEN Group will be removed in a following major\n     * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n     * group.\n     *\n     * Old code:\n     *\n     * ```js\n     * import * as TWEEN from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new TWEEN.Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   TWEEN.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     *\n     * New code:\n     *\n     * ```js\n     * import {Tween, Group} from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * const group = new Group()\n     * group.add(tween)\n     * group.add(tween2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   group.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     */\n    add: add,\n    /**\n     * @deprecated The global TWEEN Group will be removed in a following major\n     * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n     * group.\n     *\n     * Old code:\n     *\n     * ```js\n     * import * as TWEEN from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new TWEEN.Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   TWEEN.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     *\n     * New code:\n     *\n     * ```js\n     * import {Tween, Group} from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * const group = new Group()\n     * group.add(tween)\n     * group.add(tween2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   group.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     */\n    remove: remove,\n    /**\n     * @deprecated The global TWEEN Group will be removed in a following major\n     * release. To migrate, create a `new Group()` instead of using `TWEEN` as a\n     * group.\n     *\n     * Old code:\n     *\n     * ```js\n     * import * as TWEEN from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new TWEEN.Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   TWEEN.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     *\n     * New code:\n     *\n     * ```js\n     * import {Tween, Group} from '@tweenjs/tween.js'\n     *\n     * //...\n     *\n     * const tween = new Tween(obj)\n     * const tween2 = new TWEEN.Tween(obj2)\n     *\n     * //...\n     *\n     * const group = new Group()\n     * group.add(tween)\n     * group.add(tween2)\n     *\n     * //...\n     *\n     * requestAnimationFrame(function loop(time) {\n     *   group.update(time)\n     *   requestAnimationFrame(loop)\n     * })\n     * ```\n     */\n    update: update,\n};\n\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, exports as default, getAll, nextId, now, remove, removeAll, update };\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import { MOUSE, TOUCH } from 'three';\n\nimport { OrbitControls } from './OrbitControls.js';\n\n// MapControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons = { LEFT: MOUSE.PAN, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.ROTATE };\n\n\t\tthis.touches = { ONE: TOUCH.PAN, TWO: TOUCH.DOLLY_ROTATE };\n\n\t}\n\n}\n\nexport { MapControls };\n","/** @module NodeConstants **/\n\n/**\n * Possible shader stages.\n *\n * @property {string} VERTEX The vertex shader stage.\n * @property {string} FRAGMENT The fragment shader stage.\n */\nexport const NodeShaderStage = {\n\tVERTEX: 'vertex',\n\tFRAGMENT: 'fragment'\n};\n\n/**\n * Update types of a node.\n *\n * @property {string} NONE The update method is not executed.\n * @property {string} FRAME The update method is executed per frame.\n * @property {string} RENDER The update method is executed per render. A frame might be produced by multiple render calls so this value allows more detailed updates than FRAME.\n * @property {string} OBJECT The update method is executed per {@link Object3D} that uses the node for rendering.\n */\nexport const NodeUpdateType = {\n\tNONE: 'none',\n\tFRAME: 'frame',\n\tRENDER: 'render',\n\tOBJECT: 'object'\n};\n\n/**\n * Data types of a node.\n *\n * @property {string} BOOLEAN Boolean type.\n * @property {string} INTEGER Integer type.\n * @property {string} FLOAT Float type.\n * @property {string} VECTOR2 Two-dimensional vector type.\n * @property {string} VECTOR3 Three-dimensional vector type.\n * @property {string} VECTOR4 Four-dimensional vector type.\n * @property {string} MATRIX2 2x2 matrix type.\n * @property {string} MATRIX3 3x3 matrix type.\n * @property {string} MATRIX4 4x4 matrix type.\n */\nexport const NodeType = {\n\tBOOLEAN: 'bool',\n\tINTEGER: 'int',\n\tFLOAT: 'float',\n\tVECTOR2: 'vec2',\n\tVECTOR3: 'vec3',\n\tVECTOR4: 'vec4',\n\tMATRIX2: 'mat2',\n\tMATRIX3: 'mat3',\n\tMATRIX4: 'mat4'\n};\n\n/**\n * Access types of a node. These are relevant for compute and storage usage.\n *\n * @property {string} READ_ONLY Read-only access\n * @property {string} WRITE_ONLY Write-only access.\n * @property {string} READ_WRITE Read and write access.\n */\nexport const NodeAccess = {\n\tREAD_ONLY: 'readOnly',\n\tWRITE_ONLY: 'writeOnly',\n\tREAD_WRITE: 'readWrite',\n};\n\nexport const defaultShaderStages = [ 'fragment', 'vertex' ];\nexport const defaultBuildStages = [ 'setup', 'analyze', 'generate' ];\nexport const shaderStages = [ ...defaultShaderStages, 'compute' ];\nexport const vectorComponents = [ 'x', 'y', 'z', 'w' ];\n","const _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n\tnormalize,\n\tdenormalize,\n\tMathUtils\n};\n","export const REVISION = '172';\n\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const ConstantColorFactor = 211;\nexport const OneMinusConstantColorFactor = 212;\nexport const ConstantAlphaFactor = 213;\nexport const OneMinusConstantAlphaFactor = 214;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\nexport const AgXToneMapping = 6;\nexport const NeutralToneMapping = 7;\nexport const AttachedBindMode = 'attached';\nexport const DetachedBindMode = 'detached';\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedInt248Type = 1020;\nexport const UnsignedInt5999Type = 35902;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBIntegerFormat = 1032;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const RGB_BPTC_SIGNED_Format = 36494;\nexport const RGB_BPTC_UNSIGNED_Format = 36495;\nexport const RED_RGTC1_Format = 36283;\nexport const SIGNED_RED_RGTC1_Format = 36284;\nexport const RED_GREEN_RGTC2_Format = 36285;\nexport const SIGNED_RED_GREEN_RGTC2_Format = 36286;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const RGBDepthPacking = 3202;\nexport const RGDepthPacking = 3203;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nexport const NoColorSpace = '';\nexport const SRGBColorSpace = 'srgb';\nexport const LinearSRGBColorSpace = 'srgb-linear';\n\nexport const LinearTransfer = 'linear';\nexport const SRGBTransfer = 'srgb';\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const NeverCompare = 512;\nexport const LessCompare = 513;\nexport const EqualCompare = 514;\nexport const LessEqualCompare = 515;\nexport const GreaterCompare = 516;\nexport const NotEqualCompare = 517;\nexport const GreaterEqualCompare = 518;\nexport const AlwaysCompare = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n\nexport const WebGLCoordinateSystem = 2000;\nexport const WebGPUCoordinateSystem = 2001;\n","class Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nexport { Matrix3 };\n","import { SRGBColorSpace, LinearSRGBColorSpace, SRGBTransfer, LinearTransfer, NoColorSpace } from '../constants.js';\nimport { Matrix3 } from './Matrix3.js';\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nexport const ColorManagement = /*@__PURE__*/ createColorManagement();\n\nexport function SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nexport function LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n","import { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace } from '../constants.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nexport { Color };\n","import { clamp } from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nexport { Quaternion };\n","import { clamp } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\nexport { Vector3 };\n","import { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../constants.js';\nimport { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","import { clamp } from './MathUtils.js';\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nexport { Vector2 };\n","import { clamp } from './MathUtils.js';\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nexport { Vector4 };\n","import { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\n/** @module NodeUtils **/\n\n// cyrb53 (c) 2018 bryc (github.com/bryc). License: Public domain. Attribution appreciated.\n// A fast and simple 64-bit (or 53-bit) string hash function with decent collision resistance.\n// Largely inspired by MurmurHash2/3, but with a focus on speed/simplicity.\n// See https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript/52171480#52171480\n// https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js\nfunction cyrb53( value, seed = 0 ) {\n\n\tlet h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n\tif ( value instanceof Array ) {\n\n\t\tfor ( let i = 0, val; i < value.length; i ++ ) {\n\n\t\t\tval = value[ i ];\n\t\t\th1 = Math.imul( h1 ^ val, 2654435761 );\n\t\t\th2 = Math.imul( h2 ^ val, 1597334677 );\n\n\t\t}\n\n\t} else {\n\n\t\tfor ( let i = 0, ch; i < value.length; i ++ ) {\n\n\t\t\tch = value.charCodeAt( i );\n\t\t\th1 = Math.imul( h1 ^ ch, 2654435761 );\n\t\t\th2 = Math.imul( h2 ^ ch, 1597334677 );\n\n\t\t}\n\n\t}\n\n\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 );\n\th1 ^= Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 );\n\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 );\n\th2 ^= Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 );\n\n\treturn 4294967296 * ( 2097151 & h2 ) + ( h1 >>> 0 );\n\n}\n\n/**\n * Computes a hash for the given string.\n *\n * @method\n * @param {String} str - The string to be hashed.\n * @return {Number} The hash.\n */\nexport const hashString = ( str ) => cyrb53( str );\n\n/**\n * Computes a hash for the given array.\n *\n * @method\n * @param {Array<Number>} array - The array to be hashed.\n * @return {Number} The hash.\n */\nexport const hashArray = ( array ) => cyrb53( array );\n\n/**\n * Computes a hash for the given list of parameters.\n *\n * @method\n * @param {...Number} params - A list of parameters.\n * @return {Number} The hash.\n */\nexport const hash = ( ...params ) => cyrb53( params );\n\n/**\n * Computes a cache key for the given node.\n *\n * @method\n * @param {Object} object - The object to be hashed.\n * @param {Boolean} [force=false] - Whether to force a cache key computation or not.\n * @return {Number} The hash.\n */\nexport function getCacheKey( object, force = false ) {\n\n\tconst values = [];\n\n\tif ( object.isNode === true ) {\n\n\t\tvalues.push( object.id );\n\t\tobject = object.getSelf();\n\n\t}\n\n\tfor ( const { property, childNode } of getNodeChildren( object ) ) {\n\n\t\tvalues.push( values, cyrb53( property.slice( 0, - 4 ) ), childNode.getCacheKey( force ) );\n\n\t}\n\n\treturn cyrb53( values );\n\n}\n\n/**\n * This generator function can be used to iterate over the node children\n * of the given object.\n *\n * @generator\n * @param {Object} node - The object to be hashed.\n * @param {Boolean} [toJSON=false] - Whether to return JSON or not.\n * @yields {Object} A result node holding the property, index (if available) and the child node.\n */\nexport function* getNodeChildren( node, toJSON = false ) {\n\n\tfor ( const property in node ) {\n\n\t\t// Ignore private properties.\n\t\tif ( property.startsWith( '_' ) === true ) continue;\n\n\t\tconst object = node[ property ];\n\n\t\tif ( Array.isArray( object ) === true ) {\n\n\t\t\tfor ( let i = 0; i < object.length; i ++ ) {\n\n\t\t\t\tconst child = object[ i ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: i, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( object && object.isNode === true ) {\n\n\t\t\tyield { property, childNode: object };\n\n\t\t} else if ( typeof object === 'object' ) {\n\n\t\t\tfor ( const subProperty in object ) {\n\n\t\t\t\tconst child = object[ subProperty ];\n\n\t\t\t\tif ( child && ( child.isNode === true || toJSON && typeof child.toJSON === 'function' ) ) {\n\n\t\t\t\t\tyield { property, index: subProperty, childNode: child };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst typeFromLength = /*@__PURE__*/ new Map( [\n\t[ 1, 'float' ],\n\t[ 2, 'vec2' ],\n\t[ 3, 'vec3' ],\n\t[ 4, 'vec4' ],\n\t[ 9, 'mat3' ],\n\t[ 16, 'mat4' ]\n] );\n\nconst dataFromObject = /*@__PURE__*/ new WeakMap();\n\n/**\n * Returns the data type for the given the length.\n *\n * @method\n * @param {Number} length - The length.\n * @return {String} The data type.\n */\nexport function getTypeFromLength( length ) {\n\n\treturn typeFromLength.get( length );\n\n}\n\n/**\n * Returns the typed array for the given data type.\n *\n * @method\n * @param {String} type - The data type.\n * @return {TypedArray} The typed array.\n */\nexport function getTypedArrayFromType( type ) {\n\n\t// Handle component type for vectors and matrices\n\tif ( /[iu]?vec\\d/.test( type ) ) {\n\n\t\t// Handle int vectors\n\t\tif ( type.startsWith( 'ivec' ) ) return Int32Array;\n\t\t// Handle uint vectors\n\t\tif ( type.startsWith( 'uvec' ) ) return Uint32Array;\n\t\t// Default to float vectors\n\t\treturn Float32Array;\n\n\t}\n\n\t// Handle matrices (always float)\n\tif ( /mat\\d/.test( type ) ) return Float32Array;\n\n\t// Basic types\n\tif ( /float/.test( type ) ) return Float32Array;\n\tif ( /uint/.test( type ) ) return Uint32Array;\n\tif ( /int/.test( type ) ) return Int32Array;\n\n\tthrow new Error( `THREE.NodeUtils: Unsupported type: ${type}` );\n\n}\n\n/**\n * Returns the length for the given data type.\n *\n * @method\n * @param {String} type - The data type.\n * @return {Number} The length.\n */\nexport function getLengthFromType( type ) {\n\n\tif ( /float|int|uint/.test( type ) ) return 1;\n\tif ( /vec2/.test( type ) ) return 2;\n\tif ( /vec3/.test( type ) ) return 3;\n\tif ( /vec4/.test( type ) ) return 4;\n\tif ( /mat3/.test( type ) ) return 9;\n\tif ( /mat4/.test( type ) ) return 16;\n\n\tconsole.error( 'THREE.TSL: Unsupported type:', type );\n\n}\n\n/**\n * Returns the data type for the given value.\n *\n * @method\n * @param {Any} value - The value.\n * @return {String?} The data type.\n */\nexport function getValueType( value ) {\n\n\tif ( value === undefined || value === null ) return null;\n\n\tconst typeOf = typeof value;\n\n\tif ( value.isNode === true ) {\n\n\t\treturn 'node';\n\n\t} else if ( typeOf === 'number' ) {\n\n\t\treturn 'float';\n\n\t} else if ( typeOf === 'boolean' ) {\n\n\t\treturn 'bool';\n\n\t} else if ( typeOf === 'string' ) {\n\n\t\treturn 'string';\n\n\t} else if ( typeOf === 'function' ) {\n\n\t\treturn 'shader';\n\n\t} else if ( value.isVector2 === true ) {\n\n\t\treturn 'vec2';\n\n\t} else if ( value.isVector3 === true ) {\n\n\t\treturn 'vec3';\n\n\t} else if ( value.isVector4 === true ) {\n\n\t\treturn 'vec4';\n\n\t} else if ( value.isMatrix3 === true ) {\n\n\t\treturn 'mat3';\n\n\t} else if ( value.isMatrix4 === true ) {\n\n\t\treturn 'mat4';\n\n\t} else if ( value.isColor === true ) {\n\n\t\treturn 'color';\n\n\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\treturn 'ArrayBuffer';\n\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Returns the value/object for the given data type and parameters.\n *\n * @method\n * @param {String} type - The given type.\n * @param {...Any} params - A parameter list.\n * @return {Any} The value/object.\n */\nexport function getValueFromType( type, ...params ) {\n\n\tconst last4 = type ? type.slice( - 4 ) : undefined;\n\n\tif ( params.length === 1 ) { // ensure same behaviour as in NodeBuilder.format()\n\n\t\tif ( last4 === 'vec2' ) params = [ params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec3' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ] ];\n\t\telse if ( last4 === 'vec4' ) params = [ params[ 0 ], params[ 0 ], params[ 0 ], params[ 0 ] ];\n\n\t}\n\n\tif ( type === 'color' ) {\n\n\t\treturn new Color( ...params );\n\n\t} else if ( last4 === 'vec2' ) {\n\n\t\treturn new Vector2( ...params );\n\n\t} else if ( last4 === 'vec3' ) {\n\n\t\treturn new Vector3( ...params );\n\n\t} else if ( last4 === 'vec4' ) {\n\n\t\treturn new Vector4( ...params );\n\n\t} else if ( last4 === 'mat3' ) {\n\n\t\treturn new Matrix3( ...params );\n\n\t} else if ( last4 === 'mat4' ) {\n\n\t\treturn new Matrix4( ...params );\n\n\t} else if ( type === 'bool' ) {\n\n\t\treturn params[ 0 ] || false;\n\n\t} else if ( ( type === 'float' ) || ( type === 'int' ) || ( type === 'uint' ) ) {\n\n\t\treturn params[ 0 ] || 0;\n\n\t} else if ( type === 'string' ) {\n\n\t\treturn params[ 0 ] || '';\n\n\t} else if ( type === 'ArrayBuffer' ) {\n\n\t\treturn base64ToArrayBuffer( params[ 0 ] );\n\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Gets the object data that can be shared between different rendering steps.\n *\n * @param {Object} object - The object to get the data for.\n * @return {Object} The object data.\n */\nexport function getDataFromObject( object ) {\n\n\tlet data = dataFromObject.get( object );\n\n\tif ( data === undefined ) {\n\n\t\tdata = {};\n\t\tdataFromObject.set( object, data );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * Converts the given array buffer to a Base64 string.\n *\n * @method\n * @param {ArrayBuffer} arrayBuffer - The array buffer.\n * @return {String} The Base64 string.\n */\nexport function arrayBufferToBase64( arrayBuffer ) {\n\n\tlet chars = '';\n\n\tconst array = new Uint8Array( arrayBuffer );\n\n\tfor ( let i = 0; i < array.length; i ++ ) {\n\n\t\tchars += String.fromCharCode( array[ i ] );\n\n\t}\n\n\treturn btoa( chars );\n\n}\n\n/**\n * Converts the given Base64 string to an array buffer.\n *\n * @method\n * @param {String} base64 - The Base64 string.\n * @return {ArrayBuffer} The array buffer.\n */\nexport function base64ToArrayBuffer( base64 ) {\n\n\treturn Uint8Array.from( atob( base64 ), c => c.charCodeAt( 0 ) ).buffer;\n\n}\n","/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { EventDispatcher };\n","import { NodeUpdateType } from './constants.js';\nimport { getNodeChildren, getCacheKey, hash } from './NodeUtils.js';\n\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { MathUtils } from '../../math/MathUtils.js';\n\nlet _nodeId = 0;\n\n/**\n * Base class for all nodes.\n *\n * @augments EventDispatcher\n */\nclass Node extends EventDispatcher {\n\n\tstatic get type() {\n\n\t\treturn 'Node';\n\n\t}\n\n\t/**\n\t * Constructs a new node.\n\t *\n\t * @param {String?} nodeType - The node type.\n\t */\n\tconstructor( nodeType = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node type. This represents the result type of the node (e.g. `float` or `vec3`).\n\t\t *\n\t\t * @type {String?}\n\t\t * @default null\n\t\t */\n\t\tthis.nodeType = nodeType;\n\n\t\t/**\n\t\t * The update type of the node's {@link Node#update} method. Possible values are listed in {@link NodeUpdateType}.\n\t\t *\n\t\t * @type {String}\n\t\t * @default 'none'\n\t\t */\n\t\tthis.updateType = NodeUpdateType.NONE;\n\n\t\t/**\n\t\t * The update type of the node's {@link Node#updateBefore} method. Possible values are listed in {@link NodeUpdateType}.\n\t\t *\n\t\t * @type {String}\n\t\t * @default 'none'\n\t\t */\n\t\tthis.updateBeforeType = NodeUpdateType.NONE;\n\n\t\t/**\n\t\t * The update type of the node's {@link Node#updateAfter} method. Possible values are listed in {@link NodeUpdateType}.\n\t\t *\n\t\t * @type {String}\n\t\t * @default 'none'\n\t\t */\n\t\tthis.updateAfterType = NodeUpdateType.NONE;\n\n\t\t/**\n\t\t * The UUID of the node.\n\t\t *\n\t\t * @type {String}\n\t\t * @readonly\n\t\t */\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\t/**\n\t\t * The version of the node. The version automatically is increased when {@link Node#needsUpdate} is set to `true`.\n\t\t *\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t * @default 0\n\t\t */\n\t\tthis.version = 0;\n\n\t\t/**\n\t\t * Whether this node is global or not. This property is relevant for the internal\n\t\t * node caching system. All nodes which should be declared just once should\n\t\t * set this flag to `true` (a typical example is {@link AttributeNode}).\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.global = false;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isNode = true;\n\n\t\t// private\n\n\t\t/**\n\t\t * The cache key of this node.\n\t\t *\n\t\t * @private\n\t\t * @type {Number?}\n\t\t * @default null\n\t\t */\n\t\tthis._cacheKey = null;\n\n\t\t/**\n\t\t * The cache key 's version.\n\t\t *\n\t\t * @private\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._cacheKeyVersion = 0;\n\n\t\tObject.defineProperty( this, 'id', { value: _nodeId ++ } );\n\n\t}\n\n\t/**\n\t * Set this property to `true` when the node should be regenerated.\n\t *\n\t * @type {Boolean}\n\t * @default false\n\t * @param {boolean} value\n\t */\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * The type of the class. The value is usually the constructor name.\n\t *\n\t * @type {String}\n \t * @readonly\n\t */\n\tget type() {\n\n\t\treturn this.constructor.type;\n\n\t}\n\n\t/**\n\t * Convenient method for defining {@link Node#update}.\n\t *\n\t * @param {Function} callback - The update method.\n\t * @param {String} updateType - The update type.\n\t * @return {Node} A reference to this node.\n\t */\n\tonUpdate( callback, updateType ) {\n\n\t\tthis.updateType = updateType;\n\t\tthis.update = callback.bind( this.getSelf() );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Convenient method for defining {@link Node#update}. Similar to {@link Node#onUpdate}, but\n\t * this method automatically sets the update type to `FRAME`.\n\t *\n\t * @param {Function} callback - The update method.\n\t * @return {Node} A reference to this node.\n\t */\n\tonFrameUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.FRAME );\n\n\t}\n\n\t/**\n\t * Convenient method for defining {@link Node#update}. Similar to {@link Node#onUpdate}, but\n\t * this method automatically sets the update type to `RENDER`.\n\t *\n\t * @param {Function} callback - The update method.\n\t * @return {Node} A reference to this node.\n\t */\n\tonRenderUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.RENDER );\n\n\t}\n\n\t/**\n\t * Convenient method for defining {@link Node#update}. Similar to {@link Node#onUpdate}, but\n\t * this method automatically sets the update type to `OBJECT`.\n\t *\n\t * @param {Function} callback - The update method.\n\t * @return {Node} A reference to this node.\n\t */\n\tonObjectUpdate( callback ) {\n\n\t\treturn this.onUpdate( callback, NodeUpdateType.OBJECT );\n\n\t}\n\n\t/**\n\t * Convenient method for defining {@link Node#updateReference}.\n\t *\n\t * @param {Function} callback - The update method.\n\t * @return {Node} A reference to this node.\n\t */\n\tonReference( callback ) {\n\n\t\tthis.updateReference = callback.bind( this.getSelf() );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The `this` reference might point to a Proxy so this method can be used\n\t * to get the reference to the actual node instance.\n\t *\n\t * @return {Node} A reference to the node.\n\t */\n\tgetSelf() {\n\n\t\t// Returns non-node object.\n\n\t\treturn this.self || this;\n\n\t}\n\n\t/**\n\t * Nodes might refer to other objects like materials. This method allows to dynamically update the reference\n\t * to such objects based on a given state (e.g. the current node frame or builder).\n\t *\n\t * @param {Any} state - This method can be invocated in different contexts so `state` can refer to any object type.\n\t * @return {Any} The updated reference.\n\t */\n\tupdateReference( /*state*/ ) {\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * By default this method returns the value of the {@link Node#global} flag. This method\n\t * can be overwritten in derived classes if an analytical way is required to determine the\n\t * global status.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Boolean} Whether this node is global or not.\n\t */\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn this.global;\n\n\t}\n\n\t/**\n\t * Generator function that can be used to iterate over the child nodes.\n\t *\n\t * @generator\n\t * @yields {Node} A child node.\n\t */\n\t* getChildren() {\n\n\t\tfor ( const { childNode } of getNodeChildren( this ) ) {\n\n\t\t\tyield childNode;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Calling this method dispatches the `dispose` event. This event can be used\n\t * to register event listeners for clean up tasks.\n\t */\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\t/**\n\t * Callback for {@link Node#traverse}.\n\t *\n\t * @callback traverseCallback\n\t * @param {Node} node - The current node.\n\t */\n\n\t/**\n\t * Can be used to traverse through the node's hierarchy.\n\t *\n\t * @param {traverseCallback} callback - A callback that is executed per node.\n\t */\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tchildNode.traverse( callback );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the cache key for this node.\n\t *\n\t * @param {Boolean} [force=false] - When set to `true`, a recomputation of the cache key is forced.\n\t * @return {Number} The cache key of the node.\n\t */\n\tgetCacheKey( force = false ) {\n\n\t\tforce = force || this.version !== this._cacheKeyVersion;\n\n\t\tif ( force === true || this._cacheKey === null ) {\n\n\t\t\tthis._cacheKey = hash( getCacheKey( this, force ), this.customCacheKey() );\n\t\t\tthis._cacheKeyVersion = this.version;\n\n\t\t}\n\n\t\treturn this._cacheKey;\n\n\t}\n\n\t/**\n\t * Generate a custom cache key for this node.\n\t *\n\t * @return {Number} The cache key of the node.\n\t */\n\tcustomCacheKey() {\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Returns the references to this node which is by default `this`.\n\t *\n\t * @return {Node} A reference to this node.\n\t */\n\tgetScope() {\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the hash of the node which is used to identify the node. By default it's\n\t * the {@link Node#uuid} however derived node classes might have to overwrite this method\n\t * depending on their implementation.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The hash.\n\t */\n\tgetHash( /*builder*/ ) {\n\n\t\treturn this.uuid;\n\n\t}\n\n\t/**\n\t * Returns the update type of {@link Node#update}.\n\t *\n\t * @return {NodeUpdateType} The update type.\n\t */\n\tgetUpdateType() {\n\n\t\treturn this.updateType;\n\n\t}\n\n\t/**\n\t * Returns the update type of {@link Node#updateBefore}.\n\t *\n\t * @return {NodeUpdateType} The update type.\n\t */\n\tgetUpdateBeforeType() {\n\n\t\treturn this.updateBeforeType;\n\n\t}\n\n\t/**\n\t * Returns the update type of {@link Node#updateAfter}.\n\t *\n\t * @return {NodeUpdateType} The update type.\n\t */\n\tgetUpdateAfterType() {\n\n\t\treturn this.updateAfterType;\n\n\t}\n\n\t/**\n\t * Certain types are composed of multiple elements. For example a `vec3`\n\t * is composed of three `float` values. This method returns the type of\n\t * these elements.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The type of the node.\n\t */\n\tgetElementType( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst elementType = builder.getElementType( type );\n\n\t\treturn elementType;\n\n\t}\n\n\t/**\n\t * Returns the node's type.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The type of the node.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tif ( nodeProperties.outputNode ) {\n\n\t\t\treturn nodeProperties.outputNode.getNodeType( builder );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\t/**\n\t * This method is used during the build process of a node and ensures\n\t * equal nodes are not built multiple times but just once. For example if\n\t * `attribute( 'uv' )` is used multiple times by the user, the build\n\t * process makes sure to process just the first node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Node} The shared node if possible. Otherwise `this` is returned.\n\t */\n\tgetShared( builder ) {\n\n\t\tconst hash = this.getHash( builder );\n\t\tconst nodeFromHash = builder.getNodeFromHash( hash );\n\n\t\treturn nodeFromHash || this;\n\n\t}\n\n\t/**\n\t * Represents the setup stage which is the first step of the build process, see {@link Node#build} method.\n\t * This method is often overwritten in derived modules to prepare the node which is used as the output/result.\n\t * The output node must be returned in the `return` statement.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Node?} The output node.\n\t */\n\tsetup( builder ) {\n\n\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\tlet index = 0;\n\n\t\tfor ( const childNode of this.getChildren() ) {\n\n\t\t\tnodeProperties[ 'node' + index ++ ] = childNode;\n\n\t\t}\n\n\t\t// return a outputNode if exists or null\n\n\t\treturn nodeProperties.outputNode || null;\n\n\t}\n\n\t/**\n\t * Represents the analyze stage which is the second step of the build process, see {@link Node#build} method.\n\t * This stage analyzes the node hierarchy and ensures descendent nodes are built.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t */\n\tanalyze( builder ) {\n\n\t\tconst usageCount = builder.increaseUsage( this );\n\n\t\tif ( usageCount === 1 ) {\n\n\t\t\t// node flow children\n\n\t\t\tconst nodeProperties = builder.getNodeProperties( this );\n\n\t\t\tfor ( const childNode of Object.values( nodeProperties ) ) {\n\n\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Represents the generate stage which is the third step of the build process, see {@link Node#build} method.\n\t * This state builds the output node and returns the resulting shader string.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @param {String?} output - Can be used to define the output type.\n\t * @return {String?} The generated shader string.\n\t */\n\tgenerate( builder, output ) {\n\n\t\tconst { outputNode } = builder.getNodeProperties( this );\n\n\t\tif ( outputNode && outputNode.isNode === true ) {\n\n\t\t\treturn outputNode.build( builder, output );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * The method can be implemented to update the node's internal state before it is used to render an object.\n\t * The {@link Node#updateBeforeType} property defines how often the update is executed.\n\t *\n\t * @abstract\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t * @return {Boolean?} An optional bool that indicates whether the implementation actually performed an update or not (e.g. due to caching).\n\t */\n\tupdateBefore( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\t/**\n\t * The method can be implemented to update the node's internal state after it was used to render an object.\n\t * The {@link Node#updateAfterType} property defines how often the update is executed.\n\t *\n\t * @abstract\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t * @return {Boolean?} An optional bool that indicates whether the implementation actually performed an update or not (e.g. due to caching).\n\t */\n\tupdateAfter( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\t/**\n\t * The method can be implemented to update the node's internal state when it is used to render an object.\n\t * The {@link Node#updateType} property defines how often the update is executed.\n\t *\n\t * @abstract\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t * @return {Boolean?} An optional bool that indicates whether the implementation actually performed an update or not (e.g. due to caching).\n\t */\n\tupdate( /*frame*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n\t/**\n\t * This method performs the build of a node. The behavior of this method as well as its return value depend\n\t * on the current build stage (setup, analyze or generate).\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @param {String?} output - Can be used to define the output type.\n\t * @return {String?} When this method is executed in the setup or analyze stage, `null` is returned. In the generate stage, the generated shader string.\n\t */\n\tbuild( builder, output = null ) {\n\n\t\tconst refNode = this.getShared( builder );\n\n\t\tif ( this !== refNode ) {\n\n\t\t\treturn refNode.build( builder, output );\n\n\t\t}\n\n\t\tbuilder.addNode( this );\n\t\tbuilder.addChain( this );\n\n\t\t/* Build stages expected results:\n\t\t\t- \"setup\"\t\t-> Node\n\t\t\t- \"analyze\"\t\t-> null\n\t\t\t- \"generate\"\t-> String\n\t\t*/\n\t\tlet result = null;\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'setup' ) {\n\n\t\t\tthis.updateReference( builder );\n\n\t\t\tconst properties = builder.getNodeProperties( this );\n\n\t\t\tif ( properties.initialized !== true ) {\n\n\t\t\t\t//const stackNodesBeforeSetup = builder.stack.nodes.length;\n\n\t\t\t\tproperties.initialized = true;\n\n\t\t\t\tconst outputNode = this.setup( builder ); // return a node or null\n\t\t\t\tconst isNodeOutput = outputNode && outputNode.isNode === true;\n\n\t\t\t\t/*if ( isNodeOutput && builder.stack.nodes.length !== stackNodesBeforeSetup ) {\n\n\t\t\t\t\t// !! no outputNode !!\n\t\t\t\t\t//outputNode = builder.stack;\n\n\t\t\t\t}*/\n\n\t\t\t\tfor ( const childNode of Object.values( properties ) ) {\n\n\t\t\t\t\tif ( childNode && childNode.isNode === true ) {\n\n\t\t\t\t\t\tchildNode.build( builder );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( isNodeOutput ) {\n\n\t\t\t\t\toutputNode.build( builder );\n\n\t\t\t\t}\n\n\t\t\t\tproperties.outputNode = outputNode;\n\n\t\t\t}\n\n\t\t} else if ( buildStage === 'analyze' ) {\n\n\t\t\tthis.analyze( builder );\n\n\t\t} else if ( buildStage === 'generate' ) {\n\n\t\t\tconst isGenerateOnce = this.generate.length === 1;\n\n\t\t\tif ( isGenerateOnce ) {\n\n\t\t\t\tconst type = this.getNodeType( builder );\n\t\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\t\tresult = nodeData.snippet;\n\n\t\t\t\tif ( result === undefined ) {\n\n\t\t\t\t\tresult = this.generate( builder ) || '';\n\n\t\t\t\t\tnodeData.snippet = result;\n\n\t\t\t\t} else if ( nodeData.flowCodes !== undefined && builder.context.nodeBlock !== undefined ) {\n\n\t\t\t\t\tbuilder.addFlowCodeHierarchy( this, builder.context.nodeBlock );\n\n\t\t\t\t}\n\n\t\t\t\tresult = builder.format( result, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tresult = this.generate( builder, output ) || '';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeChain( this );\n\t\tbuilder.addSequentialNode( this );\n\n\t\treturn result;\n\n\t}\n\n\t/**\n\t * Returns the child nodes as a JSON object.\n\t *\n\t * @return {Object} The serialized child objects as JSON.\n\t */\n\tgetSerializeChildren() {\n\n\t\treturn getNodeChildren( this );\n\n\t}\n\n\t/**\n\t * Serializes the node to JSON.\n\t *\n\t * @param {Object} json - The output JSON object.\n\t */\n\tserialize( json ) {\n\n\t\tconst nodeChildren = this.getSerializeChildren();\n\n\t\tconst inputNodes = {};\n\n\t\tfor ( const { property, index, childNode } of nodeChildren ) {\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tif ( inputNodes[ property ] === undefined ) {\n\n\t\t\t\t\tinputNodes[ property ] = Number.isInteger( index ) ? [] : {};\n\n\t\t\t\t}\n\n\t\t\t\tinputNodes[ property ][ index ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t} else {\n\n\t\t\t\tinputNodes[ property ] = childNode.toJSON( json.meta ).uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( inputNodes ).length > 0 ) {\n\n\t\t\tjson.inputNodes = inputNodes;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deserializes the node from the given JSON.\n\t *\n\t * @param {Object} json - The JSON object.\n\t */\n\tdeserialize( json ) {\n\n\t\tif ( json.inputNodes !== undefined ) {\n\n\t\t\tconst nodes = json.meta.nodes;\n\n\t\t\tfor ( const property in json.inputNodes ) {\n\n\t\t\t\tif ( Array.isArray( json.inputNodes[ property ] ) ) {\n\n\t\t\t\t\tconst inputArray = [];\n\n\t\t\t\t\tfor ( const uuid of json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tinputArray.push( nodes[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputArray;\n\n\t\t\t\t} else if ( typeof json.inputNodes[ property ] === 'object' ) {\n\n\t\t\t\t\tconst inputObject = {};\n\n\t\t\t\t\tfor ( const subProperty in json.inputNodes[ property ] ) {\n\n\t\t\t\t\t\tconst uuid = json.inputNodes[ property ][ subProperty ];\n\n\t\t\t\t\t\tinputObject[ subProperty ] = nodes[ uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis[ property ] = inputObject;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst uuid = json.inputNodes[ property ];\n\n\t\t\t\t\tthis[ property ] = nodes[ uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Serializes the node into the three.js JSON Object/Scene format.\n\t *\n\t * @param {Object?} meta - An optional JSON object that already holds serialized data from other scene objects.\n\t * @return {Object} The serialized node.\n\t */\n\ttoJSON( meta ) {\n\n\t\tconst { uuid, type } = this;\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t}\n\n\t\t// serialize\n\n\t\tlet data = meta.nodes[ uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tdata = {\n\t\t\t\tuuid,\n\t\t\t\ttype,\n\t\t\t\tmeta,\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.6,\n\t\t\t\t\ttype: 'Node',\n\t\t\t\t\tgenerator: 'Node.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ( isRoot !== true ) meta.nodes[ data.uuid ] = data;\n\n\t\t\tthis.serialize( data );\n\n\t\t\tdelete data.meta;\n\n\t\t}\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\t\t\tif ( nodes.length > 0 ) data.nodes = nodes;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default Node;\n","import Node from '../core/Node.js';\n\n/**\n * Base class for representing element access on an array-like\n * node data structures.\n *\n * @augments Node\n */\nclass ArrayElementNode extends Node { // @TODO: If extending from TempNode it breaks webgpu_compute\n\n\tstatic get type() {\n\n\t\treturn 'ArrayElementNode';\n\n\t}\n\n\t/**\n\t * Constructs an array element node.\n\t *\n\t * @param {Node} node - The array-like node.\n\t * @param {Node} indexNode - The index node that defines the element access.\n\t */\n\tconstructor( node, indexNode ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The array-like node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The index node that defines the element access.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.indexNode = indexNode;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isArrayElementNode = true;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from the array-like node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getElementType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeSnippet = this.node.build( builder );\n\t\tconst indexSnippet = this.indexNode.build( builder, 'uint' );\n\n\t\treturn `${nodeSnippet}[ ${indexSnippet} ]`;\n\n\t}\n\n}\n\nexport default ArrayElementNode;\n","import Node from '../core/Node.js';\n\n/**\n * This module is part of the TSL core and usually not used in app level code.\n * It represents a convert operation during the shader generation process\n * meaning it converts the data type of a node to a target data type.\n *\n * @augments Node\n */\nclass ConvertNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ConvertNode';\n\n\t}\n\n\t/**\n\t * Constructs a new convert node.\n\t *\n\t * @param {Node} node - The node which type should be converted.\n\t * @param {String} convertTo - The target node type. Multiple types can be defined by separating them with a `|` sign.\n\t */\n\tconstructor( node, convertTo ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node which type should be converted.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The target node type. Multiple types can be defined by separating them with a `|` sign.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.convertTo = convertTo;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the implementation tries to infer the best\n\t * matching type from the {@link ConvertNode#convertTo} property.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tconst requestType = this.node.getNodeType( builder );\n\n\t\tlet convertTo = null;\n\n\t\tfor ( const overloadingType of this.convertTo.split( '|' ) ) {\n\n\t\t\tif ( convertTo === null || builder.getTypeLength( requestType ) === builder.getTypeLength( overloadingType ) ) {\n\n\t\t\t\tconvertTo = overloadingType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn convertTo;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.convertTo = this.convertTo;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.convertTo = data.convertTo;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst snippet = node.build( builder, type );\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default ConvertNode;\n","import Node from './Node.js';\n\n/**\n * This module uses cache management to create temporary variables\n * if the node is used more than once to prevent duplicate calculations.\n *\n * The class acts as a base class for many other nodes types.\n *\n * @augments Node\n */\nclass TempNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'TempNode';\n\n\t}\n\n\t/**\n\t * Constructs a temp node.\n\t *\n\t * @param {String?} nodeType - The node type.\n\t */\n\tconstructor( nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isTempNode = true;\n\n\t}\n\n\t/**\n\t * Whether this node is used more than once in context of other nodes.\n\t *\n\t * @param {NodeBuilder} builder - The node builder.\n\t * @return {Boolean} A flag that indicates if there is more than one dependency to other nodes.\n\t */\n\thasDependencies( builder ) {\n\n\t\treturn builder.getDataFromNode( this ).usageCount > 1;\n\n\t}\n\n\tbuild( builder, output ) {\n\n\t\tconst buildStage = builder.getBuildStage();\n\n\t\tif ( buildStage === 'generate' ) {\n\n\t\t\tconst type = builder.getVectorType( this.getNodeType( builder, output ) );\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tif ( nodeData.propertyName !== undefined ) {\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t} else if ( type !== 'void' && output !== 'void' && this.hasDependencies( builder ) ) {\n\n\t\t\t\tconst snippet = super.build( builder, type );\n\n\t\t\t\tconst nodeVar = builder.getVarFromNode( this, null, type );\n\t\t\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\t\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}`, this );\n\n\t\t\t\tnodeData.snippet = snippet;\n\t\t\t\tnodeData.propertyName = propertyName;\n\n\t\t\t\treturn builder.format( nodeData.propertyName, type, output );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn super.build( builder, output );\n\n\t}\n\n}\n\nexport default TempNode;\n","import TempNode from '../core/TempNode.js';\n\n/**\n * This module is part of the TSL core and usually not used in app level code.\n * It represents a join operation during the shader generation process.\n * For example in can compose/join two single floats into a `vec2` type.\n *\n * @augments TempNode\n */\nclass JoinNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'JoinNode';\n\n\t}\n\n\t/**\n\t * Constructs a new join node.\n\t *\n\t * @param {Array<Node>} nodes - An array of nodes that should be joined.\n\t * @param {String?} [nodeType=null] - The node type.\n\t */\n\tconstructor( nodes = [], nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\t/**\n\t\t * An array of nodes that should be joined.\n\t\t *\n\t\t * @type {Array<Node>}\n\t\t */\n\t\tthis.nodes = nodes;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type must be inferred from the\n\t * joined data length if not explicitly defined.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tif ( this.nodeType !== null ) {\n\n\t\t\treturn builder.getVectorType( this.nodeType );\n\n\t\t}\n\n\t\treturn builder.getTypeFromLength( this.nodes.reduce( ( count, cur ) => count + builder.getTypeLength( cur.getNodeType( builder ) ), 0 ) );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst nodes = this.nodes;\n\n\t\tconst primitiveType = builder.getComponentType( type );\n\n\t\tconst snippetValues = [];\n\n\t\tfor ( const input of nodes ) {\n\n\t\t\tlet inputSnippet = input.build( builder );\n\n\t\t\tconst inputPrimitiveType = builder.getComponentType( input.getNodeType( builder ) );\n\n\t\t\tif ( inputPrimitiveType !== primitiveType ) {\n\n\t\t\t\tinputSnippet = builder.format( inputSnippet, inputPrimitiveType, primitiveType );\n\n\t\t\t}\n\n\t\t\tsnippetValues.push( inputSnippet );\n\n\t\t}\n\n\t\tconst snippet = `${ builder.getType( type ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default JoinNode;\n","import Node from '../core/Node.js';\nimport { vectorComponents } from '../core/constants.js';\n\nconst _stringVectorComponents = vectorComponents.join( '' );\n\n/**\n * This module is part of the TSL core and usually not used in app level code.\n * `SplitNode` represents a property access operation which means it is\n * used to implement any `.xyzw`, `.rgba` and `stpq` usage on node objects.\n * For example:\n * ```js\n * const redValue = color.r;\n * ```\n *\n * @augments Node\n */\nclass SplitNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'SplitNode';\n\n\t}\n\n\t/**\n\t * Constructs a new split node.\n\t *\n\t * @param {Node} node - The node that should be accessed.\n\t * @param {String} [components='x'] - The components that should be accessed.\n\t */\n\tconstructor( node, components = 'x' ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node that should be accessed.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The components that should be accessed.\n\t\t *\n\t\t * @type {string}\n\t\t */\n\t\tthis.components = components;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isSplitNode = true;\n\n\t}\n\n\t/**\n\t * Returns the vector length which is computed based on the requested components.\n\t *\n\t * @return {Number} The vector length.\n\t */\n\tgetVectorLength() {\n\n\t\tlet vectorLength = this.components.length;\n\n\t\tfor ( const c of this.components ) {\n\n\t\t\tvectorLength = Math.max( vectorComponents.indexOf( c ) + 1, vectorLength );\n\n\t\t}\n\n\t\treturn vectorLength;\n\n\t}\n\n\t/**\n\t * Returns the component type of the node's type.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The component type.\n\t */\n\tgetComponentType( builder ) {\n\n\t\treturn builder.getComponentType( this.node.getNodeType( builder ) );\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from requested components.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn builder.getTypeFromLength( this.components.length, this.getComponentType( builder ) );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst nodeTypeLength = builder.getTypeLength( node.getNodeType( builder ) );\n\n\t\tlet snippet = null;\n\n\t\tif ( nodeTypeLength > 1 ) {\n\n\t\t\tlet type = null;\n\n\t\t\tconst componentsLength = this.getVectorLength();\n\n\t\t\tif ( componentsLength >= nodeTypeLength ) {\n\n\t\t\t\t// needed expand the input node\n\n\t\t\t\ttype = builder.getTypeFromLength( this.getVectorLength(), this.getComponentType( builder ) );\n\n\t\t\t}\n\n\t\t\tconst nodeSnippet = node.build( builder, type );\n\n\t\t\tif ( this.components.length === nodeTypeLength && this.components === _stringVectorComponents.slice( 0, this.components.length ) ) {\n\n\t\t\t\t// unnecessary swizzle\n\n\t\t\t\tsnippet = builder.format( nodeSnippet, type, output );\n\n\t\t\t} else {\n\n\t\t\t\tsnippet = builder.format( `${nodeSnippet}.${this.components}`, this.getNodeType( builder ), output );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// ignore .components if .node returns float/integer\n\n\t\t\tsnippet = node.build( builder, output );\n\n\t\t}\n\n\t\treturn snippet;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.components = this.components;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.components = data.components;\n\n\t}\n\n}\n\nexport default SplitNode;\n","import TempNode from '../core/TempNode.js';\nimport { vectorComponents } from '../core/constants.js';\n\n/**\n * This module is part of the TSL core and usually not used in app level code.\n * `SetNode` represents a set operation which means it is used to implement any\n * `setXYZW()`, `setRGBA()` and `setSTPQ()` method invocations on node objects.\n * For example:\n * ```js\n * materialLine.colorNode = color( 0, 0, 0 ).setR( float( 1 ) );\n * ```\n *\n * @augments TempNode\n */\nclass SetNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'SetNode';\n\n\t}\n\n\t/**\n\t * Constructs a new set node.\n\t *\n\t * @param {Node} sourceNode - The node that should be updated.\n\t * @param {String} components - The components that should be updated.\n\t * @param {Node} targetNode - The value node.\n\t */\n\tconstructor( sourceNode, components, targetNode ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node that should be updated.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.sourceNode = sourceNode;\n\n\t\t/**\n\t\t * The components that should be updated.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.components = components;\n\n\t\t/**\n\t\t * The value node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.targetNode = targetNode;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from {@link SetNode#sourceNode}.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn this.sourceNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { sourceNode, components, targetNode } = this;\n\n\t\tconst sourceType = this.getNodeType( builder );\n\n\t\tconst componentType = builder.getComponentType( targetNode.getNodeType( builder ) );\n\t\tconst targetType = builder.getTypeFromLength( components.length, componentType );\n\n\t\tconst targetSnippet = targetNode.build( builder, targetType );\n\t\tconst sourceSnippet = sourceNode.build( builder, sourceType );\n\n\t\tconst length = builder.getTypeLength( sourceType );\n\t\tconst snippetValues = [];\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst component = vectorComponents[ i ];\n\n\t\t\tif ( component === components[ 0 ] ) {\n\n\t\t\t\tsnippetValues.push( targetSnippet );\n\n\t\t\t\ti += components.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tsnippetValues.push( sourceSnippet + '.' + component );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn `${ builder.getType( sourceType ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t}\n\n}\n\nexport default SetNode;\n","import TempNode from '../core/TempNode.js';\nimport { vectorComponents } from '../core/constants.js';\n\n/**\n * This module is part of the TSL core and usually not used in app level code.\n * It represents a flip operation during the shader generation process\n * meaning it flips normalized values with the following formula:\n * ```\n * x = 1 - x;\n * ```\n * `FlipNode` is internally used to implement any `flipXYZW()`, `flipRGBA()` and\n * `flipSTPQ()` method invocations on node objects. For example:\n * ```js\n * uvNode = uvNode.flipY();\n * ```\n *\n * @augments TempNode\n */\nclass FlipNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'FlipNode';\n\n\t}\n\n\t/**\n\t * Constructs a new flip node.\n\t *\n\t * @param {Node} sourceNode - The node which component(s) should be flipped.\n\t * @param {String} components - The components that should be flipped e.g. `'x'` or `'xy'`.\n\t */\n\tconstructor( sourceNode, components ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node which component(s) should be flipped.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.sourceNode = sourceNode;\n\n\t\t/**\n\t\t * The components that should be flipped e.g. `'x'` or `'xy'`.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.components = components;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from the source node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn this.sourceNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { components, sourceNode } = this;\n\n\t\tconst sourceType = this.getNodeType( builder );\n\t\tconst sourceSnippet = sourceNode.build( builder );\n\n\t\tconst sourceCache = builder.getVarFromNode( this );\n\t\tconst sourceProperty = builder.getPropertyName( sourceCache );\n\n\t\tbuilder.addLineFlowCode( sourceProperty + ' = ' + sourceSnippet, this );\n\n\t\tconst length = builder.getTypeLength( sourceType );\n\t\tconst snippetValues = [];\n\n\t\tlet componentIndex = 0;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst component = vectorComponents[ i ];\n\n\t\t\tif ( component === components[ componentIndex ] ) {\n\n\t\t\t\tsnippetValues.push( '1.0 - ' + ( sourceProperty + '.' + component ) );\n\n\t\t\t\tcomponentIndex ++;\n\n\t\t\t} else {\n\n\t\t\t\tsnippetValues.push( sourceProperty + '.' + component );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn `${ builder.getType( sourceType ) }( ${ snippetValues.join( ', ' ) } )`;\n\n\t}\n\n}\n\nexport default FlipNode;\n","import Node from './Node.js';\nimport { getValueType, getValueFromType, arrayBufferToBase64 } from './NodeUtils.js';\n\n/**\n * Base class for representing data input nodes.\n *\n * @augments Node\n */\nclass InputNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'InputNode';\n\n\t}\n\n\t/**\n\t * Constructs a new input node.\n\t *\n\t * @param {Any} value - The value of this node. This can be a any JS primitive, functions, array buffers or even three.js objects (vector, matrices, colors).\n\t * @param {String?} nodeType - The node type. If no explicit type is defined, the node tries to derive the type from its value.\n\t */\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( nodeType );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isInputNode = true;\n\n\t\t/**\n\t\t * The value of this node. This can be a any JS primitive, functions, array buffers or even three.js objects (vector, matrices, colors).\n\t\t *\n\t\t * @type {Any}\n\t\t */\n\t\tthis.value = value;\n\n\t\t/**\n\t\t * The precision of the value in the shader.\n\t\t *\n\t\t * @type {('low'|'medium'|'high')?}\n\t\t * @default null\n\t\t */\n\t\tthis.precision = null;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\tif ( this.nodeType === null ) {\n\n\t\t\treturn getValueType( this.value );\n\n\t\t}\n\n\t\treturn this.nodeType;\n\n\t}\n\n\t/**\n\t * Returns the input type of the node which is by default the node type. Derived modules\n\t * might overwrite this method and use a fixed type or compute one analytically.\n\t *\n\t * A typical example for different input and node types are textures. The input type of a\n\t * normal RGBA texture is `texture` whereas its node type is `vec4`.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The input type.\n\t */\n\tgetInputType( builder ) {\n\n\t\treturn this.getNodeType( builder );\n\n\t}\n\n\t/**\n\t * Sets the precision to the given value. The method can be\n\t * overwritten in derived classes if the final precision must be computed\n\t * analytically.\n\t *\n\t * @param {('low'|'medium'|'high')} precision - The precision of the input value in the shader.\n\t * @return {InputNode} A reference to this node.\n\t */\n\tsetPrecision( precision ) {\n\n\t\tthis.precision = precision;\n\n\t\treturn this;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.value = this.value;\n\n\t\tif ( this.value && this.value.toArray ) data.value = this.value.toArray();\n\n\t\tdata.valueType = getValueType( this.value );\n\t\tdata.nodeType = this.nodeType;\n\n\t\tif ( data.valueType === 'ArrayBuffer' ) data.value = arrayBufferToBase64( data.value );\n\n\t\tdata.precision = this.precision;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.nodeType = data.nodeType;\n\t\tthis.value = Array.isArray( data.value ) ? getValueFromType( data.valueType, ...data.value ) : data.value;\n\n\t\tthis.precision = data.precision || null;\n\n\t\tif ( this.value && this.value.fromArray ) this.value = this.value.fromArray( data.value );\n\n\t}\n\n\tgenerate( /*builder, output*/ ) {\n\n\t\tconsole.warn( 'Abstract function.' );\n\n\t}\n\n}\n\nexport default InputNode;\n","import InputNode from './InputNode.js';\n\n/**\n * Class for representing a constant value in the shader.\n *\n * @augments InputNode\n */\nclass ConstNode extends InputNode {\n\n\tstatic get type() {\n\n\t\treturn 'ConstNode';\n\n\t}\n\n\t/**\n\t * Constructs a new input node.\n\t *\n\t * @param {Any} value - The value of this node. Usually a JS primitive or three.js object (vector, matrix, color).\n\t * @param {String?} nodeType - The node type. If no explicit type is defined, the node tries to derive the type from its value.\n\t */\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isConstNode = true;\n\n\t}\n\n\t/**\n\t * Generates the shader string of the value with the current node builder.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The generated value as a shader string.\n\t */\n\tgenerateConst( builder ) {\n\n\t\treturn builder.generateConst( this.getNodeType( builder ), this.value );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\treturn builder.format( this.generateConst( builder ), type, output );\n\n\t}\n\n}\n\nexport default ConstNode;\n","import Node from '../core/Node.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\nimport ConvertNode from '../utils/ConvertNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport SetNode from '../utils/SetNode.js';\nimport FlipNode from '../utils/FlipNode.js';\nimport ConstNode from '../core/ConstNode.js';\nimport { getValueFromType, getValueType } from '../core/NodeUtils.js';\n\n//\n\nlet currentStack = null;\n\nconst NodeElements = new Map();\n\nexport function addMethodChaining( name, nodeElement ) {\n\n\tif ( NodeElements.has( name ) ) {\n\n\t\tconsole.warn( `Redefinition of method chaining ${ name }` );\n\t\treturn;\n\n\t}\n\n\tif ( typeof nodeElement !== 'function' ) throw new Error( `Node element ${ name } is not a function` );\n\n\tNodeElements.set( name, nodeElement );\n\n}\n\nconst parseSwizzle = ( props ) => props.replace( /r|s/g, 'x' ).replace( /g|t/g, 'y' ).replace( /b|p/g, 'z' ).replace( /a|q/g, 'w' );\nconst parseSwizzleAndSort = ( props ) => parseSwizzle( props ).split( '' ).sort().join( '' );\n\nconst shaderNodeHandler = {\n\n\tsetup( NodeClosure, params ) {\n\n\t\tconst inputs = params.shift();\n\n\t\treturn NodeClosure( nodeObjects( inputs ), ...params );\n\n\t},\n\n\tget( node, prop, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\tif ( node.isStackNode !== true && prop === 'assign' ) {\n\n\t\t\t\treturn ( ...params ) => {\n\n\t\t\t\t\tcurrentStack.assign( nodeObj, ...params );\n\n\t\t\t\t\treturn nodeObj;\n\n\t\t\t\t};\n\n\t\t\t} else if ( NodeElements.has( prop ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.add( nodeElement( ...params ) ) : ( ...params ) => nodeElement( nodeObj, ...params );\n\n\t\t\t} else if ( prop === 'self' ) {\n\n\t\t\t\treturn node;\n\n\t\t\t} else if ( prop.endsWith( 'Assign' ) && NodeElements.has( prop.slice( 0, prop.length - 'Assign'.length ) ) ) {\n\n\t\t\t\tconst nodeElement = NodeElements.get( prop.slice( 0, prop.length - 'Assign'.length ) );\n\n\t\t\t\treturn node.isStackNode ? ( ...params ) => nodeObj.assign( params[ 0 ], nodeElement( ...params ) ) : ( ...params ) => nodeObj.assign( nodeElement( nodeObj, ...params ) );\n\n\t\t\t} else if ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing properties ( swizzle )\n\n\t\t\t\tprop = parseSwizzle( prop );\n\n\t\t\t\treturn nodeObject( new SplitNode( nodeObj, prop ) );\n\n\t\t\t} else if ( /^set[XYZWRGBASTPQ]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// set properties ( swizzle ) and sort to xyzw sequence\n\n\t\t\t\tprop = parseSwizzleAndSort( prop.slice( 3 ).toLowerCase() );\n\n\t\t\t\treturn ( value ) => nodeObject( new SetNode( node, prop, value ) );\n\n\t\t\t} else if ( /^flip[XYZWRGBASTPQ]{1,4}$/.test( prop ) === true ) {\n\n\t\t\t\t// set properties ( swizzle ) and sort to xyzw sequence\n\n\t\t\t\tprop = parseSwizzleAndSort( prop.slice( 4 ).toLowerCase() );\n\n\t\t\t\treturn () => nodeObject( new FlipNode( nodeObject( node ), prop ) );\n\n\t\t\t} else if ( prop === 'width' || prop === 'height' || prop === 'depth' ) {\n\n\t\t\t\t// accessing property\n\n\t\t\t\tif ( prop === 'width' ) prop = 'x';\n\t\t\t\telse if ( prop === 'height' ) prop = 'y';\n\t\t\t\telse if ( prop === 'depth' ) prop = 'z';\n\n\t\t\t\treturn nodeObject( new SplitNode( node, prop ) );\n\n\t\t\t} else if ( /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\t// accessing array\n\n\t\t\t\treturn nodeObject( new ArrayElementNode( nodeObj, new ConstNode( Number( prop ), 'uint' ) ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.get( node, prop, nodeObj );\n\n\t},\n\n\tset( node, prop, value, nodeObj ) {\n\n\t\tif ( typeof prop === 'string' && node[ prop ] === undefined ) {\n\n\t\t\t// setting properties\n\n\t\t\tif ( /^[xyzwrgbastpq]{1,4}$/.test( prop ) === true || prop === 'width' || prop === 'height' || prop === 'depth' || /^\\d+$/.test( prop ) === true ) {\n\n\t\t\t\tnodeObj[ prop ].assign( value );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Reflect.set( node, prop, value, nodeObj );\n\n\t}\n\n};\n\nconst nodeObjectsCacheMap = new WeakMap();\nconst nodeBuilderFunctionsCacheMap = new WeakMap();\n\nconst ShaderNodeObject = function ( obj, altType = null ) {\n\n\tconst type = getValueType( obj );\n\n\tif ( type === 'node' ) {\n\n\t\tlet nodeObject = nodeObjectsCacheMap.get( obj );\n\n\t\tif ( nodeObject === undefined ) {\n\n\t\t\tnodeObject = new Proxy( obj, shaderNodeHandler );\n\n\t\t\tnodeObjectsCacheMap.set( obj, nodeObject );\n\t\t\tnodeObjectsCacheMap.set( nodeObject, nodeObject );\n\n\t\t}\n\n\t\treturn nodeObject;\n\n\t} else if ( ( altType === null && ( type === 'float' || type === 'boolean' ) ) || ( type && type !== 'shader' && type !== 'string' ) ) {\n\n\t\treturn nodeObject( getConstNode( obj, altType ) );\n\n\t} else if ( type === 'shader' ) {\n\n\t\treturn Fn( obj );\n\n\t}\n\n\treturn obj;\n\n};\n\nconst ShaderNodeObjects = function ( objects, altType = null ) {\n\n\tfor ( const name in objects ) {\n\n\t\tobjects[ name ] = nodeObject( objects[ name ], altType );\n\n\t}\n\n\treturn objects;\n\n};\n\nconst ShaderNodeArray = function ( array, altType = null ) {\n\n\tconst len = array.length;\n\n\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\tarray[ i ] = nodeObject( array[ i ], altType );\n\n\t}\n\n\treturn array;\n\n};\n\nconst ShaderNodeProxy = function ( NodeClass, scope = null, factor = null, settings = null ) {\n\n\tconst assignNode = ( node ) => nodeObject( settings !== null ? Object.assign( node, settings ) : node );\n\n\tif ( scope === null ) {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( ...nodeArray( params ) ) );\n\n\t\t};\n\n\t} else if ( factor !== null ) {\n\n\t\tfactor = nodeObject( factor );\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ), factor ) );\n\n\t\t};\n\n\t} else {\n\n\t\treturn ( ...params ) => {\n\n\t\t\treturn assignNode( new NodeClass( scope, ...nodeArray( params ) ) );\n\n\t\t};\n\n\t}\n\n};\n\nconst ShaderNodeImmutable = function ( NodeClass, ...params ) {\n\n\treturn nodeObject( new NodeClass( ...nodeArray( params ) ) );\n\n};\n\nclass ShaderCallNodeInternal extends Node {\n\n\tconstructor( shaderNode, inputNodes ) {\n\n\t\tsuper();\n\n\t\tthis.shaderNode = shaderNode;\n\t\tthis.inputNodes = inputNodes;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.shaderNode.nodeType || this.getOutputNode( builder ).getNodeType( builder );\n\n\t}\n\n\tcall( builder ) {\n\n\t\tconst { shaderNode, inputNodes } = this;\n\n\t\tconst properties = builder.getNodeProperties( shaderNode );\n\t\tif ( properties.onceOutput ) return properties.onceOutput;\n\n\t\t//\n\n\t\tlet result = null;\n\n\t\tif ( shaderNode.layout ) {\n\n\t\t\tlet functionNodesCacheMap = nodeBuilderFunctionsCacheMap.get( builder.constructor );\n\n\t\t\tif ( functionNodesCacheMap === undefined ) {\n\n\t\t\t\tfunctionNodesCacheMap = new WeakMap();\n\n\t\t\t\tnodeBuilderFunctionsCacheMap.set( builder.constructor, functionNodesCacheMap );\n\n\t\t\t}\n\n\t\t\tlet functionNode = functionNodesCacheMap.get( shaderNode );\n\n\t\t\tif ( functionNode === undefined ) {\n\n\t\t\t\tfunctionNode = nodeObject( builder.buildFunctionNode( shaderNode ) );\n\n\t\t\t\tfunctionNodesCacheMap.set( shaderNode, functionNode );\n\n\t\t\t}\n\n\t\t\tif ( builder.currentFunctionNode !== null ) {\n\n\t\t\t\tbuilder.currentFunctionNode.includes.push( functionNode );\n\n\t\t\t}\n\n\t\t\tresult = nodeObject( functionNode.call( inputNodes ) );\n\n\t\t} else {\n\n\t\t\tconst jsFunc = shaderNode.jsFunc;\n\t\t\tconst outputNode = inputNodes !== null ? jsFunc( inputNodes, builder ) : jsFunc( builder );\n\n\t\t\tresult = nodeObject( outputNode );\n\n\t\t}\n\n\t\tif ( shaderNode.once ) {\n\n\t\t\tproperties.onceOutput = result;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetOutputNode( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tif ( properties.outputNode === null ) {\n\n\t\t\tproperties.outputNode = this.setupOutput( builder );\n\n\t\t}\n\n\t\treturn properties.outputNode;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\treturn this.getOutputNode( builder );\n\n\t}\n\n\tsetupOutput( builder ) {\n\n\t\tbuilder.addStack();\n\n\t\tbuilder.stack.outputNode = this.call( builder );\n\n\t\treturn builder.removeStack();\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst outputNode = this.getOutputNode( builder );\n\n\t\treturn outputNode.build( builder, output );\n\n\t}\n\n}\n\nclass ShaderNodeInternal extends Node {\n\n\tconstructor( jsFunc, nodeType ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.jsFunc = jsFunc;\n\t\tthis.layout = null;\n\n\t\tthis.global = true;\n\n\t\tthis.once = false;\n\n\t}\n\n\tsetLayout( layout ) {\n\n\t\tthis.layout = layout;\n\n\t\treturn this;\n\n\t}\n\n\tcall( inputs = null ) {\n\n\t\tnodeObjects( inputs );\n\n\t\treturn nodeObject( new ShaderCallNodeInternal( this, inputs ) );\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.call();\n\n\t}\n\n}\n\nconst bools = [ false, true ];\nconst uints = [ 0, 1, 2, 3 ];\nconst ints = [ - 1, - 2 ];\nconst floats = [ 0.5, 1.5, 1 / 3, 1e-6, 1e6, Math.PI, Math.PI * 2, 1 / Math.PI, 2 / Math.PI, 1 / ( Math.PI * 2 ), Math.PI / 2 ];\n\nconst boolsCacheMap = new Map();\nfor ( const bool of bools ) boolsCacheMap.set( bool, new ConstNode( bool ) );\n\nconst uintsCacheMap = new Map();\nfor ( const uint of uints ) uintsCacheMap.set( uint, new ConstNode( uint, 'uint' ) );\n\nconst intsCacheMap = new Map( [ ...uintsCacheMap ].map( el => new ConstNode( el.value, 'int' ) ) );\nfor ( const int of ints ) intsCacheMap.set( int, new ConstNode( int, 'int' ) );\n\nconst floatsCacheMap = new Map( [ ...intsCacheMap ].map( el => new ConstNode( el.value ) ) );\nfor ( const float of floats ) floatsCacheMap.set( float, new ConstNode( float ) );\nfor ( const float of floats ) floatsCacheMap.set( - float, new ConstNode( - float ) );\n\nconst cacheMaps = { bool: boolsCacheMap, uint: uintsCacheMap, ints: intsCacheMap, float: floatsCacheMap };\n\nconst constNodesCacheMap = new Map( [ ...boolsCacheMap, ...floatsCacheMap ] );\n\nconst getConstNode = ( value, type ) => {\n\n\tif ( constNodesCacheMap.has( value ) ) {\n\n\t\treturn constNodesCacheMap.get( value );\n\n\t} else if ( value.isNode === true ) {\n\n\t\treturn value;\n\n\t} else {\n\n\t\treturn new ConstNode( value, type );\n\n\t}\n\n};\n\nconst safeGetNodeType = ( node ) => {\n\n\ttry {\n\n\t\treturn node.getNodeType();\n\n\t} catch ( _ ) {\n\n\t\treturn undefined;\n\n\t}\n\n};\n\nconst ConvertType = function ( type, cacheMap = null ) {\n\n\treturn ( ...params ) => {\n\n\t\tif ( params.length === 0 || ( ! [ 'bool', 'float', 'int', 'uint' ].includes( type ) && params.every( param => typeof param !== 'object' ) ) ) {\n\n\t\t\tparams = [ getValueFromType( type, ...params ) ];\n\n\t\t}\n\n\t\tif ( params.length === 1 && cacheMap !== null && cacheMap.has( params[ 0 ] ) ) {\n\n\t\t\treturn nodeObject( cacheMap.get( params[ 0 ] ) );\n\n\t\t}\n\n\t\tif ( params.length === 1 ) {\n\n\t\t\tconst node = getConstNode( params[ 0 ], type );\n\t\t\tif ( safeGetNodeType( node ) === type ) return nodeObject( node );\n\t\t\treturn nodeObject( new ConvertNode( node, type ) );\n\n\t\t}\n\n\t\tconst nodes = params.map( param => getConstNode( param ) );\n\t\treturn nodeObject( new JoinNode( nodes, type ) );\n\n\t};\n\n};\n\n// exports\n\nexport const defined = ( v ) => typeof v === 'object' && v !== null ? v.value : v; // TODO: remove boolean conversion and defined function\n\n// utils\n\nexport const getConstNodeType = ( value ) => ( value !== undefined && value !== null ) ? ( value.nodeType || value.convertTo || ( typeof value === 'string' ? value : null ) ) : null;\n\n// shader node base\n\nexport function ShaderNode( jsFunc, nodeType ) {\n\n\treturn new Proxy( new ShaderNodeInternal( jsFunc, nodeType ), shaderNodeHandler );\n\n}\n\nexport const nodeObject = ( val, altType = null ) => /* new */ ShaderNodeObject( val, altType );\nexport const nodeObjects = ( val, altType = null ) => new ShaderNodeObjects( val, altType );\nexport const nodeArray = ( val, altType = null ) => new ShaderNodeArray( val, altType );\nexport const nodeProxy = ( ...params ) => new ShaderNodeProxy( ...params );\nexport const nodeImmutable = ( ...params ) => new ShaderNodeImmutable( ...params );\n\nexport const Fn = ( jsFunc, nodeType ) => {\n\n\tconst shaderNode = new ShaderNode( jsFunc, nodeType );\n\n\tconst fn = ( ...params ) => {\n\n\t\tlet inputs;\n\n\t\tnodeObjects( params );\n\n\t\tif ( params[ 0 ] && params[ 0 ].isNode ) {\n\n\t\t\tinputs = [ ...params ];\n\n\t\t} else {\n\n\t\t\tinputs = params[ 0 ];\n\n\t\t}\n\n\t\treturn shaderNode.call( inputs );\n\n\t};\n\n\tfn.shaderNode = shaderNode;\n\n\tfn.setLayout = ( layout ) => {\n\n\t\tshaderNode.setLayout( layout );\n\n\t\treturn fn;\n\n\t};\n\n\tfn.once = () => {\n\n\t\tshaderNode.once = true;\n\n\t\treturn fn;\n\n\t};\n\n\treturn fn;\n\n};\n\nexport const tslFn = ( ...params ) => { // @deprecated, r168\n\n\tconsole.warn( 'TSL.ShaderNode: tslFn() has been renamed to Fn().' );\n\treturn Fn( ...params );\n\n};\n\n//\n\naddMethodChaining( 'toGlobal', ( node ) => {\n\n\tnode.global = true;\n\n\treturn node;\n\n} );\n\n//\n\nexport const setCurrentStack = ( stack ) => {\n\n\tif ( currentStack === stack ) {\n\n\t\t//throw new Error( 'Stack already defined.' );\n\n\t}\n\n\tcurrentStack = stack;\n\n};\n\nexport const getCurrentStack = () => currentStack;\n\nexport const If = ( ...params ) => currentStack.If( ...params );\n\nexport function append( node ) {\n\n\tif ( currentStack ) currentStack.add( node );\n\n\treturn node;\n\n}\n\naddMethodChaining( 'append', append );\n\n// types\n\nexport const color = new ConvertType( 'color' );\n\nexport const float = new ConvertType( 'float', cacheMaps.float );\nexport const int = new ConvertType( 'int', cacheMaps.ints );\nexport const uint = new ConvertType( 'uint', cacheMaps.uint );\nexport const bool = new ConvertType( 'bool', cacheMaps.bool );\n\nexport const vec2 = new ConvertType( 'vec2' );\nexport const ivec2 = new ConvertType( 'ivec2' );\nexport const uvec2 = new ConvertType( 'uvec2' );\nexport const bvec2 = new ConvertType( 'bvec2' );\n\nexport const vec3 = new ConvertType( 'vec3' );\nexport const ivec3 = new ConvertType( 'ivec3' );\nexport const uvec3 = new ConvertType( 'uvec3' );\nexport const bvec3 = new ConvertType( 'bvec3' );\n\nexport const vec4 = new ConvertType( 'vec4' );\nexport const ivec4 = new ConvertType( 'ivec4' );\nexport const uvec4 = new ConvertType( 'uvec4' );\nexport const bvec4 = new ConvertType( 'bvec4' );\n\nexport const mat2 = new ConvertType( 'mat2' );\nexport const mat3 = new ConvertType( 'mat3' );\nexport const mat4 = new ConvertType( 'mat4' );\n\nexport const string = ( value = '' ) => nodeObject( new ConstNode( value, 'string' ) );\nexport const arrayBuffer = ( value ) => nodeObject( new ConstNode( value, 'ArrayBuffer' ) );\n\naddMethodChaining( 'toColor', color );\naddMethodChaining( 'toFloat', float );\naddMethodChaining( 'toInt', int );\naddMethodChaining( 'toUint', uint );\naddMethodChaining( 'toBool', bool );\naddMethodChaining( 'toVec2', vec2 );\naddMethodChaining( 'toIVec2', ivec2 );\naddMethodChaining( 'toUVec2', uvec2 );\naddMethodChaining( 'toBVec2', bvec2 );\naddMethodChaining( 'toVec3', vec3 );\naddMethodChaining( 'toIVec3', ivec3 );\naddMethodChaining( 'toUVec3', uvec3 );\naddMethodChaining( 'toBVec3', bvec3 );\naddMethodChaining( 'toVec4', vec4 );\naddMethodChaining( 'toIVec4', ivec4 );\naddMethodChaining( 'toUVec4', uvec4 );\naddMethodChaining( 'toBVec4', bvec4 );\naddMethodChaining( 'toMat2', mat2 );\naddMethodChaining( 'toMat3', mat3 );\naddMethodChaining( 'toMat4', mat4 );\n\n// basic nodes\n\nexport const element = /*@__PURE__*/ nodeProxy( ArrayElementNode );\nexport const convert = ( node, types ) => nodeObject( new ConvertNode( nodeObject( node ), types ) );\nexport const split = ( node, channels ) => nodeObject( new SplitNode( nodeObject( node ), channels ) );\n\naddMethodChaining( 'element', element );\naddMethodChaining( 'convert', convert );\n","import Node from './Node.js';\n\n/** @module UniformGroupNode **/\n\n/**\n * This node can be used to group single instances of {@link UniformNode}\n * and manage them as a uniform buffer.\n *\n * In most cases, the predefined nodes `objectGroup`, `renderGroup` and `frameGroup`\n * will be used when defining the {@link UniformNode#groupNode} property.\n *\n * - `objectGroup`: Uniform buffer per object.\n * - `renderGroup`: Shared uniform buffer, updated once per render call.\n * - `frameGroup`: Shared uniform buffer, updated once per frame.\n *\n * @augments Node\n */\nclass UniformGroupNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'UniformGroupNode';\n\n\t}\n\n\t/**\n\t * Constructs a new uniform group node.\n\t *\n\t * @param {String} name - The name of the uniform group node.\n\t * @param {Boolean} [shared=false] - Whether this uniform group node is shared or not.\n\t * @param {Number} [order=1] - Influences the internal sorting.\n\t */\n\tconstructor( name, shared = false, order = 1 ) {\n\n\t\tsuper( 'string' );\n\n\t\t/**\n\t\t * The name of the uniform group node.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Whether this uniform group node is shared or not.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.shared = shared;\n\n\t\t/**\n\t\t * Influences the internal sorting.\n\t\t * TODO: Add details when this property should be changed.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.order = order;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isUniformGroup = true;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.name = this.name;\n\t\tdata.version = this.version;\n\t\tdata.shared = this.shared;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.name = data.name;\n\t\tthis.version = data.version;\n\t\tthis.shared = data.shared;\n\n\t}\n\n}\n\nexport default UniformGroupNode;\n\n/**\n * TSL function for creating a uniform group node with the given name.\n *\n * @function\n * @param {String} name - The name of the uniform group node.\n * @returns {UniformGroupNode}\n */\nexport const uniformGroup = ( name ) => new UniformGroupNode( name );\n\n/**\n * TSL function for creating a shared uniform group node with the given name and order.\n *\n * @function\n * @param {String} name - The name of the uniform group node.\n * @param {Number} [order=0] - Influences the internal sorting.\n * @returns {UniformGroupNode}\n */\nexport const sharedUniformGroup = ( name, order = 0 ) => new UniformGroupNode( name, true, order );\n\n/**\n * TSL object that represents a shared uniform group node which is updated once per frame.\n *\n * @type {UniformGroupNode}\n */\nexport const frameGroup = /*@__PURE__*/ sharedUniformGroup( 'frame' );\n\n/**\n * TSL object that represents a shared uniform group node which is updated once per render.\n *\n * @type {UniformGroupNode}\n */\nexport const renderGroup = /*@__PURE__*/ sharedUniformGroup( 'render' );\n\n/**\n * TSL object that represents a uniform group node which is updated once per object.\n *\n * @type {UniformGroupNode}\n */\nexport const objectGroup = /*@__PURE__*/ uniformGroup( 'object' );\n","import InputNode from './InputNode.js';\nimport { objectGroup } from './UniformGroupNode.js';\nimport { nodeObject, getConstNodeType } from '../tsl/TSLCore.js';\n\n/** @module UniformNode **/\n\n/**\n * Class for representing a uniform.\n *\n * @augments InputNode\n */\nclass UniformNode extends InputNode {\n\n\tstatic get type() {\n\n\t\treturn 'UniformNode';\n\n\t}\n\n\t/**\n\t * Constructs a new uniform node.\n\t *\n\t * @param {Any} value - The value of this node. Usually a JS primitive or three.js object (vector, matrix, color, texture).\n\t * @param {String?} nodeType - The node type. If no explicit type is defined, the node tries to derive the type from its value.\n\t */\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isUniformNode = true;\n\n\t\t/**\n\t\t * The name or label of the uniform.\n\t\t *\n\t\t * @type {String}\n\t\t * @default ''\n\t\t */\n\t\tthis.name = '';\n\n\t\t/**\n\t\t * The uniform group of this uniform. By default, uniforms are\n\t\t * managed per object but they might belong to a shared group\n\t\t * which is updated per frame or render call.\n\t\t *\n\t\t * @type {UniformGroupNode}\n\t\t */\n\t\tthis.groupNode = objectGroup;\n\n\t}\n\n\t/**\n\t * Sets the {@link UniformNode#name} property.\n\t *\n\t * @param {String} name - The name of the uniform.\n\t * @return {UniformNode} A reference to this node.\n\t */\n\tlabel( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the {@link UniformNode#groupNode} property.\n\t *\n\t * @param {UniformGroupNode} group - The uniform group.\n\t * @return {UniformNode} A reference to this node.\n\t */\n\tsetGroup( group ) {\n\n\t\tthis.groupNode = group;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the {@link UniformNode#groupNode}.\n\t *\n\t * @return {UniformGroupNode} The uniform group.\n\t */\n\tgetGroup() {\n\n\t\treturn this.groupNode;\n\n\t}\n\n\t/**\n\t * By default, this method returns the result of {@link Node#getHash} but derived\n\t * classes might overwrite this method with a different implementation.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The uniform hash.\n\t */\n\tgetUniformHash( builder ) {\n\n\t\treturn this.getHash( builder );\n\n\t}\n\n\tonUpdate( callback, updateType ) {\n\n\t\tconst self = this.getSelf();\n\n\t\tcallback = callback.bind( self );\n\n\t\treturn super.onUpdate( ( frame ) => {\n\n\t\t\tconst value = callback( frame, self );\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\tthis.value = value;\n\n\t\t\t}\n\n\t \t}, updateType );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst hash = this.getUniformHash( builder );\n\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\n\n\t\tif ( sharedNode === undefined ) {\n\n\t\t\tbuilder.setHashNode( this, hash );\n\n\t\t\tsharedNode = this;\n\n\t\t}\n\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\n\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, sharedNodeType, builder.shaderStage, this.name || builder.context.label );\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\n\n\t\tif ( builder.context.label !== undefined ) delete builder.context.label;\n\n\t\treturn builder.format( propertyName, type, output );\n\n\t}\n\n}\n\nexport default UniformNode;\n\n/**\n * TSL function for creating a uniform node.\n *\n * @function\n * @param {Any} arg1 - The value of this node. Usually a JS primitive or three.js object (vector, matrix, color, texture).\n * @param {String?} arg2 - The node type. If no explicit type is defined, the node tries to derive the type from its value.\n * @returns {UniformNode}\n */\nexport const uniform = ( arg1, arg2 ) => {\n\n\tconst nodeType = getConstNodeType( arg2 || arg1 );\n\n\t// @TODO: get ConstNode from .traverse() in the future\n\tconst value = ( arg1 && arg1.isNode === true ) ? ( arg1.node && arg1.node.value ) || arg1.value : arg1;\n\n\treturn nodeObject( new UniformNode( value, nodeType ) );\n\n};\n","import Node from './Node.js';\nimport { nodeImmutable, nodeObject } from '../tsl/TSLCore.js';\n\n/** @module PropertyNode **/\n\n/**\n * This class represents a shader property. It can be used\n * to explicitly define a property and assign a value to it.\n *\n * ```js\n * const threshold = property( 'float', 'threshold' ).assign( THRESHOLD );\n *```\n * `PropertyNode` is used by the engine to predefined common material properties\n * for TSL code.\n *\n * @augments Node\n */\nclass PropertyNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'PropertyNode';\n\n\t}\n\n\t/**\n\t * Constructs a new property node.\n\t *\n\t * @param {String} nodeType - The type of the node.\n\t * @param {String?} [name=null] - The name of the property in the shader.\n\t * @param {Boolean} [varying=false] - Whether this property is a varying or not.\n\t */\n\tconstructor( nodeType, name = null, varying = false ) {\n\n\t\tsuper( nodeType );\n\n\t\t/**\n\t\t * The name of the property in the shader. If no name is defined,\n\t\t * the node system auto-generates one.\n\t\t *\n\t\t * @type {String?}\n\t\t * @default null\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Whether this property is a varying or not.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.varying = varying;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isPropertyNode = true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\t/**\n\t * The method is overwritten so it always returns `true`.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Boolean} Whether this node is global or not.\n\t */\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn true;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tlet nodeVar;\n\n\t\tif ( this.varying === true ) {\n\n\t\t\tnodeVar = builder.getVaryingFromNode( this, this.name );\n\t\t\tnodeVar.needsInterpolation = true;\n\n\t\t} else {\n\n\t\t\tnodeVar = builder.getVarFromNode( this, this.name );\n\n\t\t}\n\n\t\treturn builder.getPropertyName( nodeVar );\n\n\t}\n\n}\n\nexport default PropertyNode;\n\n/**\n * TSL function for creating a property node.\n *\n * @function\n * @param {String} type - The type of the node.\n * @param {String?} [name=null] - The name of the property in the shader.\n * @returns {PropertyNode}\n */\nexport const property = ( type, name ) => nodeObject( new PropertyNode( type, name ) );\n\n/**\n * TSL function for creating a varying property node.\n *\n * @function\n * @param {String} type - The type of the node.\n * @param {String?} [name=null] - The name of the varying in the shader.\n * @returns {PropertyNode}\n */\nexport const varyingProperty = ( type, name ) => nodeObject( new PropertyNode( type, name, true ) );\n\n/**\n * TSL object that represents the shader variable `DiffuseColor`.\n *\n * @type {PropertyNode<vec4>}\n */\nexport const diffuseColor = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec4', 'DiffuseColor' );\n\n/**\n * TSL object that represents the shader variable `EmissiveColor`.\n *\n * @type {PropertyNode<vec3>}\n */\nexport const emissive = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec3', 'EmissiveColor' );\n\n/**\n * TSL object that represents the shader variable `Roughness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const roughness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Roughness' );\n\n/**\n * TSL object that represents the shader variable `Metalness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const metalness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Metalness' );\n\n/**\n * TSL object that represents the shader variable `Clearcoat`.\n *\n * @type {PropertyNode<float>}\n */\nexport const clearcoat = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Clearcoat' );\n\n/**\n * TSL object that represents the shader variable `ClearcoatRoughness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const clearcoatRoughness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'ClearcoatRoughness' );\n\n/**\n * TSL object that represents the shader variable `Sheen`.\n *\n * @type {PropertyNode<vec3>}\n */\nexport const sheen = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec3', 'Sheen' );\n\n/**\n * TSL object that represents the shader variable `SheenRoughness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const sheenRoughness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'SheenRoughness' );\n\n/**\n * TSL object that represents the shader variable `Iridescence`.\n *\n * @type {PropertyNode<float>}\n */\nexport const iridescence = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Iridescence' );\n\n/**\n * TSL object that represents the shader variable `IridescenceIOR`.\n *\n * @type {PropertyNode<float>}\n */\nexport const iridescenceIOR = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'IridescenceIOR' );\n\n/**\n * TSL object that represents the shader variable `IridescenceThickness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const iridescenceThickness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'IridescenceThickness' );\n\n/**\n * TSL object that represents the shader variable `AlphaT`.\n *\n * @type {PropertyNode<float>}\n */\nexport const alphaT = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'AlphaT' );\n\n/**\n * TSL object that represents the shader variable `Anisotropy`.\n *\n * @type {PropertyNode<float>}\n */\nexport const anisotropy = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Anisotropy' );\n\n/**\n * TSL object that represents the shader variable `AnisotropyT`.\n *\n * @type {PropertyNode<vec3>}\n */\nexport const anisotropyT = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec3', 'AnisotropyT' );\n\n/**\n * TSL object that represents the shader variable `AnisotropyB`.\n *\n * @type {PropertyNode<vec3>}\n */\nexport const anisotropyB = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec3', 'AnisotropyB' );\n\n/**\n * TSL object that represents the shader variable `SpecularColor`.\n *\n * @type {PropertyNode<color>}\n */\nexport const specularColor = /*@__PURE__*/ nodeImmutable( PropertyNode, 'color', 'SpecularColor' );\n\n/**\n * TSL object that represents the shader variable `SpecularF90`.\n *\n * @type {PropertyNode<float>}\n */\nexport const specularF90 = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'SpecularF90' );\n\n/**\n * TSL object that represents the shader variable `Shininess`.\n *\n * @type {PropertyNode<float>}\n */\nexport const shininess = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Shininess' );\n\n/**\n * TSL object that represents the shader variable `Output`.\n *\n * @type {PropertyNode<vec4>}\n */\nexport const output = /*@__PURE__*/ nodeImmutable( PropertyNode, 'vec4', 'Output' );\n\n/**\n * TSL object that represents the shader variable `dashSize`.\n *\n * @type {PropertyNode<float>}\n */\nexport const dashSize = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'dashSize' );\n\n/**\n * TSL object that represents the shader variable `gapSize`.\n *\n * @type {PropertyNode<float>}\n */\nexport const gapSize = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'gapSize' );\n\n/**\n * TSL object that represents the shader variable `pointWidth`.\n *\n * @type {PropertyNode<float>}\n */\nexport const pointWidth = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'pointWidth' );\n\n/**\n * TSL object that represents the shader variable `IOR`.\n *\n * @type {PropertyNode<float>}\n */\nexport const ior = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'IOR' );\n\n/**\n * TSL object that represents the shader variable `Transmission`.\n *\n * @type {PropertyNode<float>}\n */\nexport const transmission = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Transmission' );\n\n/**\n * TSL object that represents the shader variable `Thickness`.\n *\n * @type {PropertyNode<float>}\n */\nexport const thickness = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Thickness' );\n\n/**\n * TSL object that represents the shader variable `AttenuationDistance`.\n *\n * @type {PropertyNode<float>}\n */\nexport const attenuationDistance = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'AttenuationDistance' );\n\n/**\n * TSL object that represents the shader variable `AttenuationColor`.\n *\n * @type {PropertyNode<color>}\n */\nexport const attenuationColor = /*@__PURE__*/ nodeImmutable( PropertyNode, 'color', 'AttenuationColor' );\n\n/**\n * TSL object that represents the shader variable `Dispersion`.\n *\n * @type {PropertyNode<float>}\n */\nexport const dispersion = /*@__PURE__*/ nodeImmutable( PropertyNode, 'float', 'Dispersion' );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\nimport { vectorComponents } from '../core/constants.js';\n\n/** @module AssignNode **/\n\n/**\n * These node represents an assign operation. Meaning a node is assigned\n * to another node.\n *\n * @augments TempNode\n */\nclass AssignNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'AssignNode';\n\n\t}\n\n\t/**\n\t * Constructs a new assign node.\n\t *\n\t * @param {Node} targetNode - The target node.\n\t * @param {Node} sourceNode - The source type.\n\t */\n\tconstructor( targetNode, sourceNode ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The target node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.targetNode = targetNode;\n\n\t\t/**\n\t\t * The source node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.sourceNode = sourceNode;\n\n\t}\n\n\t/**\n\t * Whether this node is used more than once in context of other nodes. This method\n\t * is overwritten since it always returns `false` (assigns are unique).\n\t *\n\t * @return {Boolean} A flag that indicates if there is more than one dependency to other nodes. Always `false`.\n\t */\n\thasDependencies() {\n\n\t\treturn false;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\treturn output !== 'void' ? this.targetNode.getNodeType( builder ) : 'void';\n\n\t}\n\n\t/**\n\t * Whether a split is required when assigning source to target. This can happen when the component length of\n\t * target and source data type does not match.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Boolean} Whether a split is required when assigning source to target.\n\t */\n\tneedsSplitAssign( builder ) {\n\n\t\tconst { targetNode } = this;\n\n\t\tif ( builder.isAvailable( 'swizzleAssign' ) === false && targetNode.isSplitNode && targetNode.components.length > 1 ) {\n\n\t\t\tconst targetLength = builder.getTypeLength( targetNode.node.getNodeType( builder ) );\n\t\t\tconst assignDifferentVector = vectorComponents.join( '' ).slice( 0, targetLength ) !== targetNode.components;\n\n\t\t\treturn assignDifferentVector;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { targetNode, sourceNode } = this;\n\n\t\tconst needsSplitAssign = this.needsSplitAssign( builder );\n\n\t\tconst targetType = targetNode.getNodeType( builder );\n\n\t\tconst target = targetNode.context( { assign: true } ).build( builder );\n\t\tconst source = sourceNode.build( builder, targetType );\n\n\t\tconst sourceType = sourceNode.getNodeType( builder );\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t//\n\n\t\tlet snippet;\n\n\t\tif ( nodeData.initialized === true ) {\n\n\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\tsnippet = target;\n\n\t\t\t}\n\n\t\t} else if ( needsSplitAssign ) {\n\n\t\t\tconst sourceVar = builder.getVarFromNode( this, null, targetType );\n\t\t\tconst sourceProperty = builder.getPropertyName( sourceVar );\n\n\t\t\tbuilder.addLineFlowCode( `${ sourceProperty } = ${ source }`, this );\n\n\t\t\tconst targetRoot = targetNode.node.context( { assign: true } ).build( builder );\n\n\t\t\tfor ( let i = 0; i < targetNode.components.length; i ++ ) {\n\n\t\t\t\tconst component = targetNode.components[ i ];\n\n\t\t\t\tbuilder.addLineFlowCode( `${ targetRoot }.${ component } = ${ sourceProperty }[ ${ i } ]`, this );\n\n\t\t\t}\n\n\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\tsnippet = target;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tsnippet = `${ target } = ${ source }`;\n\n\t\t\tif ( output === 'void' || sourceType === 'void' ) {\n\n\t\t\t\tbuilder.addLineFlowCode( snippet, this );\n\n\t\t\t\tif ( output !== 'void' ) {\n\n\t\t\t\t\tsnippet = target;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tnodeData.initialized = true;\n\n\t\treturn builder.format( snippet, targetType, output );\n\n\t}\n\n}\n\nexport default AssignNode;\n\n/**\n * TSL function for creating an assign node.\n *\n * @function\n * @param {Node} targetNode - The target node.\n * @param {Node} sourceNode - The source type.\n * @returns {AssignNode}\n */\nexport const assign = /*@__PURE__*/ nodeProxy( AssignNode );\n\naddMethodChaining( 'assign', assign );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeArray, nodeObject, nodeObjects } from '../tsl/TSLCore.js';\n\n/**\n * This module represents the call of a {@link FunctionNode}. Developers are usually not confronted\n * with this module since they use the predefined TSL syntax `wgslFn` and `glslFn` which encapsulate\n * this logic.\n *\n * @augments TempNode\n */\nclass FunctionCallNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'FunctionCallNode';\n\n\t}\n\n\t/**\n\t * Constructs a new function call node.\n\t *\n\t * @param {FunctionNode?} functionNode - The function node.\n\t * @param {Object<String, Node>} [parameters={}] - The parameters for the function call.\n\t */\n\tconstructor( functionNode = null, parameters = {} ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The function node.\n\t\t *\n\t\t * @type {FunctionNode}\n\t\t * @default null\n\t\t */\n\t\tthis.functionNode = functionNode;\n\n\t\t/**\n\t\t * The parameters of the function call.\n\t\t *\n\t\t * @type {Object<String, Node>}\n\t\t * @default {}\n\t\t */\n\t\tthis.parameters = parameters;\n\n\t}\n\n\t/**\n\t * Sets the parameters of the function call node.\n\t *\n\t * @param {Object<String, Node>} parameters - The parameters to set.\n\t * @return {FunctionCallNode} A reference to this node.\n\t */\n\tsetParameters( parameters ) {\n\n\t\tthis.parameters = parameters;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns the parameters of the function call node.\n\t *\n\t * @return {Object<String, Node>} The parameters of this node.\n\t */\n\tgetParameters() {\n\n\t\treturn this.parameters;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.functionNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst params = [];\n\n\t\tconst functionNode = this.functionNode;\n\n\t\tconst inputs = functionNode.getInputs( builder );\n\t\tconst parameters = this.parameters;\n\n\t\tconst generateInput = ( node, inputNode ) => {\n\n\t\t\tconst type = inputNode.type;\n\t\t\tconst pointer = type === 'pointer';\n\n\t\t\tlet output;\n\n\t\t\tif ( pointer ) output = '&' + node.build( builder );\n\t\t\telse output = node.build( builder, type );\n\n\t\t\treturn output;\n\n\t\t};\n\n\t\tif ( Array.isArray( parameters ) ) {\n\n\t\t\tfor ( let i = 0; i < parameters.length; i ++ ) {\n\n\t\t\t\tparams.push( generateInput( parameters[ i ], inputs[ i ] ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( const inputNode of inputs ) {\n\n\t\t\t\tconst node = parameters[ inputNode.name ];\n\n\t\t\t\tif ( node !== undefined ) {\n\n\t\t\t\t\tparams.push( generateInput( node, inputNode ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( `FunctionCallNode: Input '${inputNode.name}' not found in FunctionNode.` );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst functionName = functionNode.build( builder, 'property' );\n\n\t\treturn `${functionName}( ${params.join( ', ' )} )`;\n\n\t}\n\n}\n\nexport default FunctionCallNode;\n\nexport const call = ( func, ...params ) => {\n\n\tparams = params.length > 1 || ( params[ 0 ] && params[ 0 ].isNode === true ) ? nodeArray( params ) : nodeObjects( params[ 0 ] );\n\n\treturn nodeObject( new FunctionCallNode( nodeObject( func ), params ) );\n\n};\n\naddMethodChaining( 'call', call );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module OperatorNode **/\n\n/**\n * This node represents basic mathematical and logical operations like addition,\n * subtraction or comparisons (e.g. `equal()`).\n *\n * @augments TempNode\n */\nclass OperatorNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'OperatorNode';\n\n\t}\n\n\t/**\n\t * Constructs a new operator node.\n\t *\n\t * @param {String} op - The operator.\n\t * @param {Node} aNode - The first input.\n\t * @param {Node} bNode - The second input.\n\t * @param {...Node} params - Additional input parameters.\n\t */\n\tconstructor( op, aNode, bNode, ...params ) {\n\n\t\tsuper();\n\n\t\tif ( params.length > 0 ) {\n\n\t\t\tlet finalOp = new OperatorNode( op, aNode, bNode );\n\n\t\t\tfor ( let i = 0; i < params.length - 1; i ++ ) {\n\n\t\t\t\tfinalOp = new OperatorNode( op, finalOp, params[ i ] );\n\n\t\t\t}\n\n\t\t\taNode = finalOp;\n\t\t\tbNode = params[ params.length - 1 ];\n\n\t\t}\n\n\t\t/**\n\t\t * The operator.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.op = op;\n\n\t\t/**\n\t\t * The first input.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.aNode = aNode;\n\n\t\t/**\n\t\t * The second input.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.bNode = bNode;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from the operator\n\t * and the input node types.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @param {String} output - The current output string.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst typeA = aNode.getNodeType( builder );\n\t\tconst typeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\n\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\n\n\t\t\treturn 'void';\n\n\t\t} else if ( op === '%' ) {\n\n\t\t\treturn typeA;\n\n\t\t} else if ( op === '~' || op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\n\n\t\t\treturn builder.getIntegerType( typeA );\n\n\t\t} else if ( op === '!' || op === '==' || op === '&&' || op === '||' || op === '^^' ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\tconst typeLength = output ? builder.getTypeLength( output ) : Math.max( builder.getTypeLength( typeA ), builder.getTypeLength( typeB ) );\n\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\n\n\t\t} else {\n\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\n\n\t\t\t\treturn typeB;\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\n\n\t\t\t\t// anytype x anytype: use the greater length vector\n\n\t\t\t\treturn typeB;\n\n\t\t\t}\n\n\t\t\treturn typeA;\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst type = this.getNodeType( builder, output );\n\n\t\tlet typeA = null;\n\t\tlet typeB = null;\n\n\t\tif ( type !== 'void' ) {\n\n\t\t\ttypeA = aNode.getNodeType( builder );\n\t\t\ttypeB = typeof bNode !== 'undefined' ? bNode.getNodeType( builder ) : null;\n\n\t\t\tif ( op === '<' || op === '>' || op === '<=' || op === '>=' || op === '==' ) {\n\n\t\t\t\tif ( builder.isVector( typeA ) ) {\n\n\t\t\t\t\ttypeB = typeA;\n\n\t\t\t\t} else if ( typeA !== typeB ) {\n\n\t\t\t\t\ttypeA = typeB = 'float';\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '>>' || op === '<<' ) {\n\n\t\t\t\ttypeA = type;\n\t\t\t\ttypeB = builder.changeComponentType( typeB, 'uint' );\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else {\n\n\t\t\t\t// anytype x anytype\n\n\t\t\t\ttypeA = typeB = type;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttypeA = typeB = type;\n\n\t\t}\n\n\t\tconst a = aNode.build( builder, typeA );\n\t\tconst b = typeof bNode !== 'undefined' ? bNode.build( builder, typeB ) : null;\n\n\t\tconst outputLength = builder.getTypeLength( output );\n\t\tconst fnOpSnippet = builder.getFunctionOperator( op );\n\n\t\tif ( output !== 'void' ) {\n\n\t\t\tif ( op === '<' && outputLength > 1 ) {\n\n\t\t\t\tif ( builder.useComparisonMethod ) {\n\n\t\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThan', output ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn builder.format( `( ${ a } < ${ b } )`, type, output );\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\n\n\t\t\t\tif ( builder.useComparisonMethod ) {\n\n\t\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual', output ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn builder.format( `( ${ a } <= ${ b } )`, type, output );\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\n\n\t\t\t\tif ( builder.useComparisonMethod ) {\n\n\t\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan', output ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn builder.format( `( ${ a } > ${ b } )`, type, output );\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '>=' && outputLength > 1 ) {\n\n\t\t\t\tif ( builder.useComparisonMethod ) {\n\n\t\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThanEqual', output ) }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn builder.format( `( ${ a } >= ${ b } )`, type, output );\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '!' || op === '~' ) {\n\n\t\t\t\treturn builder.format( `(${op}${a})`, typeA, output );\n\n\t\t\t} else if ( fnOpSnippet ) {\n\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `( ${ a } ${ op } ${ b } )`, type, output );\n\n\t\t\t}\n\n\t\t} else if ( typeA !== 'void' ) {\n\n\t\t\tif ( fnOpSnippet ) {\n\n\t\t\t\treturn builder.format( `${ fnOpSnippet }( ${ a }, ${ b } )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `${ a } ${ op } ${ b }`, type, output );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.op = this.op;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.op = data.op;\n\n\t}\n\n}\n\nexport default OperatorNode;\n\n/**\n * Returns the addition of two or more value.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @param {...Node} params - Additional input parameters.\n * @returns {OperatorNode}\n */\nexport const add = /*@__PURE__*/ nodeProxy( OperatorNode, '+' );\n\n/**\n * Returns the subtraction of two or more value.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @param {...Node} params - Additional input parameters.\n * @returns {OperatorNode}\n */\nexport const sub = /*@__PURE__*/ nodeProxy( OperatorNode, '-' );\n\n/**\n * Returns the multiplication of two or more value.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @param {...Node} params - Additional input parameters.\n * @returns {OperatorNode}\n */\nexport const mul = /*@__PURE__*/ nodeProxy( OperatorNode, '*' );\n\n/**\n * Returns the division of two or more value.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @param {...Node} params - Additional input parameters.\n * @returns {OperatorNode}\n */\nexport const div = /*@__PURE__*/ nodeProxy( OperatorNode, '/' );\n\n/**\n * Computes the remainder of dividing the first node by the second, for integer values.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const modInt = /*@__PURE__*/ nodeProxy( OperatorNode, '%' );\n\n/**\n * Checks if two nodes are equal.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const equal = /*@__PURE__*/ nodeProxy( OperatorNode, '==' );\n\n/**\n * Checks if two nodes are not equal.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const notEqual = /*@__PURE__*/ nodeProxy( OperatorNode, '!=' );\n\n/**\n * Checks if the first node is less than the second.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const lessThan = /*@__PURE__*/ nodeProxy( OperatorNode, '<' );\n\n/**\n * Checks if the first node is greater than the second.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const greaterThan = /*@__PURE__*/ nodeProxy( OperatorNode, '>' );\n\n/**\n * Checks if the first node is less than or equal to the second.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const lessThanEqual = /*@__PURE__*/ nodeProxy( OperatorNode, '<=' );\n\n/**\n * Checks if the first node is greater than or equal to the second.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const greaterThanEqual = /*@__PURE__*/ nodeProxy( OperatorNode, '>=' );\n\n/**\n * Performs logical AND on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const and = /*@__PURE__*/ nodeProxy( OperatorNode, '&&' );\n\n/**\n * Performs logical OR on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const or = /*@__PURE__*/ nodeProxy( OperatorNode, '||' );\n\n/**\n * Performs logical NOT on a node.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const not = /*@__PURE__*/ nodeProxy( OperatorNode, '!' );\n\n/**\n * Performs logical XOR on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const xor = /*@__PURE__*/ nodeProxy( OperatorNode, '^^' );\n\n/**\n * Performs bitwise AND on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const bitAnd = /*@__PURE__*/ nodeProxy( OperatorNode, '&' );\n\n/**\n * Performs bitwise NOT on a node.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const bitNot = /*@__PURE__*/ nodeProxy( OperatorNode, '~' );\n\n/**\n * Performs bitwise OR on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const bitOr = /*@__PURE__*/ nodeProxy( OperatorNode, '|' );\n\n/**\n * Performs bitwise XOR on two nodes.\n *\n * @function\n * @param {Node} aNode - The first input.\n * @param {Node} bNode - The second input.\n * @returns {OperatorNode}\n */\nexport const bitXor = /*@__PURE__*/ nodeProxy( OperatorNode, '^' );\n\n/**\n * Shifts a node to the left.\n *\n * @function\n * @param {Node} aNode - The node to shift.\n * @param {Node} bNode - The value to shift.\n * @returns {OperatorNode}\n */\nexport const shiftLeft = /*@__PURE__*/ nodeProxy( OperatorNode, '<<' );\n\n/**\n * Shifts a node to the right.\n *\n * @function\n * @param {Node} aNode - The node to shift.\n * @param {Node} bNode - The value to shift.\n * @returns {OperatorNode}\n */\nexport const shiftRight = /*@__PURE__*/ nodeProxy( OperatorNode, '>>' );\n\naddMethodChaining( 'add', add );\naddMethodChaining( 'sub', sub );\naddMethodChaining( 'mul', mul );\naddMethodChaining( 'div', div );\naddMethodChaining( 'modInt', modInt );\naddMethodChaining( 'equal', equal );\naddMethodChaining( 'notEqual', notEqual );\naddMethodChaining( 'lessThan', lessThan );\naddMethodChaining( 'greaterThan', greaterThan );\naddMethodChaining( 'lessThanEqual', lessThanEqual );\naddMethodChaining( 'greaterThanEqual', greaterThanEqual );\naddMethodChaining( 'and', and );\naddMethodChaining( 'or', or );\naddMethodChaining( 'not', not );\naddMethodChaining( 'xor', xor );\naddMethodChaining( 'bitAnd', bitAnd );\naddMethodChaining( 'bitNot', bitNot );\naddMethodChaining( 'bitOr', bitOr );\naddMethodChaining( 'bitXor', bitXor );\naddMethodChaining( 'shiftLeft', shiftLeft );\naddMethodChaining( 'shiftRight', shiftRight );\n\n\nexport const remainder = ( ...params ) => { // @deprecated, r168\n\n\tconsole.warn( 'TSL.OperatorNode: .remainder() has been renamed to .modInt().' );\n\treturn modInt( ...params );\n\n};\n\naddMethodChaining( 'remainder', remainder );\n","import TempNode from '../core/TempNode.js';\nimport { sub, mul, div } from './OperatorNode.js';\nimport { addMethodChaining, nodeObject, nodeProxy, float, vec2, vec3, vec4, Fn } from '../tsl/TSLCore.js';\nimport { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../../constants.js';\n\n/** @module MathNode **/\n\n/**\n * This node represents a variety of mathematical methods available in shaders.\n * They are divided into three categories:\n *\n * - Methods with one input like `sin`, `cos` or `normalize`.\n * - Methods with two inputs like `dot`, `cross` or `pow`.\n * - Methods with three inputs like `mix`, `clamp` or `smoothstep`.\n *\n * @augments TempNode\n */\nclass MathNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'MathNode';\n\n\t}\n\n\t/**\n\t * Constructs a new math node.\n\t *\n\t * @param {String} method - The method name.\n\t * @param {Node} aNode - The first input.\n\t * @param {Node?} [bNode=null] - The second input.\n\t * @param {Node?} [cNode=null] - The third input.\n\t */\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The method name.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.method = method;\n\n\t\t/**\n\t\t * The first input.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.aNode = aNode;\n\n\t\t/**\n\t\t * The second input.\n\t\t *\n\t\t * @type {Node?}\n\t\t * @default null\n\t\t */\n\t\tthis.bNode = bNode;\n\n\t\t/**\n\t\t * The third input.\n\t\t *\n\t\t * @type {Node?}\n\t\t * @default null\n\t\t */\n\t\tthis.cNode = cNode;\n\n\t}\n\n\t/**\n\t * The input type is inferred from the node types of the input nodes.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The input type.\n\t */\n\tgetInputType( builder ) {\n\n\t\tconst aType = this.aNode.getNodeType( builder );\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\n\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\n\n\t\tif ( aLen > bLen && aLen > cLen ) {\n\n\t\t\treturn aType;\n\n\t\t} else if ( bLen > cLen ) {\n\n\t\t\treturn bType;\n\n\t\t} else if ( cLen > aLen ) {\n\n\t\t\treturn cType;\n\n\t\t}\n\n\t\treturn aType;\n\n\t}\n\n\t/**\n\t * The selected method as well as the input type determine the node type of this node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tconst method = this.method;\n\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( method === MathNode.CROSS ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else if ( method === MathNode.ALL ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( method === MathNode.EQUALS ) {\n\n\t\t\treturn builder.changeComponentType( this.aNode.getNodeType( builder ), 'bool' );\n\n\t\t} else if ( method === MathNode.MOD ) {\n\n\t\t\treturn this.aNode.getNodeType( builder );\n\n\t\t} else {\n\n\t\t\treturn this.getInputType( builder );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tlet method = this.method;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst inputType = this.getInputType( builder );\n\n\t\tconst a = this.aNode;\n\t\tconst b = this.bNode;\n\t\tconst c = this.cNode;\n\n\t\tconst coordinateSystem = builder.renderer.coordinateSystem;\n\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\n\n\t\t\t// dir can be either a direction vector or a normal vector\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\t\t\tlet tA = a;\n\t\t\tlet tB = b;\n\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\n\n\t\t\t\ttB = vec4( vec3( tB ), 0.0 );\n\n\t\t\t} else {\n\n\t\t\t\ttA = vec4( vec3( tA ), 0.0 );\n\n\t\t\t}\n\n\t\t\tconst mulNode = mul( tA, tB ).xyz;\n\n\t\t\treturn normalize( mulNode ).build( builder, output );\n\n\t\t} else if ( method === MathNode.NEGATE ) {\n\n\t\t\treturn builder.format( '( - ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.ONE_MINUS ) {\n\n\t\t\treturn sub( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\n\n\t\t\treturn div( 1.0, a ).build( builder, output );\n\n\t\t} else if ( method === MathNode.DIFFERENCE ) {\n\n\t\t\treturn abs( sub( a, b ) ).build( builder, output );\n\n\t\t} else {\n\n\t\t\tconst params = [];\n\n\t\t\tif ( method === MathNode.CROSS || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, type ),\n\t\t\t\t\tb.build( builder, type )\n\t\t\t\t);\n\n\t\t\t} else if ( coordinateSystem === WebGLCoordinateSystem && method === MathNode.STEP ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\n\t\t\t\t\tb.build( builder, inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( ( coordinateSystem === WebGLCoordinateSystem && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.REFRACT ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, 'float' )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.MIX ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tif ( coordinateSystem === WebGPUCoordinateSystem && method === MathNode.ATAN && b !== null ) {\n\n\t\t\t\t\tmethod = 'atan2';\n\n\t\t\t\t}\n\n\t\t\t\tparams.push( a.build( builder, inputType ) );\n\t\t\t\tif ( b !== null ) params.push( b.build( builder, inputType ) );\n\t\t\t\tif ( c !== null ) params.push( c.build( builder, inputType ) );\n\n\t\t\t}\n\n\t\t\treturn builder.format( `${ builder.getMethod( method, type ) }( ${params.join( ', ' )} )`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\n// 1 input\n\nMathNode.ALL = 'all';\nMathNode.ANY = 'any';\n\nMathNode.RADIANS = 'radians';\nMathNode.DEGREES = 'degrees';\nMathNode.EXP = 'exp';\nMathNode.EXP2 = 'exp2';\nMathNode.LOG = 'log';\nMathNode.LOG2 = 'log2';\nMathNode.SQRT = 'sqrt';\nMathNode.INVERSE_SQRT = 'inversesqrt';\nMathNode.FLOOR = 'floor';\nMathNode.CEIL = 'ceil';\nMathNode.NORMALIZE = 'normalize';\nMathNode.FRACT = 'fract';\nMathNode.SIN = 'sin';\nMathNode.COS = 'cos';\nMathNode.TAN = 'tan';\nMathNode.ASIN = 'asin';\nMathNode.ACOS = 'acos';\nMathNode.ATAN = 'atan';\nMathNode.ABS = 'abs';\nMathNode.SIGN = 'sign';\nMathNode.LENGTH = 'length';\nMathNode.NEGATE = 'negate';\nMathNode.ONE_MINUS = 'oneMinus';\nMathNode.DFDX = 'dFdx';\nMathNode.DFDY = 'dFdy';\nMathNode.ROUND = 'round';\nMathNode.RECIPROCAL = 'reciprocal';\nMathNode.TRUNC = 'trunc';\nMathNode.FWIDTH = 'fwidth';\nMathNode.TRANSPOSE = 'transpose';\n\n// 2 inputs\n\nMathNode.BITCAST = 'bitcast';\nMathNode.EQUALS = 'equals';\nMathNode.MIN = 'min';\nMathNode.MAX = 'max';\nMathNode.MOD = 'mod';\nMathNode.STEP = 'step';\nMathNode.REFLECT = 'reflect';\nMathNode.DISTANCE = 'distance';\nMathNode.DIFFERENCE = 'difference';\nMathNode.DOT = 'dot';\nMathNode.CROSS = 'cross';\nMathNode.POW = 'pow';\nMathNode.TRANSFORM_DIRECTION = 'transformDirection';\n\n// 3 inputs\n\nMathNode.MIX = 'mix';\nMathNode.CLAMP = 'clamp';\nMathNode.REFRACT = 'refract';\nMathNode.SMOOTHSTEP = 'smoothstep';\nMathNode.FACEFORWARD = 'faceforward';\n\nexport default MathNode;\n\n// 1 inputs\n\n/**\n * A small value used to handle floating-point precision errors.\n *\n * @type {Node<float>}\n */\nexport const EPSILON = /*@__PURE__*/ float( 1e-6 );\n\n/**\n * Represents infinity.\n *\n * @type {Node<float>}\n */\nexport const INFINITY = /*@__PURE__*/ float( 1e6 );\n\n/**\n * Represents PI.\n *\n * @type {Node<float>}\n */\nexport const PI = /*@__PURE__*/ float( Math.PI );\n\n/**\n * Represents PI * 2.\n *\n * @type {Node<float>}\n */\nexport const PI2 = /*@__PURE__*/ float( Math.PI * 2 );\n\n/**\n * Returns `true` if all components of `x` are `true`.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node<bool>}\n */\nexport const all = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ALL );\n\n/**\n * Returns `true` if any components of `x` are `true`.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node<bool>}\n */\nexport const any = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ANY );\n\n/**\n * Converts a quantity in degrees to radians.\n *\n * @function\n * @param {Node | Number} x - The input in degrees.\n * @returns {Node}\n */\nexport const radians = /*@__PURE__*/ nodeProxy( MathNode, MathNode.RADIANS );\n\n/**\n * Convert a quantity in radians to degrees.\n *\n * @function\n * @param {Node | Number} x - The input in radians.\n * @returns {Node}\n */\nexport const degrees = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DEGREES );\n\n/**\n * Returns the natural exponentiation of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const exp = /*@__PURE__*/ nodeProxy( MathNode, MathNode.EXP );\n\n/**\n * Returns 2 raised to the power of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const exp2 = /*@__PURE__*/ nodeProxy( MathNode, MathNode.EXP2 );\n\n/**\n * Returns the natural logarithm of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const log = /*@__PURE__*/ nodeProxy( MathNode, MathNode.LOG );\n\n/**\n * Returns the base 2 logarithm of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const log2 = /*@__PURE__*/ nodeProxy( MathNode, MathNode.LOG2 );\n\n/**\n * Returns the square root of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const sqrt = /*@__PURE__*/ nodeProxy( MathNode, MathNode.SQRT );\n\n/**\n * Returns the inverse of the square root of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const inverseSqrt = /*@__PURE__*/ nodeProxy( MathNode, MathNode.INVERSE_SQRT );\n\n/**\n * Finds the nearest integer less than or equal to the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const floor = /*@__PURE__*/ nodeProxy( MathNode, MathNode.FLOOR );\n\n/**\n * Finds the nearest integer that is greater than or equal to the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const ceil = /*@__PURE__*/ nodeProxy( MathNode, MathNode.CEIL );\n\n/**\n * Calculates the unit vector in the same direction as the original vector.\n *\n * @function\n * @param {Node} x - The input vector.\n * @returns {Node}\n */\nexport const normalize = /*@__PURE__*/ nodeProxy( MathNode, MathNode.NORMALIZE );\n\n/**\n * Computes the fractional part of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const fract = /*@__PURE__*/ nodeProxy( MathNode, MathNode.FRACT );\n\n/**\n * Returns the sine of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const sin = /*@__PURE__*/ nodeProxy( MathNode, MathNode.SIN );\n\n/**\n * Returns the cosine of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const cos = /*@__PURE__*/ nodeProxy( MathNode, MathNode.COS );\n\n/**\n * Returns the tangent of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const tan = /*@__PURE__*/ nodeProxy( MathNode, MathNode.TAN );\n\n/**\n * Returns the arcsine of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const asin = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ASIN );\n\n/**\n * Returns the arccosine of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const acos = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ACOS );\n\n/**\n * Returns the arc-tangent of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const atan = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ATAN );\n\n/**\n * Returns the absolute value of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const abs = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ABS );\n\n/**\n * Extracts the sign of the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const sign = /*@__PURE__*/ nodeProxy( MathNode, MathNode.SIGN );\n\n/**\n * Calculates the length of a vector.\n *\n * @function\n * @param {Node} x - The parameter.\n * @returns {Node<float>}\n */\nexport const length = /*@__PURE__*/ nodeProxy( MathNode, MathNode.LENGTH );\n\n/**\n * Negates the value of the parameter (-x).\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const negate = /*@__PURE__*/ nodeProxy( MathNode, MathNode.NEGATE );\n\n/**\n * Return `1` minus the parameter.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const oneMinus = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ONE_MINUS );\n\n/**\n * Returns the partial derivative of the parameter with respect to x.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const dFdx = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DFDX );\n\n/**\n * Returns the partial derivative of the parameter with respect to y.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const dFdy = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DFDY );\n\n/**\n * Rounds the parameter to the nearest integer.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const round = /*@__PURE__*/ nodeProxy( MathNode, MathNode.ROUND );\n\n/**\n * Returns the reciprocal of the parameter `(1/x)`.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const reciprocal = /*@__PURE__*/ nodeProxy( MathNode, MathNode.RECIPROCAL );\n\n/**\n * Truncates the parameter, removing the fractional part.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const trunc = /*@__PURE__*/ nodeProxy( MathNode, MathNode.TRUNC );\n\n/**\n * Returns the sum of the absolute derivatives in x and y.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @returns {Node}\n */\nexport const fwidth = /*@__PURE__*/ nodeProxy( MathNode, MathNode.FWIDTH );\n\n/**\n * Returns the transpose of a matrix.\n *\n * @function\n * @param {Node<mat2|mat3|mat4>} x - The parameter.\n * @returns {Node}\n */\nexport const transpose = /*@__PURE__*/ nodeProxy( MathNode, MathNode.TRANSPOSE );\n\n// 2 inputs\n\n/**\n * Reinterpret the bit representation of a value in one type as a value in another type.\n *\n * @function\n * @param {Node | Number} x - The parameter.\n * @param {String} y - The new type.\n * @returns {Node}\n */\nexport const bitcast = /*@__PURE__*/ nodeProxy( MathNode, MathNode.BITCAST );\n\n/**\n * Returns `true` if `x` equals `y`.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @param {Node | Number} y - The second parameter.\n * @returns {Node<bool>}\n */\nexport const equals = /*@__PURE__*/ nodeProxy( MathNode, MathNode.EQUALS );\n\n/**\n * Returns the lesser of two values.\n *\n * @function\n * @param {Node | Number} x - The y parameter.\n * @param {Node | Number} y - The x parameter.\n * @returns {Node}\n */\nexport const min = /*@__PURE__*/ nodeProxy( MathNode, MathNode.MIN );\n\n/**\n * Returns the greater of two values.\n *\n * @function\n * @param {Node | Number} x - The y parameter.\n * @param {Node | Number} y - The x parameter.\n * @returns {Node}\n */\nexport const max = /*@__PURE__*/ nodeProxy( MathNode, MathNode.MAX );\n\n/**\n * Computes the remainder of dividing the first node by the second one.\n *\n * @function\n * @param {Node | Number} x - The y parameter.\n * @param {Node | Number} y - The x parameter.\n * @returns {Node}\n */\nexport const mod = /*@__PURE__*/ nodeProxy( MathNode, MathNode.MOD );\n\n/**\n * Generate a step function by comparing two values.\n *\n * @function\n * @param {Node | Number} x - The y parameter.\n * @param {Node | Number} y - The x parameter.\n * @returns {Node}\n */\nexport const step = /*@__PURE__*/ nodeProxy( MathNode, MathNode.STEP );\n\n/**\n * Calculates the reflection direction for an incident vector.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} I - The incident vector.\n * @param {Node<vec2|vec3|vec4>} N - The normal vector.\n * @returns {Node<vec2|vec3|vec4>}\n */\nexport const reflect = /*@__PURE__*/ nodeProxy( MathNode, MathNode.REFLECT );\n\n/**\n * Calculates the distance between two points.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} x - The first point.\n * @param {Node<vec2|vec3|vec4>} y - The second point.\n * @returns {Node<float>}\n */\nexport const distance = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DISTANCE );\n\n/**\n * Calculates the absolute difference between two values.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @param {Node | Number} y - The second parameter.\n * @returns {Node}\n */\nexport const difference = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DIFFERENCE );\n\n/**\n * Calculates the dot product of two vectors.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} x - The first vector.\n * @param {Node<vec2|vec3|vec4>} y - The second vector.\n * @returns {Node<float>}\n */\nexport const dot = /*@__PURE__*/ nodeProxy( MathNode, MathNode.DOT );\n\n/**\n * Calculates the cross product of two vectors.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} x - The first vector.\n * @param {Node<vec2|vec3|vec4>} y - The second vector.\n * @returns {Node<vec2|vec3|vec4>}\n */\nexport const cross = /*@__PURE__*/ nodeProxy( MathNode, MathNode.CROSS );\n\n/**\n * Return the value of the first parameter raised to the power of the second one.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @param {Node | Number} y - The second parameter.\n * @returns {Node}\n */\nexport const pow = /*@__PURE__*/ nodeProxy( MathNode, MathNode.POW );\n\n/**\n * Returns the square of the parameter.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @returns {Node}\n */\nexport const pow2 = /*@__PURE__*/ nodeProxy( MathNode, MathNode.POW, 2 );\n\n/**\n * Returns the cube of the parameter.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @returns {Node}\n */\nexport const pow3 = /*@__PURE__*/ nodeProxy( MathNode, MathNode.POW, 3 );\n\n/**\n * Returns the fourth power of the parameter.\n *\n * @function\n * @param {Node | Number} x - The first parameter.\n * @returns {Node}\n */\nexport const pow4 = /*@__PURE__*/ nodeProxy( MathNode, MathNode.POW, 4 );\n\n/**\n * Transforms the direction of a vector by a matrix and then normalizes the result.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} direction - The direction vector.\n * @param {Node<mat2|mat3|mat4>} matrix - The transformation matrix.\n * @returns {Node}\n */\nexport const transformDirection = /*@__PURE__*/ nodeProxy( MathNode, MathNode.TRANSFORM_DIRECTION );\n\n/**\n * Returns the cube root of a number.\n *\n * @function\n * @param {Node | Number} a - The first parameter.\n * @returns {Node}\n */\nexport const cbrt = ( a ) => mul( sign( a ), pow( abs( a ), 1.0 / 3.0 ) );\n\n/**\n * Calculate the squared length of a vector.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} a - The vector.\n * @returns {Node<float>}\n */\nexport const lengthSq = ( a ) => dot( a, a );\n\n/**\n * Linearly interpolates between two values.\n *\n * @function\n * @param {Node | Number} a - The first parameter.\n * @param {Node | Number} b - The second parameter.\n * @param {Node | Number} t - The interpolation value.\n * @returns {Node}\n */\nexport const mix = /*@__PURE__*/ nodeProxy( MathNode, MathNode.MIX );\n\n/**\n * Constrains a value to lie between two further values.\n *\n * @function\n * @param {Node | Number} value - The value to constrain.\n * @param {Node | Number} [low=0] - The lower bound.\n * @param {Node | Number} [high=1] - The upper bound.\n * @returns {Node}\n */\nexport const clamp = ( value, low = 0, high = 1 ) => nodeObject( new MathNode( MathNode.CLAMP, nodeObject( value ), nodeObject( low ), nodeObject( high ) ) );\n\n/**\n * Constrains a value between `0` and `1`.\n *\n * @function\n * @param {Node | Number} value - The value to constrain.\n * @returns {Node}\n */\nexport const saturate = ( value ) => clamp( value );\n\n/**\n * Calculates the refraction direction for an incident vector.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} I - The incident vector.\n * @param {Node<vec2|vec3|vec4>} N - The normal vector.\n * @param {Node<float>} eta - The the ratio of indices of refraction.\n * @returns {Node<vec2|vec3|vec4>}\n */\nexport const refract = /*@__PURE__*/ nodeProxy( MathNode, MathNode.REFRACT );\n\n/**\n * Performs a Hermite interpolation between two values.\n *\n * @function\n * @param {Node | Number} low - The value of the lower edge of the Hermite function.\n * @param {Node | Number} high - The value of the upper edge of the Hermite function.\n * @param {Node | Number} x - The source value for interpolation.\n * @returns {Node}\n */\nexport const smoothstep = /*@__PURE__*/ nodeProxy( MathNode, MathNode.SMOOTHSTEP );\n\n/**\n * Returns a vector pointing in the same direction as another.\n *\n * @function\n * @param {Node<vec2|vec3|vec4>} N - The vector to orient.\n * @param {Node<vec2|vec3|vec4>} I - The incident vector.\n * @param {Node<vec2|vec3|vec4>} Nref - The reference vector.\n * @returns {Node<vec2|vec3|vec4>}\n */\nexport const faceForward = /*@__PURE__*/ nodeProxy( MathNode, MathNode.FACEFORWARD );\n\n/**\n * Returns a random value for the given uv.\n *\n * @function\n * @param {Node<vec2>} uv - The uv node.\n * @returns {Node<float>}\n */\nexport const rand = /*@__PURE__*/ Fn( ( [ uv ] ) => {\n\n\tconst a = 12.9898, b = 78.233, c = 43758.5453;\n\tconst dt = dot( uv.xy, vec2( a, b ) ), sn = mod( dt, PI );\n\n\treturn fract( sin( sn ).mul( c ) );\n\n} );\n\n/**\n * Alias for `mix()` with a different parameter order.\n *\n * @function\n * @param {Node | Number} t - The interpolation value.\n * @param {Node | Number} e1 - The first parameter.\n * @param {Node | Number} e2 - The second parameter.\n * @returns {Node}\n */\nexport const mixElement = ( t, e1, e2 ) => mix( e1, e2, t );\n\n/**\n * Alias for `smoothstep()` with a different parameter order.\n *\n * @function\n * @param {Node | Number} x - The source value for interpolation.\n * @param {Node | Number} low - The value of the lower edge of the Hermite function.\n * @param {Node | Number} high - The value of the upper edge of the Hermite function.\n * @returns {Node}\n */\nexport const smoothstepElement = ( x, low, high ) => smoothstep( low, high, x );\n\n/**\n * Returns the arc-tangent of the quotient of its parameters.\n *\n * @function\n * @param {Node | Number} y - The y parameter.\n * @param {Node | Number} x - The x parameter.\n * @returns {Node}\n */\nexport const atan2 = ( y, x ) => { // @deprecated, r172\n\n\tconsole.warn( 'THREE.TSL: \"atan2\" is overloaded. Use \"atan\" instead.' );\n\treturn atan( y, x );\n\n};\n\n// GLSL alias function\n\nexport const faceforward = faceForward;\nexport const inversesqrt = inverseSqrt;\n\n// Method chaining\n\naddMethodChaining( 'all', all );\naddMethodChaining( 'any', any );\naddMethodChaining( 'equals', equals );\n\naddMethodChaining( 'radians', radians );\naddMethodChaining( 'degrees', degrees );\naddMethodChaining( 'exp', exp );\naddMethodChaining( 'exp2', exp2 );\naddMethodChaining( 'log', log );\naddMethodChaining( 'log2', log2 );\naddMethodChaining( 'sqrt', sqrt );\naddMethodChaining( 'inverseSqrt', inverseSqrt );\naddMethodChaining( 'floor', floor );\naddMethodChaining( 'ceil', ceil );\naddMethodChaining( 'normalize', normalize );\naddMethodChaining( 'fract', fract );\naddMethodChaining( 'sin', sin );\naddMethodChaining( 'cos', cos );\naddMethodChaining( 'tan', tan );\naddMethodChaining( 'asin', asin );\naddMethodChaining( 'acos', acos );\naddMethodChaining( 'atan', atan );\naddMethodChaining( 'abs', abs );\naddMethodChaining( 'sign', sign );\naddMethodChaining( 'length', length );\naddMethodChaining( 'lengthSq', lengthSq );\naddMethodChaining( 'negate', negate );\naddMethodChaining( 'oneMinus', oneMinus );\naddMethodChaining( 'dFdx', dFdx );\naddMethodChaining( 'dFdy', dFdy );\naddMethodChaining( 'round', round );\naddMethodChaining( 'reciprocal', reciprocal );\naddMethodChaining( 'trunc', trunc );\naddMethodChaining( 'fwidth', fwidth );\naddMethodChaining( 'atan2', atan2 );\naddMethodChaining( 'min', min );\naddMethodChaining( 'max', max );\naddMethodChaining( 'mod', mod );\naddMethodChaining( 'step', step );\naddMethodChaining( 'reflect', reflect );\naddMethodChaining( 'distance', distance );\naddMethodChaining( 'dot', dot );\naddMethodChaining( 'cross', cross );\naddMethodChaining( 'pow', pow );\naddMethodChaining( 'pow2', pow2 );\naddMethodChaining( 'pow3', pow3 );\naddMethodChaining( 'pow4', pow4 );\naddMethodChaining( 'transformDirection', transformDirection );\naddMethodChaining( 'mix', mixElement );\naddMethodChaining( 'clamp', clamp );\naddMethodChaining( 'refract', refract );\naddMethodChaining( 'smoothstep', smoothstepElement );\naddMethodChaining( 'faceForward', faceForward );\naddMethodChaining( 'difference', difference );\naddMethodChaining( 'saturate', saturate );\naddMethodChaining( 'cbrt', cbrt );\naddMethodChaining( 'transpose', transpose );\naddMethodChaining( 'rand', rand );\n","import Node from '../core/Node.js';\nimport { property } from '../core/PropertyNode.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module ConditionalNode **/\n\n/**\n * Represents a logical `if/else` statement. Can be used as an alternative\n * to the `If()`/`Else()` syntax.\n *\n * The corresponding TSL `select()` looks like so:\n * ```js\n * velocity = position.greaterThanEqual( limit ).select( velocity.negate(), velocity );\n * ```\n * The `select()` method is called in a chaining fashion on a condition. The parameter nodes of `select()`\n * determine the outcome of the entire statement.\n *\n * @augments Node\n */\nclass ConditionalNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ConditionalNode';\n\n\t}\n\n\t/**\n\t * Constructs a new conditional node.\n\t *\n\t * @param {Node} condNode - The node that defines the condition.\n\t * @param {Node} ifNode - The node that is evaluate when the condition ends up `true`.\n\t * @param {Node?} [elseNode=null] - The node that is evaluate when the condition ends up `false`.\n\t */\n\tconstructor( condNode, ifNode, elseNode = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node that defines the condition.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.condNode = condNode;\n\n\t\t/**\n\t\t * The node that is evaluate when the condition ends up `true`.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.ifNode = ifNode;\n\n\t\t/**\n\t\t * The node that is evaluate when the condition ends up `false`.\n\t\t *\n\t\t * @type {Node?}\n\t\t * @default null\n\t\t */\n\t\tthis.elseNode = elseNode;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from the if/else\n\t * nodes.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tconst { ifNode, elseNode } = builder.getNodeProperties( this );\n\n\t\tif ( ifNode === undefined ) {\n\n\t\t\t// fallback setup\n\n\t\t\tthis.setup( builder );\n\n\t\t\treturn this.getNodeType( builder );\n\n\t\t}\n\n\t\tconst ifType = ifNode.getNodeType( builder );\n\n\t\tif ( elseNode !== null ) {\n\n\t\t\tconst elseType = elseNode.getNodeType( builder );\n\n\t\t\tif ( builder.getTypeLength( elseType ) > builder.getTypeLength( ifType ) ) {\n\n\t\t\t\treturn elseType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ifType;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst condNode = this.condNode.cache();\n\t\tconst ifNode = this.ifNode.cache();\n\t\tconst elseNode = this.elseNode ? this.elseNode.cache() : null;\n\n\t\t//\n\n\t\tconst currentNodeBlock = builder.context.nodeBlock;\n\n\t\tbuilder.getDataFromNode( ifNode ).parentNodeBlock = currentNodeBlock;\n\t\tif ( elseNode !== null ) builder.getDataFromNode( elseNode ).parentNodeBlock = currentNodeBlock;\n\n\t\t//\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tproperties.condNode = condNode;\n\t\tproperties.ifNode = ifNode.context( { nodeBlock: ifNode } );\n\t\tproperties.elseNode = elseNode ? elseNode.context( { nodeBlock: elseNode } ) : null;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\tif ( nodeData.nodeProperty !== undefined ) {\n\n\t\t\treturn nodeData.nodeProperty;\n\n\t\t}\n\n\t\tconst { condNode, ifNode, elseNode } = builder.getNodeProperties( this );\n\n\t\tconst needsOutput = output !== 'void';\n\t\tconst nodeProperty = needsOutput ? property( type ).build( builder ) : '';\n\n\t\tnodeData.nodeProperty = nodeProperty;\n\n\t\tconst nodeSnippet = condNode.build( builder, 'bool' );\n\n\t\tbuilder.addFlowCode( `\\n${ builder.tab }if ( ${ nodeSnippet } ) {\\n\\n` ).addFlowTab();\n\n\t\tlet ifSnippet = ifNode.build( builder, type );\n\n\t\tif ( ifSnippet ) {\n\n\t\t\tif ( needsOutput ) {\n\n\t\t\t\tifSnippet = nodeProperty + ' = ' + ifSnippet + ';';\n\n\t\t\t} else {\n\n\t\t\t\tifSnippet = 'return ' + ifSnippet + ';';\n\n\t\t\t}\n\n\t\t}\n\n\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + ifSnippet + '\\n\\n' + builder.tab + '}' );\n\n\t\tif ( elseNode !== null ) {\n\n\t\t\tbuilder.addFlowCode( ' else {\\n\\n' ).addFlowTab();\n\n\t\t\tlet elseSnippet = elseNode.build( builder, type );\n\n\t\t\tif ( elseSnippet ) {\n\n\t\t\t\tif ( needsOutput ) {\n\n\t\t\t\t\telseSnippet = nodeProperty + ' = ' + elseSnippet + ';';\n\n\t\t\t\t} else {\n\n\t\t\t\t\telseSnippet = 'return ' + elseSnippet + ';';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbuilder.removeFlowTab().addFlowCode( builder.tab + '\\t' + elseSnippet + '\\n\\n' + builder.tab + '}\\n\\n' );\n\n\t\t} else {\n\n\t\t\tbuilder.addFlowCode( '\\n\\n' );\n\n\t\t}\n\n\t\treturn builder.format( nodeProperty, type, output );\n\n\t}\n\n}\n\nexport default ConditionalNode;\n\n/**\n * TSL function for creating a conditional node.\n *\n * @function\n * @param {Node} condNode - The node that defines the condition.\n * @param {Node} ifNode - The node that is evaluate when the condition ends up `true`.\n * @param {Node?} [elseNode=null] - The node that is evaluate when the condition ends up `false`.\n * @returns {ConditionalNode}\n */\nexport const select = /*@__PURE__*/ nodeProxy( ConditionalNode );\n\naddMethodChaining( 'select', select );\n\n//\n\nexport const cond = ( ...params ) => { // @deprecated, r168\n\n\tconsole.warn( 'TSL.ConditionalNode: cond() has been renamed to select().' );\n\treturn select( ...params );\n\n};\n\naddMethodChaining( 'cond', cond );\n","import Node from './Node.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module ContextNode **/\n\n/**\n * This node can be used as a context management component for another node.\n * {@link NodeBuilder} performs its node building process in a specific context and\n * this node allows the modify the context. A typical use case is to overwrite `getUV()` e.g.:\n *\n * ```js\n *node.context( { getUV: () => customCoord } );\n *```\n * @augments Node\n */\nclass ContextNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ContextNode';\n\n\t}\n\n\t/**\n\t * Constructs a new context node.\n\t *\n\t * @param {Node} node - The node whose context should be modified.\n\t * @param {Object} [value={}] - The modified context data.\n\t */\n\tconstructor( node, value = {} ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isContextNode = true;\n\n\t\t/**\n\t\t * The node whose context should be modified.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The modified context data.\n\t\t *\n\t\t * @type {Object}\n\t\t * @default {}\n\t\t */\n\t\tthis.value = value;\n\n\t}\n\n\t/**\n\t * This method is overwritten to ensure it returns the reference to {@link module:ContextNode~ContextNode#node}.\n\t *\n\t * @return {Node} A reference to {@link module:ContextNode~ContextNode#node}.\n\t */\n\tgetScope() {\n\n\t\treturn this.node.getScope();\n\n\t}\n\n\t/**\n\t * This method is overwritten to ensure it returns the type of {@link module:ContextNode~ContextNode#node}.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tthis.node.build( builder );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.value } );\n\n\t\tconst node = this.node.build( builder );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn node;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst previousContext = builder.getContext();\n\n\t\tbuilder.setContext( { ...builder.context, ...this.value } );\n\n\t\tconst snippet = this.node.build( builder, output );\n\n\t\tbuilder.setContext( previousContext );\n\n\t\treturn snippet;\n\n\t}\n\n}\n\nexport default ContextNode;\n\n/**\n * TSL function for creating a context node.\n *\n * @function\n * @param {Node} node - The node whose context should be modified.\n * @param {Object} [value={}] - The modified context data.\n * @returns {ContextNode}\n */\nexport const context = /*@__PURE__*/ nodeProxy( ContextNode );\n\n/**\n * TSL function for defining a label context value for a given node.\n *\n * @function\n * @param {Node} node - The node whose context should be modified.\n * @param {String} name - The name/label to set.\n * @returns {ContextNode}\n */\nexport const label = ( node, name ) => context( node, { label: name } );\n\naddMethodChaining( 'context', context );\naddMethodChaining( 'label', label );\n","import Node from './Node.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module VarNode **/\n\n/**\n * Class for representing shader variables as nodes. Variables are created from\n * existing nodes like the following:\n *\n * ```js\n * const depth = sampleDepth( uvNode ).toVar( 'depth' );\n * ```\n *\n * @augments Node\n */\nclass VarNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'VarNode';\n\n\t}\n\n\t/**\n\t * Constructs a new variable node.\n\t *\n\t * @param {Node} node - The node for which a variable should be created.\n\t * @param {String?} name - The name of the variable in the shader.\n\t */\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node for which a variable should be created.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The name of the variable in the shader. If no name is defined,\n\t\t * the node system auto-generates one.\n\t\t *\n\t\t * @type {String?}\n\t\t * @default null\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * `VarNode` sets this property to `true` by default.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.global = true;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isVarNode = true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { node, name } = this;\n\n\t\tconst nodeVar = builder.getVarFromNode( this, name, builder.getVectorType( this.getNodeType( builder ) ) );\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tconst snippet = node.build( builder, nodeVar.type );\n\n\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}`, this );\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default VarNode;\n\n/**\n * TSL function for creating a var node.\n *\n * @function\n * @param {Node} node - The node for which a variable should be created.\n * @param {String?} name - The name of the variable in the shader.\n * @returns {VarNode}\n */\nconst createVar = /*@__PURE__*/ nodeProxy( VarNode );\n\naddMethodChaining( 'toVar', ( ...params ) => createVar( ...params ).append() );\n\n// Deprecated\n\nexport const temp = ( node ) => { // @deprecated, r170\n\n\tconsole.warn( 'TSL: \"temp\" is deprecated. Use \".toVar()\" instead.' );\n\n\treturn createVar( node );\n\n};\n\naddMethodChaining( 'temp', temp );\n\n","import Node from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module VaryingNode **/\n\n/**\n * Class for representing shader varyings as nodes. Varyings are create from\n * existing nodes like the following:\n *\n * ```js\n * const positionLocal = positionGeometry.varying( 'vPositionLocal' );\n * ```\n *\n * @augments Node\n */\nclass VaryingNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'VaryingNode';\n\n\t}\n\n\t/**\n\t * Constructs a new varying node.\n\t *\n\t * @param {Node} node - The node for which a varying should be created.\n\t * @param {String?} name - The name of the varying in the shader.\n\t */\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node for which a varying should be created.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The name of the varying in the shader. If no name is defined,\n\t\t * the node system auto-generates one.\n\t\t *\n\t\t * @type {String?}\n\t\t * @default null\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isVaryingNode = true;\n\n\t}\n\n\t/**\n\t * The method is overwritten so it always returns `true`.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {Boolean} Whether this node is global or not.\n\t */\n\tisGlobal( /*builder*/ ) {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\t// VaryingNode is auto type\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\t/**\n\t * This method performs the setup of a varying node with the current node builder.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {NodeVarying} The node varying from the node builder.\n\t */\n\tsetupVarying( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tlet varying = properties.varying;\n\n\t\tif ( varying === undefined ) {\n\n\t\t\tconst name = this.name;\n\t\t\tconst type = this.getNodeType( builder );\n\n\t\t\tproperties.varying = varying = builder.getVaryingFromNode( this, name, type );\n\t\t\tproperties.node = this.node;\n\n\t\t}\n\n\t\t// this property can be used to check if the varying can be optimized for a variable\n\t\tvarying.needsInterpolation || ( varying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\n\n\t\treturn varying;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tthis.setupVarying( builder );\n\n\t}\n\n\tanalyze( builder ) {\n\n\t\tthis.setupVarying( builder );\n\n\t\treturn this.node.analyze( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\t\tconst varying = this.setupVarying( builder );\n\n\t\tconst needsReassign = builder.shaderStage === 'fragment' && properties.reassignPosition === true && builder.context.needsPositionReassign;\n\n\t\tif ( properties.propertyName === undefined || needsReassign ) {\n\n\t\t\tconst type = this.getNodeType( builder );\n\t\t\tconst propertyName = builder.getPropertyName( varying, NodeShaderStage.VERTEX );\n\n\t\t\t// force node run in vertex stage\n\t\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, this.node, type, propertyName );\n\n\t\t\tproperties.propertyName = propertyName;\n\n\t\t\tif ( needsReassign ) {\n\n\t\t\t\t// once reassign varying in fragment stage\n\t\t\t\tproperties.reassignPosition = false;\n\n\t\t\t} else if ( properties.reassignPosition === undefined && builder.context.isPositionNodeInput ) {\n\n\t\t\t\tproperties.reassignPosition = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn builder.getPropertyName( varying );\n\n\t}\n\n}\n\nexport default VaryingNode;\n\n/**\n * TSL function for creating a varying node.\n *\n * @function\n * @param {Node} node - The node for which a varying should be created.\n * @param {String?} name - The name of the varying in the shader.\n * @returns {VaryingNode}\n */\nexport const varying = /*@__PURE__*/ nodeProxy( VaryingNode );\n\n/**\n * Computes a node in the vertex stage.\n *\n * @function\n * @param {Node} node - The node which should be executed in the vertex stage.\n * @returns {VaryingNode}\n */\nexport const vertexStage = ( node ) => varying( node );\n\naddMethodChaining( 'varying', varying );\naddMethodChaining( 'vertexStage', vertexStage );\n","import { mix } from '../math/MathNode.js';\nimport { Fn } from '../tsl/TSLCore.js';\n\n/** @module ColorSpaceFunctions **/\n\n/**\n * Converts the given color value from sRGB to linear-sRGB color space.\n *\n * @method\n * @param {Node<vec3>} color - The sRGB color.\n * @return {Node<vec3>} The linear-sRGB color.\n */\nexport const sRGBTransferEOTF = /*@__PURE__*/ Fn( ( [ color ] ) => {\n\n\tconst a = color.mul( 0.9478672986 ).add( 0.0521327014 ).pow( 2.4 );\n\tconst b = color.mul( 0.0773993808 );\n\tconst factor = color.lessThanEqual( 0.04045 );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn rgbResult;\n\n} ).setLayout( {\n\tname: 'sRGBTransferEOTF',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'color', type: 'vec3' }\n\t]\n} );\n\n/**\n * Converts the given color value from linear-sRGB to sRGB color space.\n *\n * @method\n * @param {Node<vec3>} color - The linear-sRGB color.\n * @return {Node<vec3>} The sRGB color.\n */\nexport const sRGBTransferOETF = /*@__PURE__*/ Fn( ( [ color ] ) => {\n\n\tconst a = color.pow( 0.41666 ).mul( 1.055 ).sub( 0.055 );\n\tconst b = color.mul( 12.92 );\n\tconst factor = color.lessThanEqual( 0.0031308 );\n\n\tconst rgbResult = mix( a, b, factor );\n\n\treturn rgbResult;\n\n} ).setLayout( {\n\tname: 'sRGBTransferOETF',\n\ttype: 'vec3',\n\tinputs: [\n\t\t{ name: 'color', type: 'vec3' }\n\t]\n} );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, mat3, nodeObject, vec4 } from '../tsl/TSLCore.js';\n\nimport { SRGBTransfer } from '../../constants.js';\nimport { ColorManagement } from '../../math/ColorManagement.js';\nimport { sRGBTransferEOTF, sRGBTransferOETF } from './ColorSpaceFunctions.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/** @module ColorSpaceNode **/\n\nconst WORKING_COLOR_SPACE = 'WorkingColorSpace';\nconst OUTPUT_COLOR_SPACE = 'OutputColorSpace';\n\n/**\n * This node represents a color space conversion. Meaning it converts\n * a color value from a source to a target color space.\n *\n * @augments TempNode\n */\nclass ColorSpaceNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'ColorSpaceNode';\n\n\t}\n\n\t/**\n\t * Constructs a new color space node.\n\t *\n\t * @param {Node} colorNode - Represents the color to convert.\n\t * @param {String} source - The source color space.\n\t * @param {String} target - The target color space.\n\t */\n\tconstructor( colorNode, source, target ) {\n\n\t\tsuper( 'vec4' );\n\n\t\t/**\n\t\t * Represents the color to convert.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.colorNode = colorNode;\n\n\t\t/**\n\t\t * The source color space.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.source = source;\n\n\t\t/**\n\t\t * The target color space.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.target = target;\n\n\t}\n\n\t/**\n\t * This method resolves the constants `WORKING_COLOR_SPACE` and\n\t * `OUTPUT_COLOR_SPACE` based on the current configuration of the\n\t * color management and renderer.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @param {String} colorSpace - The color space to resolve.\n\t * @return {String} The resolved color space.\n\t */\n\tresolveColorSpace( builder, colorSpace ) {\n\n\t\tif ( colorSpace === WORKING_COLOR_SPACE ) {\n\n\t\t\treturn ColorManagement.workingColorSpace;\n\n\t\t} else if ( colorSpace === OUTPUT_COLOR_SPACE ) {\n\n\t\t\treturn builder.context.outputColorSpace || builder.renderer.outputColorSpace;\n\n\t\t}\n\n\t\treturn colorSpace;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { colorNode } = this;\n\n\t\tconst source = this.resolveColorSpace( builder, this.source );\n\t\tconst target = this.resolveColorSpace( builder, this.target );\n\n\t\tlet outputNode = colorNode;\n\n\t\tif ( ColorManagement.enabled === false || source === target || ! source || ! target ) {\n\n\t\t\treturn outputNode;\n\n\t\t}\n\n\t\tif ( ColorManagement.getTransfer( source ) === SRGBTransfer ) {\n\n\t\t\toutputNode = vec4( sRGBTransferEOTF( outputNode.rgb ), outputNode.a );\n\n\t\t}\n\n\t\tif ( ColorManagement.getPrimaries( source ) !== ColorManagement.getPrimaries( target ) ) {\n\n\t\t\toutputNode = vec4(\n\t\t\t\tmat3( ColorManagement._getMatrix( new Matrix3(), source, target ) ).mul( outputNode.rgb ),\n\t\t\t\toutputNode.a\n\t\t\t);\n\n\t\t}\n\n\t\tif ( ColorManagement.getTransfer( target ) === SRGBTransfer ) {\n\n\t\t\toutputNode = vec4( sRGBTransferOETF( outputNode.rgb ), outputNode.a );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ColorSpaceNode;\n\n/**\n * TSL function for converting a given color node to the current output color space.\n *\n * @function\n * @param {Node} node - Represents the node to convert.\n * @returns {ColorSpaceNode}\n */\nexport const toOutputColorSpace = ( node ) => nodeObject( new ColorSpaceNode( nodeObject( node ), WORKING_COLOR_SPACE, OUTPUT_COLOR_SPACE ) );\n\n/**\n * TSL function for converting a given color node to the current working color space.\n *\n * @function\n * @param {Node} node - Represents the node to convert.\n * @returns {ColorSpaceNode}\n */\nexport const toWorkingColorSpace = ( node ) => nodeObject( new ColorSpaceNode( nodeObject( node ), OUTPUT_COLOR_SPACE, WORKING_COLOR_SPACE ) );\n\n/**\n * TSL function for converting a given color node from the current working color space to the given color space.\n *\n * @function\n * @param {Node} node - Represents the node to convert.\n * @param {String} colorSpace - The target color space.\n * @returns {ColorSpaceNode}\n */\nexport const workingToColorSpace = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( nodeObject( node ), WORKING_COLOR_SPACE, colorSpace ) );\n\n/**\n * TSL function for converting a given color node from the given color space to the current working color space.\n *\n * @function\n * @param {Node} node - Represents the node to convert.\n * @param {String} colorSpace - The source color space.\n * @returns {ColorSpaceNode}\n */\nexport const colorSpaceToWorking = ( node, colorSpace ) => nodeObject( new ColorSpaceNode( nodeObject( node ), colorSpace, WORKING_COLOR_SPACE ) );\n\n/**\n * TSL function for converting a given color node from one color space to another one.\n *\n * @function\n * @param {Node} node - Represents the node to convert.\n * @param {String} sourceColorSpace - The source color space.\n * @param {String} targetColorSpace - The target color space.\n * @returns {ColorSpaceNode}\n */\nexport const convertColorSpace = ( node, sourceColorSpace, targetColorSpace ) => nodeObject( new ColorSpaceNode( nodeObject( node ), sourceColorSpace, targetColorSpace ) );\n\naddMethodChaining( 'toOutputColorSpace', toOutputColorSpace );\naddMethodChaining( 'toWorkingColorSpace', toWorkingColorSpace );\n\naddMethodChaining( 'workingToColorSpace', workingToColorSpace );\naddMethodChaining( 'colorSpaceToWorking', colorSpaceToWorking );\n","import Node from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeObject } from '../tsl/TSLCore.js';\nimport ArrayElementNode from '../utils/ArrayElementNode.js';\n\n// TODO: Avoid duplicated code and ues only ReferenceBaseNode or ReferenceNode\n\n/** @module ReferenceBaseNode **/\n\n/**\n * This class is only relevant if the referenced property is array-like.\n * In this case, `ReferenceElementNode` allows to refer to a specific\n * element inside the data structure via an index.\n *\n * @augments ArrayElementNode\n */\nclass ReferenceElementNode extends ArrayElementNode {\n\n\tstatic get type() {\n\n\t\treturn 'ReferenceElementNode';\n\n\t}\n\n\t/**\n\t * Constructs a new reference element node.\n\t *\n\t * @param {Node?} referenceNode - The reference node.\n\t * @param {Node} indexNode - The index node that defines the element access.\n\t */\n\tconstructor( referenceNode, indexNode ) {\n\n\t\tsuper( referenceNode, indexNode );\n\n\t\t/**\n\t\t * Similar to {@link module:ReferenceBaseNode~ReferenceBaseNode#reference}, an additional\n\t\t * property references to the current node.\n\t\t *\n\t\t * @type {Node?}\n\t\t * @default null\n\t\t */\n\t\tthis.referenceNode = referenceNode;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isReferenceElementNode = true;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from\n\t * the uniform type of the reference node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType() {\n\n\t\treturn this.referenceNode.uniformType;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = super.generate( builder );\n\t\tconst arrayType = this.referenceNode.getNodeType();\n\t\tconst elementType = this.getNodeType();\n\n\t\treturn builder.format( snippet, arrayType, elementType );\n\n\t}\n\n}\n\n/**\n * Base class for nodes which establishes a reference to a property of another object.\n * In this way, the value of the node is automatically linked to the value of\n * referenced object. Reference nodes internally represent the linked value\n * as a uniform.\n *\n * @augments Node\n */\nclass ReferenceBaseNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ReferenceBaseNode';\n\n\t}\n\n\t/**\n\t * Constructs a new reference base node.\n\t *\n\t * @param {String} property - The name of the property the node refers to.\n\t * @param {String} uniformType - The uniform type that should be used to represent the property value.\n\t * @param {Object?} [object=null] - The object the property belongs to.\n\t * @param {Number?} [count=null] - When the linked property is an array-like, this parameter defines its length.\n\t */\n\tconstructor( property, uniformType, object = null, count = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of the property the node refers to.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * The uniform type that should be used to represent the property value.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.uniformType = uniformType;\n\n\t\t/**\n\t\t * The object the property belongs to.\n\t\t *\n\t\t * @type {Object?}\n\t\t * @default null\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * When the linked property is an array, this parameter defines its length.\n\t\t *\n\t\t * @type {Number?}\n\t\t * @default null\n\t\t */\n\t\tthis.count = count;\n\n\t\t/**\n\t\t * The property name might have dots so nested properties can be referred.\n\t\t * The hierarchy of the names is stored inside this array.\n\t\t *\n\t\t * @type {Array<String>}\n\t\t */\n\t\tthis.properties = property.split( '.' );\n\n\t\t/**\n\t\t * Points to the current referred object. This property exists next to {@link module:ReferenceNode~ReferenceNode#object}\n\t\t * since the final reference might be updated from calling code.\n\t\t *\n\t\t * @type {Object?}\n\t\t * @default null\n\t\t */\n\t\tthis.reference = object;\n\n\t\t/**\n\t\t * The uniform node that holds the value of the reference node.\n\t\t *\n\t\t * @type {UniformNode}\n\t\t * @default null\n\t\t */\n\t\tthis.node = null;\n\n\t\t/**\n\t\t * The uniform group of the internal uniform.\n\t\t *\n\t\t * @type {UniformGroupNode}\n\t\t * @default null\n\t\t */\n\t\tthis.group = null;\n\n\t\t/**\n\t\t * Overwritten since reference nodes are updated per object.\n\t\t *\n\t\t * @type {String}\n\t\t * @default 'object'\n\t\t */\n\t\tthis.updateType = NodeUpdateType.OBJECT;\n\n\t}\n\n\t/**\n\t * Sets the uniform group for this reference node.\n\t *\n\t * @param {UniformGroupNode} group - The uniform group to set.\n\t * @return {ReferenceBaseNode} A reference to this node.\n\t */\n\tsetGroup( group ) {\n\n\t\tthis.group = group;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * When the referred property is array-like, this method can be used\n\t * to access elements via an index node.\n\t *\n\t * @param {IndexNode} indexNode - indexNode.\n\t * @return {ReferenceElementNode} A reference to an element.\n\t */\n\telement( indexNode ) {\n\n\t\treturn nodeObject( new ReferenceElementNode( this, nodeObject( indexNode ) ) );\n\n\t}\n\n\t/**\n\t * Sets the node type which automatically defines the internal\n\t * uniform type.\n\t *\n\t * @param {String} uniformType - The type to set.\n\t */\n\tsetNodeType( uniformType ) {\n\n\t\tconst node = uniform( null, uniformType ).getSelf();\n\n\t\tif ( this.group !== null ) {\n\n\t\t\tnode.setGroup( this.group );\n\n\t\t}\n\n\t\tthis.node = node;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from\n\t * the type of the reference node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tif ( this.node === null ) {\n\n\t\t\tthis.updateReference( builder );\n\t\t\tthis.updateValue();\n\n\t\t}\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\t/**\n\t * Returns the property value from the given referred object.\n\t *\n\t * @param {Object} [object=this.reference] - The object to retrieve the property value from.\n\t * @return {Any} The value.\n\t */\n\tgetValueFromReference( object = this.reference ) {\n\n\t\tconst { properties } = this;\n\n\t\tlet value = object[ properties[ 0 ] ];\n\n\t\tfor ( let i = 1; i < properties.length; i ++ ) {\n\n\t\t\tvalue = value[ properties[ i ] ];\n\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\t/**\n\t * Allows to update the reference based on the given state. The state is only\n\t * evaluated {@link module:ReferenceBaseNode~ReferenceBaseNode#object} is not set.\n\t *\n\t * @param {(NodeFrame|NodeBuilder)} state - The current state.\n\t * @return {Object} The updated reference.\n\t */\n\tupdateReference( state ) {\n\n\t\tthis.reference = this.object !== null ? this.object : state.object;\n\n\t\treturn this.reference;\n\n\t}\n\n\t/**\n\t * The output of the reference node is the internal uniform node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {UniformNode} The output node.\n\t */\n\tsetup() {\n\n\t\tthis.updateValue();\n\n\t\treturn this.node;\n\n\t}\n\n\t/**\n\t * Overwritten to to update the internal uniform value.\n\t *\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t */\n\tupdate( /*frame*/ ) {\n\n\t\tthis.updateValue();\n\n\t}\n\n\t/**\n\t * Retrieves the value from the referred object property and uses it\n\t * to updated the internal uniform.\n\t */\n\tupdateValue() {\n\n\t\tif ( this.node === null ) this.setNodeType( this.uniformType );\n\n\t\tconst value = this.getValueFromReference();\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tthis.node.array = value;\n\n\t\t} else {\n\n\t\t\tthis.node.value = value;\n\n\t\t}\n\n\t}\n\n}\n\nexport default ReferenceBaseNode;\n\n/**\n * TSL function for creating a reference base node.\n *\n * @function\n * @param {String} name - The name of the property the node refers to.\n * @param {String} type - The uniform type that should be used to represent the property value.\n * @param {Object} object - The object the property belongs to.\n * @returns {ReferenceBaseNode}\n */\nexport const reference = ( name, type, object ) => nodeObject( new ReferenceBaseNode( name, type, object ) );\n\n/**\n * TSL function for creating a reference base node. Use this function if you want need a reference\n * to an array-like property that should be represented as a uniform buffer.\n *\n * @function\n * @param {String} name - The name of the property the node refers to.\n * @param {String} type - The uniform type that should be used to represent the property value.\n * @param {Number} count - The number of value inside the array-like object.\n * @param {Object} object - An array-like object the property belongs to.\n * @returns {ReferenceBaseNode}\n */\nexport const referenceBuffer = ( name, type, count, object ) => nodeObject( new ReferenceBaseNode( name, type, object, count ) );\n","import ReferenceBaseNode from './ReferenceBaseNode.js';\nimport { nodeObject } from '../tsl/TSLCore.js';\nimport { renderGroup } from '../core/UniformGroupNode.js';\n\n/** @module RendererReferenceNode **/\n\n/**\n * This node is a special type of reference node which is intended\n * for linking renderer properties with node values.\n * ```js\n * const exposureNode = rendererReference( 'toneMappingExposure', 'float', renderer );\n * ```\n * When changing `renderer.toneMappingExposure`, the node value of `exposureNode` will\n * automatically be updated.\n *\n * @augments ReferenceBaseNode\n */\nclass RendererReferenceNode extends ReferenceBaseNode {\n\n\tstatic get type() {\n\n\t\treturn 'RendererReferenceNode';\n\n\t}\n\n\t/**\n\t * Constructs a new renderer reference node.\n\t *\n\t * @param {String} property - The name of the property the node refers to.\n\t * @param {String} inputType - The uniform type that should be used to represent the property value.\n\t * @param {Renderer?} [renderer=null] - The renderer the property belongs to. When no renderer is set,\n\t * the node refers to the renderer of the current state.\n\t */\n\tconstructor( property, inputType, renderer = null ) {\n\n\t\tsuper( property, inputType, renderer );\n\n\t\t/**\n\t\t * The renderer the property belongs to. When no renderer is set,\n\t\t * the node refers to the renderer of the current state.\n\t\t *\n\t\t * @type {Renderer?}\n\t\t * @default null\n\t\t */\n\t\tthis.renderer = renderer;\n\n\t\tthis.setGroup( renderGroup );\n\n\t}\n\n\t/**\n\t * Updates the reference based on the given state. The state is only evaluated\n\t * {@link module:RendererReferenceNode~RendererReferenceNode#renderer} is not set.\n\t *\n\t * @param {(NodeFrame|NodeBuilder)} state - The current state.\n\t * @return {Object} The updated reference.\n\t */\n\tupdateReference( state ) {\n\n\t\tthis.reference = this.renderer !== null ? this.renderer : state.renderer;\n\n\t\treturn this.reference;\n\n\t}\n\n}\n\nexport default RendererReferenceNode;\n\n/**\n * TSL function for creating a renderer reference node.\n *\n * @function\n * @param {String} name - The name of the property the node refers to.\n * @param {String} type - The uniform type that should be used to represent the property value.\n * @param {Renderer?} [renderer=null] - The renderer the property belongs to. When no renderer is set,\n * the node refers to the renderer of the current state.\n * @returns {RendererReferenceNode}\n */\nexport const rendererReference = ( name, type, renderer = null ) => nodeObject( new RendererReferenceNode( name, type, renderer ) );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeObject, vec4 } from '../tsl/TSLCore.js';\nimport { rendererReference } from '../accessors/RendererReferenceNode.js';\n\nimport { NoToneMapping } from '../../constants.js';\nimport { hash } from '../core/NodeUtils.js';\n\n/** @module ToneMappingNode **/\n\n/**\n * This node represents a tone mapping operation.\n *\n * @augments TempNode\n */\nclass ToneMappingNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'ToneMappingNode';\n\n\t}\n\n\t/**\n\t * Constructs a new tone mapping node.\n\t *\n\t * @param {Number} toneMapping - The tone mapping type.\n\t * @param {Node} exposureNode - The tone mapping exposure.\n\t * @param {Node} [colorNode=null] - The color node to process.\n\t */\n\tconstructor( toneMapping, exposureNode = toneMappingExposure, colorNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\t/**\n\t\t * The tone mapping type.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.toneMapping = toneMapping;\n\n\t\t/**\n\t\t * The tone mapping exposure.\n\t\t *\n\t\t * @type {Node}\n\t\t * @default null\n\t\t */\n\t\tthis.exposureNode = exposureNode;\n\n\t\t/**\n\t\t * Represents the color to process.\n\t\t *\n\t\t * @type {Node?}\n\t\t * @default null\n\t\t */\n\t\tthis.colorNode = colorNode;\n\n\t}\n\n\t/**\n\t * Overwrites the default `customCacheKey()` implementation by including the tone\n\t * mapping type into the cache key.\n\t *\n\t * @return {Number} The hash.\n\t */\n\tcustomCacheKey() {\n\n\t\treturn hash( this.toneMapping );\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst colorNode = this.colorNode || builder.context.color;\n\t\tconst toneMapping = this.toneMapping;\n\n\t\tif ( toneMapping === NoToneMapping ) return colorNode;\n\n\t\tlet outputNode = null;\n\n\t\tconst toneMappingFn = builder.renderer.library.getToneMappingFunction( toneMapping );\n\n\t\tif ( toneMappingFn !== null ) {\n\n\t\t\toutputNode = vec4( toneMappingFn( colorNode.rgb, this.exposureNode ), colorNode.a );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'ToneMappingNode: Unsupported Tone Mapping configuration.', toneMapping );\n\n\t\t\toutputNode = colorNode;\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default ToneMappingNode;\n\n/**\n * TSL function for creating a tone mapping node.\n *\n * @function\n * @param {Number} mapping - The tone mapping type.\n * @param {Node<float> | Number} exposure - The tone mapping exposure.\n * @param {Node<vec3> | Color} color - The color node to process.\n * @returns {ToneMappingNode<vec3>}\n */\nexport const toneMapping = ( mapping, exposure, color ) => nodeObject( new ToneMappingNode( mapping, nodeObject( exposure ), nodeObject( color ) ) );\n\n/**\n * TSL object that represents the global tone mapping exposure of the renderer.\n *\n * @type {RendererReferenceNode<vec3>}\n */\nexport const toneMappingExposure = /*@__PURE__*/ rendererReference( 'toneMappingExposure', 'float' );\n\naddMethodChaining( 'toneMapping', ( color, mapping, exposure ) => toneMapping( mapping, exposure, color ) );\n","import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\nimport { StaticDrawUsage, FloatType } from '../constants.js';\nimport { fromHalfFloat, toHalfFloat } from '../extras/DataUtils.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( this, i );\n\t\t\t\t_vector.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\n//\n\nexport {\n\tFloat32BufferAttribute,\n\tFloat16BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","import { Vector3 } from '../math/Vector3.js';\nimport { BufferAttribute } from './BufferAttribute.js';\nimport { denormalize, normalize } from '../math/MathUtils.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.fromBufferAttribute( this, i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { InterleavedBufferAttribute };\n","import { generateUUID } from '../math/MathUtils.js';\nimport { StaticDrawUsage } from '../constants.js';\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nexport { InterleavedBuffer };\n","import InputNode from '../core/InputNode.js';\nimport { nodeObject, addMethodChaining } from '../tsl/TSLCore.js';\nimport { varying } from '../core/VaryingNode.js';\n\nimport { InterleavedBufferAttribute } from '../../core/InterleavedBufferAttribute.js';\nimport { InterleavedBuffer } from '../../core/InterleavedBuffer.js';\nimport { StaticDrawUsage, DynamicDrawUsage } from '../../constants.js';\n\n/** @module BufferAttributeNode **/\n\n/**\n * In earlier `three.js` versions it was only possible to define attribute data\n * on geometry level. With `BufferAttributeNode`, it is also possible to do this\n * on the node level.\n * ```js\n * const geometry = new THREE.PlaneGeometry();\n * const positionAttribute = geometry.getAttribute( 'position' );\n *\n * const colors = [];\n * for ( let i = 0; i < position.count; i ++ ) {\n * \tcolors.push( 1, 0, 0 );\n * }\n *\n * material.colorNode = bufferAttribute( new THREE.Float32BufferAttribute( colors, 3 ) );\n * ```\n * This new approach is especially interesting when geometry data are generated via\n * compute shaders. The below line converts a storage buffer into an attribute node.\n * ```js\n * material.positionNode = positionBuffer.toAttribute();\n * ```\n * @augments InputNode\n */\nclass BufferAttributeNode extends InputNode {\n\n\tstatic get type() {\n\n\t\treturn 'BufferAttributeNode';\n\n\t}\n\n\t/**\n\t * Constructs a new buffer attribute node.\n\t *\n\t * @param {BufferAttribute|InterleavedBuffer|TypedArray} value - The attribute data.\n\t * @param {String?} [bufferType=null] - The buffer type (e.g. `'vec3'`).\n\t * @param {Number} [bufferStride=0] - The buffer stride.\n\t * @param {Number} [bufferOffset=0] - The buffer offset.\n\t */\n\tconstructor( value, bufferType = null, bufferStride = 0, bufferOffset = 0 ) {\n\n\t\tsuper( value, bufferType );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isBufferNode = true;\n\n\t\t/**\n\t\t * The buffer type (e.g. `'vec3'`).\n\t\t *\n\t\t * @type {String}\n\t\t * @default null\n\t\t */\n\t\tthis.bufferType = bufferType;\n\n\t\t/**\n\t\t * The buffer stride.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.bufferStride = bufferStride;\n\n\t\t/**\n\t\t * The buffer offset.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.bufferOffset = bufferOffset;\n\n\t\t/**\n\t\t * The usage property. Set this to `THREE.DynamicDrawUsage` via `.setUsage()`,\n\t\t * if you are planning to update the attribute data per frame.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default StaticDrawUsage\n\t\t */\n\t\tthis.usage = StaticDrawUsage;\n\n\t\t/**\n\t\t * Whether the attribute is instanced or not.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.instanced = false;\n\n\t\t/**\n\t\t * A reference to the buffer attribute.\n\t\t *\n\t\t * @type {BufferAttribute?}\n\t\t * @default null\n\t\t */\n\t\tthis.attribute = null;\n\n\t\t/**\n\t\t * `BufferAttributeNode` sets this property to `true` by default.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.global = true;\n\n\t\tif ( value && value.isBufferAttribute === true ) {\n\n\t\t\tthis.attribute = value;\n\t\t\tthis.usage = value.usage;\n\t\t\tthis.instanced = value.isInstancedBufferAttribute;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * This method is overwritten since the attribute data might be shared\n\t * and thus the hash should be shared as well.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The hash.\n\t */\n\tgetHash( builder ) {\n\n\t\tif ( this.bufferStride === 0 && this.bufferOffset === 0 ) {\n\n\t\t\tlet bufferData = builder.globalCache.getData( this.value );\n\n\t\t\tif ( bufferData === undefined ) {\n\n\t\t\t\tbufferData = {\n\t\t\t\t\tnode: this\n\t\t\t\t};\n\n\t\t\t\tbuilder.globalCache.setData( this.value, bufferData );\n\n\t\t\t}\n\n\t\t\treturn bufferData.node.uuid;\n\n\t\t}\n\n\t\treturn this.uuid;\n\n\t}\n\n\t/**\n\t * This method is overwritten since the node type is inferred from\n\t * the buffer attribute.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The node type.\n\t */\n\tgetNodeType( builder ) {\n\n\t\tif ( this.bufferType === null ) {\n\n\t\t\tthis.bufferType = builder.getTypeFromAttribute( this.attribute );\n\n\t\t}\n\n\t\treturn this.bufferType;\n\n\t}\n\n\t/**\n\t * Depending on which value was passed to the node, `setup()` behaves\n\t * differently. If no instance of `BufferAttribute` was passed, the method\n\t * creates an internal attribute and configures it respectively.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t */\n\tsetup( builder ) {\n\n\t\tif ( this.attribute !== null ) return;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst array = this.value;\n\t\tconst itemSize = builder.getTypeLength( type );\n\t\tconst stride = this.bufferStride || itemSize;\n\t\tconst offset = this.bufferOffset;\n\n\t\tconst buffer = array.isInterleavedBuffer === true ? array : new InterleavedBuffer( array, stride );\n\t\tconst bufferAttribute = new InterleavedBufferAttribute( buffer, itemSize, offset );\n\n\t\tbuffer.setUsage( this.usage );\n\n\t\tthis.attribute = bufferAttribute;\n\t\tthis.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\n\n\t}\n\n\t/**\n\t * Generates the code snippet of the buffer attribute node.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The generated code snippet.\n\t */\n\tgenerate( builder ) {\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tconst nodeAttribute = builder.getBufferAttributeFromNode( this, nodeType );\n\t\tconst propertyName = builder.getPropertyName( nodeAttribute );\n\n\t\tlet output = null;\n\n\t\tif ( builder.shaderStage === 'vertex' || builder.shaderStage === 'compute' ) {\n\n\t\t\tthis.name = propertyName;\n\n\t\t\toutput = propertyName;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = varying( this );\n\n\t\t\toutput = nodeVarying.build( builder, nodeType );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\t/**\n\t * Overwrites the default implementation to return a fixed value `'bufferAttribute'`.\n\t *\n\t * @param {NodeBuilder} builder - The current node builder.\n\t * @return {String} The input type.\n\t */\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'bufferAttribute';\n\n\t}\n\n\t/**\n\t * Sets the `usage` property to the given value.\n\t *\n\t * @param {Number} value - The usage to set.\n\t * @return {BufferAttributeNode} A reference to this node.\n\t */\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\tif ( this.attribute && this.attribute.isBufferAttribute === true ) {\n\n\t\t\tthis.attribute.usage = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the `instanced` property to the given value.\n\t *\n\t * @param {Number} value - The value to set.\n\t * @return {BufferAttributeNode} A reference to this node.\n\t */\n\tsetInstanced( value ) {\n\n\t\tthis.instanced = value;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default BufferAttributeNode;\n\n/**\n * TSL function for creating a buffer attribute node.\n *\n * @function\n * @param {BufferAttribute|InterleavedBuffer|TypedArray} array - The attribute data.\n * @param {String?} [type=null] - The buffer type (e.g. `'vec3'`).\n * @param {Number} [stride=0] - The buffer stride.\n * @param {Number} [offset=0] - The buffer offset.\n * @returns {BufferAttributeNode}\n */\nexport const bufferAttribute = ( array, type = null, stride = 0, offset = 0 ) => nodeObject( new BufferAttributeNode( array, type, stride, offset ) );\n\n/**\n * TSL function for creating a buffer attribute node but with dynamic draw usage.\n * Use this function if attribute data are updated per frame.\n *\n * @function\n * @param {BufferAttribute|InterleavedBuffer|TypedArray} array - The attribute data.\n * @param {String?} [type=null] - The buffer type (e.g. `'vec3'`).\n * @param {Number} [stride=0] - The buffer stride.\n * @param {Number} [offset=0] - The buffer offset.\n * @returns {BufferAttributeNode}\n */\nexport const dynamicBufferAttribute = ( array, type = null, stride = 0, offset = 0 ) => bufferAttribute( array, type, stride, offset ).setUsage( DynamicDrawUsage );\n\n/**\n * TSL function for creating a buffer attribute node but with enabled instancing\n *\n * @function\n * @param {BufferAttribute|InterleavedBuffer|TypedArray} array - The attribute data.\n * @param {String?} [type=null] - The buffer type (e.g. `'vec3'`).\n * @param {Number} [stride=0] - The buffer stride.\n * @param {Number} [offset=0] - The buffer offset.\n * @returns {BufferAttributeNode}\n */\nexport const instancedBufferAttribute = ( array, type = null, stride = 0, offset = 0 ) => bufferAttribute( array, type, stride, offset ).setInstanced( true );\n\n/**\n * TSL function for creating a buffer attribute node but with dynamic draw usage and enabled instancing\n *\n * @function\n * @param {BufferAttribute|InterleavedBuffer|TypedArray} array - The attribute data.\n * @param {String?} [type=null] - The buffer type (e.g. `'vec3'`).\n * @param {Number} [stride=0] - The buffer stride.\n * @param {Number} [offset=0] - The buffer offset.\n * @returns {BufferAttributeNode}\n */\nexport const instancedDynamicBufferAttribute = ( array, type = null, stride = 0, offset = 0 ) => dynamicBufferAttribute( array, type, stride, offset ).setInstanced( true );\n\naddMethodChaining( 'toAttribute', ( bufferNode ) => bufferAttribute( bufferNode.value ) );\n","import Node from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addMethodChaining, nodeObject } from '../tsl/TSLCore.js';\n\n/** @module ComputeNode **/\n\n/**\n * TODO\n *\n * @augments Node\n */\nclass ComputeNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ComputeNode';\n\n\t}\n\n\t/**\n\t * Constructs a new compute node.\n\t *\n\t * @param {Node} computeNode - TODO\n\t * @param {Number} count - TODO.\n\t * @param {Array<Number>} [workgroupSize=[64]] - TODO.\n\t */\n\tconstructor( computeNode, count, workgroupSize = [ 64 ] ) {\n\n\t\tsuper( 'void' );\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isComputeNode = true;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.computeNode = computeNode;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.count = count;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Array<Number>}\n\t\t * @default [64]\n\t\t */\n\t\tthis.workgroupSize = workgroupSize;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.dispatchCount = 0;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.version = 1;\n\n\t\t/**\n\t\t * The name or label of the uniform.\n\t\t *\n\t\t * @type {String}\n\t\t * @default ''\n\t\t */\n\t\tthis.name = '';\n\n\t\t/**\n\t\t * The `updateBeforeType` is set to `NodeUpdateType.OBJECT` since {@link ComputeNode#updateBefore}\n\t\t * is executed once per object by default.\n\t\t *\n\t\t * @type {String}\n\t\t * @default 'object'\n\t\t */\n\t\tthis.updateBeforeType = NodeUpdateType.OBJECT;\n\n\t\t/**\n\t\t * TODO\n\t\t *\n\t\t * @type {Function}\n\t\t */\n\t\tthis.onInitFunction = null;\n\n\t\tthis.updateDispatchCount();\n\n\t}\n\n\t/**\n\t * Executes the `dispose` event for this node.\n\t */\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\t/**\n\t * Sets the {@link ComputeNode#name} property.\n\t *\n\t * @param {String} name - The name of the uniform.\n\t * @return {ComputeNode} A reference to this node.\n\t */\n\tlabel( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * TODO\n\t */\n\tupdateDispatchCount() {\n\n\t\tconst { count, workgroupSize } = this;\n\n\t\tlet size = workgroupSize[ 0 ];\n\n\t\tfor ( let i = 1; i < workgroupSize.length; i ++ )\n\t\t\tsize *= workgroupSize[ i ];\n\n\t\tthis.dispatchCount = Math.ceil( count / size );\n\n\t}\n\n\t/**\n\t * TODO\n\t *\n\t * @param {Function} callback - TODO.\n\t * @return {ComputeNode} A reference to this node.\n\t */\n\tonInit( callback ) {\n\n\t\tthis.onInitFunction = callback;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * The method execute the compute for this node.\n\t *\n\t * @param {NodeFrame} frame - A reference to the current node frame.\n\t */\n\tupdateBefore( { renderer } ) {\n\n\t\trenderer.compute( this );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { shaderStage } = builder;\n\n\t\tif ( shaderStage === 'compute' ) {\n\n\t\t\tconst snippet = this.computeNode.build( builder, 'void' );\n\n\t\t\tif ( snippet !== '' ) {\n\n\t\t\t\tbuilder.addLineFlowCode( snippet, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport default ComputeNode;\n\n/**\n * TSL function for creating a compute node.\n *\n * @function\n * @param {Node} node - TODO\n * @param {Number} count - TODO.\n * @param {Array<Number>} [workgroupSize=[64]] - TODO.\n * @returns {AtomicFunctionNode}\n */\nexport const compute = ( node, count, workgroupSize ) => nodeObject( new ComputeNode( nodeObject( node ), count, workgroupSize ) );\n\naddMethodChaining( 'compute', compute );\n","import Node from './Node.js';\nimport { addMethodChaining, nodeObject } from '../tsl/TSLCore.js';\n\n/** @module CacheNode **/\n\n/**\n * This node can be used as a cache management component for another node.\n * Caching is in general used by default in {@link NodeBuilder} but this node\n * allows the usage of a shared parent cache during the build process.\n *\n * @augments Node\n */\nclass CacheNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'CacheNode';\n\n\t}\n\n\t/**\n\t * Constructs a new cache node.\n\t *\n\t * @param {Node} node - The node that should be cached.\n\t * @param {Boolean} [parent=true] - Whether this node refers to a shared parent cache or not.\n\t */\n\tconstructor( node, parent = true ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node that should be cached.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * Whether this node refers to a shared parent cache or not.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isCacheNode = true;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst previousCache = builder.getCache();\n\t\tconst cache = builder.getCacheFromNode( this, this.parent );\n\n\t\tbuilder.setCache( cache );\n\n\t\tconst nodeType = this.node.getNodeType( builder );\n\n\t\tbuilder.setCache( previousCache );\n\n\t\treturn nodeType;\n\n\t}\n\n\tbuild( builder, ...params ) {\n\n\t\tconst previousCache = builder.getCache();\n\t\tconst cache = builder.getCacheFromNode( this, this.parent );\n\n\t\tbuilder.setCache( cache );\n\n\t\tconst data = this.node.build( builder, ...params );\n\n\t\tbuilder.setCache( previousCache );\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport default CacheNode;\n\n/**\n * TSL function for creating a cache node.\n *\n * @function\n * @param {Node} node - The node that should be cached.\n * @param {Boolean} parent - Whether this node refers to a shared parent cache or not.\n * @returns {CacheNode}\n */\nexport const cache = ( node, parent ) => nodeObject( new CacheNode( nodeObject( node ), parent ) );\n\naddMethodChaining( 'cache', cache );\n","import Node from './Node.js';\nimport { addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module BypassNode **/\n\n/**\n * The class generates the code of a given node but returns another node in the output.\n * This can be used to call a method or node that does not return a value, i.e.\n * type `void` on an input where returning a value is required. Example:\n *\n * ```js\n * material.colorNode = myColor.bypass( runVoidFn() )\n *```\n *\n * @augments Node\n */\nclass BypassNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'BypassNode';\n\n\t}\n\n\t/**\n\t * Constructs a new bypass node.\n\t *\n\t * @param {Node} outputNode - The output node.\n\t * @param {Node} callNode - The call node.\n\t */\n\tconstructor( outputNode, callNode ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isBypassNode = true;\n\n\t\t/**\n\t\t * The output node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.outputNode = outputNode;\n\n\t\t/**\n\t\t * The call node.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.callNode = callNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst snippet = this.callNode.build( builder, 'void' );\n\n\t\tif ( snippet !== '' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet, this );\n\n\t\t}\n\n\t\treturn this.outputNode.build( builder );\n\n\t}\n\n}\n\nexport default BypassNode;\n\n/**\n * TSL function for creating a bypass node.\n *\n * @function\n * @param {Node} outputNode - The output node.\n * @param {Node} callNode - The call node.\n * @returns {BypassNode}\n */\nexport const bypass = /*@__PURE__*/ nodeProxy( BypassNode );\n\naddMethodChaining( 'bypass', bypass );\n","import Node from '../core/Node.js';\nimport { float, addMethodChaining, nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module RemapNode **/\n\n/**\n * This node allows to remap a node value from one range into another. E.g a value of\n * `0.4` in the range `[ 0.3, 0.5 ]` should be remapped into the normalized range `[ 0, 1 ]`.\n * `RemapNode` takes care of that and converts the original value of `0.4` to `0.5`.\n *\n * @augments Node\n */\nclass RemapNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'RemapNode';\n\n\t}\n\n\t/**\n\t * Constructs a new remap node.\n\t *\n\t * @param {Node} node - The node that should be remapped.\n\t * @param {Node} inLowNode - The source or current lower bound of the range.\n\t * @param {Node} inHighNode - The source or current upper bound of the range.\n\t * @param {Node} [outLowNode=float(0)] - The target lower bound of the range.\n\t * @param {Node} [outHighNode=float(1)] - The target upper bound of the range.\n\t */\n\tconstructor( node, inLowNode, inHighNode, outLowNode = float( 0 ), outHighNode = float( 1 ) ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The node that should be remapped.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.node = node;\n\n\t\t/**\n\t\t * The source or current lower bound of the range.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.inLowNode = inLowNode;\n\n\t\t/**\n\t\t * The source or current upper bound of the range.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.inHighNode = inHighNode;\n\n\t\t/**\n\t\t * The target lower bound of the range.\n\t\t *\n\t\t * @type {Node}\n\t\t * @default float(0)\n\t\t */\n\t\tthis.outLowNode = outLowNode;\n\n\t\t/**\n\t\t * The target upper bound of the range.\n\t\t *\n\t\t * @type {Node}\n\t\t * @default float(1)\n\t\t */\n\t\tthis.outHighNode = outHighNode;\n\n\t\t/**\n\t\t * Whether the node value should be clamped before\n\t\t * remapping it to the target range.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.doClamp = true;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { node, inLowNode, inHighNode, outLowNode, outHighNode, doClamp } = this;\n\n\t\tlet t = node.sub( inLowNode ).div( inHighNode.sub( inLowNode ) );\n\n\t\tif ( doClamp === true ) t = t.clamp();\n\n\t\treturn t.mul( outHighNode.sub( outLowNode ) ).add( outLowNode );\n\n\t}\n\n}\n\nexport default RemapNode;\n\n/**\n * TSL function for creating a remap node.\n *\n * @function\n * @param {Node} node - The node that should be remapped.\n * @param {Node} inLowNode - The source or current lower bound of the range.\n * @param {Node} inHighNode - The source or current upper bound of the range.\n * @param {Node} [outLowNode=float(0)] - The target lower bound of the range.\n * @param {Node} [outHighNode=float(1)] - The target upper bound of the range.\n * @returns {RemapNode}\n */\nexport const remap = /*@__PURE__*/ nodeProxy( RemapNode, null, null, { doClamp: false } );\n\n/**\n * TSL function for creating a remap node, but with enabled clamping.\n *\n * @function\n * @param {Node} node - The node that should be remapped.\n * @param {Node} inLowNode - The source or current lower bound of the range.\n * @param {Node} inHighNode - The source or current upper bound of the range.\n * @param {Node} [outLowNode=float(0)] - The target lower bound of the range.\n * @param {Node} [outHighNode=float(1)] - The target upper bound of the range.\n * @returns {RemapNode}\n */\nexport const remapClamp = /*@__PURE__*/ nodeProxy( RemapNode );\n\naddMethodChaining( 'remap', remap );\naddMethodChaining( 'remapClamp', remapClamp );\n","import Node from '../core/Node.js';\nimport { nodeProxy } from '../tsl/TSLCore.js';\n\n/** @module ExpressionNode **/\n\n/**\n * This class can be used to implement basic expressions in shader code.\n * Basic examples for that are `return`, `continue` or `discard` statements.\n *\n * @augments Node\n */\nclass ExpressionNode extends Node {\n\n\tstatic get type() {\n\n\t\treturn 'ExpressionNode';\n\n\t}\n\n\t/**\n\t * Constructs a new expression node.\n\t *\n\t * @param {String} [snippet=''] - The native code snippet.\n\t * @param {String} [nodeType='void'] - The node type.\n\t */\n\tconstructor( snippet = '', nodeType = 'void' ) {\n\n\t\tsuper( nodeType );\n\n\t\t/**\n\t\t * The native code snippet.\n\t\t *\n\t\t * @type {String}\n\t\t * @default ''\n\t\t */\n\t\tthis.snippet = snippet;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst snippet = this.snippet;\n\n\t\tif ( type === 'void' ) {\n\n\t\t\tbuilder.addLineFlowCode( snippet, this );\n\n\t\t} else {\n\n\t\t\treturn builder.format( `( ${ snippet } )`, type, output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default ExpressionNode;\n\n/**\n * TSL function for creating an expression node.\n *\n * @function\n * @param {String} [snippet=''] - The native code snippet.\n * @param {String} [nodeType='void'] - The node type.\n * @returns {ExpressionNode}\n */\nexport const expression = /*@__PURE__*/ nodeProxy( ExpressionNode );\n","import { select } from '../math/ConditionalNode.js';\nimport { expression } from '../code/ExpressionNode.js';\nimport { addMethodChaining } from '../tsl/TSLCore.js';\n\n/** @module Discard **/\n\n/**\n * Represents a `discard` shader operation in TSL.\n *\n * @method\n * @param {ConditionalNode?} conditional - An optional conditional node. It allows to decide whether the discard should be executed or not.\n * @return {Node} The `discard` expression.\n */\nexport const Discard = ( conditional ) => ( conditional ? select( conditional, expression( 'discard' ) ) : expression( 'discard' ) ).append();\n\n/**\n * Represents a `return` shader operation in TSL.\n *\n * @method\n * @return {ExpressionNode} The `return` expression.\n */\nexport const Return = () => expression( 'return' ).append();\n\naddMethodChaining( 'discard', Discard );\n","import TempNode from '../core/TempNode.js';\nimport { addMethodChaining, nodeObject } from '../tsl/TSLCore.js';\n\nimport { NoColorSpace, NoToneMapping } from '../../constants.js';\nimport { ColorManagement } from '../../math/ColorManagement.js';\n\n/** @module RenderOutputNode **/\n\n/**\n * Normally, tone mapping and color conversion happens automatically\n * before outputting pixel too the default (screen) framebuffer. In certain\n * post processing setups this happens to late because certain effects\n * require e.g. sRGB input. For such scenarios, `RenderOutputNode` can be used\n * to apply tone mapping and color space conversion at an arbitrary point\n * in the effect chain.\n *\n * When applying tone mapping and color space conversion manually with this node,\n * you have to set {@link PostProcessing#outputColorTransform} to `false`.\n *\n * ```js\n * const postProcessing = new PostProcessing( renderer );\n * postProcessing.outputColorTransform = false;\n *\n * const scenePass = pass( scene, camera );\n * const outputPass = renderOutput( scenePass );\n *\n * postProcessing.outputNode = outputPass;\n * ```\n *\n * @augments TempNode\n */\nclass RenderOutputNode extends TempNode {\n\n\tstatic get type() {\n\n\t\treturn 'RenderOutputNode';\n\n\t}\n\n\t/**\n\t * Constructs a new render output node.\n\t *\n\t * @param {Node} colorNode - The color node to process.\n\t * @param {Number} toneMapping - The tone mapping type.\n\t * @param {String} outputColorSpace - The output color space.\n\t */\n\tconstructor( colorNode, toneMapping, outputColorSpace ) {\n\n\t\tsuper( 'vec4' );\n\n\t\t/**\n\t\t * The color node to process.\n\t\t *\n\t\t * @type {Node}\n\t\t */\n\t\tthis.colorNode = colorNode;\n\n\t\t/**\n\t\t * The tone mapping type.\n\t\t *\n\t\t * @type {Number?}\n\t\t */\n\t\tthis.toneMapping = toneMapping;\n\n\t\t/**\n\t\t * The output color space.\n\t\t *\n\t\t * @type {String?}\n\t\t */\n\t\tthis.outputColorSpace = outputColorSpace;\n\n\t\t/**\n\t\t * This flag can be used for type testing.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t * @default true\n\t\t */\n\t\tthis.isRenderOutputNode = true;\n\n\t}\n\n\tsetup( { context } ) {\n\n\t\tlet outputNode = this.colorNode || context.color;\n\n\t\t// tone mapping\n\n\t\tconst toneMapping = ( this.toneMapping !== null ? this.toneMapping : context.toneMapping ) || NoToneMapping;\n\t\tconst outputColorSpace = ( this.outputColorSpace !== null ? this.outputColorSpace : context.outputColorSpace ) || NoColorSpace;\n\n\t\tif ( toneMapping !== NoToneMapping ) {\n\n\t\t\toutputNode = outputNode.toneMapping( toneMapping );\n\n\t\t}\n\n\t\t// working to output color space\n\n\t\tif ( outputColorSpace !== NoColorSpace && outputColorSpace !== ColorManagement.workingColorSpace ) {\n\n\t\t\toutputNode = outputNode.workingToColorSpace( outputColorSpace );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default RenderOutputNode;\n\n/**\n * TSL function for creating a posterize node.\n *\n * @function\n * @param {Node} color - The color node to process.\n * @param {Number?} [toneMapping=null] - The tone mapping type.\n * @param {String?} [outputColorSpace=null] - The output color space.\n * @returns {RenderOutputNode}\n */\nexport const renderOutput = ( color, toneMapping = null, outputColorSpace = null ) => nodeObject( new RenderOutputNode( nodeObject( color ), toneMapping, outputColorSpace ) );\n\naddMethodChaining( 'renderOutput', renderOutput );\n","import * as THREE from 'three';\nimport { Tween, Easing } from '@tweenjs/tween.js'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { MapControls } from 'three/examples/jsm/controls/MapControls';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js'; \nimport { mx_bilerp_0 } from 'three/src/nodes/materialx/lib/mx_noise.js';\n\n/**\n * Represents a 3D diagram using THREE.js.\n */\nclass Diagram {\n\n    /**\n     * Creates a new Diagram instance.\n     * @param {HTMLElement} container - The HTML container element for the diagram.\n     */\n    constructor(container) {\n\n        // init Diagram features\n\n        /**\n         * Array of elements in the diagram.\n         * @type {Array<Object3D>}\n         */\n        this.elements = [];\n\n        /**\n         * Array of connectors in the diagram.\n         * @type {Array<Object3D>}\n         */\n        this.connectors = [];\n\n        /**\n         * Current mode of the diagram. Modes: 'EDIT', 'VIEW', 'ANALYZE'.\n         * @type {string}\n         */\n        this.mode = 'VIEW';\n\n        /**\n         * Whether helpers (axes, grid, etc.) are visible.\n         * @type {boolean}\n         */\n        this.helpers = false;\n\n        // init THREE.js features\n\n        /**\n         * The HTML container element for the diagram.\n         * @type {HTMLElement}\n         */\n        this.container = container;\n\n        this.initScene();\n        this.initCamera();\n        this.setHelpers(); // Optionally set helpers\n        this.initRenderer();\n        this.initLighting();\n        this.initControls();\n        this.addEventListeners();\n        this.animate();\n        console.log('THREE', THREE);\n        console.log(this);\n    }\n\n    /**\n     * Initializes the THREE.js scene.\n     */\n    initScene() {\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color( 0xf0f0f0 );\n    }\n\n    /**\n     * Initializes the camera with a perspective projection.\n     */\n    initCamera() { // Perspective\n        // const aspectRatio = this.container.clientWidth / window.innerHeight;\n        const aspectRatio = window.innerWidth / window.innerHeight;\n        this.camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 2000);\n        this.camera.position.set(0, 0, 500);\n        this.camera.updateProjectionMatrix();\n    }\n\n    // initCamera() { // Orthographic\n    //     // const aspectRatio = this.container.clientWidth / window.innerHeight;\n    //     const aspectRatio = window.innerWidth / window.innerHeight;\n    //     const frustumSize = 100;\n    //     this.camera = new THREE.OrthographicCamera(\n    //         frustumSize * aspectRatio / -2, \n    //         frustumSize * aspectRatio / 2, \n    //         frustumSize / 2, \n    //         frustumSize / -2, \n    //         0.1, \n    //         1000\n    //     );\n    //     this.camera.position.set(0, 0, 50);\n    // }\n\n    /**\n     * Sets up helpers (axes, grid, etc.) for the scene.\n     */\n    setHelpers() {\n        this.axesHelper = new THREE.AxesHelper(100);\n        this.cameraHelper = new THREE.CameraHelper(this.camera);\n        const size = 400;\n        const divisions = 50;\n        this.gridHelper = new THREE.GridHelper(size, divisions);\n        // Set camera helper - define cameraDirection and span variables\n        this.cameraDirection = new THREE.Vector3()\n        this.camPositionSpan = document.querySelector(\"#position\"); // set the spans with the queried HTML DOM elements\n        this.camLookAtSpan = document.querySelector(\"#lookingAt\");\n\n        this.helpers = false;\n    }\n\n    /**\n     * Shows the helpers in the scene.\n     */\n    showHelpers() {\n        if (!this.helpers) {\n            this.scene.add(this.axesHelper);\n            this.scene.add(this.cameraHelper);\n            this.scene.add(this.gridHelper);\n            this.helpers = true;\n        }\n    }\n\n    /**\n     * Hides the helpers in the scene.\n     */\n    hideHelpers() {\n        if (this.helpers) {\n            this.scene.remove(this.axesHelper);\n            this.scene.remove(this.cameraHelper);\n            this.scene.remove(this.gridHelper);\n            this.helpers = false;\n        }\n    }\n \n    /**\n     * Initializes the renderer and attaches it to the container.\n     */\n    initRenderer() {\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        // TODO: Ustawić na pełny ekran dla konkretnego kontenera.\n        // this.renderer.setSize(this.container.clientWidth, this.container.innerHeight);\n        // codepen at https://codepen.io/snakeo/pen/XWOoGPL\n        document.body.appendChild(this.renderer.domElement);\n        // TODO: Ustawić diagram w konkretnym kontenerze.\n        // this.container.appendChild(this.renderer.domElement);\n        console.log('initRenderer', this.container, this.renderer.domElement)\n    }\n \n    /**\n     * Initializes the lighting for the scene.\n     */\n    initLighting() {\n\n        // Main light\n        let mainLightColor = 0xffffff; // white\n        let mainLightIntensity = 4.0; // twice as bright as default\n        let mainLightDistance = 0 // infinite range\n        let mainLightDecay = 0 // no falloff\n        const mainLight = new THREE.PointLight(mainLightColor, mainLightIntensity, mainLightDistance, mainLightDecay);\n        // for diagram size { \"x\": 580, \"y\": 209, \"z\": 3.3 }\n        let mainLightPosX = (-1 * (580 / 2)) + ((1/3) * 580); // Proportion 1/3 : 2/3\n        let mainLightPosY = -1 * 209 * 4; // Below the diagram at the distance of 4 diagram height\n        let mainLightPosZ = Math.abs(mainLightPosY); // The elevation is the same as the absolute Y distance\n        mainLight.position.set(mainLightPosX, mainLightPosY, mainLightPosZ);\n        this.scene.add(mainLight);\n\n        // spot light\n        this.spotLight = new THREE.PointLight( 0xffffff, 4, 0, 0 );\n        this.spotLightPosX = 0; // Centered on the X axis. This will be moved in the animete() method.\n        this.spotLightPosY = (-1 * 209) - 300; // Below the diagram at the distance of 500 points\n        this.spotLightPosZ = 70; \n        // this.spotLight.position.set(spotLightPosX, spotLightPosY, spotLightPosZ);\n        this.scene.add(this.spotLight);\n        this.spotLightDirection = 1;\n\n        // // Old lights\n        // // ----------------------------------------------------------------------\n        \n        // // light\n        // const light = new THREE.PointLight( 0xffffff );\n        // light.position.set(-500, -2500, 2500);\n        // this.scene.add(light);\n\n        // // spot light\n        // const spotLight = new THREE.PointLight( 0xffffff );\n        // spotLight.position.set( 0, -2500, 30 );\n\n        // // ----------------------------------------------------------------------\n        // // New lights\n\n        // const ambientLight = new THREE.AmbientLight(0xCCCCCC, 4);\n        // this.scene.add(ambientLight);\n \n        // const directionalLight1 = new THREE.DirectionalLight(0xFFFFFF, 1);\n        // directionalLight1.position.set(1, 3, 1).normalize();\n        // this.scene.add(directionalLight1);\n \n        // // Adding a second directional light\n        // const directionalLight2 = new THREE.DirectionalLight(0xFFFFFF, 1);\n        // directionalLight2.position.set(-1, -1, -1).normalize();\n        // this.scene.add(directionalLight2);\n\n        // // Add spot light\n        // this.spotLight = new THREE.PointLight(0xffffff);\n        // this.spotLight.position.set(0, -2500, 30);\n        // this.scene.add(this.spotLight);\n\n        // this.spotLightDirection = 1;\n        // this.spotLightPosX = -2500;\n    }\n\n    /**\n     * Initializes the controls for the camera.\n     */\n    initControls() {\n        // this.controlsAnalyze = new OrbitControls(this.camera, this.renderer.domElement);\n        // this.controlsAnalyze.enableDamping = true;\n        // this.controlsAnalyze.dampingFactor = 0.25;\n        // this.controlsAnalyze.screenSpacePanning = false;\n        // this.controlsAnalyze.minPolarAngle = Math.PI / 2;\n        // this.controlsAnalyze.maxPolarAngle = Math.PI;\n        // this.controlsAnalyze.enabled = false;\n        // this.controlsAnalyze.saveState();\n\n        // this.controlsViewEdit = new MapControls(this.camera, this.renderer.domElement);\n        // this.controlsViewEdit.enableDamping = true;\n        // this.controlsViewEdit.dampingFactor = 0.25;\n        // this.controlsViewEdit.screenSpacePanning = true;\n        // this.controlsViewEdit.maxPolarAngle = Math.PI / 2;\n        // this.controlsViewEdit.enabled = true;\n        // this.controlsViewEdit.saveState();\n\n        // this.controls = new ArcballControls(this.camera, this.renderer.domElement, this.scene);\n        this.controls = new MapControls(this.camera, this.renderer.domElement);\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.1;\n        this.controls.screenSpacePanning = true;\n        this.controls.zoomToCursor = true;\n        this.controls.saveState();\n\n    }\n \n    /**\n     * Adds event listeners for window resize and other interactions.\n     */\n    addEventListeners() {\n        // Add event listener for window resize\n        window.addEventListener('resize', this.onWindowResize.bind(this), false);\n        // Add event listener for mouse events\n        // this.renderer.domElement.addEventListener('mousedown', this.onDocumentMouseDown.bind(this), false);\n        // this.renderer.domElement.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false);\n        // this.renderer.domElement.addEventListener('mouseup', this.onDocumentMouseUp.bind(this), false);\n    }\n \n    // onDocumentMouseDown(event) {\n    //     this.isDragging = true;\n    //     this.previousMousePosition = { x: event.offsetX, y: event.offsetY };\n    // }\n \n    // onDocumentMouseMove(event) {\n    //    if (this.isDragging && this.mugGroup) {\n    //       const deltaMove = {\n    //          x: event.offsetX - this.previousMousePosition.x,\n    //          y: event.offsetY - this.previousMousePosition.y\n    //       };\n \n    //       let rotateAngleX = this.toRadians(deltaMove.y * 1);\n    //       let rotateAngleY = this.toRadians(deltaMove.x * 1);\n \n    //       this.currentRotation = this.currentRotation || { x: 0, y: 0 };\n    //       this.currentRotation.x += rotateAngleX;\n    //       this.currentRotation.y += rotateAngleY;\n \n    //       const maxRotation = Math.PI / 2;\n    //       this.currentRotation.x = Math.min(Math.max(this.currentRotation.x, -maxRotation), maxRotation);\n \n    //       this.pivotGroup.rotation.x = this.currentRotation.x;\n    //       this.pivotGroup.rotation.y = this.currentRotation.y;\n \n    //       this.previousMousePosition = { x: event.offsetX, y: event.offsetY };\n    //    }\n    // }\n \n    // onDocumentMouseUp() {\n    //    this.isDragging = false;\n    // }\n \n    // toRadians(angle) {\n    //    return angle * (Math.PI / 180);\n    // }\n\n    /**\n     * Handles window resize events to update the camera and renderer.\n     */\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    /**\n     * Animates the scene and updates controls.\n     */\n    animate() {\n        if (this.tween) this.tween.update();\n        requestAnimationFrame(this.animate.bind(this));\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n\n        // Animate spot light\n        if (this.spotLightPosX > 500) {\n            this.spotLightDirection = -1;\n            this.spotLightPosX = 500;\n        }\n        if (this.spotLightPosX < -500) {\n            this.spotLightDirection = 1;\n            this.spotLightPosX = -500;\n        }\n        this.spotLightPosX += 10 * this.spotLightDirection;\n        this.spotLight.position.set(this.spotLightPosX, this.spotLightPosY, this.spotLightPosZ);\n    }\n\n    reset() {\n        this.hideHelpers();\n        this.controls.reset();\n        this.setMode('VIEW');\n        this.fitScreen();\n    }\n   \n\n    // ================================================================\n    //   Diagram arrangement\n    // ================================================================\n\n    arrange() {\n        // \n        // The method calculates the center of the diagram and moves all elements to center the diagram at {0, 0, 0}.\n        // It also calculates the camera Z position to place the camera above the center.\n        // Finally, it updates the controls target and updates the controls.\n        if (this.scene.children.length === 0) {\n            console.warn('Scene is empty. Cannot calculate center.');\n            return;\n        }\n        const box = new THREE.Box3().setFromObject(this.scene);\n        const center = box.getCenter(new THREE.Vector3());\n            // Translate all elements to center the diagram at {0, 0, 0}\n        const translation = new THREE.Vector3(-center.x, -center.y, -center.z);\n        this.scene.children.forEach(child => {\n            if (child instanceof THREE.Object3D) {\n                child.position.add(translation);\n            }\n        });\n    }\n\n    fitScreen() {\n        // The method ensures all the elements are visible.\n        // Calculate the camera Z position\n        const box = new THREE.Box3().setFromObject(this.scene);\n        const size = box.getSize(new THREE.Vector3());\n        console.log('fitScreen() -> size:', size);\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const fov = this.camera.fov * (Math.PI / 180); // convert FOV to radians\n        const cameraZ = Math.abs((maxDim / 2) / Math.tan(fov / 2));\n        this.camera.position.set(0, 0, cameraZ); // Place camera above the center\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n        this.camera.updateProjectionMatrix();\n        this.controls.saveState(); // Save the state of controls. This can later be recovered with .reset.\n\n        // Save the initial camera position and target for later use\n        this.initialCameraPosition = this.camera.position.clone();\n        this.initialTarget = this.controls.target.clone();\n    }\n\n    center() {\n        // The method centers the diagram by moving the camera to its initial state (as calculated by the fitScreen() method).\n        // It also uses the Tween.js library to animate the camera movement.\n        if (!this.initialCameraPosition || !this.initialTarget) {\n            console.warn('Initial camera position or target is not defined.');\n            return;\n        }\n\n        const from = {\n            cameraPositionX: this.camera.position.x,\n            cameraPositionY: this.camera.position.y,\n            cameraPositionZ: this.camera.position.z,\n            controlsTargetX: this.controls.target.x,\n            controlsTargetY: this.controls.target.y,\n            controlsTargetZ: this.controls.target.z\n        };\n        const to = {\n            cameraPositionX: this.initialCameraPosition.x,\n            cameraPositionY: this.initialCameraPosition.y,\n            cameraPositionZ: this.initialCameraPosition.z,\n            controlsTargetX: this.initialTarget.x,\n            controlsTargetY: this.initialTarget.y,\n            controlsTargetZ: this.initialTarget.z\n        };\n\n        const camera = this.camera;\n        const controls = this.controls;\n\n        this.tween = new Tween(from)\n            .to(to, 1200)\n            .easing(Easing.Quartic.Out)\n            .onUpdate(function () {\n                camera.position.set(\n                    from.cameraPositionX,\n                    from.cameraPositionY,\n                    from.cameraPositionZ\n                );\n                controls.target.set(\n                    from.controlsTargetX,\n                    from.controlsTargetY,\n                    from.controlsTargetZ\n                );\n            })\n            .onComplete(function () {\n                // controls.update();\n            })\n            .start();\n    }\n\n    rotate(targetAngle) {  // in degrees (e.g. 60)\n        // The method centers the diagram and rotates it around the Y axis by a specified angle.\n        if (!this.initialCameraPosition || !this.initialTarget) {\n            console.warn('Initial camera position or target is not defined.');\n            return;\n        }\n\n        const radius = Math.sqrt(\n            this.initialCameraPosition.y * this.initialCameraPosition.y + \n            this.initialCameraPosition.z * this.initialCameraPosition.z\n        );\n        \n        const from = {\n            cameraPositionX: this.camera.position.x,\n            cameraPositionY: this.camera.position.y,\n            cameraPositionZ: this.camera.position.z,\n            controlsTargetX: this.controls.target.x,\n            controlsTargetY: this.controls.target.y,\n            controlsTargetZ: this.controls.target.z\n        };\n\n        // Convert target angle to radians and calculate new positions\n        const targetAngleRad = THREE.MathUtils.degToRad(targetAngle);\n        const to = {\n            cameraPositionX: this.initialCameraPosition.x,\n            cameraPositionY: radius * Math.sin(targetAngleRad),\n            cameraPositionZ: radius * Math.cos(targetAngleRad),\n            controlsTargetX: this.initialTarget.x,\n            controlsTargetY: this.initialTarget.y,\n            controlsTargetZ: this.initialTarget.z\n        };\n\n        console.log('rotate() -> from:', from);\n        console.log('rotate() -> to:', to);\n\n        const camera = this.camera;\n        const controls = this.controls;\n\n        this.tween = new Tween(from)\n            .to(to, 1200)\n            .easing(Easing.Quartic.Out)\n            .onUpdate(function() {\n                camera.position.set(\n                    from.cameraPositionX,\n                    from.cameraPositionY,\n                    from.cameraPositionZ\n                );\n                controls.target.set(\n                    from.controlsTargetX,\n                    from.controlsTargetY,\n                    from.controlsTargetZ\n                );\n            })\n            .start();\n    }\n\n    // ================================================================\n    //   Diagram modes\n    // ================================================================\n\n    /**\n     * Removes all elements of type 'ValueBarShape' from the diagram.\n     * Iterates through the `elements` array in reverse order to safely remove\n     * elements without affecting the iteration process. For each matching element,\n     * it removes the element from its parent (and thus from the scene) and also \n     * removes it from the `elements` array.\n     */\n    removeValueBars() {\n        // Iterate in reverse order to safely remove elements\n        for (let i = this.elements.length - 1; i >= 0; i--) {\n            const element = this.elements[i];\n            if (element.type === 'ValueBarShape') {\n                // Remove from parent AND scene\n                if (element.parent) {\n                    element.parent.remove(element);\n                }\n                this.scene.remove(element);\n                this.elements.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Adds value bars to the diagram to visualize the elements' parameters.\n     * \n     * This method processes the elements in the diagram, calculates the height\n     * of the bars based on their parameter values, and assigns a color to each\n     * bar based on a normalized value. The bars are then added to the scene.\n     * \n     * @method\n     * @memberof Diagram\n     * @description\n     * - Filters elements to include only those with a defined `parameters.value`.\n     * - Calculates the range of parameter values to normalize them.\n     * - Assigns a color to each bar using an HSL color scale (green to red).\n     * - Calls the `valueBar` method on each element to set the bar's height and color.\n     * \n     * @example\n     * // Assuming `diagram` is an instance of Diagram with elements having parameters:\n     * diagram.addValueBars();\n     * \n     * @throws {Error} If no elements with `parameters.value` are found.\n     */\n    addValueBars() {\n        const elements = this.elements.filter(el => el.parameters && el.parameters.value !== undefined);\n        if (elements.length === 0) {\n            throw new Error('No elements with `parameters.value` found.');\n        }\n        const max = Math.max(...elements.map(el => el.parameters.value));\n        const min = 0;\n        const range = max - min;\n        elements.forEach((element, i) => {\n            const value = element.parameters.value;\n            const normalizedValue = (value - min) / range;\n            const color = new THREE.Color(`hsl(${(normalizedValue * 120).toString(10)}, 100%, 50%)`);\n            element.addValueBar(normalizedValue * 100, color);\n        });\n    }\n\n    /**\n     * Sets the mode of the diagram and adjusts its state accordingly.\n     *\n     * @param {string} mode - The mode to set. Possible values are:\n     *   - 'EDIT': Sets the diagram to edit mode and resets rotation.\n     *   - 'VIEW': Sets the diagram to view mode and resets rotation.\n     *   - 'ANALYZE': Sets the diagram to analyze mode, rotates it to -60 degrees, \n     *                and adds value bars.\n     *   - Any other value will log a warning about an unknown mode.\n     */\n    setMode(mode) {\n        this.removeValueBars();\n        this.mode = mode;\n\n        switch (mode) {\n            case 'EDIT':\n            case 'VIEW':\n                this.rotate(0);\n                break;\n            case 'ANALYZE':\n                this.rotate(-65);\n                this.addValueBars();\n                break;\n            default:\n                console.warn(`Unknown mode: ${mode}`);\n        }\n    }\n\n    // ================================================================\n    //   Diagram elements\n    // ================================================================\n\n    /**\n     * Adds an element to the diagram.\n     * @param {Object3D} element - The element to add.\n     * @param {Vector3} [position] - The position to place the element.\n     * @returns {Object3D} The added element.\n     */\n    addElement(element, position) {\n        this.elements.push(element);   \n        this.scene.add(element);\n        if (position) element.position.set(position.x, position.y, 0);\n        // this.renderer.render(this.scene, this.camera);\n        element.setDiagram(this);\n        return element;\n    }\n\n    /**\n     * Removes an element from the diagram by its ID.\n     * @param {string} elementId - The ID of the element to remove.\n     */\n    removeElement(elementId) {\n        const element = this.elements.find(el => el.id === elementId);\n        if (element) {\n            this.scene.remove(element);\n            this.elements = this.elements.filter(el => el.id !== elementId);\n        }\n    }\n\n    /**\n     * Retrieves an element from the `elements` array by its unique `elementId`.\n     *\n     * @param {string} elementId - The unique identifier of the element to find.\n     * @returns {Object|undefined} The element with the matching `elementId`, or `undefined` if not found.\n     */\n    getElementById(elementId) {\n        return this.elements.find(el => el.elementId === elementId);\n    }\n\n    /**\n     * Retrieves the elements of the diagram.\n     *\n     * @returns {Array} The array of elements in the diagram.\n     */\n    getElements() {\n        return this.elements;\n    }\n\n    // ================================================================\n    //   Diagram Connectors\n    // ================================================================\n\n    /**\n     * Adds a connector to the diagram, registers it with the diagram, \n     * and adds it to the scene for rendering.\n     *\n     * @param {Object} connector - The connector object to be added to the diagram.\n     * @returns {Object} The connector that was added.\n     */\n    addConnector(connector) {\n        this.connectors.push(connector);\n        this.scene.add(connector);\n        connector.setDiagram(this);\n        return connector;\n    }\n\n    // ================================================================\n    //   Clear diagram\n    // ================================================================\n\n    /**\n     * Clears all elements and connectors from the diagram.\n     */\n    clear() {\n        this.elements = [];\n        this.connectors = [];\n        this.scene.children = this.scene.children.filter(child => child instanceof THREE.AmbientLight);\n    }\n\n    // ================================================================\n    //   Diagram JSON\n    // ================================================================\n\n    toJSON() {\n        return JSON.stringify(this.elements);\n    }\n\n    fromJSON(json) {\n        this.elements = JSON.parse(json);\n    }\n\n    // ================================================================\n    //   Diagram export and import to/from file\n    // ================================================================\n\n    /**\n     * Exports the diagram to a JSON file.\n     */\n    export() {\n        const data = JSON.stringify(this.scene.toJSON());\n        const blob = new Blob([data], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'diagram.json';\n        a.click();\n        URL.revokeObjectURL(url);\n    }\n\n    /**\n     * Placeholder for importing a diagram from a file.\n     * This method should be implemented by subclasses.\n     * @param {File} file - The file to import.\n     * @throws {Error} If the method is not implemented.\n     * @returns {Promise<void>}\n     */\n    import(file) {\n        console.error('Import method should be implemented by subclasses.');\n    }\n\n }\n\nexport { Diagram };\n","export const DiagramDimensions = {\n    DISTANCE_BETWEEN_ELEMENTS: 48\n};\n\nexport const ExtrusionParameters = {\n    steps: 2,\n    depth: .6,\n    bevelEnabled: true,\n    bevelThickness: .2,\n    bevelSize: .4,\n    bevelOffset: 0,\n    bevelSegments: 4\n};\n\nexport const Colors = {\n    ELEMENT_FILL: 0x00ff00, // TODO\n    ELEMENT_STROKE: 0x006699,\n    ELEMENT_TEXT: 0x006699,\n    ELEMENT_SELECTED_FILL: 0xff0000, // TODO\n    ELEMENT_SELECTED_STROKE: 0x000000, // TODO\n    ELEMENT_SELECTED_TEXT: 0x000000 // TODO\n};\n","import * as THREE from 'three';\n\nclass Shape {\n    constructor(geometry, material) {\n        this.geometry = geometry;\n        this.material = material;\n\n        this.width = this.getSize().x;\n        this.height = this.getSize().y;\n    }\n\n    getSize() {\n        // Get the size of the geometry\n        var size = new THREE.Vector3();\n        this.geometry.computeBoundingBox();\n        this.geometry.boundingBox.getSize(size);\n\n        return size;\n    }\n\n}\n\nexport { Shape };","import * as THREE from 'three';\n\n// class DiagramEditMaterial extends THREE.MeshPhongMaterial {\n//   constructor(color) {\n//     super({\n//       color: color,\n//       shininess: 60,\n//       specular: 0x666666,\n//       emissive: 0x444444,\n//       emissiveIntensity: 0.6,\n//       side: THREE.DoubleSide\n//     });\n//   }\n// }\n\nclass DiagramEditMaterial extends THREE.MeshLambertMaterial {\n  constructor(color) {\n    super({\n      vertexColors: false,\n      color: color,\n      side: THREE.DoubleSide,\n      emissive: new THREE.Color(color),\n      emissiveIntensity: .1\n    });\n  }\n}\n\nexport { DiagramEditMaterial };","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\n\nclass BoxShape extends Shape {\n    constructor() {\n        const color = 0x0000ff;\n        super(new THREE.BoxGeometry(1, 1, 1), new DiagramEditMaterial(color));\n    }\n}\n\nexport { BoxShape };","import {\n\tFileLoader,\n\tLoader,\n\tShapePath\n} from 'three';\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tconst font = scope.parse( JSON.parse( text ) );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\n//\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.isFont = true;\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tshapes.push( ...paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nexport { FontLoader, Font };\n","/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  depth: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nimport {\n\tExtrudeGeometry\n} from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( font === undefined ) {\n\n\t\t\tsuper(); // generate default extrude geometry\n\n\t\t} else {\n\n\t\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t\t// translate parameters to ExtrudeGeometry API\n\n\t\t\tif ( parameters.depth === undefined && parameters.height !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.TextGeometry: .height is now depreciated. Please use .depth instead' ); // @deprecated, r163\n\n\t\t\t}\n\n\t\t\tparameters.depth = parameters.depth !== undefined ?\n\t\t\t\tparameters.depth : parameters.height !== undefined ?\n\t\t\t\t\tparameters.height : 50;\n\n\t\t\t// defaults\n\n\t\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\t\tsuper( shapes, parameters );\n\n\t\t}\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\n\nexport { TextGeometry };\n","import { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { Colors } from '../../diagrams/DiagramConstants.js';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader.js';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js';\nimport helveticaRegular from 'three/examples/fonts/helvetiker_regular.typeface.json';\nimport robotoRegular from './Roboto_Regular.json';\n\nclass TextShape extends Shape {\n    constructor(text, size = 8) {\n\n        const color = Colors.ELEMENT_TEXT;\n\n        const loader = new FontLoader();\n        var font = loader.parse( robotoRegular ); \n        var textGeometry = new TextGeometry( text, {\n                font: font,\n                size: size,\n                depth: .2, // .0125,\n                curveSegments: 12\n            } ).center();\n\n        // Construct the shape\n        super(textGeometry, new DiagramEditMaterial( color ));\n\n    }\n}\n\nexport { TextShape };","export const IconDimensions = {\n    ICON_SIZE_SMALL: 10,\n    ICON_SIZE_MEDIUM: 18,\n    ICON_SIZE_LARGE: 30,\n    ICON_PADDING: 4,\n    ICON_MARGIN: 6\n};","import {\n\tBox2,\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tMatrix3,\n\tPath,\n\tShape,\n\tShapePath,\n\tShapeUtils,\n\tSRGBColorSpace,\n\tVector2,\n\tVector3\n} from 'three';\n\nconst COLOR_SPACE_SVG = SRGBColorSpace;\n\nclass SVGLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\t// Default dots per inch\n\t\tthis.defaultDPI = 90;\n\n\t\t// Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n\t\tthis.defaultUnit = 'px';\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst scope = this;\n\n\t\tfunction parseNode( node, style ) {\n\n\t\t\tif ( node.nodeType !== 1 ) return;\n\n\t\t\tconst transform = getNodeTransform( node );\n\n\t\t\tlet isDefsNode = false;\n\n\t\t\tlet path = null;\n\n\t\t\tswitch ( node.nodeName ) {\n\n\t\t\t\tcase 'svg':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'style':\n\t\t\t\t\tparseCSSStylesheet( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'path':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tif ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rect':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseRectNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygon':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolygonNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polyline':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolylineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'circle':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseCircleNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ellipse':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseEllipseNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'line':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseLineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'defs':\n\t\t\t\t\tisDefsNode = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'use':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\n\t\t\t\t\tconst href = node.getAttributeNS( 'http://www.w3.org/1999/xlink', 'href' ) || '';\n\t\t\t\t\tconst usedNodeId = href.substring( 1 );\n\t\t\t\t\tconst usedNode = node.viewportElement.getElementById( usedNodeId );\n\t\t\t\t\tif ( usedNode ) {\n\n\t\t\t\t\t\tparseNode( usedNode, style );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'SVGLoader: \\'use node\\' references non-existent node id: ' + usedNodeId );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// console.log( node );\n\n\t\t\t}\n\n\t\t\tif ( path ) {\n\n\t\t\t\tif ( style.fill !== undefined && style.fill !== 'none' ) {\n\n\t\t\t\t\tpath.color.setStyle( style.fill, COLOR_SPACE_SVG );\n\n\t\t\t\t}\n\n\t\t\t\ttransformPath( path, currentTransform );\n\n\t\t\t\tpaths.push( path );\n\n\t\t\t\tpath.userData = { node: node, style: style };\n\n\t\t\t}\n\n\t\t\tconst childNodes = node.childNodes;\n\n\t\t\tfor ( let i = 0; i < childNodes.length; i ++ ) {\n\n\t\t\t\tconst node = childNodes[ i ];\n\n\t\t\t\tif ( isDefsNode && node.nodeName !== 'style' && node.nodeName !== 'defs' ) {\n\n\t\t\t\t\t// Ignore everything in defs except CSS style definitions\n\t\t\t\t\t// and nested defs, because it is OK by the standard to have\n\t\t\t\t\t// <style/> there.\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tparseNode( node, style );\n\n\t\t\t}\n\n\n\t\t\tif ( transform ) {\n\n\t\t\t\ttransformStack.pop();\n\n\t\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\t\tcurrentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePathNode( node ) {\n\n\t\t\tconst path = new ShapePath();\n\n\t\t\tconst point = new Vector2();\n\t\t\tconst control = new Vector2();\n\n\t\t\tconst firstPoint = new Vector2();\n\t\t\tlet isFirstPoint = true;\n\t\t\tlet doSetFirstPoint = false;\n\n\t\t\tconst d = node.getAttribute( 'd' );\n\n\t\t\tif ( d === '' || d === 'none' ) return null;\n\n\t\t\t// console.log( d );\n\n\t\t\tconst commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n\t\t\tfor ( let i = 0, l = commands.length; i < l; i ++ ) {\n\n\t\t\t\tconst command = commands[ i ];\n\n\t\t\t\tconst type = command.charAt( 0 );\n\t\t\t\tconst data = command.slice( 1 ).trim();\n\n\t\t\t\tif ( isFirstPoint === true ) {\n\n\t\t\t\t\tdoSetFirstPoint = true;\n\t\t\t\t\tisFirstPoint = false;\n\n\t\t\t\t}\n\n\t\t\t\tlet numbers;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 4 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tconst rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tconst ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tnumbers = parseFloats( data, [ 3, 4 ], 7 );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\t// skip command if start point == end point\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == point.x && numbers[ j + 6 ] == point.y ) continue;\n\n\t\t\t\t\t\t\tconst start = point.clone();\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'h':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 4 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tnumbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tconst rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tconst ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = point.y + numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tnumbers = parseFloats( data, [ 3, 4 ], 7 );\n\n\t\t\t\t\t\tfor ( let j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\t// skip command if no displacement\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == 0 && numbers[ j + 6 ] == 0 ) continue;\n\n\t\t\t\t\t\t\tconst start = point.clone();\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\tcase 'z':\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\t\t\t\tif ( path.currentPath.curves.length > 0 ) {\n\n\t\t\t\t\t\t\t// Reset point to beginning of Path\n\t\t\t\t\t\t\tpoint.copy( firstPoint );\n\t\t\t\t\t\t\tpath.currentPath.currentPoint.copy( point );\n\t\t\t\t\t\t\tisFirstPoint = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( command );\n\n\t\t\t\t}\n\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n\t\t\t\tdoSetFirstPoint = false;\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseCSSStylesheet( node ) {\n\n\t\t\tif ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\n\n\t\t\tfor ( let i = 0; i < node.sheet.cssRules.length; i ++ ) {\n\n\t\t\t\tconst stylesheet = node.sheet.cssRules[ i ];\n\n\t\t\t\tif ( stylesheet.type !== 1 ) continue;\n\n\t\t\t\tconst selectorList = stylesheet.selectorText\n\t\t\t\t\t.split( /,/gm )\n\t\t\t\t\t.filter( Boolean )\n\t\t\t\t\t.map( i => i.trim() );\n\n\t\t\t\tfor ( let j = 0; j < selectorList.length; j ++ ) {\n\n\t\t\t\t\t// Remove empty rules\n\t\t\t\t\tconst definitions = Object.fromEntries(\n\t\t\t\t\t\tObject.entries( stylesheet.style ).filter( ( [ , v ] ) => v !== '' )\n\t\t\t\t\t);\n\n\t\t\t\t\tstylesheets[ selectorList[ j ] ] = Object.assign(\n\t\t\t\t\t\tstylesheets[ selectorList[ j ] ] || {},\n\t\t\t\t\t\tdefinitions\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n\t\t * From\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n\t\t * To\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n\t\t */\n\n\t\tfunction parseArcCommand( path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end ) {\n\n\t\t\tif ( rx == 0 || ry == 0 ) {\n\n\t\t\t\t// draw a line if either of the radii == 0\n\t\t\t\tpath.lineTo( end.x, end.y );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n\t\t\t// Ensure radii are positive\n\t\t\trx = Math.abs( rx );\n\t\t\try = Math.abs( ry );\n\n\t\t\t// Compute (x1', y1')\n\t\t\tconst dx2 = ( start.x - end.x ) / 2.0;\n\t\t\tconst dy2 = ( start.y - end.y ) / 2.0;\n\t\t\tconst x1p = Math.cos( x_axis_rotation ) * dx2 + Math.sin( x_axis_rotation ) * dy2;\n\t\t\tconst y1p = - Math.sin( x_axis_rotation ) * dx2 + Math.cos( x_axis_rotation ) * dy2;\n\n\t\t\t// Compute (cx', cy')\n\t\t\tlet rxs = rx * rx;\n\t\t\tlet rys = ry * ry;\n\t\t\tconst x1ps = x1p * x1p;\n\t\t\tconst y1ps = y1p * y1p;\n\n\t\t\t// Ensure radii are large enough\n\t\t\tconst cr = x1ps / rxs + y1ps / rys;\n\n\t\t\tif ( cr > 1 ) {\n\n\t\t\t\t// scale up rx,ry equally so cr == 1\n\t\t\t\tconst s = Math.sqrt( cr );\n\t\t\t\trx = s * rx;\n\t\t\t\try = s * ry;\n\t\t\t\trxs = rx * rx;\n\t\t\t\trys = ry * ry;\n\n\t\t\t}\n\n\t\t\tconst dq = ( rxs * y1ps + rys * x1ps );\n\t\t\tconst pq = ( rxs * rys - dq ) / dq;\n\t\t\tlet q = Math.sqrt( Math.max( 0, pq ) );\n\t\t\tif ( large_arc_flag === sweep_flag ) q = - q;\n\t\t\tconst cxp = q * rx * y1p / ry;\n\t\t\tconst cyp = - q * ry * x1p / rx;\n\n\t\t\t// Step 3: Compute (cx, cy) from (cx', cy')\n\t\t\tconst cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n\t\t\tconst cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n\t\t\t// Step 4: Compute θ1 and Δθ\n\t\t\tconst theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n\t\t\tconst delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n\t\t\tpath.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n\t\t}\n\n\t\tfunction svgAngle( ux, uy, vx, vy ) {\n\n\t\t\tconst dot = ux * vx + uy * vy;\n\t\t\tconst len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n\t\t\tlet ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n\t\t\tif ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\n\t\t\treturn ang;\n\n\t\t}\n\n\t\t/*\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n\t\t*/\n\t\tfunction parseRectNode( node ) {\n\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'x' ) || 0 );\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'y' ) || 0 );\n\t\t\tconst rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || node.getAttribute( 'ry' ) || 0 );\n\t\t\tconst ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || node.getAttribute( 'rx' ) || 0 );\n\t\t\tconst w = parseFloatWithUnits( node.getAttribute( 'width' ) );\n\t\t\tconst h = parseFloatWithUnits( node.getAttribute( 'height' ) );\n\n\t\t\t// Ellipse arc to Bezier approximation Coefficient (Inversed). See:\n\t\t\t// https://spencermortensen.com/articles/bezier-circle/\n\t\t\tconst bci = 1 - 0.551915024494;\n\n\t\t\tconst path = new ShapePath();\n\n\t\t\t// top left\n\t\t\tpath.moveTo( x + rx, y );\n\n\t\t\t// top right\n\t\t\tpath.lineTo( x + w - rx, y );\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\tx + w - rx * bci,\n\t\t\t\t\ty,\n\t\t\t\t\tx + w,\n\t\t\t\t\ty + ry * bci,\n\t\t\t\t\tx + w,\n\t\t\t\t\ty + ry\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t// bottom right\n\t\t\tpath.lineTo( x + w, y + h - ry );\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\tx + w,\n\t\t\t\t\ty + h - ry * bci,\n\t\t\t\t\tx + w - rx * bci,\n\t\t\t\t\ty + h,\n\t\t\t\t\tx + w - rx,\n\t\t\t\t\ty + h\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t// bottom left\n\t\t\tpath.lineTo( x + rx, y + h );\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\tx + rx * bci,\n\t\t\t\t\ty + h,\n\t\t\t\t\tx,\n\t\t\t\t\ty + h - ry * bci,\n\t\t\t\t\tx,\n\t\t\t\t\ty + h - ry\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t// back to top left\n\t\t\tpath.lineTo( x, y + ry );\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo( x, y + ry * bci, x + rx * bci, y, x + rx, y );\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolygonNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tconst x = parseFloatWithUnits( a );\n\t\t\t\tconst y = parseFloatWithUnits( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tconst regex = /([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)(?:,|\\s)([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)/g;\n\n\t\t\tconst path = new ShapePath();\n\n\t\t\tlet index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolylineNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tconst x = parseFloatWithUnits( a );\n\t\t\t\tconst y = parseFloatWithUnits( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tconst regex = /([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)(?:,|\\s)([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)/g;\n\n\t\t\tconst path = new ShapePath();\n\n\t\t\tlet index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseCircleNode( node ) {\n\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'cx' ) || 0 );\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'cy' ) || 0 );\n\t\t\tconst r = parseFloatWithUnits( node.getAttribute( 'r' ) || 0 );\n\n\t\t\tconst subpath = new Path();\n\t\t\tsubpath.absarc( x, y, r, 0, Math.PI * 2 );\n\n\t\t\tconst path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseEllipseNode( node ) {\n\n\t\t\tconst x = parseFloatWithUnits( node.getAttribute( 'cx' ) || 0 );\n\t\t\tconst y = parseFloatWithUnits( node.getAttribute( 'cy' ) || 0 );\n\t\t\tconst rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || 0 );\n\t\t\tconst ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || 0 );\n\n\t\t\tconst subpath = new Path();\n\t\t\tsubpath.absellipse( x, y, rx, ry, 0, Math.PI * 2 );\n\n\t\t\tconst path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseLineNode( node ) {\n\n\t\t\tconst x1 = parseFloatWithUnits( node.getAttribute( 'x1' ) || 0 );\n\t\t\tconst y1 = parseFloatWithUnits( node.getAttribute( 'y1' ) || 0 );\n\t\t\tconst x2 = parseFloatWithUnits( node.getAttribute( 'x2' ) || 0 );\n\t\t\tconst y2 = parseFloatWithUnits( node.getAttribute( 'y2' ) || 0 );\n\n\t\t\tconst path = new ShapePath();\n\t\t\tpath.moveTo( x1, y1 );\n\t\t\tpath.lineTo( x2, y2 );\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction parseStyle( node, style ) {\n\n\t\t\tstyle = Object.assign( {}, style ); // clone style\n\n\t\t\tlet stylesheetStyles = {};\n\n\t\t\tif ( node.hasAttribute( 'class' ) ) {\n\n\t\t\t\tconst classSelectors = node.getAttribute( 'class' )\n\t\t\t\t\t.split( /\\s/ )\n\t\t\t\t\t.filter( Boolean )\n\t\t\t\t\t.map( i => i.trim() );\n\n\t\t\t\tfor ( let i = 0; i < classSelectors.length; i ++ ) {\n\n\t\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '.' + classSelectors[ i ] ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( node.hasAttribute( 'id' ) ) {\n\n\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '#' + node.getAttribute( 'id' ) ] );\n\n\t\t\t}\n\n\t\t\tfunction addStyle( svgName, jsName, adjustFunction ) {\n\n\t\t\t\tif ( adjustFunction === undefined ) adjustFunction = function copy( v ) {\n\n\t\t\t\t\tif ( v.startsWith( 'url' ) ) console.warn( 'SVGLoader: url access in attributes is not implemented.' );\n\n\t\t\t\t\treturn v;\n\n\t\t\t\t};\n\n\t\t\t\tif ( node.hasAttribute( svgName ) ) style[ jsName ] = adjustFunction( node.getAttribute( svgName ) );\n\t\t\t\tif ( stylesheetStyles[ svgName ] ) style[ jsName ] = adjustFunction( stylesheetStyles[ svgName ] );\n\t\t\t\tif ( node.style && node.style[ svgName ] !== '' ) style[ jsName ] = adjustFunction( node.style[ svgName ] );\n\n\t\t\t}\n\n\t\t\tfunction clamp( v ) {\n\n\t\t\t\treturn Math.max( 0, Math.min( 1, parseFloatWithUnits( v ) ) );\n\n\t\t\t}\n\n\t\t\tfunction positive( v ) {\n\n\t\t\t\treturn Math.max( 0, parseFloatWithUnits( v ) );\n\n\t\t\t}\n\n\t\t\taddStyle( 'fill', 'fill' );\n\t\t\taddStyle( 'fill-opacity', 'fillOpacity', clamp );\n\t\t\taddStyle( 'fill-rule', 'fillRule' );\n\t\t\taddStyle( 'opacity', 'opacity', clamp );\n\t\t\taddStyle( 'stroke', 'stroke' );\n\t\t\taddStyle( 'stroke-opacity', 'strokeOpacity', clamp );\n\t\t\taddStyle( 'stroke-width', 'strokeWidth', positive );\n\t\t\taddStyle( 'stroke-linejoin', 'strokeLineJoin' );\n\t\t\taddStyle( 'stroke-linecap', 'strokeLineCap' );\n\t\t\taddStyle( 'stroke-miterlimit', 'strokeMiterLimit', positive );\n\t\t\taddStyle( 'visibility', 'visibility' );\n\n\t\t\treturn style;\n\n\t\t}\n\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\t\tfunction getReflection( a, b ) {\n\n\t\t\treturn a - ( b - a );\n\n\t\t}\n\n\t\t// from https://github.com/ppvg/svg-numbers (MIT License)\n\n\t\tfunction parseFloats( input, flags, stride ) {\n\n\t\t\tif ( typeof input !== 'string' ) {\n\n\t\t\t\tthrow new TypeError( 'Invalid input: ' + typeof input );\n\n\t\t\t}\n\n\t\t\t// Character groups\n\t\t\tconst RE = {\n\t\t\t\tSEPARATOR: /[ \\t\\r\\n\\,.\\-+]/,\n\t\t\t\tWHITESPACE: /[ \\t\\r\\n]/,\n\t\t\t\tDIGIT: /[\\d]/,\n\t\t\t\tSIGN: /[-+]/,\n\t\t\t\tPOINT: /\\./,\n\t\t\t\tCOMMA: /,/,\n\t\t\t\tEXP: /e/i,\n\t\t\t\tFLAGS: /[01]/\n\t\t\t};\n\n\t\t\t// States\n\t\t\tconst SEP = 0;\n\t\t\tconst INT = 1;\n\t\t\tconst FLOAT = 2;\n\t\t\tconst EXP = 3;\n\n\t\t\tlet state = SEP;\n\t\t\tlet seenComma = true;\n\t\t\tlet number = '', exponent = '';\n\t\t\tconst result = [];\n\n\t\t\tfunction throwSyntaxError( current, i, partial ) {\n\n\t\t\t\tconst error = new SyntaxError( 'Unexpected character \"' + current + '\" at index ' + i + '.' );\n\t\t\t\terror.partial = partial;\n\t\t\t\tthrow error;\n\n\t\t\t}\n\n\t\t\tfunction newNumber() {\n\n\t\t\t\tif ( number !== '' ) {\n\n\t\t\t\t\tif ( exponent === '' ) result.push( Number( number ) );\n\t\t\t\t\telse result.push( Number( number ) * Math.pow( 10, Number( exponent ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tnumber = '';\n\t\t\t\texponent = '';\n\n\t\t\t}\n\n\t\t\tlet current;\n\t\t\tconst length = input.length;\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tcurrent = input[ i ];\n\n\t\t\t\t// check for flags\n\t\t\t\tif ( Array.isArray( flags ) && flags.includes( result.length % stride ) && RE.FLAGS.test( current ) ) {\n\n\t\t\t\t\tstate = INT;\n\t\t\t\t\tnumber = current;\n\t\t\t\t\tnewNumber();\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// parse until next number\n\t\t\t\tif ( state === SEP ) {\n\n\t\t\t\t\t// eat whitespace\n\t\t\t\t\tif ( RE.WHITESPACE.test( current ) ) {\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// start new number\n\t\t\t\t\tif ( RE.DIGIT.test( current ) || RE.SIGN.test( current ) ) {\n\n\t\t\t\t\t\tstate = INT;\n\t\t\t\t\t\tnumber = current;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( RE.POINT.test( current ) ) {\n\n\t\t\t\t\t\tstate = FLOAT;\n\t\t\t\t\t\tnumber = current;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// throw on double commas (e.g. \"1, , 2\")\n\t\t\t\t\tif ( RE.COMMA.test( current ) ) {\n\n\t\t\t\t\t\tif ( seenComma ) {\n\n\t\t\t\t\t\t\tthrowSyntaxError( current, i, result );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseenComma = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// parse integer part\n\t\t\t\tif ( state === INT ) {\n\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\n\n\t\t\t\t\t\tnumber += current;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( RE.POINT.test( current ) ) {\n\n\t\t\t\t\t\tnumber += current;\n\t\t\t\t\t\tstate = FLOAT;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( RE.EXP.test( current ) ) {\n\n\t\t\t\t\t\tstate = EXP;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// throw on double signs (\"-+1\"), but not on sign as separator (\"-1-2\")\n\t\t\t\t\tif ( RE.SIGN.test( current )\n\t\t\t\t\t\t\t&& number.length === 1\n\t\t\t\t\t\t\t&& RE.SIGN.test( number[ 0 ] ) ) {\n\n\t\t\t\t\t\tthrowSyntaxError( current, i, result );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// parse decimal part\n\t\t\t\tif ( state === FLOAT ) {\n\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\n\n\t\t\t\t\t\tnumber += current;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( RE.EXP.test( current ) ) {\n\n\t\t\t\t\t\tstate = EXP;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// throw on double decimal points (e.g. \"1..2\")\n\t\t\t\t\tif ( RE.POINT.test( current ) && number[ number.length - 1 ] === '.' ) {\n\n\t\t\t\t\t\tthrowSyntaxError( current, i, result );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// parse exponent part\n\t\t\t\tif ( state === EXP ) {\n\n\t\t\t\t\tif ( RE.DIGIT.test( current ) ) {\n\n\t\t\t\t\t\texponent += current;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( RE.SIGN.test( current ) ) {\n\n\t\t\t\t\t\tif ( exponent === '' ) {\n\n\t\t\t\t\t\t\texponent += current;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( exponent.length === 1 && RE.SIGN.test( exponent ) ) {\n\n\t\t\t\t\t\t\tthrowSyntaxError( current, i, result );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t// end of number\n\t\t\t\tif ( RE.WHITESPACE.test( current ) ) {\n\n\t\t\t\t\tnewNumber();\n\t\t\t\t\tstate = SEP;\n\t\t\t\t\tseenComma = false;\n\n\t\t\t\t} else if ( RE.COMMA.test( current ) ) {\n\n\t\t\t\t\tnewNumber();\n\t\t\t\t\tstate = SEP;\n\t\t\t\t\tseenComma = true;\n\n\t\t\t\t} else if ( RE.SIGN.test( current ) ) {\n\n\t\t\t\t\tnewNumber();\n\t\t\t\t\tstate = INT;\n\t\t\t\t\tnumber = current;\n\n\t\t\t\t} else if ( RE.POINT.test( current ) ) {\n\n\t\t\t\t\tnewNumber();\n\t\t\t\t\tstate = FLOAT;\n\t\t\t\t\tnumber = current;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrowSyntaxError( current, i, result );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add the last number found (if any)\n\t\t\tnewNumber();\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\t// Units\n\n\t\tconst units = [ 'mm', 'cm', 'in', 'pt', 'pc', 'px' ];\n\n\t\t// Conversion: [ fromUnit ][ toUnit ] (-1 means dpi dependent)\n\t\tconst unitConversion = {\n\n\t\t\t'mm': {\n\t\t\t\t'mm': 1,\n\t\t\t\t'cm': 0.1,\n\t\t\t\t'in': 1 / 25.4,\n\t\t\t\t'pt': 72 / 25.4,\n\t\t\t\t'pc': 6 / 25.4,\n\t\t\t\t'px': - 1\n\t\t\t},\n\t\t\t'cm': {\n\t\t\t\t'mm': 10,\n\t\t\t\t'cm': 1,\n\t\t\t\t'in': 1 / 2.54,\n\t\t\t\t'pt': 72 / 2.54,\n\t\t\t\t'pc': 6 / 2.54,\n\t\t\t\t'px': - 1\n\t\t\t},\n\t\t\t'in': {\n\t\t\t\t'mm': 25.4,\n\t\t\t\t'cm': 2.54,\n\t\t\t\t'in': 1,\n\t\t\t\t'pt': 72,\n\t\t\t\t'pc': 6,\n\t\t\t\t'px': - 1\n\t\t\t},\n\t\t\t'pt': {\n\t\t\t\t'mm': 25.4 / 72,\n\t\t\t\t'cm': 2.54 / 72,\n\t\t\t\t'in': 1 / 72,\n\t\t\t\t'pt': 1,\n\t\t\t\t'pc': 6 / 72,\n\t\t\t\t'px': - 1\n\t\t\t},\n\t\t\t'pc': {\n\t\t\t\t'mm': 25.4 / 6,\n\t\t\t\t'cm': 2.54 / 6,\n\t\t\t\t'in': 1 / 6,\n\t\t\t\t'pt': 72 / 6,\n\t\t\t\t'pc': 1,\n\t\t\t\t'px': - 1\n\t\t\t},\n\t\t\t'px': {\n\t\t\t\t'px': 1\n\t\t\t}\n\n\t\t};\n\n\t\tfunction parseFloatWithUnits( string ) {\n\n\t\t\tlet theUnit = 'px';\n\n\t\t\tif ( typeof string === 'string' || string instanceof String ) {\n\n\t\t\t\tfor ( let i = 0, n = units.length; i < n; i ++ ) {\n\n\t\t\t\t\tconst u = units[ i ];\n\n\t\t\t\t\tif ( string.endsWith( u ) ) {\n\n\t\t\t\t\t\ttheUnit = u;\n\t\t\t\t\t\tstring = string.substring( 0, string.length - u.length );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlet scale = undefined;\n\n\t\t\tif ( theUnit === 'px' && scope.defaultUnit !== 'px' ) {\n\n\t\t\t\t// Conversion scale from  pixels to inches, then to default units\n\n\t\t\t\tscale = unitConversion[ 'in' ][ scope.defaultUnit ] / scope.defaultDPI;\n\n\t\t\t} else {\n\n\t\t\t\tscale = unitConversion[ theUnit ][ scope.defaultUnit ];\n\n\t\t\t\tif ( scale < 0 ) {\n\n\t\t\t\t\t// Conversion scale to pixels\n\n\t\t\t\t\tscale = unitConversion[ theUnit ][ 'in' ] * scope.defaultDPI;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn scale * parseFloat( string );\n\n\t\t}\n\n\t\t// Transforms\n\n\t\tfunction getNodeTransform( node ) {\n\n\t\t\tif ( ! ( node.hasAttribute( 'transform' ) || ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) ) ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tconst transform = parseNodeTransform( node );\n\n\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\ttransform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tcurrentTransform.copy( transform );\n\t\t\ttransformStack.push( transform );\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction parseNodeTransform( node ) {\n\n\t\t\tconst transform = new Matrix3();\n\t\t\tconst currentTransform = tempTransform0;\n\n\t\t\tif ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\n\n\t\t\t\tconst tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\n\t\t\t\tconst ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\n\n\t\t\t\ttransform.translate( tx, ty );\n\n\t\t\t}\n\n\t\t\tif ( node.hasAttribute( 'transform' ) ) {\n\n\t\t\t\tconst transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n\t\t\t\tfor ( let tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n\t\t\t\t\tconst transformText = transformsTexts[ tIndex ].trim();\n\n\t\t\t\t\tif ( transformText === '' ) continue;\n\n\t\t\t\t\tconst openParPos = transformText.indexOf( '(' );\n\t\t\t\t\tconst closeParPos = transformText.length;\n\n\t\t\t\t\tif ( openParPos > 0 && openParPos < closeParPos ) {\n\n\t\t\t\t\t\tconst transformType = transformText.slice( 0, openParPos );\n\n\t\t\t\t\t\tconst array = parseFloats( transformText.slice( openParPos + 1 ) );\n\n\t\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t\t\tswitch ( transformType ) {\n\n\t\t\t\t\t\t\tcase 'translate':\n\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\t\tconst tx = array[ 0 ];\n\t\t\t\t\t\t\t\t\tlet ty = 0;\n\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\t\tty = array[ 1 ];\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tcurrentTransform.translate( tx, ty );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'rotate':\n\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\t\tlet angle = 0;\n\t\t\t\t\t\t\t\t\tlet cx = 0;\n\t\t\t\t\t\t\t\t\tlet cy = 0;\n\n\t\t\t\t\t\t\t\t\t// Angle\n\t\t\t\t\t\t\t\t\tangle = array[ 0 ] * Math.PI / 180;\n\n\t\t\t\t\t\t\t\t\tif ( array.length >= 3 ) {\n\n\t\t\t\t\t\t\t\t\t\t// Center x, y\n\t\t\t\t\t\t\t\t\t\tcx = array[ 1 ];\n\t\t\t\t\t\t\t\t\t\tcy = array[ 2 ];\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Rotate around center (cx, cy)\n\t\t\t\t\t\t\t\t\ttempTransform1.makeTranslation( - cx, - cy );\n\t\t\t\t\t\t\t\t\ttempTransform2.makeRotation( angle );\n\t\t\t\t\t\t\t\t\ttempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n\t\t\t\t\t\t\t\t\ttempTransform1.makeTranslation( cx, cy );\n\t\t\t\t\t\t\t\t\tcurrentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'scale':\n\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\t\tconst scaleX = array[ 0 ];\n\t\t\t\t\t\t\t\t\tlet scaleY = scaleX;\n\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\t\tscaleY = array[ 1 ];\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tcurrentTransform.scale( scaleX, scaleY );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'skewX':\n\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t\t1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n\t\t\t\t\t\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'skewY':\n\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t\t\t\t\t\tMath.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'matrix':\n\n\t\t\t\t\t\t\t\tif ( array.length === 6 ) {\n\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t\tarray[ 0 ], array[ 2 ], array[ 4 ],\n\t\t\t\t\t\t\t\t\t\tarray[ 1 ], array[ 3 ], array[ 5 ],\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttransform.premultiply( currentTransform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction transformPath( path, m ) {\n\n\t\t\tfunction transfVec2( v2 ) {\n\n\t\t\t\ttempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n\t\t\t\tv2.set( tempV3.x, tempV3.y );\n\n\t\t\t}\n\n\t\t\tfunction transfEllipseGeneric( curve ) {\n\n\t\t\t\t// For math description see:\n\t\t\t\t// https://math.stackexchange.com/questions/4544164\n\n\t\t\t\tconst a = curve.xRadius;\n\t\t\t\tconst b = curve.yRadius;\n\n\t\t\t\tconst cosTheta = Math.cos( curve.aRotation );\n\t\t\t\tconst sinTheta = Math.sin( curve.aRotation );\n\n\t\t\t\tconst v1 = new Vector3( a * cosTheta, a * sinTheta, 0 );\n\t\t\t\tconst v2 = new Vector3( - b * sinTheta, b * cosTheta, 0 );\n\n\t\t\t\tconst f1 = v1.applyMatrix3( m );\n\t\t\t\tconst f2 = v2.applyMatrix3( m );\n\n\t\t\t\tconst mF = tempTransform0.set(\n\t\t\t\t\tf1.x, f2.x, 0,\n\t\t\t\t\tf1.y, f2.y, 0,\n\t\t\t\t\t0, 0, 1,\n\t\t\t\t);\n\n\t\t\t\tconst mFInv = tempTransform1.copy( mF ).invert();\n\t\t\t\tconst mFInvT = tempTransform2.copy( mFInv ).transpose();\n\t\t\t\tconst mQ = mFInvT.multiply( mFInv );\n\t\t\t\tconst mQe = mQ.elements;\n\n\t\t\t\tconst ed = eigenDecomposition( mQe[ 0 ], mQe[ 1 ], mQe[ 4 ] );\n\t\t\t\tconst rt1sqrt = Math.sqrt( ed.rt1 );\n\t\t\t\tconst rt2sqrt = Math.sqrt( ed.rt2 );\n\n\t\t\t\tcurve.xRadius = 1 / rt1sqrt;\n\t\t\t\tcurve.yRadius = 1 / rt2sqrt;\n\t\t\t\tcurve.aRotation = Math.atan2( ed.sn, ed.cs );\n\n\t\t\t\tconst isFullEllipse =\n\t\t\t\t\t( curve.aEndAngle - curve.aStartAngle ) % ( 2 * Math.PI ) < Number.EPSILON;\n\n\t\t\t\t// Do not touch angles of a full ellipse because after transformation they\n\t\t\t\t// would converge to a single value effectively removing the whole curve\n\n\t\t\t\tif ( ! isFullEllipse ) {\n\n\t\t\t\t\tconst mDsqrt = tempTransform1.set(\n\t\t\t\t\t\trt1sqrt, 0, 0,\n\t\t\t\t\t\t0, rt2sqrt, 0,\n\t\t\t\t\t\t0, 0, 1,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst mRT = tempTransform2.set(\n\t\t\t\t\t\ted.cs, ed.sn, 0,\n\t\t\t\t\t\t- ed.sn, ed.cs, 0,\n\t\t\t\t\t\t0, 0, 1,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst mDRF = mDsqrt.multiply( mRT ).multiply( mF );\n\n\t\t\t\t\tconst transformAngle = phi => {\n\n\t\t\t\t\t\tconst { x: cosR, y: sinR } =\n\t\t\t\t\t\t\tnew Vector3( Math.cos( phi ), Math.sin( phi ), 0 ).applyMatrix3( mDRF );\n\n\t\t\t\t\t\treturn Math.atan2( sinR, cosR );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurve.aStartAngle = transformAngle( curve.aStartAngle );\n\t\t\t\t\tcurve.aEndAngle = transformAngle( curve.aEndAngle );\n\n\t\t\t\t\tif ( isTransformFlipped( m ) ) {\n\n\t\t\t\t\t\tcurve.aClockwise = ! curve.aClockwise;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction transfEllipseNoSkew( curve ) {\n\n\t\t\t\t// Faster shortcut if no skew is applied\n\t\t\t\t// (e.g, a euclidean transform of a group containing the ellipse)\n\n\t\t\t\tconst sx = getTransformScaleX( m );\n\t\t\t\tconst sy = getTransformScaleY( m );\n\n\t\t\t\tcurve.xRadius *= sx;\n\t\t\t\tcurve.yRadius *= sy;\n\n\t\t\t\t// Extract rotation angle from the matrix of form:\n\t\t\t\t//\n\t\t\t\t//  | cosθ sx   -sinθ sy |\n\t\t\t\t//  | sinθ sx    cosθ sy |\n\t\t\t\t//\n\t\t\t\t// Remembering that tanθ = sinθ / cosθ; and that\n\t\t\t\t// `sx`, `sy`, or both might be zero.\n\t\t\t\tconst theta =\n\t\t\t\t\tsx > Number.EPSILON\n\t\t\t\t\t\t? Math.atan2( m.elements[ 1 ], m.elements[ 0 ] )\n\t\t\t\t\t\t: Math.atan2( - m.elements[ 3 ], m.elements[ 4 ] );\n\n\t\t\t\tcurve.aRotation += theta;\n\n\t\t\t\tif ( isTransformFlipped( m ) ) {\n\n\t\t\t\t\tcurve.aStartAngle *= - 1;\n\t\t\t\t\tcurve.aEndAngle *= - 1;\n\t\t\t\t\tcurve.aClockwise = ! curve.aClockwise;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst subPaths = path.subPaths;\n\n\t\t\tfor ( let i = 0, n = subPaths.length; i < n; i ++ ) {\n\n\t\t\t\tconst subPath = subPaths[ i ];\n\t\t\t\tconst curves = subPath.curves;\n\n\t\t\t\tfor ( let j = 0; j < curves.length; j ++ ) {\n\n\t\t\t\t\tconst curve = curves[ j ];\n\n\t\t\t\t\tif ( curve.isLineCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isCubicBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\t\t\t\t\t\ttransfVec2( curve.v3 );\n\n\t\t\t\t\t} else if ( curve.isQuadraticBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isEllipseCurve ) {\n\n\t\t\t\t\t\t// Transform ellipse center point\n\n\t\t\t\t\t\ttempV2.set( curve.aX, curve.aY );\n\t\t\t\t\t\ttransfVec2( tempV2 );\n\t\t\t\t\t\tcurve.aX = tempV2.x;\n\t\t\t\t\t\tcurve.aY = tempV2.y;\n\n\t\t\t\t\t\t// Transform ellipse shape parameters\n\n\t\t\t\t\t\tif ( isTransformSkewed( m ) ) {\n\n\t\t\t\t\t\t\ttransfEllipseGeneric( curve );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttransfEllipseNoSkew( curve );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTransformFlipped( m ) {\n\n\t\t\tconst te = m.elements;\n\t\t\treturn te[ 0 ] * te[ 4 ] - te[ 1 ] * te[ 3 ] < 0;\n\n\t\t}\n\n\t\tfunction isTransformSkewed( m ) {\n\n\t\t\tconst te = m.elements;\n\t\t\tconst basisDot = te[ 0 ] * te[ 3 ] + te[ 1 ] * te[ 4 ];\n\n\t\t\t// Shortcut for trivial rotations and transformations\n\t\t\tif ( basisDot === 0 ) return false;\n\n\t\t\tconst sx = getTransformScaleX( m );\n\t\t\tconst sy = getTransformScaleY( m );\n\n\t\t\treturn Math.abs( basisDot / ( sx * sy ) ) > Number.EPSILON;\n\n\t\t}\n\n\t\tfunction getTransformScaleX( m ) {\n\n\t\t\tconst te = m.elements;\n\t\t\treturn Math.sqrt( te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] );\n\n\t\t}\n\n\t\tfunction getTransformScaleY( m ) {\n\n\t\t\tconst te = m.elements;\n\t\t\treturn Math.sqrt( te[ 3 ] * te[ 3 ] + te[ 4 ] * te[ 4 ] );\n\n\t\t}\n\n\t\t// Calculates the eigensystem of a real symmetric 2x2 matrix\n\t\t//    [ A  B ]\n\t\t//    [ B  C ]\n\t\t// in the form\n\t\t//    [ A  B ]  =  [ cs  -sn ] [ rt1   0  ] [  cs  sn ]\n\t\t//    [ B  C ]     [ sn   cs ] [  0   rt2 ] [ -sn  cs ]\n\t\t// where rt1 >= rt2.\n\t\t//\n\t\t// Adapted from: https://www.mpi-hd.mpg.de/personalhomes/globes/3x3/index.html\n\t\t// -> Algorithms for real symmetric matrices -> Analytical (2x2 symmetric)\n\t\tfunction eigenDecomposition( A, B, C ) {\n\n\t\t\tlet rt1, rt2, cs, sn, t;\n\t\t\tconst sm = A + C;\n\t\t\tconst df = A - C;\n\t\t\tconst rt = Math.sqrt( df * df + 4 * B * B );\n\n\t\t\tif ( sm > 0 ) {\n\n\t\t\t\trt1 = 0.5 * ( sm + rt );\n\t\t\t\tt = 1 / rt1;\n\t\t\t\trt2 = A * t * C - B * t * B;\n\n\t\t\t} else if ( sm < 0 ) {\n\n\t\t\t\trt2 = 0.5 * ( sm - rt );\n\n\t\t\t} else {\n\n\t\t\t\t// This case needs to be treated separately to avoid div by 0\n\n\t\t\t\trt1 = 0.5 * rt;\n\t\t\t\trt2 = - 0.5 * rt;\n\n\t\t\t}\n\n\t\t\t// Calculate eigenvectors\n\n\t\t\tif ( df > 0 ) {\n\n\t\t\t\tcs = df + rt;\n\n\t\t\t} else {\n\n\t\t\t\tcs = df - rt;\n\n\t\t\t}\n\n\t\t\tif ( Math.abs( cs ) > 2 * Math.abs( B ) ) {\n\n\t\t\t\tt = - 2 * B / cs;\n\t\t\t\tsn = 1 / Math.sqrt( 1 + t * t );\n\t\t\t\tcs = t * sn;\n\n\t\t\t} else if ( Math.abs( B ) === 0 ) {\n\n\t\t\t\tcs = 1;\n\t\t\t\tsn = 0;\n\n\t\t\t} else {\n\n\t\t\t\tt = - 0.5 * cs / B;\n\t\t\t\tcs = 1 / Math.sqrt( 1 + t * t );\n\t\t\t\tsn = t * cs;\n\n\t\t\t}\n\n\t\t\tif ( df > 0 ) {\n\n\t\t\t\tt = cs;\n\t\t\t\tcs = - sn;\n\t\t\t\tsn = t;\n\n\t\t\t}\n\n\t\t\treturn { rt1, rt2, cs, sn };\n\n\t\t}\n\n\t\t//\n\n\t\tconst paths = [];\n\t\tconst stylesheets = {};\n\n\t\tconst transformStack = [];\n\n\t\tconst tempTransform0 = new Matrix3();\n\t\tconst tempTransform1 = new Matrix3();\n\t\tconst tempTransform2 = new Matrix3();\n\t\tconst tempTransform3 = new Matrix3();\n\t\tconst tempV2 = new Vector2();\n\t\tconst tempV3 = new Vector3();\n\n\t\tconst currentTransform = new Matrix3();\n\n\t\tconst xml = new DOMParser().parseFromString( text, 'image/svg+xml' ); // application/xml\n\n\t\tparseNode( xml.documentElement, {\n\t\t\tfill: '#000',\n\t\t\tfillOpacity: 1,\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 1,\n\t\t\tstrokeLineJoin: 'miter',\n\t\t\tstrokeLineCap: 'butt',\n\t\t\tstrokeMiterLimit: 4\n\t\t} );\n\n\t\tconst data = { paths: paths, xml: xml.documentElement };\n\n\t\t// console.log( paths );\n\t\treturn data;\n\n\t}\n\n\tstatic createShapes( shapePath ) {\n\n\t\t// Param shapePath: a shapepath as returned by the parse function of this class\n\t\t// Returns Shape object\n\n\t\tconst BIGNUMBER = 999999999;\n\n\t\tconst IntersectionLocationType = {\n\t\t\tORIGIN: 0,\n\t\t\tDESTINATION: 1,\n\t\t\tBETWEEN: 2,\n\t\t\tLEFT: 3,\n\t\t\tRIGHT: 4,\n\t\t\tBEHIND: 5,\n\t\t\tBEYOND: 6\n\t\t};\n\n\t\tconst classifyResult = {\n\t\t\tloc: IntersectionLocationType.ORIGIN,\n\t\t\tt: 0\n\t\t};\n\n\t\tfunction findEdgeIntersection( a0, a1, b0, b1 ) {\n\n\t\t\tconst x1 = a0.x;\n\t\t\tconst x2 = a1.x;\n\t\t\tconst x3 = b0.x;\n\t\t\tconst x4 = b1.x;\n\t\t\tconst y1 = a0.y;\n\t\t\tconst y2 = a1.y;\n\t\t\tconst y3 = b0.y;\n\t\t\tconst y4 = b1.y;\n\t\t\tconst nom1 = ( x4 - x3 ) * ( y1 - y3 ) - ( y4 - y3 ) * ( x1 - x3 );\n\t\t\tconst nom2 = ( x2 - x1 ) * ( y1 - y3 ) - ( y2 - y1 ) * ( x1 - x3 );\n\t\t\tconst denom = ( y4 - y3 ) * ( x2 - x1 ) - ( x4 - x3 ) * ( y2 - y1 );\n\t\t\tconst t1 = nom1 / denom;\n\t\t\tconst t2 = nom2 / denom;\n\n\t\t\tif ( ( ( denom === 0 ) && ( nom1 !== 0 ) ) || ( t1 <= 0 ) || ( t1 >= 1 ) || ( t2 < 0 ) || ( t2 > 1 ) ) {\n\n\t\t\t\t//1. lines are parallel or edges don't intersect\n\n\t\t\t\treturn null;\n\n\t\t\t} else if ( ( nom1 === 0 ) && ( denom === 0 ) ) {\n\n\t\t\t\t//2. lines are colinear\n\n\t\t\t\t//check if endpoints of edge2 (b0-b1) lies on edge1 (a0-a1)\n\t\t\t\tfor ( let i = 0; i < 2; i ++ ) {\n\n\t\t\t\t\tclassifyPoint( i === 0 ? b0 : b1, a0, a1 );\n\t\t\t\t\t//find position of this endpoints relatively to edge1\n\t\t\t\t\tif ( classifyResult.loc == IntersectionLocationType.ORIGIN ) {\n\n\t\t\t\t\t\tconst point = ( i === 0 ? b0 : b1 );\n\t\t\t\t\t\treturn { x: point.x, y: point.y, t: classifyResult.t };\n\n\t\t\t\t\t} else if ( classifyResult.loc == IntersectionLocationType.BETWEEN ) {\n\n\t\t\t\t\t\tconst x = + ( ( x1 + classifyResult.t * ( x2 - x1 ) ).toPrecision( 10 ) );\n\t\t\t\t\t\tconst y = + ( ( y1 + classifyResult.t * ( y2 - y1 ) ).toPrecision( 10 ) );\n\t\t\t\t\t\treturn { x: x, y: y, t: classifyResult.t, };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t} else {\n\n\t\t\t\t//3. edges intersect\n\n\t\t\t\tfor ( let i = 0; i < 2; i ++ ) {\n\n\t\t\t\t\tclassifyPoint( i === 0 ? b0 : b1, a0, a1 );\n\n\t\t\t\t\tif ( classifyResult.loc == IntersectionLocationType.ORIGIN ) {\n\n\t\t\t\t\t\tconst point = ( i === 0 ? b0 : b1 );\n\t\t\t\t\t\treturn { x: point.x, y: point.y, t: classifyResult.t };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst x = + ( ( x1 + t1 * ( x2 - x1 ) ).toPrecision( 10 ) );\n\t\t\t\tconst y = + ( ( y1 + t1 * ( y2 - y1 ) ).toPrecision( 10 ) );\n\t\t\t\treturn { x: x, y: y, t: t1 };\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction classifyPoint( p, edgeStart, edgeEnd ) {\n\n\t\t\tconst ax = edgeEnd.x - edgeStart.x;\n\t\t\tconst ay = edgeEnd.y - edgeStart.y;\n\t\t\tconst bx = p.x - edgeStart.x;\n\t\t\tconst by = p.y - edgeStart.y;\n\t\t\tconst sa = ax * by - bx * ay;\n\n\t\t\tif ( ( p.x === edgeStart.x ) && ( p.y === edgeStart.y ) ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.ORIGIN;\n\t\t\t\tclassifyResult.t = 0;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ( p.x === edgeEnd.x ) && ( p.y === edgeEnd.y ) ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.DESTINATION;\n\t\t\t\tclassifyResult.t = 1;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( sa < - Number.EPSILON ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.LEFT;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( sa > Number.EPSILON ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.RIGHT;\n\t\t\t\treturn;\n\n\n\t\t\t}\n\n\t\t\tif ( ( ( ax * bx ) < 0 ) || ( ( ay * by ) < 0 ) ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.BEHIND;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ( Math.sqrt( ax * ax + ay * ay ) ) < ( Math.sqrt( bx * bx + by * by ) ) ) {\n\n\t\t\t\tclassifyResult.loc = IntersectionLocationType.BEYOND;\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet t;\n\n\t\t\tif ( ax !== 0 ) {\n\n\t\t\t\tt = bx / ax;\n\n\t\t\t} else {\n\n\t\t\t\tt = by / ay;\n\n\t\t\t}\n\n\t\t\tclassifyResult.loc = IntersectionLocationType.BETWEEN;\n\t\t\tclassifyResult.t = t;\n\n\t\t}\n\n\t\tfunction getIntersections( path1, path2 ) {\n\n\t\t\tconst intersectionsRaw = [];\n\t\t\tconst intersections = [];\n\n\t\t\tfor ( let index = 1; index < path1.length; index ++ ) {\n\n\t\t\t\tconst path1EdgeStart = path1[ index - 1 ];\n\t\t\t\tconst path1EdgeEnd = path1[ index ];\n\n\t\t\t\tfor ( let index2 = 1; index2 < path2.length; index2 ++ ) {\n\n\t\t\t\t\tconst path2EdgeStart = path2[ index2 - 1 ];\n\t\t\t\t\tconst path2EdgeEnd = path2[ index2 ];\n\n\t\t\t\t\tconst intersection = findEdgeIntersection( path1EdgeStart, path1EdgeEnd, path2EdgeStart, path2EdgeEnd );\n\n\t\t\t\t\tif ( intersection !== null && intersectionsRaw.find( i => i.t <= intersection.t + Number.EPSILON && i.t >= intersection.t - Number.EPSILON ) === undefined ) {\n\n\t\t\t\t\t\tintersectionsRaw.push( intersection );\n\t\t\t\t\t\tintersections.push( new Vector2( intersection.x, intersection.y ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn intersections;\n\n\t\t}\n\n\t\tfunction getScanlineIntersections( scanline, boundingBox, paths ) {\n\n\t\t\tconst center = new Vector2();\n\t\t\tboundingBox.getCenter( center );\n\n\t\t\tconst allIntersections = [];\n\n\t\t\tpaths.forEach( path => {\n\n\t\t\t\t// check if the center of the bounding box is in the bounding box of the paths.\n\t\t\t\t// this is a pruning method to limit the search of intersections in paths that can't envelop of the current path.\n\t\t\t\t// if a path envelops another path. The center of that other path, has to be inside the bounding box of the enveloping path.\n\t\t\t\tif ( path.boundingBox.containsPoint( center ) ) {\n\n\t\t\t\t\tconst intersections = getIntersections( scanline, path.points );\n\n\t\t\t\t\tintersections.forEach( p => {\n\n\t\t\t\t\t\tallIntersections.push( { identifier: path.identifier, isCW: path.isCW, point: p } );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tallIntersections.sort( ( i1, i2 ) => {\n\n\t\t\t\treturn i1.point.x - i2.point.x;\n\n\t\t\t} );\n\n\t\t\treturn allIntersections;\n\n\t\t}\n\n\t\tfunction isHoleTo( simplePath, allPaths, scanlineMinX, scanlineMaxX, _fillRule ) {\n\n\t\t\tif ( _fillRule === null || _fillRule === undefined || _fillRule === '' ) {\n\n\t\t\t\t_fillRule = 'nonzero';\n\n\t\t\t}\n\n\t\t\tconst centerBoundingBox = new Vector2();\n\t\t\tsimplePath.boundingBox.getCenter( centerBoundingBox );\n\n\t\t\tconst scanline = [ new Vector2( scanlineMinX, centerBoundingBox.y ), new Vector2( scanlineMaxX, centerBoundingBox.y ) ];\n\n\t\t\tconst scanlineIntersections = getScanlineIntersections( scanline, simplePath.boundingBox, allPaths );\n\n\t\t\tscanlineIntersections.sort( ( i1, i2 ) => {\n\n\t\t\t\treturn i1.point.x - i2.point.x;\n\n\t\t\t} );\n\n\t\t\tconst baseIntersections = [];\n\t\t\tconst otherIntersections = [];\n\n\t\t\tscanlineIntersections.forEach( i => {\n\n\t\t\t\tif ( i.identifier === simplePath.identifier ) {\n\n\t\t\t\t\tbaseIntersections.push( i );\n\n\t\t\t\t} else {\n\n\t\t\t\t\totherIntersections.push( i );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tconst firstXOfPath = baseIntersections[ 0 ].point.x;\n\n\t\t\t// build up the path hierarchy\n\t\t\tconst stack = [];\n\t\t\tlet i = 0;\n\n\t\t\twhile ( i < otherIntersections.length && otherIntersections[ i ].point.x < firstXOfPath ) {\n\n\t\t\t\tif ( stack.length > 0 && stack[ stack.length - 1 ] === otherIntersections[ i ].identifier ) {\n\n\t\t\t\t\tstack.pop();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstack.push( otherIntersections[ i ].identifier );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\tstack.push( simplePath.identifier );\n\n\t\t\tif ( _fillRule === 'evenodd' ) {\n\n\t\t\t\tconst isHole = stack.length % 2 === 0 ? true : false;\n\t\t\t\tconst isHoleFor = stack[ stack.length - 2 ];\n\n\t\t\t\treturn { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n\t\t\t} else if ( _fillRule === 'nonzero' ) {\n\n\t\t\t\t// check if path is a hole by counting the amount of paths with alternating rotations it has to cross.\n\t\t\t\tlet isHole = true;\n\t\t\t\tlet isHoleFor = null;\n\t\t\t\tlet lastCWValue = null;\n\n\t\t\t\tfor ( let i = 0; i < stack.length; i ++ ) {\n\n\t\t\t\t\tconst identifier = stack[ i ];\n\t\t\t\t\tif ( isHole ) {\n\n\t\t\t\t\t\tlastCWValue = allPaths[ identifier ].isCW;\n\t\t\t\t\t\tisHole = false;\n\t\t\t\t\t\tisHoleFor = identifier;\n\n\t\t\t\t\t} else if ( lastCWValue !== allPaths[ identifier ].isCW ) {\n\n\t\t\t\t\t\tlastCWValue = allPaths[ identifier ].isCW;\n\t\t\t\t\t\tisHole = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn { identifier: simplePath.identifier, isHole: isHole, for: isHoleFor };\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'fill-rule: \"' + _fillRule + '\" is currently not implemented.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check for self intersecting paths\n\t\t// TODO\n\n\t\t// check intersecting paths\n\t\t// TODO\n\n\t\t// prepare paths for hole detection\n\t\tlet scanlineMinX = BIGNUMBER;\n\t\tlet scanlineMaxX = - BIGNUMBER;\n\n\t\tlet simplePaths = shapePath.subPaths.map( p => {\n\n\t\t\tconst points = p.getPoints();\n\t\t\tlet maxY = - BIGNUMBER;\n\t\t\tlet minY = BIGNUMBER;\n\t\t\tlet maxX = - BIGNUMBER;\n\t\t\tlet minX = BIGNUMBER;\n\n\t      \t//points.forEach(p => p.y *= -1);\n\n\t\t\tfor ( let i = 0; i < points.length; i ++ ) {\n\n\t\t\t\tconst p = points[ i ];\n\n\t\t\t\tif ( p.y > maxY ) {\n\n\t\t\t\t\tmaxY = p.y;\n\n\t\t\t\t}\n\n\t\t\t\tif ( p.y < minY ) {\n\n\t\t\t\t\tminY = p.y;\n\n\t\t\t\t}\n\n\t\t\t\tif ( p.x > maxX ) {\n\n\t\t\t\t\tmaxX = p.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( p.x < minX ) {\n\n\t\t\t\t\tminX = p.x;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scanlineMaxX <= maxX ) {\n\n\t\t\t\tscanlineMaxX = maxX + 1;\n\n\t\t\t}\n\n\t\t\tif ( scanlineMinX >= minX ) {\n\n\t\t\t\tscanlineMinX = minX - 1;\n\n\t\t\t}\n\n\t\t\treturn { curves: p.curves, points: points, isCW: ShapeUtils.isClockWise( points ), identifier: - 1, boundingBox: new Box2( new Vector2( minX, minY ), new Vector2( maxX, maxY ) ) };\n\n\t\t} );\n\n\t\tsimplePaths = simplePaths.filter( sp => sp.points.length > 1 );\n\n\t\tfor ( let identifier = 0; identifier < simplePaths.length; identifier ++ ) {\n\n\t\t\tsimplePaths[ identifier ].identifier = identifier;\n\n\t\t}\n\n\t\t// check if path is solid or a hole\n\t\tconst isAHole = simplePaths.map( p => isHoleTo( p, simplePaths, scanlineMinX, scanlineMaxX, ( shapePath.userData ? shapePath.userData.style.fillRule : undefined ) ) );\n\n\n\t\tconst shapesToReturn = [];\n\t\tsimplePaths.forEach( p => {\n\n\t\t\tconst amIAHole = isAHole[ p.identifier ];\n\n\t\t\tif ( ! amIAHole.isHole ) {\n\n\t\t\t\tconst shape = new Shape();\n\t\t\t\tshape.curves = p.curves;\n\t\t\t\tconst holes = isAHole.filter( h => h.isHole && h.for === p.identifier );\n\t\t\t\tholes.forEach( h => {\n\n\t\t\t\t\tconst hole = simplePaths[ h.identifier ];\n\t\t\t\t\tconst path = new Path();\n\t\t\t\t\tpath.curves = hole.curves;\n\t\t\t\t\tshape.holes.push( path );\n\n\t\t\t\t} );\n\t\t\t\tshapesToReturn.push( shape );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn shapesToReturn;\n\n\t}\n\n\tstatic getStrokeStyle( width, color, lineJoin, lineCap, miterLimit ) {\n\n\t\t// Param width: Stroke width\n\t\t// Param color: As returned by THREE.Color.getStyle()\n\t\t// Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n\t\t// Param lineCap: One of \"round\", \"square\" or \"butt\"\n\t\t// Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n\t\t// Returns style object\n\n\t\twidth = width !== undefined ? width : 1;\n\t\tcolor = color !== undefined ? color : '#000';\n\t\tlineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n\t\tlineCap = lineCap !== undefined ? lineCap : 'butt';\n\t\tmiterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n\t\treturn {\n\t\t\tstrokeColor: color,\n\t\t\tstrokeWidth: width,\n\t\t\tstrokeLineJoin: lineJoin,\n\t\t\tstrokeLineCap: lineCap,\n\t\t\tstrokeMiterLimit: miterLimit\n\t\t};\n\n\t}\n\n\tstatic pointsToStroke( points, style, arcDivisions, minDistance ) {\n\n\t\t// Generates a stroke with some width around the given path.\n\t\t// The path can be open or closed (last point equals to first point)\n\t\t// Param points: Array of Vector2D (the path). Minimum 2 points.\n\t\t// Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n\t\t// Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n\t\t// Param minDistance: Points closer to this distance will be merged. (Optional)\n\t\t// Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tif ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\treturn geometry;\n\n\t}\n\n\tstatic pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset ) {\n\n\t\t// This function can be called to update existing arrays or buffers.\n\t\t// Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n\t\t// Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n\t\t// Returns number of written vertices / normals / uvs pairs\n\t\t// if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n\t\t// 'normals' and 'uvs' buffers are optional\n\n\t\tconst tempV2_1 = new Vector2();\n\t\tconst tempV2_2 = new Vector2();\n\t\tconst tempV2_3 = new Vector2();\n\t\tconst tempV2_4 = new Vector2();\n\t\tconst tempV2_5 = new Vector2();\n\t\tconst tempV2_6 = new Vector2();\n\t\tconst tempV2_7 = new Vector2();\n\t\tconst lastPointL = new Vector2();\n\t\tconst lastPointR = new Vector2();\n\t\tconst point0L = new Vector2();\n\t\tconst point0R = new Vector2();\n\t\tconst currentPointL = new Vector2();\n\t\tconst currentPointR = new Vector2();\n\t\tconst nextPointL = new Vector2();\n\t\tconst nextPointR = new Vector2();\n\t\tconst innerPoint = new Vector2();\n\t\tconst outerPoint = new Vector2();\n\n\t\tarcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n\t\tminDistance = minDistance !== undefined ? minDistance : 0.001;\n\t\tvertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n\t\t// First ensure there are no duplicated points\n\t\tpoints = removeDuplicatedPoints( points );\n\n\t\tconst numPoints = points.length;\n\n\t\tif ( numPoints < 2 ) return 0;\n\n\t\tconst isClosed = points[ 0 ].equals( points[ numPoints - 1 ] );\n\n\t\tlet currentPoint;\n\t\tlet previousPoint = points[ 0 ];\n\t\tlet nextPoint;\n\n\t\tconst strokeWidth2 = style.strokeWidth / 2;\n\n\t\tconst deltaU = 1 / ( numPoints - 1 );\n\t\tlet u0 = 0, u1;\n\n\t\tlet innerSideModified;\n\t\tlet joinIsOnLeftSide;\n\t\tlet isMiter;\n\t\tlet initialJoinIsOnLeftSide = false;\n\n\t\tlet numVertices = 0;\n\t\tlet currentCoordinate = vertexOffset * 3;\n\t\tlet currentCoordinateUV = vertexOffset * 2;\n\n\t\t// Get initial left and right stroke points\n\t\tgetNormal( points[ 0 ], points[ 1 ], tempV2_1 ).multiplyScalar( strokeWidth2 );\n\t\tlastPointL.copy( points[ 0 ] ).sub( tempV2_1 );\n\t\tlastPointR.copy( points[ 0 ] ).add( tempV2_1 );\n\t\tpoint0L.copy( lastPointL );\n\t\tpoint0R.copy( lastPointR );\n\n\t\tfor ( let iPoint = 1; iPoint < numPoints; iPoint ++ ) {\n\n\t\t\tcurrentPoint = points[ iPoint ];\n\n\t\t\t// Get next point\n\t\t\tif ( iPoint === numPoints - 1 ) {\n\n\t\t\t\tif ( isClosed ) {\n\n\t\t\t\t\t// Skip duplicated initial point\n\t\t\t\t\tnextPoint = points[ 1 ];\n\n\t\t\t\t} else nextPoint = undefined;\n\n\t\t\t} else {\n\n\t\t\t\tnextPoint = points[ iPoint + 1 ];\n\n\t\t\t}\n\n\t\t\t// Normal of previous segment in tempV2_1\n\t\t\tconst normal1 = tempV2_1;\n\t\t\tgetNormal( previousPoint, currentPoint, normal1 );\n\n\t\t\ttempV2_3.copy( normal1 ).multiplyScalar( strokeWidth2 );\n\t\t\tcurrentPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\tcurrentPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\tu1 = u0 + deltaU;\n\n\t\t\tinnerSideModified = false;\n\n\t\t\tif ( nextPoint !== undefined ) {\n\n\t\t\t\t// Normal of next segment in tempV2_2\n\t\t\t\tgetNormal( currentPoint, nextPoint, tempV2_2 );\n\n\t\t\t\ttempV2_3.copy( tempV2_2 ).multiplyScalar( strokeWidth2 );\n\t\t\t\tnextPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\t\tnextPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\t\tjoinIsOnLeftSide = true;\n\t\t\t\ttempV2_3.subVectors( nextPoint, previousPoint );\n\t\t\t\tif ( normal1.dot( tempV2_3 ) < 0 ) {\n\n\t\t\t\t\tjoinIsOnLeftSide = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( iPoint === 1 ) initialJoinIsOnLeftSide = joinIsOnLeftSide;\n\n\t\t\t\ttempV2_3.subVectors( nextPoint, currentPoint );\n\t\t\t\ttempV2_3.normalize();\n\t\t\t\tconst dot = Math.abs( normal1.dot( tempV2_3 ) );\n\n\t\t\t\t// If path is straight, don't create join\n\t\t\t\tif ( dot > Number.EPSILON ) {\n\n\t\t\t\t\t// Compute inner and outer segment intersections\n\t\t\t\t\tconst miterSide = strokeWidth2 / dot;\n\t\t\t\t\ttempV2_3.multiplyScalar( - miterSide );\n\t\t\t\t\ttempV2_4.subVectors( currentPoint, previousPoint );\n\t\t\t\t\ttempV2_5.copy( tempV2_4 ).setLength( miterSide ).add( tempV2_3 );\n\t\t\t\t\tinnerPoint.copy( tempV2_5 ).negate();\n\t\t\t\t\tconst miterLength2 = tempV2_5.length();\n\t\t\t\t\tconst segmentLengthPrev = tempV2_4.length();\n\t\t\t\t\ttempV2_4.divideScalar( segmentLengthPrev );\n\t\t\t\t\ttempV2_6.subVectors( nextPoint, currentPoint );\n\t\t\t\t\tconst segmentLengthNext = tempV2_6.length();\n\t\t\t\t\ttempV2_6.divideScalar( segmentLengthNext );\n\t\t\t\t\t// Check that previous and next segments doesn't overlap with the innerPoint of intersection\n\t\t\t\t\tif ( tempV2_4.dot( innerPoint ) < segmentLengthPrev && tempV2_6.dot( innerPoint ) < segmentLengthNext ) {\n\n\t\t\t\t\t\tinnerSideModified = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\touterPoint.copy( tempV2_5 ).add( currentPoint );\n\t\t\t\t\tinnerPoint.add( currentPoint );\n\n\t\t\t\t\tisMiter = false;\n\n\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\tnextPointR.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointR.copy( innerPoint );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tnextPointL.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointL.copy( innerPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// The segment triangles are generated here if there was overlapping\n\n\t\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch ( style.strokeLineJoin ) {\n\n\t\t\t\t\t\tcase 'bevel':\n\n\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'round':\n\n\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t// Join triangles\n\n\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, currentPointL, nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, nextPointR, currentPointR, u1, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'miter':\n\t\t\t\t\t\tcase 'miter-clip':\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconst miterFraction = ( strokeWidth2 * style.strokeMiterLimit ) / miterLength2;\n\n\t\t\t\t\t\t\tif ( miterFraction < 1 ) {\n\n\t\t\t\t\t\t\t\t// The join miter length exceeds the miter limit\n\n\t\t\t\t\t\t\t\tif ( style.strokeLineJoin !== 'miter-clip' ) {\n\n\t\t\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t\t\t// Miter-clip join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointL ).multiplyScalar( miterFraction ).add( currentPointL );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointL ).multiplyScalar( miterFraction ).add( nextPointL );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointR ).multiplyScalar( miterFraction ).add( currentPointR );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointR ).multiplyScalar( miterFraction ).add( nextPointR );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Miter join segment triangles\n\n\t\t\t\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\t\t\t\t// Optimized segment + join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\tnextPointL.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tnextPointR.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Add extra miter join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tisMiter = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// The segment triangles are generated here when two consecutive points are collinear\n\n\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The segment triangles are generated here if it is the ending segment\n\n\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t}\n\n\t\t\tif ( ! isClosed && iPoint === numPoints - 1 ) {\n\n\t\t\t\t// Start line endcap\n\t\t\t\taddCapGeometry( points[ 0 ], point0L, point0R, joinIsOnLeftSide, true, u0 );\n\n\t\t\t}\n\n\t\t\t// Increment loop variables\n\n\t\t\tu0 = u1;\n\n\t\t\tpreviousPoint = currentPoint;\n\n\t\t\tlastPointL.copy( nextPointL );\n\t\t\tlastPointR.copy( nextPointR );\n\n\t\t}\n\n\t\tif ( ! isClosed ) {\n\n\t\t\t// Ending line endcap\n\t\t\taddCapGeometry( currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1 );\n\n\t\t} else if ( innerSideModified && vertices ) {\n\n\t\t\t// Modify path first segment vertices to adjust to the segments inner and outer intersections\n\n\t\t\tlet lastOuter = outerPoint;\n\t\t\tlet lastInner = innerPoint;\n\n\t\t\tif ( initialJoinIsOnLeftSide !== joinIsOnLeftSide ) {\n\n\t\t\t\tlastOuter = innerPoint;\n\t\t\t\tlastInner = outerPoint;\n\n\t\t\t}\n\n\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\tif ( isMiter || initialJoinIsOnLeftSide ) {\n\n\t\t\t\t\tlastInner.toArray( vertices, 0 * 3 );\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\t\tlastOuter.toArray( vertices, 1 * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( isMiter || ! initialJoinIsOnLeftSide ) {\n\n\t\t\t\t\tlastInner.toArray( vertices, 1 * 3 );\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\t\tlastOuter.toArray( vertices, 0 * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn numVertices;\n\n\t\t// -- End of algorithm\n\n\t\t// -- Functions\n\n\t\tfunction getNormal( p1, p2, result ) {\n\n\t\t\tresult.subVectors( p2, p1 );\n\t\t\treturn result.set( - result.y, result.x ).normalize();\n\n\t\t}\n\n\t\tfunction addVertex( position, u, v ) {\n\n\t\t\tif ( vertices ) {\n\n\t\t\t\tvertices[ currentCoordinate ] = position.x;\n\t\t\t\tvertices[ currentCoordinate + 1 ] = position.y;\n\t\t\t\tvertices[ currentCoordinate + 2 ] = 0;\n\n\t\t\t\tif ( normals ) {\n\n\t\t\t\t\tnormals[ currentCoordinate ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 1 ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 2 ] = 1;\n\n\t\t\t\t}\n\n\t\t\t\tcurrentCoordinate += 3;\n\n\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\tuvs[ currentCoordinateUV ] = u;\n\t\t\t\t\tuvs[ currentCoordinateUV + 1 ] = v;\n\n\t\t\t\t\tcurrentCoordinateUV += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnumVertices += 3;\n\n\t\t}\n\n\t\tfunction makeCircularSector( center, p1, p2, u, v ) {\n\n\t\t\t// param p1, p2: Points in the circle arc.\n\t\t\t// p1 and p2 are in clockwise direction.\n\n\t\t\ttempV2_1.copy( p1 ).sub( center ).normalize();\n\t\t\ttempV2_2.copy( p2 ).sub( center ).normalize();\n\n\t\t\tlet angle = Math.PI;\n\t\t\tconst dot = tempV2_1.dot( tempV2_2 );\n\t\t\tif ( Math.abs( dot ) < 1 ) angle = Math.abs( Math.acos( dot ) );\n\n\t\t\tangle /= arcDivisions;\n\n\t\t\ttempV2_3.copy( p1 );\n\n\t\t\tfor ( let i = 0, il = arcDivisions - 1; i < il; i ++ ) {\n\n\t\t\t\ttempV2_4.copy( tempV2_3 ).rotateAround( center, angle );\n\n\t\t\t\taddVertex( tempV2_3, u, v );\n\t\t\t\taddVertex( tempV2_4, u, v );\n\t\t\t\taddVertex( center, u, 0.5 );\n\n\t\t\t\ttempV2_3.copy( tempV2_4 );\n\n\t\t\t}\n\n\t\t\taddVertex( tempV2_4, u, v );\n\t\t\taddVertex( p2, u, v );\n\t\t\taddVertex( center, u, 0.5 );\n\n\t\t}\n\n\t\tfunction makeSegmentTriangles() {\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t}\n\n\t\tfunction makeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t// Optimized segment + bevel triangles\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( innerPoint, u, 0 );\n\t\t\t\t\taddVertex( nextPointR, u, 1 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bevel join triangle. The segment triangles are done in the main loop\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( nextPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointR, u0, 1 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( nextPointR, u0, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addCapGeometry( center, p1, p2, joinIsOnLeftSide, start, u ) {\n\n\t\t\t// param center: End point of the path\n\t\t\t// param p1, p2: Left and right cap points\n\n\t\t\tswitch ( style.strokeLineCap ) {\n\n\t\t\t\tcase 'round':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\tmakeCircularSector( center, p2, p1, u, 0.5 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmakeCircularSector( center, p1, p2, u, 0.5 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'square':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p1, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\t// using tempV2_4 to update 3rd vertex if the uv.y of 3rd vertex is 1\n\t\t\t\t\t\t\tuvs[ 3 * 2 + 1 ] === 1 ? tempV2_4.toArray( vertices, 3 * 3 ) : tempV2_3.toArray( vertices, 3 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p2, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\tconst vl = vertices.length;\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'butt':\n\t\t\t\tdefault:\n\n\t\t\t\t\t// Nothing to do here\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeDuplicatedPoints( points ) {\n\n\t\t\t// Creates a new array if necessary with duplicated points removed.\n\t\t\t// This does not remove duplicated initial and ending points of a closed path.\n\n\t\t\tlet dupPoints = false;\n\t\t\tfor ( let i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) < minDistance ) {\n\n\t\t\t\t\tdupPoints = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! dupPoints ) return points;\n\n\t\t\tconst newPoints = [];\n\t\t\tnewPoints.push( points[ 0 ] );\n\n\t\t\tfor ( let i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) >= minDistance ) {\n\n\t\t\t\t\tnewPoints.push( points[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewPoints.push( points[ points.length - 1 ] );\n\n\t\t\treturn newPoints;\n\n\t\t}\n\n\t}\n\n\n}\n\nexport { SVGLoader };\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * @param  {Array<BufferGeometry>} geometries\n * @param  {Boolean} useGroups\n * @return {BufferGeometry}\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {BufferAttribute}\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.count * itemSize;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst tupleOffset = offset / itemSize;\n\t\t\tfor ( let j = 0, l = attribute.count; j < l; j ++ ) {\n\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tconst value = attribute.getComponent( j, c );\n\t\t\t\t\tresult.setComponent( j + tupleOffset, c, value );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tarray.set( attribute.array, offset );\n\n\t\t}\n\n\t\toffset += attribute.count * itemSize;\n\n\t}\n\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferAttribute} attribute\n * @return {BufferAttribute}\n */\nexport function deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * @param {Array<BufferAttribute>} attributes\n * @return {Array<InterleavedBufferAttribute>}\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n// returns a new, non-interleaved version of the provided attribute\nexport function deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n// deinterleaves all attributes on the geometry\nexport function deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @return {number}\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} tolerance\n * @return {BufferGeometry}\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new attr.constructor(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\tif ( morphAttributes ) {\n\n\t\t\tif ( ! tmpMorphAttributes[ name ] ) tmpMorphAttributes[ name ] = [];\n\t\t\tmorphAttributes.forEach( ( morphAttr, i ) => {\n\n\t\t\t\tconst array = new morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize );\n\t\t\t\ttmpMorphAttributes[ name ][ i ] = new morphAttr.constructor( array, morphAttr.itemSize, morphAttr.normalized );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst halfTolerance = tolerance * 0.5;\n\tconst exponent = Math.log10( 1 / tolerance );\n\tconst hashMultiplier = Math.pow( 10, exponent );\n\tconst hashAdditive = halfTolerance * hashMultiplier;\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * hashMultiplier + hashAdditive ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newArray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewArray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttributes ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttributes.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttributes[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new tmpAttribute.constructor(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new tmpMorphAttribute.constructor(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * @param {BufferGeometry} geometry\n * @param {number} drawMode\n * @return {BufferGeometry}\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n * Helpful for Raytracing or Decals.\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n * @return {Object} An Object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry\n * @param {number} [creaseAngle]\n * @return {BufferGeometry}\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeAttributes,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import * as THREE from 'three'; \nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { IconDimensions } from './IconConstants.js';\nimport { Colors } from '../../diagrams/DiagramConstants.js';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader.js';\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { max } from 'three/tsl';\n\nclass IconShape extends Shape {\n\n    static getGeometries(svgText, size) {\n        let svgLoader = new SVGLoader();\n        let data = svgLoader.parse(svgText);\n        console.log('SVG data:', data);\n\n        let iconGeometries = [];\n        data.paths.forEach((path) => {\n            // // Apply scale transformation to path\n            // path.subPaths.forEach(subPath => {\n            //     const points = subPath.getPoints();\n            //     points.forEach(point => {\n            //         point.multiplyScalar(0.01);\n            //         // Flip vertically by inverting the y-coordinate\n            //         point.y = -point.y;\n            //     });\n            // });\n\n            // Handle fills\n            const fillColor = path.userData.style.fill;\n            if (fillColor !== undefined && fillColor !== 'none') {\n                const shapes = SVGLoader.createShapes(path);\n                shapes.forEach((shape) => {\n                    let geometry = new THREE.ShapeGeometry(shape);\n                    if (geometry.index !== null) {\n                        geometry = geometry.toNonIndexed(); // Ensure geometry is non-indexed\n                    }\n                    iconGeometries.push(geometry);\n                });\n            }\n\n            // Handle strokes if needed\n            const strokeColor = path.userData.style.stroke;\n            if (strokeColor !== undefined && strokeColor !== 'none') {\n                path.subPaths.forEach((subPath) => {\n                    let geometry = SVGLoader.pointsToStroke(\n                        subPath.getPoints(),\n                        path.userData.style\n                    );\n                    if (geometry) {\n                        if (geometry.index !== null) {\n                            geometry = geometry.toNonIndexed(); // Ensure geometry is non-indexed\n                        }\n                        iconGeometries.push(geometry);\n                    }\n                });\n            }\n        });\n\n        // Merge icon geometries\n        const iconGeometry = mergeGeometries(iconGeometries, false); // .center().scale(1, -1, 1);\n        // SVG y coordinates are the inverse of normal cartesian, so correct for this using rotation.\n        iconGeometry.applyMatrix4(new THREE.Matrix4().makeRotationX(Math.PI));\n        // Normalise the size and center point of the icon as different sources have different sizes.\n            // Determine size of icon by bounding box.\n        iconGeometry.computeBoundingBox();\n        const boundingBox = iconGeometry.boundingBox;\n        const maxDimension = Math.max(boundingBox.max.x - boundingBox.min.x, boundingBox.max.y - boundingBox.min.y);\n        console.log('Icon bounding box maxDimension:', maxDimension);\n        const scaleFactor = size / maxDimension;\n            // Determine size of icon by bounding sphere.\n        iconGeometry.computeBoundingSphere();\n        const boundingSphere = iconGeometry.boundingSphere;\n        console.log('Icon bounding sphere:', boundingSphere);\n        // const scaleFactor = size / boundingSphere.radius;\n        // Scale the icon to the desired size\n        iconGeometry.scale(scaleFactor, scaleFactor, 1);\n        iconGeometry.center();\n\n        return iconGeometry;\n    }\n\n    constructor(iconSVG, size = IconDimensions.ICON_SIZE_MEDIUM) {\n        const color = Colors.ELEMENT_TEXT;\n        const iconGeometry = IconShape.getGeometries(iconSVG, size);\n        super(iconGeometry, new DiagramEditMaterial(color));\n\n        console.log('IconShape size:', this.getSize());\n    }\n}\n\nexport { IconShape };\n","import * as THREE from 'three';\n\nclass BarMaterial extends THREE.MeshPhongMaterial {\n  constructor(color) {\n    super({\n      color: color,\n      opacity: 0.5, \n      transparent: true,\n      shininess: 60,\n      specular: 0x666666,\n      emissive: 0x444444,\n      emissiveIntensity: 0.6\n    });\n  }\n}\n\nexport { BarMaterial };","import * as THREE from 'three';\n\nexport const ExtrusionParameters = {\n    steps: 2,\n    depth: 5, // 200,\n    bevelEnabled: true,\n    bevelThickness: .025,  // 1,\n    bevelSize: .075,  // 3,\n    bevelOffset: 0,\n    bevelSegments: 1\n};\n\n// Bar colors ( Material colors: https://www.materialui.co/colors )\nexport const ColorPalette = [\n    new THREE.Color( 0xf44336 ), // red\n    new THREE.Color( 0xE91E63 ), // pink\n    new THREE.Color( 0x9C27B0 ), // purple\n    new THREE.Color( 0x673AB7 ), // deep purple\n    new THREE.Color( 0x3F51B5 ), // indigo\n    new THREE.Color( 0x2196F3 ), // blue\n    new THREE.Color( 0x03A9F4 ), // light blue\n    new THREE.Color( 0x00BCD4 ), // cyan\n    new THREE.Color( 0x009688 ), // teal\n    new THREE.Color( 0x4CAF50 ), // green\n    new THREE.Color( 0x8BC34A ), // light green\n    new THREE.Color( 0xCDDC39 ), // lime\n    new THREE.Color( 0xFFEB3B ), // yellow\n    new THREE.Color( 0xFFC107 ), // amber\n    new THREE.Color( 0xFF9800 ), // orange\n    new THREE.Color( 0xFF5722 ), // deep orange\n    new THREE.Color( 0x795548 ), // brown\n    new THREE.Color( 0x9E9E9E ), // grey\n    new THREE.Color( 0x607D8B )  // blue grey\n];\n","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { BarMaterial } from '../../materials/BarMaterial.js';\nimport { ExtrusionParameters, ColorPalette } from './ValueBarConstants.js';\n\nclass ValueBarShape extends Shape {\n    constructor(shape, height, color) {\n        if (!(shape instanceof THREE.Shape)) {\n            throw new TypeError('shape must be an instance of THREE.Shape');\n        }\n\n        // Use color if provided, otherwise pick a random color from the palette\n        const barColor = color !== undefined ? color : ColorPalette[Math.floor(Math.random() * ColorPalette.length)];\n        // Use height if provided, otherwise pick a random height\n        const barHeight = height !== undefined ? height : Math.floor(Math.random() * 10) + 1;\n        // Extrusion parameters\n        const extrusionParameters = { ...ExtrusionParameters, depth: barHeight };\n\n        var barGeometry = new THREE.ExtrudeGeometry( shape, extrusionParameters );\n\n        // Construct the shape\n        super(barGeometry, new BarMaterial(barColor));\n\n        // this.barHeight = barHeight;\n    }\n\n    // draw(ctx, x, y, width) {\n    //     ctx.fillRect(x, y - this.barHeight, width, this.barHeight);\n    // }\n}\n\nclass ValueBarChart {\n    constructor(bars) {\n        this.bars = bars;\n    }\n\n    draw(ctx, x, y, barWidth, barSpacing) {\n        this.bars.forEach((bar, index) => {\n            const barShape = new ValueBarShape(bar.height);\n            barShape.draw(ctx, x + index * (barWidth + barSpacing), y, barWidth);\n        });\n    }\n}\n\nexport { ValueBarShape, ValueBarChart };\n\n// Example usage:\n// const canvas = document.getElementById('myCanvas');\n// const ctx = canvas.getContext('2d');\n// const bars = [{ height: 100 }, { height: 150 }, { height: 200 }];\n// const barChart = new BarChart(bars);\n// barChart.draw(ctx, 10, 300, 50, 10);\n","export const ConnectorDimensions = {\n    CONNECTOR_LINE_WIDTH: 1, // .1, // (4 / 40),\n    CONNECTOR_OUTER_RADIUS: 10, // .625, // (25 / 40),\n    CONNECTOR_INNER_RADIUS: 8.5, // .525, // (21 / 40),\n    CONNECTOR_ARROWHEAD_WIDTH: 6, // .375, // (15 / 40),\n    CONNECTOR_ARROWHEAD_LENGTH: 14, // .875 // (35 / 90),\n};\n","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { ExtrusionParameters, Colors } from '../../diagrams/DiagramConstants.js';\nimport { ConnectorDimensions } from './ConnectorConstants.js';\n\nclass RoundedCornerOrthogonalConnectorShape extends Shape {\n    constructor(connectorPoints) {\n        const outerRadius = ConnectorDimensions.CONNECTOR_OUTER_RADIUS;\n        const innerRadius = ConnectorDimensions.CONNECTOR_INNER_RADIUS;\n        const lineWidth = ConnectorDimensions.CONNECTOR_LINE_WIDTH;\n        const arrowheadWidth = ConnectorDimensions.CONNECTOR_ARROWHEAD_WIDTH;\n        const arrowheadLength = ConnectorDimensions.CONNECTOR_ARROWHEAD_LENGTH;\n        const width = lineWidth / 2;\n        const color = Colors.ELEMENT_STROKE;\n        const extrudeSettings = ExtrusionParameters;\n\n        var connectorShape = new THREE.Shape();\n\n        // draw the end of the first segment\n        if (connectorPoints[0].y == connectorPoints[1].y\n            && connectorPoints[0].x < connectorPoints[1].x) { // horizontal segment right\n            connectorShape.moveTo(connectorPoints[0].x, connectorPoints[0].y + width);\n            connectorShape.lineTo(connectorPoints[0].x, connectorPoints[0].y - width);\n        }\n        if (connectorPoints[0].y == connectorPoints[1].y\n            && connectorPoints[0].x > connectorPoints[1].x) { // horizontal segment left\n            connectorShape.moveTo(connectorPoints[0].x, connectorPoints[0].y - width);\n            connectorShape.lineTo(connectorPoints[0].x, connectorPoints[0].y + width);\n        }\n        if (connectorPoints[0].x == connectorPoints[1].x\n            && connectorPoints[0].y < connectorPoints[1].y) { // vertical segment up\n            connectorShape.moveTo(connectorPoints[0].x - width, connectorPoints[0].y);\n            connectorShape.lineTo(connectorPoints[0].x + width, connectorPoints[0].y);\n        }\n        if (connectorPoints[0].x == connectorPoints[1].x\n            && connectorPoints[0].y > connectorPoints[1].y) { // vertical segment down\n            connectorShape.moveTo(connectorPoints[0].x + width, connectorPoints[0].y);\n            connectorShape.lineTo(connectorPoints[0].x - width, connectorPoints[0].y);\n        }\n        // draw all segments forward\n        for (var i = 1; i < connectorPoints.length - 1; i++) {\n            if (connectorPoints[i - 1].y == connectorPoints[i].y) { // horizontal\n                if (connectorPoints[i - 1].x < connectorPoints[i].x) { // right\n                    if (connectorPoints[i].y < connectorPoints[i + 1].y) { // right up\n                        connectorShape.lineTo(connectorPoints[i].x + width - outerRadius, connectorPoints[i].y - width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y - width,\n                            connectorPoints[i].x + width, connectorPoints[i].y - width + outerRadius);\n\n                    } else { // right down\n                        connectorShape.lineTo(connectorPoints[i].x - width - innerRadius, connectorPoints[i].y - width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y - width,\n                            connectorPoints[i].x - width, connectorPoints[i].y - width - innerRadius);\n                    }\n                } else { // left\n                    if (connectorPoints[i].y < connectorPoints[i + 1].y) { // left up\n                        connectorShape.lineTo(connectorPoints[i].x + width + innerRadius, connectorPoints[i].y + width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y + width,\n                            connectorPoints[i].x + width, connectorPoints[i].y + width + innerRadius);\n                    } else { // left down\n                        connectorShape.lineTo(connectorPoints[i].x - width + outerRadius, connectorPoints[i].y + width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y - width,\n                            connectorPoints[i].x - width, connectorPoints[i].y + width - outerRadius);\n                    }\n                }\n            }\n            if (connectorPoints[i - 1].x == connectorPoints[i].x) { // vertical\n                if (connectorPoints[i - 1].y < connectorPoints[i].y) { // up\n                    if (connectorPoints[i].x < connectorPoints[i + 1].x) { // up right\n                        connectorShape.lineTo(connectorPoints[i].x + width, connectorPoints[i].y - width - innerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y - width,\n                            connectorPoints[i].x + width + innerRadius, connectorPoints[i].y - width);\n                    } else { // up left\n                        connectorShape.lineTo(connectorPoints[i].x + width, connectorPoints[i].y + width - outerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y + width,\n                            connectorPoints[i].x + width - outerRadius, connectorPoints[i].y + width);\n                    }\n                } else { // down\n                    if (connectorPoints[i].x < connectorPoints[i + 1].x) { // down right\n                        connectorShape.lineTo(connectorPoints[i].x - width, connectorPoints[i].y - width + outerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y - width,\n                            connectorPoints[i].x - width + outerRadius, connectorPoints[i].y - width);\n                    } else { // down left\n                        connectorShape.lineTo(connectorPoints[i].x - width, connectorPoints[i].y + width + innerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y + width,\n                            connectorPoints[i].x - width - innerRadius, connectorPoints[i].y + width);\n                    }\n                }\n            }\n        }\n\n        // draw the last segment\n        if (connectorPoints[connectorPoints.length - 2].y\n            == connectorPoints[connectorPoints.length - 1].y\n            && connectorPoints[connectorPoints.length - 2].x\n            < connectorPoints[connectorPoints.length - 1].x) { // horizontal segment right\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y - width);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadWidth);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x,\n                connectorPoints[connectorPoints.length - 1].y);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y + arrowheadWidth);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y + width);\n        }\n        if (connectorPoints[connectorPoints.length - 2].y\n            == connectorPoints[connectorPoints.length - 1].y\n            && connectorPoints[connectorPoints.length - 2].x\n            > connectorPoints[connectorPoints.length - 1].x) { // horizontal segment left\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y + width);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y + arrowheadWidth);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x,\n                connectorPoints[connectorPoints.length - 1].y);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadWidth);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadLength,\n                connectorPoints[connectorPoints.length - 1].y - width);\n        }\n        if (connectorPoints[connectorPoints.length - 2].x\n            == connectorPoints[connectorPoints.length - 1].x\n            && connectorPoints[connectorPoints.length - 2].y\n            < connectorPoints[connectorPoints.length - 1].y) { // vertical segment up\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + width,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadLength);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadWidth,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadLength);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x,\n                connectorPoints[connectorPoints.length - 1].y);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadWidth,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadLength);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - width,\n                connectorPoints[connectorPoints.length - 1].y - arrowheadLength);\n        }\n        if (connectorPoints[connectorPoints.length - 2].x\n            == connectorPoints[connectorPoints.length - 1].x\n            && connectorPoints[connectorPoints.length - 2].y\n            > connectorPoints[connectorPoints.length - 1].y) { // vertical segment down\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - width,\n                connectorPoints[connectorPoints.length - 1].y + (arrowheadLength * 32/35)); // TODO: Explain why arrow down is shorter 35-32\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x - arrowheadWidth,\n                connectorPoints[connectorPoints.length - 1].y + (arrowheadLength * 32/35));\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x,\n                connectorPoints[connectorPoints.length - 1].y);\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + arrowheadWidth,\n                connectorPoints[connectorPoints.length - 1].y + (arrowheadLength * 32/35));\n            connectorShape.lineTo(connectorPoints[connectorPoints.length - 1].x + width,\n                connectorPoints[connectorPoints.length - 1].y + (arrowheadLength * 32/35));\n        }\n\n        // draw all segments backward\n        for (var i = connectorPoints.length - 2; i > 0; i--) {\n            if (connectorPoints[i + 1].y == connectorPoints[i].y) { // horizontal\n                if (connectorPoints[i + 1].x < connectorPoints[i].x) { // right\n                    if (connectorPoints[i].y < connectorPoints[i - 1].y) { // right up\n                        connectorShape.lineTo(connectorPoints[i].x + width - innerRadius, connectorPoints[i].y - width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y - width,\n                            connectorPoints[i].x + width, connectorPoints[i].y - width + innerRadius);\n                    } else { // right down\n                        connectorShape.lineTo(connectorPoints[i].x - width - innerRadius, connectorPoints[i].y - width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y - width,\n                            connectorPoints[i].x - width, connectorPoints[i].y - width - innerRadius);\n                    }\n                } else { // left\n                    if (connectorPoints[i].y < connectorPoints[i - 1].y) { // left up\n                        connectorShape.lineTo(connectorPoints[i].x + width + innerRadius, connectorPoints[i].y + width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y + width,\n                            connectorPoints[i].x + width, connectorPoints[i].y + width + innerRadius);\n                    } else { // left down\n                        connectorShape.lineTo(connectorPoints[i].x - width + outerRadius, connectorPoints[i].y + width);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y + width,\n                            connectorPoints[i].x - width, connectorPoints[i].y + width - outerRadius);\n                    }\n                }\n            }\n            if (connectorPoints[i + 1].x == connectorPoints[i].x) { // vertical\n                if (connectorPoints[i + 1].y < connectorPoints[i].y) { // up\n                    if (connectorPoints[i].x < connectorPoints[i - 1].x) { // up right\n                        connectorShape.lineTo(connectorPoints[i].x + width, connectorPoints[i].y - width - innerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y - width,\n                            connectorPoints[i].x + width + innerRadius, connectorPoints[i].y - width);\n                    } else { // up left\n                        connectorShape.lineTo(connectorPoints[i].x + width, connectorPoints[i].y + width - outerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x + width, connectorPoints[i].y + width,\n                            connectorPoints[i].x + width - outerRadius, connectorPoints[i].y + width);\n                    }\n                } else { // down\n                    if (connectorPoints[i].x < connectorPoints[i - 1].x) { // down right\n                        connectorShape.lineTo(connectorPoints[i].x - width, connectorPoints[i].y - width + outerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y - width,\n                            connectorPoints[i].x - width + outerRadius, connectorPoints[i].y - width);\n                    } else { // down left\n                        connectorShape.lineTo(connectorPoints[i].x - width, connectorPoints[i].y + width + innerRadius);\n                        connectorShape.quadraticCurveTo(connectorPoints[i].x - width, connectorPoints[i].y + width,\n                            connectorPoints[i].x - width - innerRadius, connectorPoints[i].y + width);\n                    }\n                }\n            }\n        }\n\n        // The last segment\n        if (connectorPoints[0].y == connectorPoints[1].y\n            && connectorPoints[0].x < connectorPoints[1].x) { // horizontal segment right\n            connectorShape.lineTo(connectorPoints[0].x, connectorPoints[0].y + width);\n        }\n        if (connectorPoints[0].y == connectorPoints[1].y\n            && connectorPoints[0].x > connectorPoints[1].x) { // horizontal segment left\n            connectorShape.lineTo(connectorPoints[0].x, connectorPoints[0].y - width);\n        }\n        if (connectorPoints[0].x == connectorPoints[1].x\n            && connectorPoints[0].y < connectorPoints[1].y) { // vertical segment up\n            connectorShape.lineTo(connectorPoints[0].x - width, connectorPoints[0].y);\n        }\n        if (connectorPoints[0].x == connectorPoints[1].x\n            && connectorPoints[0].y > connectorPoints[1].y) { // vertical segment down\n            connectorShape.lineTo(connectorPoints[0].x + width, connectorPoints[0].y);\n        }\n\n        var connectorGeometry = new THREE.ExtrudeGeometry(connectorShape, extrudeSettings);\n\n        // Construct the shape\n        super(connectorGeometry, new DiagramEditMaterial(color));\n    }\n}\n\nexport { RoundedCornerOrthogonalConnectorShape };","import * as THREE from 'three';\nimport { RoundedCornerOrthogonalConnectorShape } from '../shapes/connector/RoundedCornerOrthogonalConnectorShape.js';\n\nclass Connector extends THREE.Mesh {\n    constructor(elementId, \n                shape = new RoundedCornerOrthogonalConnectorShape(), \n                sourceElement = null,\n                targetElement = null,\n                sourcePoint = { x: 0, y: 0 },\n                targetPoint = { x: 2, y: 2 },\n                waypoints = [{ x: 0, y: 1 }, { x: 2, y: 1 }], \n                properties = {}) {\n        super(shape.geometry, shape.material);\n        this.elementId = elementId;\n        this.sourceElement = sourceElement;\n        this.targetElement = targetElement;\n        this.shape = shape;\n        this.points = [sourcePoint, ...waypoints, targetPoint];\n        this.properties = properties;\n    }\n\n    setDiagram(diagram) {\n        this.diagram = diagram;\n    }\n\n    static determinePoints(sourcePoint, targetPoint, sourcePosition, targetPosition) { //TODO: rozbudować o sourcePosition i targetPosition (np. trzyelementowe konektory)\n        let waypoints = [];\n\n        if (sourcePoint.x !== targetPoint.x && sourcePoint.y !== targetPoint.y) {\n            // if source position starts with W or E then use the y coordinate of the source point\n            // and the x coordinate of the target point\n            if (sourcePosition.startsWith('W') || sourcePosition.startsWith('E')) {\n                waypoints.push({ x: targetPoint.x, y: sourcePoint.y });\n            }\n            // if source position starts with N or S then use the x coordinate of the source point\n            // and the y coordinate of the target point\n            if (sourcePosition.startsWith('N') || sourcePosition.startsWith('S')) {\n                waypoints.push({ x: sourcePoint.x, y: targetPoint.y });\n            }\n        }\n\n        return [sourcePoint, ...waypoints, targetPoint];\n    }    \n\n}\n\nexport { Connector };","import * as THREE from 'three';\nimport { BoxShape } from '../shapes/basic/BoxShape.js';\nimport { TextShape } from '../shapes/text/TextShape.js';\nimport { IconShape } from '../shapes/icon/IconShape.js';\nimport { ValueBarShape } from '../shapes/bar/ValueBarShape.js';\nimport { DiagramDimensions } from '../diagrams/DiagramConstants.js';\nimport { IconDimensions } from '../shapes/icon/IconConstants.js';\nimport { Connector } from '../connectors/Connector.js';\nimport { RoundedCornerOrthogonalConnectorShape } from '../shapes/connector/RoundedCornerOrthogonalConnectorShape.js';\n\n/**\n * Represents a diagram element that can be positioned, connected, and decorated with text, icons, and bars.\n * @extends THREE.Mesh\n */\nclass Element extends THREE.Mesh {\n    /**\n     * Creates a new diagram element.\n     * @param {string} elementId - Unique identifier for the element\n     * @param {Shape} [shape=new BoxShape()] - Shape of the element\n     * @param {Object} [positionXY={ x: 0, y: 0 }] - Initial position of the element\n     * @param {number} positionXY.x - X coordinate\n     * @param {number} positionXY.y - Y coordinate\n     */\n    constructor(elementId, \n                shape = new BoxShape(),                // Default shape is BoxShape. Type is Shape (lib/shapes/Shape.js)\n                positionXY = { x: 0, y: 0 } ) {        // Position of the center of the Element\n        super(shape.geometry, shape.material);\n        this.elementId = elementId;\n        this.type = shape.constructor.name; // Derive type from shape's constructor name\n        this.parameters = {}; // Parameters of the element\n        this.shape = shape;\n        this.position.set(positionXY.x, positionXY.y, 0); // Use set method to update position\n        this.width = this.getSize().x;\n        this.height = this.getSize().y;\n        this.texts = [];\n        this.icons = [];\n        this.valueBars = [];\n    }\n\n    /**\n     * Sets the diagram context for this element.\n     * @param {Diagram} diagram - The diagram this element belongs to\n     */\n    setDiagram(diagram) {\n        this.diagram = diagram;\n    }\n    \n    // ================================================================\n    // Element placement methods\n    // ================================================================\n\n    /**\n     * Gets the size of the element's bounding box.\n     * @returns {THREE.Vector3} The size vector containing width, height, and depth\n     */\n    getSize() {\n        const size = new THREE.Vector3();\n        this.shape.geometry.computeBoundingBox();\n        this.shape.geometry.boundingBox.getSize(size);\n        // console.log(`size: ${size.x}, ${size.y}, ${size.z}`);\n        return size;\n    }\n\n    /**\n     * Positions the element and its decorations at the specified coordinates.\n     * @param {Object} position - The position coordinates\n     * @param {number} position.x - X coordinate\n     * @param {number} position.y - Y coordinate\n     * @param {number} [position.z] - Optional Z coordinate\n     * @returns {Element} This element for method chaining\n     */\n    positionAt(position) {\n        if (position.z !== undefined) {\n            this.position.set(position.x, position.y, position.z);\n        } else {\n            this.position.set(position.x, position.y, 0);\n        }\n\n        // Set the position of the element's texts, icons, and bars\n        this.texts.forEach(text => {\n            const offset = text.positionOffset;\n            if (position.z !== undefined) {\n                text.element.position.set(position.x + offset.x, position.y + offset.y, position.z + offset.z);\n            } else {\n                text.element.position.set(position.x + offset.x, position.y + offset.y, offset.z);\n            }\n        });\n        this.icons.forEach(icon => {\n            const offset = icon.positionOffset;\n            if (position.z !== undefined) {\n                icon.element.position.set(position.x + offset.x, position.y + offset.y, position.z + offset.z);\n            } else {\n                icon.element.position.set(position.x + offset.x, position.y + offset.y, offset.z);\n            }\n        });\n        this.valueBars.forEach(bar => {\n            const offset = bar.positionOffset;\n            if (position.z !== undefined) {\n                bar.element.position.set(position.x + offset.x, position.y + offset.y, position.z + offset.z);\n            } else {\n                bar.element.position.set(position.x + offset.x, position.y + offset.y, offset.z);\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Sets the position of the element using individual coordinates.\n     * @param {number} x - X coordinate\n     * @param {number} y - Y coordinate\n     * @param {number} z - Z coordinate\n     * @returns {Element} This element for method chaining\n     */\n    setPosition(x, y, z) {\n        const pos = new THREE.Vector3(x, y, z);\n        this.positionAt(pos);\n        return this;\n    }\n\n    /**\n     * Gets the current position of the element.\n     * @returns {THREE.Vector3} The position vector\n     */\n    getPosition() {\n        return this.position;\n        // return new THREE.Vector3(this.position.x, this.position.y);\n    }\n\n    /**\n     * Positions this element to the right of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionRightOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const thisWidth = this.getSize().x;\n        // console.log(`positionRightOf(${element.elementId}), element.getSize().x: ${element.getSize().x}`);  \n        this.setPosition(element.position.x + elementWidth / 2\n                                + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                + thisWidth / 2, // x\n                            element.position.y, // y\n                            0 ); // z \n        return this;\n    }\n\n    /**\n     * Positions this element to the left of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionLeftOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const thisWidth = this.getSize().x;\n        this.setPosition(element.position.x - elementWidth / 2\n                                - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                - thisWidth / 2, // x\n                            element.position.y, // y\n                            0 ); // z \n        return this;\n    }\n    \n    /**\n     * Positions this element above another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionUpOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementHeight = element.getSize().y;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x, // x\n                          element.position.y + elementHeight / 2 \n                                            + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            + thisHeight / 2, // y\n                          0 ); // z\n        return this;\n    }\n\n    /**\n     * Positions this element below another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionDownOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementHeight = element.getSize().y;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x, // x\n                          element.position.y - elementHeight / 2 \n                                            - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            - thisHeight / 2, // y\n                          0 ); // z\n \n        return this;\n    }\n\n    /**\n     * Positions this element above and to the left of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionUpLeftOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const elementHeight = element.getSize().y;\n        const thisWidth = this.getSize().x;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x - elementWidth / 2\n                                - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                - thisWidth / 2, // x\n                          element.position.y + elementHeight / 2 \n                                            + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            + thisHeight / 2, // y\n                          0 ); // z\n        return this;\n    }\n\n    /**\n     * Positions this element below and to the left of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionDownLeftOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const elementHeight = element.getSize().y;\n        const thisWidth = this.getSize().x;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x - elementWidth / 2\n                                - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                - thisWidth / 2, // x\n                          element.position.y - elementHeight / 2 \n                                            - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            - thisHeight / 2, // y\n                          0 ); // z\n        return this;\n    }\n\n    /**\n     * Positions this element above and to the right of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionUpRightOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const elementHeight = element.getSize().y;\n        const thisWidth = this.getSize().x;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x + elementWidth / 2\n                                + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                + thisWidth / 2, // x\n                          element.position.y + elementHeight / 2 \n                                            + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            + thisHeight / 2, // y\n                          0 ); // z\n        return this;\n    }\n                    \n    /**\n     * Positions this element below and to the right of another element.\n     * @param {string} elementId - ID of the reference element\n     * @returns {Element} This element for method chaining\n     */\n    positionDownRightOf(elementId) {\n        const element = this.diagram.getElementById(elementId);\n        const elementWidth = element.getSize().x;\n        const elementHeight = element.getSize().y;\n        const thisWidth = this.getSize().x;\n        const thisHeight = this.getSize().y;\n        this.setPosition(element.position.x + elementWidth / 2\n                                + DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                + thisWidth / 2, // x\n                          element.position.y - elementHeight / 2 \n                                            - DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS \n                                            - thisHeight / 2, // y\n                          0 ); // z\n        return this;\n    }\n\n       \n    // =================================================================\n    // Determine connecting points positions in geographical manner \n    // (N, S, E, W, NNE, NNW, NEE, NWW, SEE, SWW, SSE, SSW)\n    // for connectors to connect to\n    // ================================================================\n\n    /**\n     * Gets the north connection point of the element.\n     * The point is positioned at the middle of the element's top edge.\n     * @returns {THREE.Vector2} A 2D vector representing the north point coordinates\n     *                         where x is the element's center x-coordinate\n     *                         and y is the element's top edge y-coordinate\n     */\n    getNorthPoint() {\n        return new THREE.Vector2( this.position.x, \n                                  this.position.y + this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the south connection point of the element.\n     * The point is positioned at the middle of the element's bottom edge.\n     * @returns {THREE.Vector2} A 2D vector representing the south point coordinates\n     *                         where x is the element's center x-coordinate\n     *                         and y is the element's bottom edge y-coordinate\n     */\n    getSouthPoint() {\n        return new THREE.Vector2( this.position.x, \n                                  this.position.y - this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the east connection point of the element.\n     * The point is positioned at the middle of the element's right edge.\n     * @returns {THREE.Vector2} A 2D vector representing the east point coordinates\n     *                         where x is the element's right edge x-coordinate\n     *                         and y is the element's center y-coordinate\n     */\n    getEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 2, \n                                  this.position.y );\n    }\n\n    /**\n     * Gets the west connection point of the element.\n     * The point is positioned at the middle of the element's left edge.\n     * @returns {THREE.Vector2} A 2D vector representing the west point coordinates\n     *                         where x is the element's left edge x-coordinate\n     *                         and y is the element's center y-coordinate\n     */\n    getWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 2, \n                                  this.position.y );\n    }\n\n    /**\n     * Gets the north-east connection point of the element.\n     * The point is positioned at the top-right corner of the element.\n     * @returns {THREE.Vector2} A 2D vector representing the north-east point coordinates\n     *                         where x is the element's right edge x-coordinate\n     *                         and y is the element's top edge y-coordinate\n     */\n    getNorthEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 2, \n                                  this.position.y + this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the north-west connection point of the element.\n     * The point is positioned at the top-left corner of the element.\n     * @returns {THREE.Vector2} A 2D vector representing the north-west point coordinates\n     *                         where x is the element's left edge x-coordinate\n     *                         and y is the element's top edge y-coordinate\n     */\n    getNorthWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 2, \n                                  this.position.y + this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the south-east connection point of the element.\n     * The point is positioned at the bottom-right corner of the element.\n     * @returns {THREE.Vector2} A 2D vector representing the south-east point coordinates\n     *                         where x is the element's right edge x-coordinate\n     *                         and y is the element's bottom edge y-coordinate\n     */\n    getSouthEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 2, \n                                  this.position.y - this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the south-west connection point of the element.\n     * The point is positioned at the bottom-left corner of the element.\n     * @returns {THREE.Vector2} A 2D vector representing the south-west point coordinates\n     *                         where x is the element's left edge x-coordinate\n     *                         and y is the element's bottom edge y-coordinate\n     */\n    getSouthWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 2, \n                                  this.position.y - this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the north-north-east connection point of the element.\n     * The point is positioned on the top edge, one-quarter of the width from the center towards the right.\n     * @returns {THREE.Vector2} A 2D vector representing the north-north-east point coordinates\n     *                         where x is the element's center x-coordinate plus one-quarter of the width\n     *                         and y is the element's top edge y-coordinate\n     */\n    getNorthNorthEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 4, \n                                  this.position.y + this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the north-north-west connection point of the element.\n     * The point is positioned on the top edge, one-quarter of the width from the center towards the left.\n     * @returns {THREE.Vector2} A 2D vector representing the north-north-west point coordinates\n     *                         where x is the element's center x-coordinate minus one-quarter of the width\n     *                         and y is the element's top edge y-coordinate\n     */\n    getNorthNorthWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 4, \n                                  this.position.y + this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the north-east-east connection point of the element.\n     * The point is positioned on the right edge, one-quarter of the height from the top.\n     * @returns {THREE.Vector2} A 2D vector representing the north-east-east point coordinates\n     * where x is the element's right edge x-coordinate\n     * and y is the element's top edge y-coordinate plus one-quarter of the height\n     */\n    getNorthEastEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 2, \n                                  this.position.y + this.getSize().y / 4 );\n    }\n\n    /**\n     * Gets the north-west-west connection point of the element.\n     * The point is positioned on the left edge, one-quarter of the height from the top.\n     * @returns {THREE.Vector2} A 2D vector representing the north-west-west point coordinates\n     * where x is the element's left edge x-coordinate\n     * and y is the element's top edge y-coordinate plus one-quarter of the height\n     */\n    getNorthWestWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 2, \n                                  this.position.y + this.getSize().y / 4 );\n    }\n\n    /**\n     * Gets the south-south-east connection point of the element.\n     * The point is positioned on the bottom edge, one-quarter of the width from the center towards the right.\n     * @returns {THREE.Vector2} A 2D vector representing the south-south-east point coordinates\n     * where x is the element's center x-coordinate plus one-quarter of the width\n     * and y is the element's bottom edge y-coordinate\n     */\n    getSouthSouthEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 4, \n                                  this.position.y - this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the south-south-west connection point of the element.\n     * The point is positioned on the bottom edge, one-quarter of the width from the center towards the left.\n     * @returns {THREE.Vector2} A 2D vector representing the south-south-west point coordinates\n     * where x is the element's center x-coordinate minus one-quarter of the width\n     * and y is the element's bottom edge y-coordinate\n     */\n    getSouthSouthWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 4, \n                                  this.position.y - this.getSize().y / 2 );\n    }\n\n    /**\n     * Gets the south-east-east connection point of the element.\n     * The point is positioned on the right edge, one-quarter of the height from the bottom.\n     * @returns {THREE.Vector2} A 2D vector representing the south-east-east point coordinates\n     * where x is the element's right edge x-coordinate\n     * and y is the element's bottom edge y-coordinate plus one-quarter of the height\n     */\n    getSouthEastEastPoint() {\n        return new THREE.Vector2( this.position.x + this.getSize().x / 2, \n                                  this.position.y - this.getSize().y / 4 );\n    }\n\n    /**\n     * Gets the south-west-west connection point of the element.\n     * The point is positioned on the left edge, one-quarter of the height from the bottom.\n     * @returns {THREE.Vector2} A 2D vector representing the south-west-west point coordinates\n     * where x is the element's left edge x-coordinate\n     * and y is the element's bottom edge y-coordinate plus one-quarter of the height\n     */\n    getSouthWestWestPoint() {\n        return new THREE.Vector2( this.position.x - this.getSize().x / 2, \n                                  this.position.y - this.getSize().y / 4 );\n    }\n\n    /**\n     * Gets the position of a connection point on the element.\n     * @param {string} position - Position identifier (N, S, E, W, NE, NW, etc.)\n     * @returns {THREE.Vector2} The connection point coordinates\n     * @throws {Error} If the position identifier is invalid\n     */\n    getPointPosition(position) {\n        switch (position) {\n            case 'N':\n            case 'north':\n                return this.getNorthPoint();\n            case 'S':\n            case 'south':\n                return this.getSouthPoint();\n            case 'E':\n            case 'east':\n                return this.getEastPoint();\n            case 'W':\n            case 'west':\n                return this.getWestPoint();\n            case 'NE':\n            case 'northeast':\n                return this.getNorthEastPoint();\n            case 'NW':\n            case 'northwest':\n                return this.getNorthWestPoint();\n            case 'SE':\n            case 'southeast':\n                return this.getSouthEastPoint();\n            case 'SW':\n            case 'southwest':\n                return this.getSouthWestPoint();\n            case 'NNE':\n            case 'northnortheast':\n                return this.getNorthNorthEastPoint();\n            case 'NNW':\n            case 'northnorthwest':\n                return this.getNorthNorthWestPoint();\n            case 'NEE':\n            case 'northeast':\n                return this.getNorthEastEastPoint();\n            case 'NWW':\n            case 'northwest':\n                return this.getNorthWestWestPoint();\n            case 'SSE':\n            case 'southsoutheast':\n                return this.getSouthSouthEastPoint();\n            case 'SSW':\n            case 'southsouthwest':\n                return this.getSouthSouthWestPoint();\n            case 'SEE':\n            case 'southeast':\n                return this.getSouthEastEastPoint();\n            case 'SWW':\n            case 'southwest':\n                return this.getSouthWestWestPoint();\n            default:\n                throw new Error(`Unknown position: ${position}`);\n        }\n    }\n\n\n    // ================================================================\n    // Add Text methods\n    // ================================================================\n\n    /**\n     * Adds text to the element.\n     * @param {string} text - The text to add\n     * @returns {Element} This element for method chaining\n     */\n    addText(text) {\n        const textElement = new Element(this.elementId + '_text', new TextShape(text));\n        this.diagram.addElement(textElement).positionAt(this.position);\n        this.texts.push({ element: textElement, positionOffset: new THREE.Vector3(0, 0, 0) });\n        return this;\n    }\n\n    /**\n     * Adds wrapped text that fits within the element's bounds.\n     * @param {string} text - The text to add and wrap\n     * @returns {Element} This element for method chaining\n     */\n    addWrappedText(text) {\n        // If text is null or undefined, log a warning and return\n        if (!text) {\n            console.warn('addWrappedText: text is null or undefined');\n            return this;\n        }\n        // If text is not null, add wrapped text\n        let wrappedText = text.replace(/\\s+/g, '\\n');\n\n        let wrappedTextElement = new Element( this.elementId + '_text', new TextShape(wrappedText));\n        let candidateTextElement;\n\n        while (true) {\n            let words = wrappedText.split('\\n');\n            let minLength = Infinity;\n            let minIndex = -1;\n\n            for (let i = 0; i < words.length - 1; i++) {\n                let combinedLength = words[i].length + words[i + 1].length;\n                if (combinedLength < minLength) {\n                    minLength = combinedLength;\n                    minIndex = i;\n                }\n            }\n\n            // console.log('minIndex:', minIndex);\n            if (minIndex === -1) break;\n\n            words[minIndex] = words[minIndex] + ' ' + words[minIndex + 1];\n            words.splice(minIndex + 1, 1);\n            wrappedText = words.join('\\n');\n\n            candidateTextElement = new Element( this.elementId + '_text', new TextShape(wrappedText));\n\n            if (candidateTextElement.getSize().x <= this.getSize().x * .9) {\n                // console.log('FITS INSIDE !');\n                wrappedTextElement = candidateTextElement;\n            } else {\n                break;\n            }\n        }\n\n        this.diagram.addElement(wrappedTextElement)\n            .positionAt({ x: this.position.x, y: this.position.y, z: 3 }); //TODO: Use lib/shapes/bpmn/BpmnConstants.js BpmnDimensions.ACTIVITY_TEXT_SIZE and ACTIVITY_TEXT_ELEVATION\n        // .positionAt(this.position);\n        this.texts.push({ element: wrappedTextElement, positionOffset: new THREE.Vector3(0, 0, 3) });\n        return this;\n    }\n\n    // ================================================================\n    // Add icons methods\n    // ================================================================\n\n    /**\n     * Gets the placeholder position for an icon at the top of the element.\n     * The position is calculated by taking the element's top edge and offsetting it inward\n     * by half the icon size plus padding.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's center x-coordinate\n     *                         and y is the element's top edge y-coordinate minus (icon size/2 + padding)\n     */\n    getTopIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x, \n            this.position.y + this.getSize().y / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the bottom of the element.\n     * The position is calculated by taking the element's bottom edge and offsetting it inward\n     * by half the icon size plus padding.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's center x-coordinate\n     *                         and y is the element's bottom edge y-coordinate plus (icon size/2 + padding)\n     */\n    getBottomIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x, \n            this.position.y - this.getSize().y / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the left of the element.\n     * The position is calculated by taking the element's left edge and offsetting it inward\n     * by half the icon size plus padding.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's left edge x-coordinate plus (icon size/2 + padding)\n     *                         and y is the element's center y-coordinate\n     */\n    getLeftIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x - this.getSize().x / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING, this.position.y);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the right of the element.\n     * The position is calculated by taking the element's right edge and offsetting it inward\n     * by half the icon size plus padding.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's right edge x-coordinate minus (icon size/2 + padding)\n     *                         and y is the element's center y-coordinate\n     */\n    getRightIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x + this.getSize().x / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING, \n            this.position.y);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the top-left corner of the element.\n     * The position is calculated by taking the element's top-left corner and offsetting it inward\n     * by half the icon size plus padding along both axes.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's left edge x-coordinate plus (icon size/2 + padding)\n     *                         and y is the element's top edge y-coordinate minus (icon size/2 + padding)\n     */\n    getTopLeftIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x - this.getSize().x / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING, \n            this.position.y + this.getSize().y / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING\n            );\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the top-right corner of the element.\n     * The position is calculated by taking the element's top-right corner and offsetting it inward\n     * by half the icon size plus padding along both axes.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's right edge x-coordinate minus (icon size/2 + padding)\n     *                         and y is the element's top edge y-coordinate minus (icon size/2 + padding)\n     */\n    getTopRightIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x + this.getSize().x / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING, \n            this.position.y + this.getSize().y / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the bottom-left corner of the element.\n     * The position is calculated by taking the element's bottom-left corner and offsetting it inward\n     * by half the icon size plus padding along both axes.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's left edge x-coordinate plus (icon size/2 + padding)\n     *                         and y is the element's bottom edge y-coordinate plus (icon size/2 + padding)\n     */\n    getBottomLeftIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x - this.getSize().x / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING, \n            this.position.y - this.getSize().y / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the bottom-right corner of the element.\n     * The position is calculated by taking the element's bottom-right corner and offsetting it inward\n     * by half the icon size plus padding along both axes.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's right edge x-coordinate minus (icon size/2 + padding)\n     *                         and y is the element's bottom edge y-coordinate plus (icon size/2 + padding)\n     */\n    getBottomRightIconPlaceholder() {\n        return new THREE.Vector2(\n            this.position.x + this.getSize().x / 2 - IconDimensions.ICON_SIZE_SMALL / 2 - IconDimensions.ICON_PADDING, \n            this.position.y - this.getSize().y / 2 + IconDimensions.ICON_SIZE_SMALL / 2 + IconDimensions.ICON_PADDING);\n    }\n\n    /**\n     * Gets the placeholder position for an icon at the center of the element.\n     * The position is at the element's center.\n     * @returns {THREE.Vector2} A 2D vector representing the placeholder coordinates\n     *                         where x is the element's center x-coordinate\n     *                         and y is the element's center y-coordinate\n     */\n    getCenterIconPlaceholder() {\n        return new THREE.Vector2(this.position.x, this.position.y);\n    }\n\n    /**\n     * Gets the position for an icon placeholder.\n     * @param {string} position - Position identifier (top, bottom, left, right, etc.)\n     * @returns {THREE.Vector2} The placeholder position\n     * @throws {Error} If the position identifier is invalid\n     */\n    getIconPlaceholder(position) {\n        switch (position) {\n            case 'top':\n                return this.getTopIconPlaceholder();\n            case 'bottom':\n                return this.getBottomIconPlaceholder();\n            case 'left':\n                return this.getLeftIconPlaceholder();\n            case 'right':\n                return this.getRightIconPlaceholder();\n            case 'top-left':\n                return this.getTopLeftIconPlaceholder();\n            case 'top-right':\n                return this.getTopRightIconPlaceholder();\n            case 'bottom-left':\n                return this.getBottomLeftIconPlaceholder();\n            case 'bottom-right':\n                return this.getBottomRightIconPlaceholder();\n            case 'center':\n                return this.getCenterIconPlaceholder();\n            default:\n                throw new Error(`Unknown icon position: ${position}`);\n        }\n    }\n\n    /**\n     * Adds an icon to the element.\n     * @param {string} icon - The icon identifier\n     * @param {string} [placeholder='center'] - Position of the icon\n     * @param {number} [size=IconDimensions.ICON_SIZE_MEDIUM] - Size of the icon\n     * @returns {Element} This element for method chaining\n     */\n    addIcon(icon, placeholder = 'center', size = IconDimensions.ICON_SIZE_MEDIUM) {\n        let position;\n        if (typeof placeholder === 'string') {\n            position = this.getIconPlaceholder(placeholder);\n        }\n        const iconElement = new Element(this.elementId + '_icon_placeholder', new IconShape(icon, size));\n        this.diagram.addElement(iconElement).positionAt(position);\n        this.icons.push({ element: iconElement, positionOffset: new THREE.Vector3(position.x - this.position.x, position.y - this.position.y, 0) });\n        return this;\n    }\n\n\n    // ================================================================\n    // Add Analysis methods\n    // ================================================================\n\n    /**\n     * Adds a value bar for analysis mode.\n     * @param {number} value - The value to represent (must be positive)\n     * @returns {Element} This element for method chaining\n     */\n    addValueBar(value) {\n        // Ensure the value is positive\n        if (value < 0) {\n            console.warn('valueBar: Value must be positive');\n            return this;\n        }\n        // Add values to the element parameters\n        this.parameters['value'] = value;\n        console.log('valueBar added:', this);\n        // Draw bars if mode is ANALYZE\n        if (this.diagram.mode !== 'ANALYZE') {\n            console.warn('valueBar: Diagram mode is not ANALYZE');\n            return this;\n        }\n        const barElement = new Element(this.elementId + '_bar', new ValueBarShape(this.shape.getOuterShape(), value));\n        this.diagram.addElement(barElement).positionAt(this.position);\n        this.valueBars.push({ element: barElement, positionOffset: new THREE.Vector3(0, 0, 0) });\n        return this;\n    }\n\n    // ================================================================\n    // Add connecting methods\n    // ================================================================\n\n    /**\n     * Creates a connector from another element to this element.\n     * @param {string} sourceElementId - ID of the source element\n     * @param {string} sourcePosition - Connection point on the source element\n     * @param {string} targetPosition - Connection point on this element\n     * @returns {Element} This element for method chaining\n     * @throws {Error} If the diagram is not set or source element is not found\n     */\n    connectFrom(sourceElementId, sourcePosition, targetPosition) {\n        if (!this.diagram) {\n            throw new Error(\"Diagram is not set for this element.\");\n        }\n\n        const targetElement = this;\n        const sourceElement = this.diagram.getElementById(sourceElementId);\n\n        if (!sourceElement) {\n            throw new Error(`Element with ID ${sourceElementId} not found.`);\n        }\n\n        const sourcePoint = sourceElement.getPointPosition(sourcePosition);\n        const targetPoint = targetElement.getPointPosition(targetPosition);\n\n        const points = Connector.determinePoints(sourcePoint, targetPoint, sourcePosition, targetPosition);\n\n        this.diagram.addConnector(new Connector(`connector-${sourceElement.elementId}-${targetElement.elementId}`, \n            new RoundedCornerOrthogonalConnectorShape(points))); //TODO: Zrobić bardziej ogólnie - nie wiadomo jaki connector wybrać (może flowFrom?)\n\n        return this;\n    }\n\n}\n\nexport { \n    Element\n};\n","export const RoundedRectangleDimensions = {\n    ACTIVITY_HORIZONTAL_SIZE: 100,\n    ACTIVITY_VERTICAL_SIZE: 80,\n    ACTIVITY_CORNER_RADIUS: 10,\n    ACTIVITY_LINE_WIDTH: 1,\n    ACTIVITY_TEXT_SIZE: 8,\n    ACTIVITY_TEXT_ELEVATION: 3\n};\n    \nexport const CircleDimensions = {\n    EVENT_RADIUS: 18,\n    START_EVENT_LINE_WIDTH: 1, \n    END_EVENT_LINE_WIDTH: 2.4, \n    EVENT_TEXT_SIZE: 7,\n    EVENT_TEXT_ELEVATION: 3\n};\n\nexport const DiamondDimensions = {\n    GATEWAY_DIAGONAL: 48,\n    GATEWAY_LINE_WIDTH: 1,\n    GATEWAY_TEXT_SIZE: 7,\n    GATEWAY_TEXT_ELEVATION: 3\n};\n","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { CircleDimensions } from './BasicShapeConstants.js';\nimport { ExtrusionParameters, Colors } from '../../diagrams/DiagramConstants.js';\n\nclass CircleShape extends Shape {\n    constructor(lineWidth = CircleDimensions.START_EVENT_LINE_WIDTH) {\n\n        const eventRadius = CircleDimensions.EVENT_RADIUS;\n        const color = Colors.ELEMENT_STROKE;\n        const extrusionParameters = ExtrusionParameters;\n\n        function circle( ctx, radius ) {\n            const centerX = 0;\n            const centerY = 0;\n            var controlPointDistance = radius * 0.552284749831  // (4/3)*tan(pi/2n) for n=4 points\n            ctx.moveTo( centerX, centerY - radius );\n            ctx.bezierCurveTo(  centerX + controlPointDistance, centerY - radius,\n                                centerX + radius, centerY - controlPointDistance,\n                                centerX + radius, centerY );\n            ctx.bezierCurveTo(  centerX + radius, centerY + controlPointDistance,\n                                centerX + controlPointDistance, centerY + radius,\n                                centerX, centerY + radius );\n            ctx.bezierCurveTo(  centerX - controlPointDistance, centerY + radius,\n                                centerX - radius, centerY + controlPointDistance,\n                                centerX - radius, centerY );\n            ctx.bezierCurveTo(  centerX - radius, centerY - controlPointDistance,\n                                centerX - controlPointDistance, centerY - radius,\n                                centerX, centerY - radius );\n        }\n\n        // Prepare event mesh\n        var eventShape = new THREE.Shape();\n        circle( eventShape, eventRadius );\n        const outerShape = eventShape.clone(); // Create a deep copy of the outer shape to save it for later use without holes\n        var eventHole = new THREE.Path();\n        circle( eventHole, eventRadius - lineWidth );\n        eventShape.holes.push( eventHole );\n\n        var eventGeometry = new THREE.ExtrudeGeometry( eventShape, extrusionParameters );\n\n        // Construct the shape\n        super( eventGeometry, new DiagramEditMaterial( color ) );\n\n        this.outerShape = outerShape;\n\n    }\n\n    getOuterShape() {\n        return this.outerShape;\n    }\n}\n\nexport { CircleShape };\n","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { RoundedRectangleDimensions } from './BasicShapeConstants.js';\nimport { ExtrusionParameters, Colors } from '../../diagrams/DiagramConstants.js';\n\nclass RoundedRectangleShape extends Shape {\n    constructor() {\n\n        const horizontalSize = RoundedRectangleDimensions.ACTIVITY_HORIZONTAL_SIZE;\n        const verticalSize = RoundedRectangleDimensions.ACTIVITY_VERTICAL_SIZE;\n        const lineWidth = RoundedRectangleDimensions.ACTIVITY_LINE_WIDTH;\n        const cornerRadius = RoundedRectangleDimensions.ACTIVITY_CORNER_RADIUS;\n        // Calculate the outer and inner radius of the rounded rectangle based on the corner radius and line width\n        const outerRadius = cornerRadius;\n        const innerRadius = cornerRadius - lineWidth;\n        const color = Colors.ELEMENT_STROKE;\n        const extrusionParameters = ExtrusionParameters;\n\n        function roundedRect( ctx, width, height, radius ) {\n            const centerX = 0;\n            const centerY = 0;\n            var x = centerX - ( width / 2 );\n            var y = centerY - ( height / 2 );\n            ctx.moveTo( x + radius, y );\n            ctx.lineTo( x + width - radius, y );\n            ctx.quadraticCurveTo( x + width, y, x + width, y + radius );\n            ctx.lineTo( x + width, y + height - radius );\n            ctx.quadraticCurveTo( x + width, y + height, x + width - radius, y + height );\n            ctx.lineTo( x + radius, y + height );\n            ctx.quadraticCurveTo( x, y + height, x, y + height - radius );\n            ctx.lineTo( x, y + radius );\n            ctx.quadraticCurveTo( x, y, x + radius, y );\n        }\n\n        var activityShape = new THREE.Shape();\n        roundedRect(activityShape, horizontalSize, verticalSize, outerRadius);\n        const outerShape = activityShape.clone(); // Create a deep copy of the outer shape to save it for later use without holes\n        var activityHole = new THREE.Path();\n        roundedRect(activityHole, horizontalSize - (2 * lineWidth), verticalSize - (2 * lineWidth), innerRadius);\n        activityShape.holes.push(activityHole);\n\n        var activityGeometry = new THREE.ExtrudeGeometry(activityShape, extrusionParameters);\n\n        // Construct the shape\n        super(activityGeometry, new DiagramEditMaterial(color));\n\n        this.outerShape = outerShape;\n\n    }\n\n    getOuterShape() {\n        return this.outerShape;\n    }\n}\n\nexport { RoundedRectangleShape };\n\n\n\n\n// import * as TWEEN from '@tweenjs/tween.js';\n// import * as THREE from '../../../../../../../../home/robert/.cache/typescript/5.7/node_modules/@types/three';\n// import { elementMaterial, Text, Background, Bar, selectedMaterial } from '../../bpmnElements';\n\n// //ACTIVITY shape\n// function Activity( diagram, centerX, centerY, lineWidth, text ) {\n\n//     this.centerX = centerX;\n//     this.centerY = centerY;\n//     this.lineWidth = lineWidth;\n//     this.text = text;\n//     var decorations = [];\n//     this.decorations = decorations;\n\n//     var horizontalSize = 350;\n//     var verticalSize = 200;\n//     var outerRadius = 27;\n//     var innerRadius = 21;\n\n//     this.selected = false;\n\n\n//     function roundedRect( ctx, centerX, centerY, width, height, radius ) {\n//         var x = Math.round( centerX - ( width / 2 ) );\n//         var y = Math.round( centerY - ( height / 2 ) );\n//         ctx.moveTo( x + radius, y );\n//         ctx.lineTo( x + width - radius, y );\n//         ctx.quadraticCurveTo( x + width, y, x + width, y + radius );\n//         ctx.lineTo( x + width, y + height - radius );\n//         ctx.quadraticCurveTo( x + width, y + height, x + width - radius, y + height );\n//         ctx.lineTo( x + radius, y + height );\n//         ctx.quadraticCurveTo( x, y + height, x, y + height - radius );\n//         ctx.lineTo( x, y + radius );\n//         ctx.quadraticCurveTo( x, y, x + radius, y );\n//     }\n\n//     var activityMesh;\n\n//     // prepare activity mesh\n//     var activityShape = new THREE.Shape();\n//     roundedRect( activityShape, centerX, centerY, horizontalSize, verticalSize, outerRadius );\n//     var activityHole = new THREE.Path();\n//     roundedRect( activityHole, centerX, centerY, horizontalSize - ( 2 * lineWidth ), verticalSize - ( 2 * lineWidth ), innerRadius );\n//     activityShape.holes.push( activityHole );\n//     // var activityGeometry = new THREE.ShapeGeometry( activityShape );\n\n//     var extrudeSettings = {\n//         steps: 2,\n//         amount: 4,\n//         bevelEnabled: true,\n//         bevelThickness: .5,\n//         bevelSize: 1,\n//         bevelSegments: 4\n//     };\n//     var activityGeometry = new THREE.ExtrudeGeometry( activityShape, extrudeSettings );\n\n//     activityMesh = new THREE.Mesh ( activityGeometry, elementMaterial );\n\n//     this.mesh = activityMesh;\n\n//     // add activity name (text)\n//     decorations[ 0 ] = new Text( diagram, centerX, centerY, text, 30, 0 );\n\n//     // add activity background\n//     var backgroundShape = new THREE.Shape();\n//     roundedRect( backgroundShape, centerX, centerY, horizontalSize, verticalSize, outerRadius );\n//     decorations[ 1 ] = new Background( backgroundShape, -1 );\n\n//     // add activity bar\n//     var barShape = new THREE.Shape();\n//     roundedRect( barShape, centerX, centerY, horizontalSize, verticalSize, outerRadius );\n//     decorations[ 2 ] = new Bar( barShape );\n\n\n//     this.select = function() {\n//         this.selected = true;\n//         this.mesh.material = selectedMaterial;\n//         // select decorations (loop)\n// //        for ( i = 0; i < decorations.length; i++ ) {\n// //            this.decorations[ i ].mesh.material = selectedMaterial;\n// //        }\n//     }\n\n//     this.deselect = function() {\n//         this.selected = false;\n//         activityMesh.material = elementMaterial;\n//         //deselect decorations\n// //        for ( i = 0; i < decorations.length; i++ ) {\n// //            decorations[ i ].mesh.material = elementMaterial;\n// //        }\n//     }\n\n//     this.getDecorations = function() {\n//         return decorations;\n//     }\n\n//     this.showParameter = function( value, color ) {\n\n//         decorations[ 2 ].mesh.scale.z = 0;\n//         decorations[ 2 ].mesh.visible = true;\n//         decorations[ 2 ].mesh.material.color.set( color );\n\n//         //animate bars\n//         var from = { scale: 0 };\n//         var to = { scale: value/100 };\n//         var tween = new TWEEN.Tween( from )\n//             .to ( to, 500 )\n//             .onUpdate( function () {\n//                 decorations[ 2 ].mesh.scale.z = from.scale;\n//             } )\n//             .start();\n\n//     };\n\n//     this.hideParameter = function() {\n//         this.decorations[ 2 ].mesh.visible = false;\n//     }\n\n// }","import * as THREE from 'three';\nimport { Shape } from '../Shape.js';\nimport { DiagramEditMaterial } from '../../materials/DiagramEditMaterial.js';\nimport { DiamondDimensions } from './BasicShapeConstants.js';\nimport { ExtrusionParameters, Colors } from '../../diagrams/DiagramConstants.js';\n\nclass DiamondShape extends Shape {\n    constructor() {\n\n        const diagonal = DiamondDimensions.GATEWAY_DIAGONAL;\n        const lineWidth = DiamondDimensions.GATEWAY_LINE_WIDTH;\n        const color = Colors.ELEMENT_STROKE;\n        const extrusionParameters = ExtrusionParameters;\n     \n        function diamond( ctx, verticalSize, horizontalSize ) {\n            const centerX = 0;\n            const centerY = 0;\n            // (!) Specify your points in counterclockwise winding order.\n            ctx.moveTo( centerX - verticalSize / 2, centerY );\n            ctx.lineTo( centerX, centerY - verticalSize / 2 );\n            ctx.lineTo( centerX + horizontalSize / 2 , centerY);\n            ctx.lineTo( centerX, centerY + verticalSize / 2 );\n            ctx.lineTo( centerX - horizontalSize / 2, centerY );\n        }\n\n        // Prepare gateway mesh \n        var gatewayShape = new THREE.Shape();\n        diamond( gatewayShape, diagonal, diagonal);\n        const outerShape = gatewayShape.clone(); // Save the outer shape for later use\n        var gatewayHole = new THREE.Path();\n        diamond( gatewayHole, diagonal - ( lineWidth * Math.sqrt(2) * 2 ), diagonal - ( lineWidth * Math.sqrt(2) * 2 ) );\n        gatewayShape.holes.push(gatewayHole);\n\n        var gatewayGeometry = new THREE.ExtrudeGeometry( gatewayShape, extrusionParameters );\n\n        // Construct the shape\n        super(gatewayGeometry, new DiagramEditMaterial(color));\n\n        this.outerShape = outerShape;\n\n    }\n\n    getOuterShape() {\n        return this.outerShape;\n    }\n}\n\nexport { DiamondShape };\n\n\n\n\n\n\n\n\n//GATEWAY shape\n// function Gateway( diagram, centerX, centerY, lineWidth, type, text ) {\n\n//     var diagonal = 120;\n\n//     this.centerX = centerX;\n//     this.centerY = centerY;\n//     this.lineWidth = lineWidth;\n//     this.verticalSize = diagonal;\n//     this.horizontalSize = diagonal;\n//     this.selected = false;\n//     var decorations = [];\n//     this.decorations = decorations;\n\n\n//     function diamond( ctx, centerX, centerY, verticalSize, horizontalSize ) {\n//         // (!) Specify your points in counterclockwise winding order.\n//         ctx.moveTo( centerX - Math.round( verticalSize / 2 ), centerY );\n//         ctx.lineTo( centerX, centerY - Math.round( verticalSize / 2 ) );\n//         ctx.lineTo( centerX + Math.round( horizontalSize / 2 ), centerY);\n//         ctx.lineTo( centerX, centerY + Math.round( verticalSize / 2 ) );\n//         ctx.lineTo( centerX - Math.round( horizontalSize / 2 ), centerY );\n//     }\n\n//     // prepare gateway mesh\n//     var gatewayMesh;\n//     var gatewayShape = new THREE.Shape();\n//     diamond( gatewayShape, centerX, centerY, diagonal, diagonal );\n//     var gatewayHole = new THREE.Path();\n//     diamond( gatewayHole, centerX, centerY, diagonal - ( lineWidth * Math.sqrt(2) * 2 ),\n//                                             diagonal - ( lineWidth * Math.sqrt(2) * 2 ) );\n//     gatewayShape.holes.push(gatewayHole);\n//     // var gatewayGeometry = new THREE.ShapeGeometry(gatewayShape);\n\n//     var extrudeSettings = {\n//         steps: 2,\n//         amount: 4,\n//         bevelEnabled: true,\n//         bevelThickness: .5,\n//         bevelSize: 1,\n//         bevelSegments: 4\n//     };\n//     var gatewayGeometry = new THREE.ExtrudeGeometry( gatewayShape, extrudeSettings );\n\n//     gatewayMesh = new THREE.Mesh( gatewayGeometry, elementMaterial );\n//     this.mesh = gatewayMesh;\n\n//     // fill gateway with symbol\n//     switch (type) {\n//         case     CONST_GATEWAY_TYPES.EXCLUSIVE:\n//             decorations[ 0 ] = new Text( diagram, centerX, centerY, \"X\", 50, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.EXCLUSIVE\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.EVENT_BASED:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY - 27, \".\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.EVENT_BASED\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.PARALLEL:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY, \"+\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.PARALLEL\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.INCLUSIVE:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY - 27, \".\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.INCLUSIVE\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.COMPLEX:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY - 27, \".\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.COMPLEX\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.EXCLUSIVE_EVENT_BASED:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY - 27, \".\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.EXCLUSIVE_EVENT_BASED\");\n//             break;\n//         case     CONST_GATEWAY_TYPES.PARALLEL_EVENT_BASED:\n//             decorations[ 0 ] = new Text( diagram, centerX - 2, centerY - 27, \".\", 70, 0 );\n//             console.log(\"CONST_GATEWAY_TYPES.PARALLEL_EVENT_BASED\");\n//             break;\n//     }\n\n//     // add gateway background\n//     var backgroundShape = new THREE.Shape();\n//     diamond( backgroundShape, centerX, centerY, diagonal, diagonal );\n//     decorations[ 1 ] = new Background( backgroundShape, -1 );\n\n//     this.select = function() {\n//         this.selected = true;\n//         this.mesh.material = selectedMaterial;\n//         // select decorations (loop)\n// //        for ( i = 0; i < decorations.length; i++ ) {\n// //            this.decorations[ i ].mesh.material = selectedMaterial;\n// //        }\n//     }\n\n//     this.deselect = function() {\n//         this.selected = false;\n//         this.mesh.material = elementMaterial;\n//         //deselect decorations (loop)\n// //        for ( i = 0; i < decorations.length; i++ ) {\n// //            decorations[ i ].mesh.material = elementMaterial;\n// //        }\n//     }\n\n//     this.getDecorations = function() {\n//         return decorations;\n//     }\n\n//     this.showParameter = function( value, color ) {\n//     };\n\n//     this.hideParameter = function() {\n//     }\n\n// }","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg2\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   height=\\\"2000\\\"\\n   width=\\\"2000\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     transform=\\\"translate(0,947.63784)\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       id=\\\"path4135\\\"\\n       transform=\\\"translate(0,-947.63784)\\\"\\n       d=\\\"M 919.37891 382.98828 C 897.07985 382.99534 876.42602 391.24619 858.8125 402.60352 L 858.7832 402.62109 L 858.75586 402.64062 C 764.06211 463.96011 439.8885 688.93075 368.62891 737.8418 L 368.62695 737.84375 L 368.625 737.84375 C 304.25376 782.03986 260.89214 848.74751 235.96289 927.7793 L 235.95898 927.79492 L 235.95508 927.80859 C 210.0027 1010.3241 213.33304 1100.2119 213.58398 1175.4941 L 213.58594 1175.5137 L 213.58594 1175.5332 C 213.84074 1232.2188 215.19212 1281.6884 229.89453 1341.6816 C 229.89553 1341.6866 229.89744 1341.692 229.89844 1341.6973 C 251.2713 1429.4993 292.66639 1493.0333 351.12891 1531.9824 C 409.58875 1570.9297 481.74302 1584.75 562.70312 1585 C 854.98652 1586.0972 1147.4442 1586.4897 1439.8848 1585 L 1439.9102 1585 L 1439.9355 1585 C 1472.1442 1584.7888 1502.8949 1571.2476 1522.0703 1547.3223 C 1541.2443 1523.3988 1549.087 1492.4573 1549.5 1458.5117 C 1549.7909 1435.7437 1546.5893 1414.2247 1539.1934 1395 L 1571.5684 1395 C 1603.0995 1395 1632.0021 1386.016 1652.7207 1367.084 C 1673.4323 1348.1584 1684.0251 1322.4631 1689.5293 1295.4043 L 1689.5293 1295.3965 C 1697.2116 1257.7567 1693.5837 1220.59 1678.6133 1189.4004 C 1711.5589 1186.7389 1740.6465 1174.2976 1759.3535 1151.4941 C 1780.3767 1125.8673 1786.5009 1093.2887 1786.6094 1058.7734 C 1786.7238 1022.74 1777.9802 988.35302 1757.7969 961.00781 C 1737.6137 933.6626 1704.0255 915.05176 1666.2305 914.99805 L 1666.2207 914.99805 L 1666.209 914.99805 C 1652.4498 914.98657 1640.0493 915.00635 1624.4277 914.99805 C 1631.9444 896.25389 1635.2488 875.17154 1635.1797 852.99219 L 1635.1797 852.93555 L 1635.1797 852.87891 C 1634.9519 817.10655 1625.9288 782.92541 1605.6445 755.75195 C 1585.3606 728.57897 1551.8364 709.9987 1514.0586 709.99805 C 1289.6388 709.11253 1067.8072 712.155 879.15625 711.20117 C 888.98683 701.31624 898.53379 691.67619 909.02734 681.24023 C 941.50862 648.93721 972.72655 618.49752 988.85352 597.62891 C 1027.4086 548.00648 1033.1613 480.77723 1000.7031 431.32422 C 983.59029 405.18088 958.49595 387.49228 931.55273 383.81055 C 928.18377 383.35019 924.8448 383.0899 921.54102 383.01172 L 921.54102 383.01367 C 920.81831 382.99657 920.09823 382.98805 919.37891 382.98828 z M 919.92578 453.01562 C 920.69385 453.02416 921.41106 453.07733 922.07422 453.16797 C 927.37949 453.89292 933.05983 455.78817 942.14453 469.67383 L 942.16211 469.69922 L 942.17773 469.72461 C 954.86945 489.05096 954.30896 528.02989 933.55469 554.7168 L 933.51953 554.76172 L 933.48438 554.80664 C 925.93786 564.57639 892.03049 599.42252 859.66602 631.60938 C 827.30154 663.79624 796.53208 693.50491 781.30859 712.05078 C 766.75168 729.78466 772.09283 744.6981 776.04102 754.0332 C 779.9892 763.3683 784.5057 774.26988 804.63867 779.05273 C 810.66655 780.48469 810.99854 780.07253 812.92773 780.20508 C 814.85693 780.33763 816.85106 780.42902 819.19531 780.51367 C 823.88381 780.68297 829.88273 780.81106 837.28906 780.91992 C 1063.754 782.29908 1287.7116 779.67931 1513.998 780 L 1514.0293 780 L 1514.0605 780 C 1531.2724 780 1540.6175 785.65704 1549.5527 797.62695 C 1558.482 809.58885 1565.0212 829.44025 1565.1816 853.2793 C 1565.2476 878.00948 1559.325 893.09925 1552.125 901.41211 C 1544.925 909.72493 1535.2797 914.9327 1514.6504 915 L 1030 915 L 1030 985 L 1514.7422 985 L 1514.791 985 C 1581.2694 985.0062 1616.3318 984.95843 1666.1543 985 C 1683.4616 985.02951 1692.6831 990.66165 1701.4785 1002.5781 C 1710.2778 1014.4998 1716.688 1034.4049 1716.6113 1058.5527 L 1716.6113 1058.5547 C 1716.5303 1084.3774 1711.2652 1099.7505 1705.2363 1107.0996 C 1699.2075 1114.4487 1690.5982 1119.8316 1665.7539 1120.002 C 1657.3241 1120.0598 1596.946 1120.0156 1571.8906 1120.0449 C 1571.4936 1120.0399 1571.105 1120.0032 1570.707 1120.002 C 1390.4805 1119.1514 1210.2524 1120 1030.0254 1120 L 1030 1120 L 1029.9746 1190 L 1030 1190 C 1030.043 1190 1412.5167 1190.2386 1571.3301 1190.0469 C 1591.0301 1190.326 1602.841 1198.2575 1612.2637 1213.6484 C 1621.8272 1229.2694 1626.5869 1253.7579 1620.9434 1281.4043 L 1620.9434 1281.418 L 1620.9434 1281.4316 C 1617.207 1299.8121 1611.5308 1309.9046 1605.5078 1315.4082 C 1599.4848 1320.9118 1591.1733 1325 1571.5742 1325 C 1391.0507 1324.9139 1210.5297 1324.5478 1030.0059 1325 L 1029.9141 1325 L 1030.0059 1395 L 1030.0977 1395 L 1439.4043 1395 L 1439.4199 1395 C 1454.127 1395.0958 1460.6667 1399.0084 1467.3809 1407.9766 C 1474.0951 1416.9447 1479.8203 1433.619 1479.5117 1457.6289 L 1479.5117 1457.6426 L 1479.5117 1457.6543 C 1479.2276 1481.0659 1473.56 1495.9259 1467.4551 1503.543 C 1461.3503 1511.16 1455.0501 1514.8999 1439.4824 1515.002 C 1147.359 1516.4898 855.12644 1516.0987 562.97266 1515.002 L 562.95898 1515.002 L 562.94727 1515.002 C 489.89431 1514.7789 432.49137 1502.0704 389.94727 1473.7266 C 347.39676 1445.3826 316.33958 1400.8581 297.9082 1325.1289 L 297.90039 1325.0996 L 297.89453 1325.0703 C 285.02432 1272.5777 283.83532 1231.06 283.58398 1175.2598 L 283.58398 1175.2188 C 283.32833 1098.6482 281.8595 1015.1692 302.73047 948.81055 C 324.12233 881.00932 358.71817 829.5583 408.24219 795.55469 L 408.24609 795.55273 C 480.37064 746.04796 806.47508 519.89392 896.74609 461.43359 L 896.75 461.43164 C 905.22608 455.9669 912.24926 453.64295 917.46875 453.12891 C 918.3388 453.04322 919.15772 453.00709 919.92578 453.01562 z \\\"\\n       style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg2\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   height=\\\"2000\\\"\\n   width=\\\"2000\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     style=\\\"display:inline\\\"\\n     id=\\\"layer9\\\">\\n    <path\\n       id=\\\"path8979-3\\\"\\n       d=\\\"M 991.75,365 C 814.47261,365 687.65259,501.28069 687.29688,656.51367 l 0,0.0449 0,0.043 c 0.0112,46.94485 12.71406,96.48986 32.56054,141.17774 14.33025,32.26709 32.14702,61.93151 53.85742,85.69531 C 644.68593,927.61788 493.52222,1000.2699 417.11719,1143.5293 L 413,1151.25 l 0,463.75 1157.5,0 0,-463.75 -4.1172,-7.7207 c -75.3061,-141.1989 -223.1988,-213.74978 -350.9805,-258.07618 62.3794,-63.43263 80.7808,-145.30578 80.8008,-228.85156 l 0,-0.043 0,-0.0449 C 1295.8474,501.2807 1169.0274,365 991.75,365 Z M 870.70898,530.29883 c 8.19443,0.0206 17.19117,0.29432 27.10938,0.8789 79.02308,4.65771 105.61894,18.88222 126.06254,32.37305 20.4435,13.49083 34.8553,26.33317 88.8828,27.9082 l 0.016,0 0.018,0 c 42.1017,-1.5748 62.3491,-9.0811 76.8691,-17.58398 5.8837,-3.44545 10.8241,-7.02722 15.8867,-10.44727 13.3814,28.68227 20.5671,60.38893 20.6485,93.20313 -0.028,93.43999 -16.0919,158.87652 -101.7676,212.42383 l 8.3809,63.16992 c 17.8327,5.41537 36.2658,11.35733 54.9746,17.87305 2.6128,10.90011 5.6316,25.19633 7.6621,40.39453 2.1271,15.92241 2.9637,32.48881 1.6523,44.92771 -1.3114,12.4389 -5.1734,19.1539 -5.8515,19.8321 -43.5469,43.5468 -120.8464,68.9433 -199.252,68.9433 -78.40557,0 -155.70507,-25.3965 -199.25195,-68.9433 -0.67811,-0.6782 -4.54017,-7.3932 -5.85157,-19.8321 -1.31139,-12.4389 -0.47481,-29.0053 1.65235,-44.92771 2.04162,-15.28211 5.08445,-29.66261 7.70703,-40.58399 18.52194,-6.44112 36.76978,-12.32071 54.42969,-17.68359 l 4.99609,-67.6875 c -4.068,-5.21708 -8.21297,-8.67324 -13.16016,-12.38477 -19.12128,-14.34532 -42.30994,-45.90379 -58.68945,-82.78515 -16.37367,-36.86821 -26.51791,-79.00946 -26.5332,-112.74414 0.10174,-40.44431 10.98577,-79.211 30.97656,-112.69727 3.57689,-1.33139 7.34871,-2.73853 11.58789,-4.13281 14.90781,-4.90324 35.33655,-9.58342 70.8457,-9.49414 z M 719.36133,979.85547 c -0.0629,0.45883 -0.13379,0.90664 -0.19531,1.36719 -2.58689,19.36354 -4.10696,40.44054 -1.88282,61.53714 2.22414,21.0966 7.79068,43.8102 25.96875,61.9882 62.04773,62.0478 155.95092,89.4473 248.74805,89.4473 92.7971,0 186.7003,-27.3995 248.748,-89.4473 18.1781,-18.178 23.7447,-40.8916 25.9688,-61.9882 2.2241,-21.0967 0.7041,-42.1736 -1.8828,-61.53714 -0.051,-0.38161 -0.1102,-0.75238 -0.1621,-1.13282 94.3337,41.36896 185.5148,100.61546 235.8281,189.07426 l 0,375.8359 -167.5,0 0,-265 -70,0 0,265 -544,0 0,-265 -70,0 0,265 -166,0 0,-375.8359 c 50.40811,-88.6256 141.83798,-147.9292 236.36133,-189.30863 z\\\"\\n       style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:2.29999995;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg2\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   height=\\\"2000\\\"\\n   width=\\\"2000\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     style=\\\"display:inline\\\"\\n     transform=\\\"translate(0,947.63784)\\\"\\n     id=\\\"layer1\\\" />\\n  <g\\n     style=\\\"display:inline\\\"\\n     id=\\\"layer3\\\">\\n    <path\\n       id=\\\"path7110\\\"\\n       d=\\\"M 759.41016 378 L 751.14844 382.9043 L 748.44922 384.50781 C 631.65776 453.72038 551.2844 517.18548 498.22852 579.16016 C 445.09916 641.22062 419.412 703.70808 418.68164 763.94727 C 417.22817 883.82775 505.65392 973.66586 584.10742 1054.0137 C 662.50124 1134.3003 732.43001 1210.0155 739.01172 1272.6777 C 742.36637 1304.6164 734.81689 1336.6966 699.99219 1380.6211 C 665.314 1424.3609 602.37552 1476.7493 501.75195 1535.4062 L 353.19336 1622 L 1270.0469 1622 L 1280.8965 1615.6875 L 1280.9082 1615.6777 C 1387.5436 1553.5161 1459.3849 1496.0867 1505.1621 1438.3477 C 1551.0758 1380.4366 1569.7557 1319.8482 1563.7812 1262.9688 C 1551.9436 1150.2668 1460.136 1068.1422 1382.9531 989.0957 C 1305.7103 909.98783 1243.1007 835.37489 1243.9531 765.07227 C 1244.3835 729.58122 1258.0249 689.98786 1301.1719 639.58789 C 1344.245 589.27401 1416.8675 530.40674 1528.2031 464.42969 L 1528.2031 464.42773 L 1674.0449 378 L 759.41016 378 z M 785.25195 470.91797 L 1349.8945 470.91797 C 1300.1653 507.99629 1260.8461 543.81554 1230.5879 579.16016 C 1177.4586 641.22061 1151.7714 703.70807 1151.041 763.94727 C 1149.5876 883.82876 1238.0176 973.66632 1316.4707 1054.0137 C 1394.8641 1134.2998 1464.7873 1210.0143 1471.3691 1272.6777 C 1474.7238 1304.6165 1467.1762 1336.6966 1432.3516 1380.6211 C 1398.9553 1422.7439 1338.8961 1473.0068 1244.5625 1529.082 L 678.47266 1529.082 C 717.74278 1498.4553 748.94092 1468.4466 772.80273 1438.3496 C 818.71647 1380.4385 837.39619 1319.8501 831.42188 1262.9707 C 819.58425 1150.2687 727.77664 1068.1442 650.59375 989.09766 C 573.35098 909.9898 510.74334 835.37687 511.5957 765.07422 C 512.02602 729.58325 525.66558 689.98982 568.8125 639.58984 C 610.43918 590.96566 680.08673 534.2435 785.25195 470.91797 z M 653.13086 629.39258 L 653.13086 672.3125 L 1094.5293 672.3125 L 1094.5293 629.39258 L 653.13086 629.39258 z M 636.72852 860.56836 L 636.72852 903.48633 L 1093.1133 903.48633 L 1093.1133 860.56836 L 636.72852 860.56836 z M 843.52344 1091.7383 L 843.52344 1134.6562 L 1285.5117 1134.6562 L 1285.5117 1091.7383 L 843.52344 1091.7383 z M 906.7207 1322.9121 L 906.7207 1365.8301 L 1364.707 1365.8301 L 1364.707 1322.9121 L 906.7207 1322.9121 z \\\"\\n       style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"2000\\\"\\n   height=\\\"2000\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   id=\\\"svg2\\\"\\n   version=\\\"1.1\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   sodipodi:docname=\\\"business-rule.svg\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.45254834\\\"\\n     inkscape:cx=\\\"811.70031\\\"\\n     inkscape:cy=\\\"1077.9584\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     showgrid=\\\"true\\\"\\n     units=\\\"px\\\"\\n     showguides=\\\"false\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4008\\\"\\n       empspacing=\\\"20\\\"\\n       dotted=\\\"false\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Ebene 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,947.63784)\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#000000;fill-opacity:1;stroke:none;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"path4135\\\"\\n       d=\\\"m 212.27677,-529.63785 0,382.36913 1574.78513,0 0,-382.36913 z\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"opacity:1;fill:none;fill-opacity:0.28037385;stroke:#000000;stroke-width:70;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 213.10529,52.362159 0,-581.999999 1573.78941,0 0,581.999999 0,582.000001 -1186.8947,0 0,-790.394 0,790.394 -386.89471,0 0,-401.56446 1573.78941,0 -1573.78941,0 z\\\"\\n       id=\\\"rect4139\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccscc\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   width=\\\"2000\\\"\\n   height=\\\"2000\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   id=\\\"svg2\\\"\\n   version=\\\"1.1\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer6\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       id=\\\"path4170\\\"\\n       d=\\\"M 825.74609 438.17383 C 825.69979 475.1723 825.7563 512.17163 825.85156 549.16992 C 794.29829 558.09661 765.46524 570.55412 738.23633 585.81445 L 658.6543 507.18945 L 509.84766 656.85742 L 589.42383 735.46875 C 574.05216 763.02029 562.04871 792.29945 553.67188 822.71094 L 440.94727 822.91602 L 440.94727 1033.7051 L 554.84961 1033.2949 C 565.26551 1074.5933 587.93422 1111.7201 610.51172 1144.918 L 610.51172 963.09375 L 510.94727 963.45117 L 510.94727 892.78906 L 610.01562 892.60938 L 615.57617 864.4375 C 623.68569 823.35291 639.74603 784.18805 662.82031 749.14453 L 678.60547 725.17188 L 609.00195 656.41016 L 659.0957 606.02539 L 728.82617 674.91797 L 752.55664 659.08203 C 788.8205 635.15649 828.48451 619.11851 868.03711 610.76562 L 895.99609 604.96094 L 895.74609 508.17578 L 967.71289 508.17578 L 967.15625 604.45703 L 995.58398 604.45703 L 1155.9902 604.45703 C 1138.2768 583.31338 1064.8698 555.79938 1037.4824 548.13281 L 1038.1172 438.17578 C 959.71716 438.17378 898.25174 438.18016 825.74609 438.17383 z M 1024.9043 639.83203 L 1025.1914 750.82422 C 993.63698 759.75091 964.80383 772.20673 937.57422 787.46875 L 857.99023 708.84375 L 709.18359 858.51172 L 788.76172 937.12305 C 773.38937 964.67608 761.38462 993.9543 753.00781 1024.3672 L 640.28516 1024.5703 L 640.28516 1235.3594 L 754.18555 1234.9512 C 763.15098 1266.2082 775.57969 1294.751 790.81055 1321.6973 L 709.31641 1402.873 L 859.78125 1550.752 L 940.98242 1469.9277 C 968.79672 1485.3724 998.3629 1497.3637 1029.0156 1505.709 L 1029.0684 1620.4219 C 1101.4601 1621.0557 1178.5354 1620.7292 1240.4043 1620.7227 L 1240.4043 1504.6523 C 1271.9821 1495.7485 1300.9053 1483.2014 1328.1406 1467.9473 L 1409.2754 1547.9434 L 1558.1797 1398.4629 L 1476.875 1318.3398 C 1492.282 1290.7142 1504.2874 1261.3861 1512.6738 1230.9414 L 1623.0527 1230.2598 L 1623.0527 1019.6738 L 1511.4355 1020.3535 C 1502.4631 989.06652 1490.2142 960.71674 1474.7812 933.5918 L 1551.9023 856.27344 L 1401.5215 708.14258 L 1324.5 785.42773 C 1296.7997 770.10877 1267.3537 758.14537 1236.8203 749.78906 L 1237.4531 639.83203 L 1024.9043 639.83203 z M 1095.084 709.83203 L 1167.0508 709.83203 L 1166.4961 806.11523 L 1194.9219 811.69336 C 1236.1943 819.79239 1275.7525 835.83275 1310.9375 858.76562 L 1334.7617 874.29492 L 1401.9785 806.84961 L 1452.5957 856.71094 L 1385.2852 924.19336 L 1401.4805 948.09961 C 1425.2452 983.9725 1441.0088 1022.7495 1449.9082 1062.6797 L 1455.7637 1090.6914 L 1553.0449 1090.0996 L 1553.0449 1160.6895 L 1456.3066 1161.2852 L 1450.75 1189.2969 C 1442.5902 1230.4276 1426.5649 1269.591 1403.4512 1304.6953 L 1387.6484 1328.7012 L 1458.9062 1398.9238 L 1408.8203 1449.2031 L 1337.5547 1378.9375 L 1313.8652 1394.6758 C 1277.59 1418.3823 1238.2406 1434.7985 1198.541 1442.8867 L 1170.3965 1448.5078 L 1170.3965 1550.7227 C 1151.1555 1550.7694 1130.1656 1550.7393 1099.0273 1550.6953 L 1098.9824 1449.2461 L 1070.7109 1443.7246 C 1029.3808 1435.6538 989.8877 1419.6871 954.76367 1396.6582 L 931.00977 1381.084 L 859.46875 1452.2949 L 808.84375 1402.5371 L 880.48438 1331.1758 L 864.13672 1307.1719 C 840.34989 1271.3777 824.61382 1232.5596 815.69922 1192.6758 L 809.84961 1164.75 L 710.28516 1165.1055 L 710.28516 1094.4453 L 809.35352 1094.2637 L 814.91406 1066.0957 C 823.02364 1025.0108 839.08423 985.84383 862.1582 950.80078 L 877.94336 926.82617 L 808.33789 858.06445 L 858.43164 807.67969 L 928.16406 876.57227 L 951.89453 860.73828 C 988.20439 836.96856 1026.7354 821.19689 1067.375 812.42383 L 1095.3359 806.61914 L 1095.084 709.83203 z M 1132.25 967.03516 C 1045.6031 967.03516 974.61133 1038.0288 974.61133 1124.6758 C 974.61133 1211.3228 1045.6031 1282.3125 1132.25 1282.3125 C 1218.8969 1282.3125 1289.8887 1211.3228 1289.8887 1124.6758 C 1289.8887 1038.0288 1218.8969 967.03516 1132.25 967.03516 z M 1132.25 1037.0352 C 1181.0662 1037.0352 1219.8887 1075.8597 1219.8887 1124.6758 C 1219.8887 1173.4919 1181.0662 1212.3125 1132.25 1212.3125 C 1083.4338 1212.3125 1044.6133 1173.4919 1044.6133 1124.6758 C 1044.6133 1075.8597 1083.4338 1037.0352 1132.25 1037.0352 z \\\"\\n       style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:70;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\" />\\n  </g>\\n  <g\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,949.63784)\\\"\\n     style=\\\"display:inline\\\">\\n    <g\\n       id=\\\"g4137\\\"\\n       transform=\\\"matrix(1.1161206,0,0,1.1161228,91.593841,25.188891)\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"2000\\\"\\n   height=\\\"2000\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   id=\\\"svg2\\\"\\n   version=\\\"1.1\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   sodipodi:docname=\\\"send.svg\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.22627417\\\"\\n     inkscape:cx=\\\"1062.5989\\\"\\n     inkscape:cy=\\\"892.16496\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer4\\\"\\n     showgrid=\\\"true\\\"\\n     units=\\\"px\\\"\\n     showguides=\\\"false\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-grids=\\\"true\\\"\\n     inkscape:snap-object-midpoints=\\\"false\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4008\\\"\\n       empspacing=\\\"20\\\"\\n       dotted=\\\"false\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer4\\\"\\n     inkscape:label=\\\"Ebene 1\\\"\\n     style=\\\"display:inline\\\">\\n    <path\\n       style=\\\"color:#000000;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\"\\n       d=\\\"M 198 484 L 1000 938 L 1802 484 L 198 484 z M 200 652 L 200 1548 L 1804 1548 L 1804 652 L 1000 1100 L 200 652 z \\\"\\n       id=\\\"path6822\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg2\\\"\\n   viewBox=\\\"0 0 2000 2000\\\"\\n   height=\\\"2000\\\"\\n   width=\\\"2000\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   sodipodi:docname=\\\"receive.svg\\\">\\n  <sodipodi:namedview\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1\\\"\\n     objecttolerance=\\\"10\\\"\\n     gridtolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:window-width=\\\"1630\\\"\\n     inkscape:window-height=\\\"947\\\"\\n     id=\\\"namedview8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:zoom=\\\"0.472\\\"\\n     inkscape:cx=\\\"864.05386\\\"\\n     inkscape:cy=\\\"948.4855\\\"\\n     inkscape:window-x=\\\"50\\\"\\n     inkscape:window-y=\\\"50\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer2\\\" />\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n        <cc:license\\n           rdf:resource=\\\"https://github.com/bpmn-io/bpmn-font/blob/master/LICENSE\\\" />\\n        <dc:creator>\\n          <cc:Agent>\\n            <dc:title>Jörg Dotzki</dc:title>\\n          </cc:Agent>\\n        </dc:creator>\\n        <dc:subject>\\n          <rdf:Bag>\\n            <rdf:li>BPMN</rdf:li>\\n            <rdf:li>bpmn-io</rdf:li>\\n            <rdf:li>bpmn.io</rdf:li>\\n            <rdf:li>Font</rdf:li>\\n          </rdf:Bag>\\n        </dc:subject>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     style=\\\"display:inline\\\"\\n     id=\\\"layer2\\\">\\n    <g\\n       id=\\\"g4251\\\">\\n      <path\\n         id=\\\"path6159\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;baseline-shift:baseline;text-anchor:start;white-space:normal;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;opacity:1;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:70;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate\\\"\\n         d=\\\"m 189,465 0,1070 1622,0 0,-1070 -1622,0 z M 356.88086,535 1643.1191,535 1000,958.10547 356.88086,535 Z M 259,554.39648 1000,1041.8945 1741,554.39648 1741,1465 l -1482,0 0,-910.60352 z\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.758311mm\\\"\\n   height=\\\"13.758311mm\\\"\\n   viewBox=\\\"0 0 13.758311 13.758311\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (e7c3feb1, 2024-10-09)\\\"\\n   sodipodi:docname=\\\"inclusive.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"8.8470394\\\"\\n     inkscape:cx=\\\"30.349136\\\"\\n     inkscape:cy=\\\"27.636364\\\"\\n     inkscape:window-width=\\\"1104\\\"\\n     inkscape:window-height=\\\"784\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"38\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-101.73231,-141.68439)\\\">\\n    <path\\n       style=\\\"display:inline;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;stroke-width:0;stroke-dasharray:none;stroke:none\\\"\\n       d=\\\"m 25,10.75 c -7.855252,0 -14.25,6.394748 -14.25,14.25 0,7.855252 6.394748,14.25 14.25,14.25 7.855252,0 14.25,-6.394748 14.25,-14.25 0,-7.855252 -6.394748,-14.25 -14.25,-14.25 z m 0,2.5 c 6.504152,0 11.75,5.245848 11.75,11.75 0,6.504152 -5.245848,11.75 -11.75,11.75 -6.504152,0 -11.75,-5.245848 -11.75,-11.75 0,-6.504152 5.245848,-11.75 11.75,-11.75 z\\\"\\n       id=\\\"path2\\\"\\n       transform=\\\"matrix(0.26458333,0,0,0.26458333,101.99688,141.94896)\\\" />\\n    <rect\\n       x=\\\"102.52605\\\"\\n       y=\\\"142.47813\\\"\\n       rx=\\\"1.0583333\\\"\\n       width=\\\"12.170834\\\"\\n       height=\\\"12.170834\\\"\\n       class=\\\"djs-outline\\\"\\n       style=\\\"fill:none;stroke-width:0.264583\\\"\\n       id=\\\"rect105\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.758311mm\\\"\\n   height=\\\"13.758311mm\\\"\\n   viewBox=\\\"0 0 13.758311 13.758311\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (e7c3feb1, 2024-10-09)\\\"\\n   sodipodi:docname=\\\"exclusive.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"4.1672912\\\"\\n     inkscape:cx=\\\"41.63376\\\"\\n     inkscape:cy=\\\"36.714497\\\"\\n     inkscape:window-width=\\\"1104\\\"\\n     inkscape:window-height=\\\"719\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"38\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-101.7323,-141.68439)\\\">\\n    <path\\n       style=\\\"display:inline;fill:#22242a;stroke-linecap:round;stroke-linejoin:round\\\"\\n       d=\\\"M 16,15 23.428571,24.714286 16,34.428571 h 3.428571 l 5.714286,-7.464228 5.714286,7.464228 h 3.428571 L 26.857143,24.714286 34.285714,15 H 30.857143 L 25.142857,22.464229 19.428571,15 Z\\\"\\n       id=\\\"path1\\\"\\n       transform=\\\"matrix(0.26458333,0,0,0.26458333,101.99687,141.94896)\\\" />\\n    <rect\\n       x=\\\"102.52604\\\"\\n       y=\\\"142.47813\\\"\\n       rx=\\\"1.0583333\\\"\\n       width=\\\"12.170834\\\"\\n       height=\\\"12.170834\\\"\\n       class=\\\"djs-outline\\\"\\n       style=\\\"fill:none;stroke-width:0.264583\\\"\\n       id=\\\"rect108\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.758311mm\\\"\\n   height=\\\"13.758311mm\\\"\\n   viewBox=\\\"0 0 13.758311 13.758311\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (e7c3feb1, 2024-10-09)\\\"\\n   sodipodi:docname=\\\"parallel.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"2.5054948\\\"\\n     inkscape:cx=\\\"-2.1951752\\\"\\n     inkscape:cy=\\\"20.155699\\\"\\n     inkscape:window-width=\\\"1104\\\"\\n     inkscape:window-height=\\\"788\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"38\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-101.7323,-141.68439)\\\">\\n    <path\\n       d=\\\"m 108.08229,144.59479 v 3.30729 h -3.3073 v 1.32292 h 3.3073 v 3.30729 h 1.32291 V 149.225 h 3.30729 v -1.32292 h -3.30729 v -3.30729 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path109\\\" />\\n    <rect\\n       x=\\\"102.52604\\\"\\n       y=\\\"142.47813\\\"\\n       rx=\\\"1.0583333\\\"\\n       width=\\\"12.170834\\\"\\n       height=\\\"12.170834\\\"\\n       class=\\\"djs-outline\\\"\\n       style=\\\"fill:none;stroke-width:0.264583\\\"\\n       id=\\\"rect111\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.758311mm\\\"\\n   height=\\\"13.758311mm\\\"\\n   viewBox=\\\"0 0 13.758311 13.758311\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (e7c3feb1, 2024-10-09)\\\"\\n   sodipodi:docname=\\\"event-based.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"4.3759929\\\"\\n     inkscape:cx=\\\"21.36658\\\"\\n     inkscape:cy=\\\"26.16549\\\"\\n     inkscape:window-width=\\\"1104\\\"\\n     inkscape:window-height=\\\"786\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"38\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-1969.426,-2186.3844)\\\">\\n    <circle\\n       cx=\\\"1976.3052\\\"\\n       cy=\\\"2193.2637\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle112\\\" />\\n    <circle\\n       cx=\\\"1976.3052\\\"\\n       cy=\\\"2193.2637\\\"\\n       r=\\\"3.175\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle113\\\" />\\n    <path\\n       d=\\\"m 1974.4531,2192.4698 1.9483,-1.2988 1.9483,1.2988 -0.6494,2.5978 h -2.5978 z\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path113\\\" />\\n    <rect\\n       x=\\\"1970.2197\\\"\\n       y=\\\"2187.1782\\\"\\n       rx=\\\"1.0583333\\\"\\n       width=\\\"12.170834\\\"\\n       height=\\\"12.170834\\\"\\n       class=\\\"djs-outline\\\"\\n       style=\\\"fill:none;stroke-width:0.264583\\\"\\n       id=\\\"rect114\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.758311mm\\\"\\n   height=\\\"13.758311mm\\\"\\n   viewBox=\\\"0 0 13.758311 13.758311\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (e7c3feb1, 2024-10-09)\\\"\\n   sodipodi:docname=\\\"complex.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#000000\\\"\\n     borderopacity=\\\"0.25\\\"\\n     inkscape:showpageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#d1d1d1\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"4.8390424\\\"\\n     inkscape:cx=\\\"39.987251\\\"\\n     inkscape:cy=\\\"19.218679\\\"\\n     inkscape:window-width=\\\"1104\\\"\\n     inkscape:window-height=\\\"827\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"38\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-101.73231,-141.68439)\\\">\\n    <g\\n       id=\\\"path115\\\"\\n       style=\\\"fill:#22242a;fill-opacity:1;stroke:none;stroke-width:0;stroke-dasharray:none\\\"\\n       transform=\\\"matrix(0.26458333,0,0,0.26458333,-13.62604,-21.563537)\\\">\\n      <path\\n         style=\\\"fill:#22242a;fill-opacity:1;stroke:none;stroke-width:0;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none\\\"\\n         d=\\\"m 460,631 v 7.11679 l -5.01825,-5.01825 -3.10219,3.10219 5.01825,5.01825 h -7.11679 v 4.37956 h 7.11679 l -5.01825,5.01825 3.10219,3.10219 L 460,648.70073 v 7.11679 h 4.37956 v -7.11679 l 5.01825,5.01825 3.10219,-3.10219 -5.01825,-5.01825 h 7.11679 v -4.37956 h -7.11679 l 5.01825,-5.01825 -3.10219,-3.10219 -5.01825,5.01825 V 631 Z\\\"\\n         id=\\\"path211\\\" />\\n    </g>\\n    <rect\\n       x=\\\"102.52604\\\"\\n       y=\\\"142.47813\\\"\\n       rx=\\\"1.0583333\\\"\\n       width=\\\"12.170834\\\"\\n       height=\\\"12.170834\\\"\\n       class=\\\"djs-outline\\\"\\n       style=\\\"fill:none;stroke-width:0.264583\\\"\\n       id=\\\"rect117\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"5.0270739mm\\\"\\n   height=\\\"3.7041385mm\\\"\\n   viewBox=\\\"0 0 5.027074 3.7041386\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"compensation.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"8.1336326\\\"\\n     inkscape:cx=\\\"34.547909\\\"\\n     inkscape:cy=\\\"4.3645935\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-29.347596,-154.91356)\\\">\\n    <path\\n       d=\\\"m 29.479878,156.76563 2.38125,-1.71979 v 3.43958 z m 2.460625,-0.10583 2.301875,-1.61396 v 3.43958 l -2.301875,-1.61396 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path37\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"4.1010432mm\\\"\\n   height=\\\"5.0270829mm\\\"\\n   viewBox=\\\"0 0 4.1010433 5.0270831\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"conditional.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"8.1336326\\\"\\n     inkscape:cx=\\\"2.3359796\\\"\\n     inkscape:cy=\\\"13.216727\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-156.23646,-112.58021)\\\">\\n    <path\\n       d=\\\"m 156.36875,112.7125 h 3.83646 v 4.7625 h -3.83646 z m 0.52917,0.79375 h 2.77813 M 156.89792,114.3 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813 m -2.77813,0.79375 h 2.77813\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path22\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"5.5032949mm\\\"\\n   height=\\\"5.2628441mm\\\"\\n   viewBox=\\\"0 0 5.5032951 5.2628442\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"error.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"40.859995\\\"\\n     inkscape:cy=\\\"8.737084\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(24.288738,-155.33712)\\\">\\n    <path\\n       d=\\\"m -24.156455,160.46768 0.02474,-0.007 1.941829,-2.54284 2.028561,2.37229 1.243621,-4.82082 -1.553289,3.08242 -1.931353,-2.53613 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path34\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"4.4978838mm\\\"\\n   height=\\\"5.5561948mm\\\"\\n   viewBox=\\\"0 0 4.4978839 5.5561949\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"escalation.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"11.040892\\\"\\n     inkscape:cy=\\\"10.910488\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-152.92918,-91.334188)\\\">\\n    <path\\n       d=\\\"m 155.17812,91.466457 2.11667,5.291667 -2.11667,-1.852084 -2.11667,1.852084 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path31\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"16.267265\\\"\\n     inkscape:cx=\\\"12.663468\\\"\\n     inkscape:cy=\\\"14.35398\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(207.23489,-211.8651)\\\">\\n    <circle\\n       cx=\\\"-203.0677\\\"\\n       cy=\\\"216.03229\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle50\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-compensation.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"55.46527\\\"\\n     inkscape:cy=\\\"20.212657\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(69.65157,-208.95468)\\\">\\n    <circle\\n       cx=\\\"-65.484383\\\"\\n       cy=\\\"213.12187\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle87\\\" />\\n    <path\\n       d=\\\"m -68.151379,213.12187 2.38125,-1.71979 v 3.43958 z m 2.460625,-0.10583 2.301875,-1.61396 v 3.43958 l -2.301875,-1.61396 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path87\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-conditional.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"17.561104\\\"\\n     inkscape:cy=\\\"19.864912\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-91.215099,-208.95468)\\\">\\n    <circle\\n       cx=\\\"95.382286\\\"\\n       cy=\\\"213.12187\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle78\\\" />\\n    <path\\n       d=\\\"m 93.397914,210.60833 h 3.836458 v 4.7625 h -3.836458 z m 0.529167,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125 m -2.778125,0.79375 h 2.778125\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path78\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-escalation.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"-12.779615\\\"\\n     inkscape:cy=\\\"20.386529\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-371.14427,-181.43802)\\\">\\n    <circle\\n       cx=\\\"375.31146\\\"\\n       cy=\\\"185.60521\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle75\\\" />\\n    <path\\n       d=\\\"m 375.31146,182.74771 2.11667,5.29167 -2.11667,-1.85209 -2.11667,1.85209 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path75\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-link-catch.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"-16.343997\\\"\\n     inkscape:cy=\\\"17.778444\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-235.14843,-194.93177)\\\">\\n    <circle\\n       cx=\\\"239.31561\\\"\\n       cy=\\\"199.09895\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle81\\\" />\\n    <path\\n       d=\\\"m 239.98237,196.84153 v 1.17409 h -3.57188 v 1.78594 h 3.57188 v 1.17409 l 2.60449,-2.06706 z\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path81\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-link-throw.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"32.687996\\\"\\n     inkscape:cy=\\\"14.127126\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(119.65781,-208.95468)\\\">\\n    <circle\\n       cx=\\\"-115.49062\\\"\\n       cy=\\\"213.12187\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle84\\\" />\\n    <path\\n       d=\\\"m -114.82387,210.86444 v 1.17409 h -3.57188 v 1.78594 h 3.57188 v 1.17409 l 2.60449,-2.06706 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path84\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-receive.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"21.386294\\\"\\n     inkscape:cy=\\\"10.301934\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-75.075519,-224.82968)\\\">\\n    <circle\\n       cx=\\\"79.242706\\\"\\n       cy=\\\"228.99687\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle53\\\" />\\n    <path\\n       d=\\\"m 76.718582,227.23474 v 3.33375 h 5.000625 v -3.33375 z m 0,0 2.500312,1.42875 2.500313,-1.42875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path53\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-send.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"16\\\"\\n     inkscape:cx=\\\"-5.25\\\"\\n     inkscape:cy=\\\"14.84375\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"path56\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-232.76718,-160.00678)\\\">\\n    <circle\\n       cx=\\\"236.93437\\\"\\n       cy=\\\"164.17397\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle56\\\" />\\n    <g\\n       id=\\\"path56\\\">\\n      <path\\n         style=\\\"fill:none;stroke-linecap:round;stroke-linejoin:round;stroke:none\\\"\\n         d=\\\"m 234.41024,162.41183 v 3.33375 h 5.00063 v -3.33375 z m 0,0 2.50032,1.42875\\\"\\n         id=\\\"path1\\\"\\n         sodipodi:nodetypes=\\\"ccccccc\\\" />\\n      <g\\n         id=\\\"g4\\\"\\n         transform=\\\"translate(201.87036,-55.570754)\\\">\\n        <path\\n           d=\\\"m 32.666222,218.20322 v 2.97242 h 4.736145 v -2.97242 l -2.302701,1.31413 a 0.13230472,0.13230472 0 0 1 -0.130742,0 z\\\"\\n           style=\\\"baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;fill-opacity:1;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1\\\"\\n           id=\\\"path4\\\" />\\n        <path\\n           d=\\\"m 33.033125,218.10761 1.999878,1.14257 2.001945,-1.14257 z\\\"\\n           style=\\\"baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;fill-opacity:1;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1\\\"\\n           id=\\\"path3\\\" />\\n      </g>\\n    </g>\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-signal-catch.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"40.164504\\\"\\n     inkscape:cy=\\\"13.083891\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-0.19843645,-215.30468)\\\">\\n    <circle\\n       cx=\\\"4.365624\\\"\\n       cy=\\\"219.47186\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle90\\\" />\\n    <path\\n       d=\\\"m 4.3656239,216.61437 2.38125,4.28625 h -4.7625 z\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path90\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-signal-throw.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"8.1336326\\\"\\n     inkscape:cx=\\\"32.334876\\\"\\n     inkscape:cy=\\\"-6.7005731\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-53.115108,-210.80677)\\\">\\n    <circle\\n       cx=\\\"57.282295\\\"\\n       cy=\\\"214.97395\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle93\\\" />\\n    <path\\n       d=\\\"m 57.282297,212.11646 2.38125,4.28625 h -4.7625 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path93\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"8.3343754mm\\\"\\n   height=\\\"8.3343754mm\\\"\\n   viewBox=\\\"0 0 8.3343756 8.3343756\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"intermediate-timer.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"25.298421\\\"\\n     inkscape:cy=\\\"14.561806\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(28.111983,-209.21927)\\\">\\n    <circle\\n       cx=\\\"-23.944796\\\"\\n       cy=\\\"213.38646\\\"\\n       r=\\\"3.96875\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.396875px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle59\\\" />\\n    <circle\\n       cx=\\\"-23.944796\\\"\\n       cy=\\\"213.38646\\\"\\n       r=\\\"2.9104166\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle60\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 0.595312,-1.98438 m -0.595312,1.98438 1.389062,0.39687\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path60\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 0,1.98437 v 0.59532\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path61\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m -0.992187,1.71852 -0.297657,0.51555\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path62\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m -1.718519,0.99218 -0.515556,0.29766\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path63\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m -1.984375,0 h -0.595312\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path64\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m -1.718519,-0.99219 -0.515556,-0.29766\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path65\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m -0.992187,-1.71852 -0.297657,-0.51555\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path66\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 0,-1.98437 v -0.59532\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path67\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 0.992187,-1.71852 0.297657,-0.51555\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path68\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 1.718519,-0.99218 0.515556,-0.29766\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path69\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 1.984375,0 h 0.595312\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path70\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 1.718519,0.99219 0.515556,0.29766\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path71\\\" />\\n    <path\\n       d=\\\"m -23.944795,213.38646 m 0.992187,1.71852 0.297657,0.51555\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path72\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"13.49375mm\\\"\\n   height=\\\"13.49375mm\\\"\\n   viewBox=\\\"0 0 13.49375 13.49375\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"message-end.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"32.53453\\\"\\n     inkscape:cx=\\\"25.972405\\\"\\n     inkscape:cy=\\\"22.453067\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-28.310416,-212.98958)\\\">\\n    <g\\n       id=\\\"g4\\\">\\n      <path\\n         d=\\\"m 32.666222,218.20322 v 2.97242 h 4.736145 v -2.97242 l -2.302701,1.31413 a 0.13230472,0.13230472 0 0 1 -0.130742,0 z\\\"\\n         style=\\\"baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1;fill-opacity:1\\\"\\n         id=\\\"path4\\\" />\\n      <path\\n         d=\\\"m 33.033125,218.10761 1.999878,1.14257 2.001945,-1.14257 z\\\"\\n         style=\\\"baseline-shift:baseline;display:inline;overflow:visible;vector-effect:none;fill:#22242a;stroke-linecap:round;stroke-linejoin:round;enable-background:accumulate;stop-color:#000000;stop-opacity:1;fill-opacity:1\\\"\\n         id=\\\"path3\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"5.2652082mm\\\"\\n   height=\\\"3.5983334mm\\\"\\n   viewBox=\\\"0 0 5.2652084 3.5983335\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"message-start.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"23.559698\\\"\\n     inkscape:cy=\\\"12.21453\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"svg1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <path\\n     d=\\\"M 0.13229166,0.13229167 V 3.4660416 H 5.1329166 V 0.13229166 Z m 0,0 L 2.6326041,1.5610416 5.1329166,0.13229167\\\"\\n     style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n     id=\\\"path4\\\" />\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"5.0270643mm\\\"\\n   height=\\\"4.5508189mm\\\"\\n   viewBox=\\\"0 0 5.0270645 4.550819\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"signal-end.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"11.562509\\\"\\n     inkscape:cy=\\\"10.128063\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-93.92709,-150.86543)\\\">\\n    <path\\n       d=\\\"m 96.440622,150.99771 2.38125,4.28625 h -4.7625 z\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path43\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"5.0270643mm\\\"\\n   height=\\\"4.5508189mm\\\"\\n   viewBox=\\\"0 0 5.0270645 4.550819\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"signal-start.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"8.1336326\\\"\\n     inkscape:cx=\\\"3.31955\\\"\\n     inkscape:cy=\\\"27.72439\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-122.5021,-95.038348)\\\">\\n    <path\\n       d=\\\"m 125.01563,95.170625 2.38125,4.28625 h -4.7625 z\\\"\\n       style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"path40\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"6.3499966mm\\\"\\n   height=\\\"6.3499966mm\\\"\\n   viewBox=\\\"0 0 6.3499967 6.3499967\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"terminate.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"16.267265\\\"\\n     inkscape:cx=\\\"0.67620462\\\"\\n     inkscape:cy=\\\"9.6820208\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-148.82811,-151.73855)\\\">\\n    <circle\\n       cx=\\\"152.00311\\\"\\n       cy=\\\"154.91354\\\"\\n       r=\\\"2.6458333\\\"\\n       style=\\\"fill:#22242a;stroke:#22242a;stroke-width:1.05833px;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"circle47\\\" />\\n  </g>\\n</svg>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   width=\\\"6.3499999mm\\\"\\n   height=\\\"6.3499999mm\\\"\\n   viewBox=\\\"0 0 6.3500001 6.3500001\\\"\\n   version=\\\"1.1\\\"\\n   id=\\\"svg1\\\"\\n   inkscape:version=\\\"1.4 (86a8ad7, 2024-10-11)\\\"\\n   sodipodi:docname=\\\"timer.svg\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\">\\n  <sodipodi:namedview\\n     id=\\\"namedview1\\\"\\n     pagecolor=\\\"#505050\\\"\\n     bordercolor=\\\"#eeeeee\\\"\\n     borderopacity=\\\"1\\\"\\n     inkscape:showpageshadow=\\\"0\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pagecheckerboard=\\\"0\\\"\\n     inkscape:deskcolor=\\\"#505050\\\"\\n     inkscape:document-units=\\\"mm\\\"\\n     inkscape:zoom=\\\"11.502694\\\"\\n     inkscape:cx=\\\"-3.2166378\\\"\\n     inkscape:cy=\\\"17.169891\\\"\\n     inkscape:window-width=\\\"2560\\\"\\n     inkscape:window-height=\\\"1009\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"layer1\\\" />\\n  <defs\\n     id=\\\"defs1\\\" />\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(-129.24896,-55.430208)\\\">\\n    <g\\n       id=\\\"g1\\\">\\n      <circle\\n         cx=\\\"132.42397\\\"\\n         cy=\\\"58.605209\\\"\\n         r=\\\"2.9104166\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"circle8\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 0.59531,-1.984375 m -0.59531,1.984375 1.38906,0.396875\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.529167px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path8\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 0,1.984375 v 0.595312\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path9\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m -0.99219,1.718519 -0.29766,0.515556\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path10\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m -1.71852,0.992188 -0.51555,0.297656\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path11\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m -1.98437,0 h -0.59532\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path12\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m -1.71852,-0.992187 -0.51555,-0.297657\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path13\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m -0.99218,-1.718519 -0.29766,-0.515556\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path14\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 0,-1.984375 v -0.595312\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path15\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 0.99219,-1.718519 0.29766,-0.515556\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path16\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 1.71852,-0.992187 0.51555,-0.297657\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path17\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 1.98437,0 h 0.59532\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path18\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 1.71852,0.992188 0.51555,0.297656\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path19\\\" />\\n      <path\\n         d=\\\"m 132.42396,58.605208 m 0.99218,1.718519 0.29766,0.515556\\\"\\n         style=\\\"fill:none;stroke:#22242a;stroke-width:0.264583px;stroke-linecap:round;stroke-linejoin:round\\\"\\n         id=\\\"path20\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\"","/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\n\nvar TWEEN = TWEEN || (function () {\n\n\tvar _tweens = [];\n\n\treturn {\n\n\t\tgetAll: function () {\n\n\t\t\treturn _tweens;\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\t_tweens = [];\n\n\t\t},\n\n\t\tadd: function (tween) {\n\n\t\t\t_tweens.push(tween);\n\n\t\t},\n\n\t\tremove: function (tween) {\n\n\t\t\tvar i = _tweens.indexOf(tween);\n\n\t\t\tif (i !== -1) {\n\t\t\t\t_tweens.splice(i, 1);\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function (time, preserve) {\n\n\t\t\tif (_tweens.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\n\t\t\ttime = time !== undefined ? time : TWEEN.now();\n\n\t\t\twhile (i < _tweens.length) {\n\n\t\t\t\tif (_tweens[i].update(time) || preserve) {\n\t\t\t\t\ti++;\n\t\t\t\t} else {\n\t\t\t\t\t_tweens.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\t};\n\n})();\n\n\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\nif (typeof (window) === 'undefined' && typeof (process) !== 'undefined') {\n\tTWEEN.now = function () {\n\t\tvar time = process.hrtime();\n\n\t\t// Convert [seconds, nanoseconds] to milliseconds.\n\t\treturn time[0] * 1000 + time[1] / 1000000;\n\t};\n}\n// In a browser, use window.performance.now if it is available.\nelse if (typeof (window) !== 'undefined' &&\n         window.performance !== undefined &&\n\t\t window.performance.now !== undefined) {\n\t// This must be bound, because directly assigning this function\n\t// leads to an invocation exception in Chrome.\n\tTWEEN.now = window.performance.now.bind(window.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n\tTWEEN.now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n\tTWEEN.now = function () {\n\t\treturn new Date().getTime();\n\t};\n}\n\n\nTWEEN.Tween = function (object) {\n\n\tvar _object = object;\n\tvar _valuesStart = {};\n\tvar _valuesEnd = {};\n\tvar _valuesStartRepeat = {};\n\tvar _duration = 1000;\n\tvar _repeat = 0;\n\tvar _repeatDelayTime;\n\tvar _yoyo = false;\n\tvar _isPlaying = false;\n\tvar _reversed = false;\n\tvar _delayTime = 0;\n\tvar _startTime = null;\n\tvar _easingFunction = TWEEN.Easing.Linear.None;\n\tvar _interpolationFunction = TWEEN.Interpolation.Linear;\n\tvar _chainedTweens = [];\n\tvar _onStartCallback = null;\n\tvar _onStartCallbackFired = false;\n\tvar _onUpdateCallback = null;\n\tvar _onCompleteCallback = null;\n\tvar _onStopCallback = null;\n\n\tthis.to = function (properties, duration) {\n\n\t\t_valuesEnd = properties;\n\n\t\tif (duration !== undefined) {\n\t\t\t_duration = duration;\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.start = function (time) {\n\n\t\tTWEEN.add(this);\n\n\t\t_isPlaying = true;\n\n\t\t_onStartCallbackFired = false;\n\n\t\t_startTime = time !== undefined ? time : TWEEN.now();\n\t\t_startTime += _delayTime;\n\n\t\tfor (var property in _valuesEnd) {\n\n\t\t\t// Check if an Array was provided as property value\n\t\t\tif (_valuesEnd[property] instanceof Array) {\n\n\t\t\t\tif (_valuesEnd[property].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Create a local copy of the Array with the start value at the front\n\t\t\t\t_valuesEnd[property] = [_object[property]].concat(_valuesEnd[property]);\n\n\t\t\t}\n\n\t\t\t// If `to()` specifies a property that doesn't exist in the source object,\n\t\t\t// we should not set that property in the object\n\t\t\tif (_object[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Save the starting value.\n\t\t\t_valuesStart[property] = _object[property];\n\n\t\t\tif ((_valuesStart[property] instanceof Array) === false) {\n\t\t\t\t_valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n\t\t\t}\n\n\t\t\t_valuesStartRepeat[property] = _valuesStart[property] || 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.stop = function () {\n\n\t\tif (!_isPlaying) {\n\t\t\treturn this;\n\t\t}\n\n\t\tTWEEN.remove(this);\n\t\t_isPlaying = false;\n\n\t\tif (_onStopCallback !== null) {\n\t\t\t_onStopCallback.call(_object, _object);\n\t\t}\n\n\t\tthis.stopChainedTweens();\n\t\treturn this;\n\n\t};\n\n\tthis.end = function () {\n\n\t\tthis.update(_startTime + _duration);\n\t\treturn this;\n\n\t};\n\n\tthis.stopChainedTweens = function () {\n\n\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t_chainedTweens[i].stop();\n\t\t}\n\n\t};\n\n\tthis.delay = function (amount) {\n\n\t\t_delayTime = amount;\n\t\treturn this;\n\n\t};\n\n\tthis.repeat = function (times) {\n\n\t\t_repeat = times;\n\t\treturn this;\n\n\t};\n\n\tthis.repeatDelay = function (amount) {\n\n\t\t_repeatDelayTime = amount;\n\t\treturn this;\n\n\t};\n\n\tthis.yoyo = function (yoyo) {\n\n\t\t_yoyo = yoyo;\n\t\treturn this;\n\n\t};\n\n\n\tthis.easing = function (easing) {\n\n\t\t_easingFunction = easing;\n\t\treturn this;\n\n\t};\n\n\tthis.interpolation = function (interpolation) {\n\n\t\t_interpolationFunction = interpolation;\n\t\treturn this;\n\n\t};\n\n\tthis.chain = function () {\n\n\t\t_chainedTweens = arguments;\n\t\treturn this;\n\n\t};\n\n\tthis.onStart = function (callback) {\n\n\t\t_onStartCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onUpdate = function (callback) {\n\n\t\t_onUpdateCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onComplete = function (callback) {\n\n\t\t_onCompleteCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.onStop = function (callback) {\n\n\t\t_onStopCallback = callback;\n\t\treturn this;\n\n\t};\n\n\tthis.update = function (time) {\n\n\t\tvar property;\n\t\tvar elapsed;\n\t\tvar value;\n\n\t\tif (time < _startTime) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (_onStartCallbackFired === false) {\n\n\t\t\tif (_onStartCallback !== null) {\n\t\t\t\t_onStartCallback.call(_object, _object);\n\t\t\t}\n\n\t\t\t_onStartCallbackFired = true;\n\t\t}\n\n\t\telapsed = (time - _startTime) / _duration;\n\t\telapsed = elapsed > 1 ? 1 : elapsed;\n\n\t\tvalue = _easingFunction(elapsed);\n\n\t\tfor (property in _valuesEnd) {\n\n\t\t\t// Don't update properties that do not exist in the source object\n\t\t\tif (_valuesStart[property] === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar start = _valuesStart[property] || 0;\n\t\t\tvar end = _valuesEnd[property];\n\n\t\t\tif (end instanceof Array) {\n\n\t\t\t\t_object[property] = _interpolationFunction(end, value);\n\n\t\t\t} else {\n\n\t\t\t\t// Parses relative end values with start as base (e.g.: +10, -3)\n\t\t\t\tif (typeof (end) === 'string') {\n\n\t\t\t\t\tif (end.charAt(0) === '+' || end.charAt(0) === '-') {\n\t\t\t\t\t\tend = start + parseFloat(end);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tend = parseFloat(end);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Protect against non numeric properties.\n\t\t\t\tif (typeof (end) === 'number') {\n\t\t\t\t\t_object[property] = start + (end - start) * value;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (_onUpdateCallback !== null) {\n\t\t\t_onUpdateCallback.call(_object, value);\n\t\t}\n\n\t\tif (elapsed === 1) {\n\n\t\t\tif (_repeat > 0) {\n\n\t\t\t\tif (isFinite(_repeat)) {\n\t\t\t\t\t_repeat--;\n\t\t\t\t}\n\n\t\t\t\t// Reassign starting values, restart by making startTime = now\n\t\t\t\tfor (property in _valuesStartRepeat) {\n\n\t\t\t\t\tif (typeof (_valuesEnd[property]) === 'string') {\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesStartRepeat[property] + parseFloat(_valuesEnd[property]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_yoyo) {\n\t\t\t\t\t\tvar tmp = _valuesStartRepeat[property];\n\n\t\t\t\t\t\t_valuesStartRepeat[property] = _valuesEnd[property];\n\t\t\t\t\t\t_valuesEnd[property] = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\t_valuesStart[property] = _valuesStartRepeat[property];\n\n\t\t\t\t}\n\n\t\t\t\tif (_yoyo) {\n\t\t\t\t\t_reversed = !_reversed;\n\t\t\t\t}\n\n\t\t\t\tif (_repeatDelayTime !== undefined) {\n\t\t\t\t\t_startTime = time + _repeatDelayTime;\n\t\t\t\t} else {\n\t\t\t\t\t_startTime = time + _delayTime;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\tif (_onCompleteCallback !== null) {\n\n\t\t\t\t\t_onCompleteCallback.call(_object, _object);\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, numChainedTweens = _chainedTweens.length; i < numChainedTweens; i++) {\n\t\t\t\t\t// Make the chained tweens start exactly at the time they should,\n\t\t\t\t\t// even if the `update()` method was called way past the duration of the tween\n\t\t\t\t\t_chainedTweens[i].start(_startTime + _duration);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n};\n\n\nTWEEN.Easing = {\n\n\tLinear: {\n\n\t\tNone: function (k) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k) {\n\n\t\t\treturn 1 - TWEEN.Easing.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn TWEEN.Easing.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn TWEEN.Easing.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\nTWEEN.Interpolation = {\n\n\tLinear: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.Linear;\n\n\t\tif (k < 0) {\n\t\t\treturn fn(v[0], v[1], f);\n\t\t}\n\n\t\tif (k > 1) {\n\t\t\treturn fn(v[m], v[m - 1], m - f);\n\t\t}\n\n\t\treturn fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n\n\t},\n\n\tBezier: function (v, k) {\n\n\t\tvar b = 0;\n\t\tvar n = v.length - 1;\n\t\tvar pw = Math.pow;\n\t\tvar bn = TWEEN.Interpolation.Utils.Bernstein;\n\n\t\tfor (var i = 0; i <= n; i++) {\n\t\t\tb += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n\t\t}\n\n\t\treturn b;\n\n\t},\n\n\tCatmullRom: function (v, k) {\n\n\t\tvar m = v.length - 1;\n\t\tvar f = m * k;\n\t\tvar i = Math.floor(f);\n\t\tvar fn = TWEEN.Interpolation.Utils.CatmullRom;\n\n\t\tif (v[0] === v[m]) {\n\n\t\t\tif (k < 0) {\n\t\t\t\ti = Math.floor(f = m * (1 + k));\n\t\t\t}\n\n\t\t\treturn fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n\n\t\t} else {\n\n\t\t\tif (k < 0) {\n\t\t\t\treturn v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n\t\t\t}\n\n\t\t\tif (k > 1) {\n\t\t\t\treturn v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n\t\t\t}\n\n\t\t\treturn fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n\n\t\t}\n\n\t},\n\n\tUtils: {\n\n\t\tLinear: function (p0, p1, t) {\n\n\t\t\treturn (p1 - p0) * t + p0;\n\n\t\t},\n\n\t\tBernstein: function (n, i) {\n\n\t\t\tvar fc = TWEEN.Interpolation.Utils.Factorial;\n\n\t\t\treturn fc(n) / fc(i) / fc(n - i);\n\n\t\t},\n\n\t\tFactorial: (function () {\n\n\t\t\tvar a = [1];\n\n\t\t\treturn function (n) {\n\n\t\t\t\tvar s = 1;\n\n\t\t\t\tif (a[n]) {\n\t\t\t\t\treturn a[n];\n\t\t\t\t}\n\n\t\t\t\tfor (var i = n; i > 1; i--) {\n\t\t\t\t\ts *= i;\n\t\t\t\t}\n\n\t\t\t\ta[n] = s;\n\t\t\t\treturn s;\n\n\t\t\t};\n\n\t\t})(),\n\n\t\tCatmullRom: function (p0, p1, p2, p3, t) {\n\n\t\t\tvar v0 = (p2 - p0) * 0.5;\n\t\t\tvar v1 = (p3 - p1) * 0.5;\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t * t2;\n\n\t\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (- 3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\n\t\t}\n\n\t}\n\n};\n\n// UMD (Universal Module Definition)\n(function (root) {\n\n\tif (typeof define === 'function' && define.amd) {\n\n\t\t// AMD\n\t\tdefine([], function () {\n\t\t\treturn TWEEN;\n\t\t});\n\n\t} else if (typeof module !== 'undefined' && typeof exports === 'object') {\n\n\t\t// Node.js\n\t\tmodule.exports = TWEEN;\n\n\t} else if (root !== undefined) {\n\n\t\t// Global variable\n\t\troot.TWEEN = TWEEN;\n\n\t}\n\n})(this);\n","import * as THREE from 'three';\n// Import Diagram and Element classes and constants\nimport { Diagram } from '../diagrams/Diagram.js';\nimport { DiagramDimensions } from '../diagrams/DiagramConstants.js';\nimport { Element } from '../elements/Element.js';\nimport { Connector } from '../connectors/Connector.js';\n// Import element shapes\nimport { CircleShape } from '../shapes/basic/CircleShape.js';\nimport { RoundedRectangleShape } from '../shapes/basic/RoundedRectangleShape.js';\nimport { DiamondShape } from '../shapes/basic/DiamondShape.js';\nimport { TextShape } from '../shapes/text/TextShape.js';\n// Import connector shapes\nimport { RoundedCornerOrthogonalConnectorShape } from '../shapes/connector/RoundedCornerOrthogonalConnectorShape.js';\n// Import Activity icons\nimport manual from '../shapes/icon/bpmn/activities/manual.svg?raw';\nimport user from '../shapes/icon/bpmn/activities/user.svg?raw';\nimport script from '../shapes/icon/bpmn/activities/script.svg?raw';\nimport businessRule from '../shapes/icon/bpmn/activities/business-rule.svg?raw';\nimport service from '../shapes/icon/bpmn/activities/service.svg?raw';\nimport send from '../shapes/icon/bpmn/activities/send.svg?raw';\nimport receive from '../shapes/icon/bpmn/activities/receive.svg?raw';\n// Import Gateway icons\nimport inclusive from '../shapes/icon/bpmn/gateways/inclusive.svg?raw';\nimport exclusive from '../shapes/icon/bpmn/gateways/exclusive.svg?raw';\nimport parallel from '../shapes/icon/bpmn/gateways/parallel.svg?raw';\nimport eventBased from '../shapes/icon/bpmn/gateways/event-based.svg?raw';\nimport complex from '../shapes/icon/bpmn/gateways/complex.svg?raw';\n// Import Event icons\nimport compensation from '../shapes/icon/bpmn/events/compensation.svg?raw';\nimport conditional from '../shapes/icon/bpmn/events/conditional.svg?raw';\nimport error from '../shapes/icon/bpmn/events/error.svg?raw';\nimport escalation from '../shapes/icon/bpmn/events/escalation.svg?raw';\nimport intermediate from '../shapes/icon/bpmn/events/intermediate.svg?raw';\nimport intermediateCompensation from '../shapes/icon/bpmn/events/intermediate-compensation.svg?raw';\nimport intermediateConditional from '../shapes/icon/bpmn/events/intermediate-conditional.svg?raw';\nimport intermediateEscalation from '../shapes/icon/bpmn/events/intermediate-escalation.svg?raw';\nimport intermediateLinkCatch from '../shapes/icon/bpmn/events/intermediate-link-catch.svg?raw';\nimport intermediateLinkThrow from '../shapes/icon/bpmn/events/intermediate-link-throw.svg?raw';\nimport intermediateReceive from '../shapes/icon/bpmn/events/intermediate-receive.svg?raw';\nimport intermediateSend from '../shapes/icon/bpmn/events/intermediate-send.svg?raw';\nimport intermediateSignalCatch from '../shapes/icon/bpmn/events/intermediate-signal-catch.svg?raw';\nimport intermediateSignalThrow from '../shapes/icon/bpmn/events/intermediate-signal-throw.svg?raw';\nimport intermediateTimer from '../shapes/icon/bpmn/events/intermediate-timer.svg?raw';\nimport messageEnd from '../shapes/icon/bpmn/events/message-end.svg?raw';\nimport messageStart from '../shapes/icon/bpmn/events/message-start.svg?raw';\nimport signalEnd from '../shapes/icon/bpmn/events/signal-end.svg?raw';\nimport signalStart from '../shapes/icon/bpmn/events/signal-start.svg?raw';\nimport terminate from '../shapes/icon/bpmn/events/terminate.svg?raw';\nimport timer from '../shapes/icon/bpmn/events/timer.svg?raw';\n\nimport { add } from 'tween.js';\n\nclass BpmnDiagram extends Diagram {\n    constructor(container) {\n        super(container);\n    }\n\n    // --------------------------------------------------\n    // BPMN Diagram Dimensions\n    // --------------------------------------------------\n    static get Dimensions() {\n        return {\n            DISTANCE_BETWEEN_ELEMENTS: DiagramDimensions.DISTANCE_BETWEEN_ELEMENTS,\n            START_EVENT_LINE_WIDTH: 1,\n            END_EVENT_LINE_WIDTH: 2.4,\n            ICON_SIZE_SMALL: 10,\n            ICON_SIZE_MEDIUM: 18,\n            ICON_SIZE_LARGE: 30\n        }\n    }\n\n    // --------------------------------------------------\n    // Add BPMN Elements\n    // --------------------------------------------------\n\n    // Start Events\n    addStartEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) );\n    }\n\n    addMessageStartEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(messageStart, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addTimerStartEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(timer, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addConditionalStartEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(conditional, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addSignalStartEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(signalStart, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    // Intermediate Events\n    addIntermediateEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediate, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateMessageCatchEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateReceive, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateMessageThrowEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateSend, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateTimerEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateTimer, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateEscalationEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateEscalation, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateConditionalEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateConditional, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateLinkCatchEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateLinkCatch, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateLinkThrowEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateLinkThrow, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateCompensationEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateCompensation, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateSignalCatchEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateSignalCatch, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addIntermediateSignalThrowEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape()) )\n            .addIcon(intermediateSignalThrow, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    // End Events\n    addEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n    }\n\n    addMessageEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(messageEnd, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addEscalationEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(escalation, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addErrorEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(error, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addCompensateEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(compensation, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addSignalEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(signalEnd, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addTerminateEndEvent(elementId) {\n        return this.addElement( new Element(elementId, new CircleShape(BpmnDiagram.Dimensions.END_EVENT_LINE_WIDTH)) )\n            .addIcon(terminate, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n\n    // Tasks\n    addTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) );\n    }\n\n    addManualTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(manual, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addUserTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(user, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addScriptTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(script, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addBusinessRuleTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(businessRule, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addServiceTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(service, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addSendTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(send, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    addReceiveTask(elementId) {\n        return this.addElement( new Element(elementId, new RoundedRectangleShape()) )\n            .addIcon(receive, 'top-left', BpmnDiagram.Dimensions.ICON_SIZE_SMALL);\n    }\n\n    // Gateways\n    addGateway(elementId) {\n        return this.addExclusiveGateway(elementId);\n    }\n\n    addInclusiveGateway(elementId) {\n        return this.addElement( new Element(elementId, new DiamondShape()) )\n            .addIcon(inclusive, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addExclusiveGateway(elementId) {\n        return this.addElement( new Element(elementId, new DiamondShape()) )\n            .addIcon(exclusive, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n    addParallelGateway(elementId) {\n        return this.addElement( new Element(elementId, new DiamondShape()) )\n            .addIcon(parallel, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addEventBasedGateway(elementId) {\n        return this.addElement( new Element(elementId, new DiamondShape()) )\n            .addIcon(eventBased, 'center', BpmnDiagram.Dimensions.ICON_SIZE_LARGE);\n    }\n\n    addComplexGateway(elementId) {\n        return this.addElement( new Element(elementId, new DiamondShape()) )\n            .addIcon(complex, 'center', BpmnDiagram.Dimensions.ICON_SIZE_MEDIUM);\n    }\n\n\n\n    // --------------------------------------------------\n    // Add BPMN Connectors\n    // --------------------------------------------------\n\n    addFlowConnector(elementId, points) {\n        return this.addConnector( new Connector(elementId, new RoundedCornerOrthogonalConnectorShape(points)) );\n    }\n\n    // --------------------------------------------------\n    // Import BPMN Diagram from .bpmn file (XML)\n    // --------------------------------------------------\n\n    import(file) {\n        if (!file) {\n            console.error('No file provided for import.');\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            if (file.name.endsWith('.bpmn')) {\n                const parser = new DOMParser();\n                const xmlDoc = parser.parseFromString(event.target.result, \"text/xml\");\n                console.log(xmlDoc);\n                this.buildDiagram(xmlDoc);\n            } else {\n                console.warn('File format not supported.');\n            }\n        };\n        reader.readAsText(file);\n    }\n\n    buildDiagram(xmlDoc) {\n        const bpmnNamespace = \"http://www.omg.org/spec/BPMN/20100524/MODEL\";\n        const bpmndiNamespace = \"http://www.omg.org/spec/BPMN/20100524/DI\";\n        const dcNamespace = \"http://www.omg.org/spec/DD/20100524/DC\";\n        const diNamespace = \"http://www.omg.org/spec/DD/20100524/DI\";\n\n        // Add start events\n        const startEvents = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'startEvent');\n        for (let i = 0; i < startEvents.length; i++) {\n            // Read startEvent id and name\n            const startEventId = startEvents[i].getAttribute('id');\n            console.log('startEventId:', startEventId);\n            const name = startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'name');\n            console.log('name:', name);\n            // Read startEvent incoming[] and outgoing[]\n            const incoming = startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }            const outgoing = startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            // Add start event element to the diagram\n            if (startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'messageEventDefinition').length > 0) {\n                this.addMessageStartEvent(startEventId);\n            } else if (startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'timerEventDefinition').length > 0) {\n                this.addTimerStartEvent(startEventId);\n            } else if (startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'conditionalEventDefinition').length > 0) {\n                this.addConditionalStartEvent(startEventId);\n            } else if (startEvents[i].getElementsByTagNameNS(bpmnNamespace, 'signalEventDefinition').length > 0) {\n                this.addSignalStartEvent(startEventId); \n            } else {\n                // Simple start event\n                this.addStartEvent(startEventId);\n            }\n        }\n\n        // Add end events\n        const endEvents = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'endEvent');\n        for (let i = 0; i < endEvents.length; i++) {\n            // Read endEvent id and name\n            const endEventId = endEvents[i].getAttribute('id');\n            console.log('endEventId:', endEventId);\n            const name = endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'name');\n            console.log('name:', name);\n            // Read endEvent incoming[] and outgoing[]\n            const incoming = endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            // Add end event element to the diagram\n            if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'messageEventDefinition').length > 0) {\n                this.addMessageEndEvent(endEventId);\n            } else if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'escalationEventDefinition').length > 0) {\n                this.addEscalationEndEvent(endEventId);\n            } else if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'errorEventDefinition').length > 0) {\n                this.addErrorEndEvent(endEventId);\n            } else if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'compensateEventDefinition').length > 0) {\n                this.addCompensateEndEvent(endEventId); \n            } else if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'signalEventDefinition').length > 0) {\n                this.addSignalEndEvent(endEventId); \n            } else if (endEvents[i].getElementsByTagNameNS(bpmnNamespace, 'terminateEventDefinition').length > 0) {\n                this.addTerminateEndEvent(endEventId);\n            } else {\n                // Simple end event\n                this.addEndEvent(endEventId);\n            }\n        }\n\n\n        // Add intermediate catch events\n        const intermediateCatchEvents = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'intermediateCatchEvent');\n        for (let i = 0; i < intermediateCatchEvents.length; i++) {\n            // Read intermediateCatchEvent id and name\n            const intermediateCatchEventId = intermediateCatchEvents[i].getAttribute('id');\n            console.log('intermediateCatchEventId:', intermediateCatchEventId);\n            const name = intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'name');\n            console.log('name:', name);\n            // Read intermediateCatchEvent incoming[] and outgoing[]\n            const incoming = intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            // Add intermediate catch event element to the diagram\n            if (intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'messageEventDefinition').length > 0) {\n                this.addIntermediateMessageCatchEvent(intermediateCatchEventId);\n            } else if (intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'timerEventDefinition').length > 0) {\n                this.addIntermediateTimerEvent(intermediateCatchEventId);\n            } else if (intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'conditionalEventDefinition').length > 0) {\n                this.addIntermediateConditionalEvent(intermediateCatchEventId);\n            } else if (intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'linkEventDefinition').length > 0) {\n                this.addIntermediateLinkCatchEvent(intermediateCatchEventId); \n            } else if (intermediateCatchEvents[i].getElementsByTagNameNS(bpmnNamespace, 'signalEventDefinition').length > 0) {\n                this.addIntermediateSignalCatchEvent(intermediateCatchEventId); \n            } else {\n                // Simple intermediate catch event\n                this.addIntermediateEvent(intermediateCatchEventId);\n            }\n        }\n\n        // Add intermediate throw events\n        const intermediateThrowEvents = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'intermediateThrowEvent');\n        for (let i = 0; i < intermediateThrowEvents.length; i++) {\n            // Read intermediateCatchEvent id and name\n            const intermediateThrowEventId = intermediateThrowEvents[i].getAttribute('id');\n            console.log('intermediateThrowEventId:', intermediateThrowEventId);\n            const name = intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'name');\n            console.log('name:', name);\n            // Read intermediateCatchEvent incoming[] and outgoing[]\n            const incoming = intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            // Add intermediate throw event element to the diagram\n            if (intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'messageEventDefinition').length > 0) {\n                this.addIntermediateMessageThrowEvent(intermediateThrowEventId);\n            } else if (intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'escalationEventDefinition').length > 0) {\n                this.addIntermediateEscalationEvent(intermediateThrowEventId);\n            } else if (intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'linkEventDefinition').length > 0) {\n                this.addIntermediateLinkThrowEvent(intermediateThrowEventId);\n            } else if (intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'compensateEventDefinition').length > 0) {\n                this.addIntermediateCompensationEvent(intermediateThrowEventId); \n            } else if (intermediateThrowEvents[i].getElementsByTagNameNS(bpmnNamespace, 'signalEventDefinition').length > 0) {\n                this.addIntermediateSignalThrowEvent(intermediateThrowEventId); \n            } else {\n                // Simple intermediate throw event\n                this.addIntermediateEvent(intermediateThrowEventId);\n            }\n        }\n\n\n\n\n\n\n        // Add tasks\n        const tasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'task');\n        for (let i = 0; i < tasks.length; i++) {\n            // Read task id and name\n            const taskId = tasks[i].getAttribute('id');\n            console.log('taskId:', taskId);\n            const name = tasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read task incoming[] and outgoing[]\n            const incoming = tasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = tasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addTask(taskId)\n                .addWrappedText(name);\n        }\n\n        // Add manual tasks\n        const manualTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'manualTask');\n        for (let i = 0; i < manualTasks.length; i++) {\n            // Read manualTask id and name\n            const manualTaskId = manualTasks[i].getAttribute('id');\n            console.log('manualTaskId:', manualTaskId);\n            const name = manualTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read manualTask incoming[] and outgoing[]\n            const incoming = manualTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = manualTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addManualTask(manualTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add user tasks\n        const userTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'userTask');\n        for (let i = 0; i < userTasks.length; i++) {\n            // Read userTask id and name\n            const userTaskId = userTasks[i].getAttribute('id');\n            console.log('userTaskId:', userTaskId);\n            const name = userTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read userTask incoming[] and outgoing[]\n            const incoming = userTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = userTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addUserTask(userTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add script tasks\n        const scriptTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'scriptTask');\n        for (let i = 0; i < scriptTasks.length; i++) {\n            // Read scriptTask id and name\n            const scriptTaskId = scriptTasks[i].getAttribute('id');\n            console.log('scriptTaskId:', scriptTaskId);\n            const name = scriptTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read scriptTask incoming[] and outgoing[]\n            const incoming = scriptTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = scriptTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addScriptTask(scriptTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add business rule tasks\n        const businessRuleTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'businessRuleTask');\n        for (let i = 0; i < businessRuleTasks.length; i++) {\n            // Read businessRuleTask id and name\n            const businessRuleTaskId = businessRuleTasks[i].getAttribute('id');\n            console.log('businessRuleTaskId:', businessRuleTaskId);\n            const name = businessRuleTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read businessRuleTask incoming[] and outgoing[]\n            const incoming = businessRuleTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = businessRuleTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addBusinessRuleTask(businessRuleTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add service tasks\n        const serviceTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'serviceTask');\n        for (let i = 0; i < serviceTasks.length; i++) {\n            // Read serviceTask id and name\n            const serviceTaskId = serviceTasks[i].getAttribute('id');\n            console.log('serviceTaskId:', serviceTaskId);\n            const name = serviceTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read serviceTask incoming[] and outgoing[]\n            const incoming = serviceTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = serviceTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addServiceTask(serviceTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add send tasks\n        const sendTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'sendTask');\n        for (let i = 0; i < sendTasks.length; i++) {\n            // Read sendTask id and name\n            const sendTaskId = sendTasks[i].getAttribute('id');\n            console.log('sendTaskId:', sendTaskId);\n            const name = sendTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read sendTask incoming[] and outgoing[]\n            const incoming = sendTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = sendTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addSendTask(sendTaskId)\n                .addWrappedText(name);\n        }\n        \n        // Add receive tasks\n        const receiveTasks = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'receiveTask');\n        for (let i = 0; i < receiveTasks.length; i++) {\n            // Read receiveTask id and name\n            const receiveTaskId = receiveTasks[i].getAttribute('id');\n            console.log('receiveTaskId:', receiveTaskId);\n            const name = receiveTasks[i].getAttribute('name');\n            console.log('name:', name);\n            // Read receiveTask incoming[] and outgoing[]\n            const incoming = receiveTasks[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = receiveTasks[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addReceiveTask(receiveTaskId)\n                .addWrappedText(name);\n        }\n\n        // Add inclusive gateways\n        const inclusiveGateways = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'inclusiveGateway');\n        for (let i = 0; i < inclusiveGateways.length; i++) {\n            // Read gateway id and name\n            const gatewayId = inclusiveGateways[i].getAttribute('id');\n            console.log('gatewayId:', gatewayId);\n            const name = inclusiveGateways[i].getAttribute('name');\n            console.log('name:', name);\n            // Read gateway incoming[] and outgoing[]\n            const incoming = inclusiveGateways[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = inclusiveGateways[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addInclusiveGateway(gatewayId);\n        }\n\n        // Add exclusive gateways\n        const exclusiveGateways = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'exclusiveGateway');\n        for (let i = 0; i < exclusiveGateways.length; i++) {\n            // Read gateway id and name\n            const gatewayId = exclusiveGateways[i].getAttribute('id');\n            console.log('gatewayId:', gatewayId);\n            const name = exclusiveGateways[i].getAttribute('name');\n            console.log('name:', name);\n            // Read gateway incoming[] and outgoing[]\n            const incoming = exclusiveGateways[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = exclusiveGateways[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addExclusiveGateway(gatewayId);\n        }\n\n        // Add parallel gateways\n        const parallelGateways = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'parallelGateway');\n        for (let i = 0; i < parallelGateways.length; i++) {\n            // Read gateway id and name\n            const gatewayId = parallelGateways[i].getAttribute('id');\n            console.log('gatewayId:', gatewayId);\n            const name = parallelGateways[i].getAttribute('name');\n            console.log('name:', name);\n            // Read gateway incoming[] and outgoing[]\n            const incoming = parallelGateways[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = parallelGateways[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addParallelGateway(gatewayId);\n        }\n\n        // Add event-based gateways\n        const eventBasedGateways = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'eventBasedGateway');\n        for (let i = 0; i < eventBasedGateways.length; i++) {\n            // Read gateway id and name\n            const gatewayId = eventBasedGateways[i].getAttribute('id');\n            console.log('gatewayId:', gatewayId);\n            const name = eventBasedGateways[i].getAttribute('name');\n            console.log('name:', name);\n            // Read gateway incoming[] and outgoing[]\n            const incoming = eventBasedGateways[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = eventBasedGateways[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addEventBasedGateway(gatewayId);\n        }\n\n        // Add complex gateways\n        const complexGateways = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'complexGateway');\n        for (let i = 0; i < complexGateways.length; i++) {\n            // Read gateway id and name\n            const gatewayId = complexGateways[i].getAttribute('id');\n            console.log('gatewayId:', gatewayId);\n            const name = complexGateways[i].getAttribute('name');\n            console.log('name:', name);\n            // Read gateway incoming[] and outgoing[]\n            const incoming = complexGateways[i].getElementsByTagNameNS(bpmnNamespace, 'incoming');\n            console.log('incoming:', incoming);\n            for (let j = 0; j < incoming.length; j++) {\n                console.log('incoming:', incoming[j].textContent);\n            }\n            const outgoing = complexGateways[i].getElementsByTagNameNS(bpmnNamespace, 'outgoing');\n            console.log('outgoing:', outgoing);\n            for (let j = 0; j < outgoing.length; j++) {\n                console.log('outgoing:', outgoing[j].textContent);\n            }\n            this.addComplexGateway(gatewayId);\n        }\n\n        // Add sequence flows\n        const sequenceFlows = xmlDoc.getElementsByTagNameNS(bpmnNamespace, 'sequenceFlow');\n        for (let i = 0; i < sequenceFlows.length; i++) {\n            // Read sequenceFlow id, name, sourceRef, and targetRef\n            const sequenceFlowId = sequenceFlows[i].getAttribute('id');\n            console.log('sequenceFlowId:', sequenceFlowId);\n            const name = sequenceFlows[i].getAttribute('name');\n            console.log('name:', name);\n            const sourceRef = sequenceFlows[i].getAttribute('sourceRef');\n            console.log('sourceRef:', sourceRef);\n            const targetRef = sequenceFlows[i].getAttribute('targetRef');\n            console.log('targetRef:', targetRef);\n        }\n\n\n        // Place elements on the diagram\n        const bpmnShapes = xmlDoc.getElementsByTagNameNS(bpmndiNamespace, 'BPMNShape');\n\n        for (let i = 0; i < bpmnShapes.length; i++) {\n            const bpmnShape = bpmnShapes[i];\n            const bpmnShapeId = bpmnShape.getAttribute('id');\n            const bpmnElementId = bpmnShape.getAttribute('bpmnElement');\n            const bounds = bpmnShape.getElementsByTagNameNS(dcNamespace, 'Bounds')[0];\n            if (bounds) {\n                const x = parseFloat(bounds.getAttribute('x'));\n                const y = parseFloat(bounds.getAttribute('y')) * (-1);\n                const width = parseFloat(bounds.getAttribute('width'));\n                const height = parseFloat(bounds.getAttribute('height'));\n\n                console.log(`BPMNShape: ${bpmnShapeId}, ${bpmnElementId}, x: ${x}, y: ${y}, width: ${width}, height: ${height}`);\n\n                const position = new THREE.Vector3(x + (width / 2), y - (height / 2), 0);\n                const element = this.getElementById(bpmnElementId);\n                if (element) {\n                    element.positionAt(position);\n                } else {\n                    console.warn(`Element with id ${bpmnElementId} not found.`);\n                }\n\n                // Add label to the element (BPMNLabel)\n                let labelX, labelY, labelWidth, labelHeight;\n                const bpmnLabel = bpmnShape.getElementsByTagNameNS(bpmndiNamespace, 'BPMNLabel');\n                if (bpmnLabel.length > 0) {\n                    const labelBounds = bpmnLabel[0].getElementsByTagNameNS(dcNamespace, 'Bounds')[0];\n                    if (labelBounds) {\n                        labelX = parseFloat(labelBounds.getAttribute('x'));\n                        labelY = parseFloat(labelBounds.getAttribute('y')) * (-1);\n                        labelWidth = parseFloat(labelBounds.getAttribute('width'));\n                        labelHeight = parseFloat(labelBounds.getAttribute('height'));\n                        console.log(`Label position (Shape): x: ${labelX}, y: ${labelY}, width: ${labelWidth}, height: ${labelHeight}`);\n\n                        // Read label value from elements like bpmn:task, bpmn:startEvent, etc.\n                        const bpmnElement = xmlDoc.getElementById(bpmnElementId);\n                        const bpmnElementName = bpmnElement.getAttribute('name');\n                        console.log(`bpmnElementName: ${bpmnElementName}`);\n\n                        // Add label to the element\n                        if (bpmnElementName) {\n                            const labelPosition = new THREE.Vector3(labelX + (labelWidth / 2), labelY - (labelHeight / 2), 0);\n                            this.addElement(new Element('t1', new TextShape(bpmnElementName)))\n                                .positionAt(labelPosition);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Connect elements with sequence flows\n        const bpmnEdges = xmlDoc.getElementsByTagNameNS(bpmndiNamespace, 'BPMNEdge');\n\n        for (let i = 0; i < bpmnEdges.length; i++) {\n            const bpmnEdge = bpmnEdges[i];\n            const bpmnEdgeId = bpmnEdge.getAttribute('id');\n            const bpmnElementId = bpmnEdge.getAttribute('bpmnElement');\n            const sequenceFlow = Array.from(sequenceFlows).find(flow => flow.getAttribute('id') === bpmnElementId);\n            const sequenceFlowName = sequenceFlow ? sequenceFlow.getAttribute('name') : null;\n\n            // get waypoints\n            const waypoints = bpmnEdge.getElementsByTagNameNS(diNamespace, 'waypoint');\n            const connectorPoints = [];\n            for (let j = 0; j < waypoints.length; j++) {\n                const waypoint = waypoints[j];\n                const x = parseFloat(waypoint.getAttribute('x'));\n                const y = parseFloat(waypoint.getAttribute('y')) * (-1);\n                connectorPoints.push(new THREE.Vector2(x, y));\n                console.log(`BPMNEdge: ${bpmnElementId}, x: ${x}, y: ${y}`);\n            }\n            console.log('connectorPoints:', connectorPoints);\n\n            // Add connector to the diagram\n            this.addConnector(this.addFlowConnector(bpmnEdgeId, connectorPoints));\n\n            // Add label to the connector (BPMNLabel)\n            let labelX, labelY, labelWidth, labelHeight;\n            const bpmnLabel = bpmnEdge.getElementsByTagNameNS(bpmndiNamespace, 'BPMNLabel');\n            if (bpmnLabel.length > 0) {\n                const labelBounds = bpmnLabel[0].getElementsByTagNameNS(dcNamespace, 'Bounds')[0];\n                if (labelBounds) {\n                    labelX = parseFloat(labelBounds.getAttribute('x'));\n                    labelY = parseFloat(labelBounds.getAttribute('y')) * (-1);\n                    labelWidth = parseFloat(labelBounds.getAttribute('width'));\n                    labelHeight = parseFloat(labelBounds.getAttribute('height'));\n                    console.log(`Label position: x: ${labelX}, y: ${labelY}, width: ${labelWidth}, height: ${labelHeight}`);\n                }\n            }\n            if (sequenceFlowName) {\n                const labelPosition = new THREE.Vector3(labelX + (labelWidth / 2), labelY - (labelHeight / 2), 0);\n                this.addElement(new Element('t1', new TextShape(sequenceFlowName)))\n                    .positionAt(labelPosition);\n            }\n        }\n        this.arrange();\n    }\n}\n\nexport { BpmnDiagram };\n"],"names":["Group","Sequence","Tween","property","temp","MathUtils","Vector3","Quaternion","Vector2","document","min","max","distance","element","clamp","length","smoothstep","degrees","radians","cos","sin","normalize","ColorManagement","color","step","_vector","hash","cache","data","nodeObject","bool","uint","int","float","varying","toneMapping","bufferAttribute","conditional","context","ExtrusionParameters","SRGBColorSpace","node","i","dot","current","error","Matrix3","currentTransform","boundingBox","scanlineMinX","scanlineMaxX","p","Shape","joinIsOnLeftSide","innerSideModified","points","BufferAttribute","TWEEN"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,59,60,63,64,110]}